# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-07-19 18:20+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:5
msgid "icon:lock[title=Fixed at build time] Configuration property fixed at build time - All other configuration properties are overridable at runtime"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:10
#, no-wrap
msgid "[[quarkus-vertx-http_configuration]]link:#quarkus-vertx-http_configuration[Configuration property]"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:11
#, no-wrap
msgid "Type"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:13
#, no-wrap
msgid "Default"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:25
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-vertx-http_quarkus.http.root-path]]`link:#quarkus-vertx-http_quarkus.http.root-path[quarkus.http.root-path]`\n"
"\n"
"[.description]\n"
"--\n"
"The HTTP root path. All web content will be served relative to this root path.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_ROOT_PATH+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_ROOT_PATH+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:26
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:74
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:90
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:106
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:122
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:138
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:154
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:170
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:220
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:236
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:285
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:362
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:507
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:523
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:749
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:767
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:831
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:847
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:863
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:879
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:895
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:911
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:927
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:959
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:975
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:991
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1007
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1023
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1091
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1455
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1541
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1653
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1717
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1741
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1773
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1789
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1805
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1821
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1938
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1970
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2029
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2077
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2125
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2206
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2222
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2254
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2381
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2485
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2517
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2535
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2599
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2615
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2631
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2647
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2663
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2679
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2695
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2727
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2743
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2759
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2775
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2791
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3076
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3178
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3274
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3306
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3365
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3413
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3461
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3477
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3493
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3525
#, no-wrap
msgid "string"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:29
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:239
#, no-wrap
msgid "`/`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:41
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-vertx-http_quarkus.http.auth.basic]]`link:#quarkus-vertx-http_quarkus.http.auth.basic[quarkus.http.auth.basic]`\n"
"\n"
"[.description]\n"
"--\n"
"If basic auth should be enabled. If both basic and form auth is enabled then basic auth will be enabled in silent mode. If no authentication mechanisms are configured basic auth is the default.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_AUTH_BASIC+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_AUTH_BASIC+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:42
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:58
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:252
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:301
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:334
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:395
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:411
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:459
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:539
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:587
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:620
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:636
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:733
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1075
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1107
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1123
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1139
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1205
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1437
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1473
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1491
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1509
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1557
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1573
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1589
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1605
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1669
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1685
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1701
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1757
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1837
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1874
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1890
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1906
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1922
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1954
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2013
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2141
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2174
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2190
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2316
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2332
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2348
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2403
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2421
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2501
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2843
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2859
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3058
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3094
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3112
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3130
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3194
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3210
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3226
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3242
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3258
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3290
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3349
#, no-wrap
msgid "boolean"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:57
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-vertx-http_quarkus.http.auth.form.enabled]]`link:#quarkus-vertx-http_quarkus.http.auth.form.enabled[quarkus.http.auth.form.enabled]`\n"
"\n"
"[.description]\n"
"--\n"
"If form authentication is enabled.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_AUTH_FORM_ENABLED+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_AUTH_FORM_ENABLED+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:61
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:255
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:337
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:398
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:414
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:462
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1078
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1208
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1512
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1560
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1576
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1592
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1608
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1672
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1688
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1704
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1760
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1877
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1893
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1925
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1957
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2144
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2319
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2406
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2424
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2846
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2862
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3133
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3197
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3213
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3229
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3261
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3293
#, no-wrap
msgid "`false`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:73
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-vertx-http_quarkus.http.auth.form.login-page]]`link:#quarkus-vertx-http_quarkus.http.auth.form.login-page[quarkus.http.auth.form.login-page]`\n"
"\n"
"[.description]\n"
"--\n"
"The login page. Redirect to login page can be disabled by setting `quarkus.http.auth.form.login-page=`.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_AUTH_FORM_LOGIN_PAGE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_AUTH_FORM_LOGIN_PAGE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:77
#, no-wrap
msgid "`/login.html`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:89
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-vertx-http_quarkus.http.auth.form.post-location]]`link:#quarkus-vertx-http_quarkus.http.auth.form.post-location[quarkus.http.auth.form.post-location]`\n"
"\n"
"[.description]\n"
"--\n"
"The post location.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_AUTH_FORM_POST_LOCATION+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_AUTH_FORM_POST_LOCATION+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:93
#, no-wrap
msgid "`/j_security_check`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:105
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-vertx-http_quarkus.http.auth.form.username-parameter]]`link:#quarkus-vertx-http_quarkus.http.auth.form.username-parameter[quarkus.http.auth.form.username-parameter]`\n"
"\n"
"[.description]\n"
"--\n"
"The username field name.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_AUTH_FORM_USERNAME_PARAMETER+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_AUTH_FORM_USERNAME_PARAMETER+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:109
#, no-wrap
msgid "`j_username`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:121
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-vertx-http_quarkus.http.auth.form.password-parameter]]`link:#quarkus-vertx-http_quarkus.http.auth.form.password-parameter[quarkus.http.auth.form.password-parameter]`\n"
"\n"
"[.description]\n"
"--\n"
"The password field name.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_AUTH_FORM_PASSWORD_PARAMETER+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_AUTH_FORM_PASSWORD_PARAMETER+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:125
#, no-wrap
msgid "`j_password`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:137
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-vertx-http_quarkus.http.auth.form.error-page]]`link:#quarkus-vertx-http_quarkus.http.auth.form.error-page[quarkus.http.auth.form.error-page]`\n"
"\n"
"[.description]\n"
"--\n"
"The error page. Redirect to error page can be disabled by setting `quarkus.http.auth.form.error-page=`.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_AUTH_FORM_ERROR_PAGE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_AUTH_FORM_ERROR_PAGE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:141
#, no-wrap
msgid "`/error.html`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:153
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-vertx-http_quarkus.http.auth.form.landing-page]]`link:#quarkus-vertx-http_quarkus.http.auth.form.landing-page[quarkus.http.auth.form.landing-page]`\n"
"\n"
"[.description]\n"
"--\n"
"The landing page to redirect to if there is no saved page to redirect back to. Redirect to landing page can be disabled by setting `quarkus.http.auth.form.landing-page=`.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_AUTH_FORM_LANDING_PAGE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_AUTH_FORM_LANDING_PAGE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:157
#, no-wrap
msgid "`/index.html`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:169
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-vertx-http_quarkus.http.auth.form.location-cookie]]`link:#quarkus-vertx-http_quarkus.http.auth.form.location-cookie[quarkus.http.auth.form.location-cookie]`\n"
"\n"
"[.description]\n"
"--\n"
"Option to control the name of the cookie used to redirect the user back to where he wants to get access to.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_AUTH_FORM_LOCATION_COOKIE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_AUTH_FORM_LOCATION_COOKIE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:173
#, no-wrap
msgid "`quarkus-redirect-location`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:185
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-vertx-http_quarkus.http.auth.form.timeout]]`link:#quarkus-vertx-http_quarkus.http.auth.form.timeout[quarkus.http.auth.form.timeout]`\n"
"\n"
"[.description]\n"
"--\n"
"The inactivity (idle) timeout When inactivity timeout is reached, cookie is not renewed and a new login is enforced.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_AUTH_FORM_TIMEOUT+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_AUTH_FORM_TIMEOUT+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:187
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:204
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:379
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:717
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1156
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1173
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1402
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1419
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3040
#, no-wrap
msgid ""
"link:https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html[Duration]\n"
"  link:#duration-note-anchor-{summaryTableId}[icon:question-circle[], title=More information about the Duration format]"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:190
#, no-wrap
msgid "`PT30M`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:202
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-vertx-http_quarkus.http.auth.form.new-cookie-interval]]`link:#quarkus-vertx-http_quarkus.http.auth.form.new-cookie-interval[quarkus.http.auth.form.new-cookie-interval]`\n"
"\n"
"[.description]\n"
"--\n"
"How old a cookie can get before it will be replaced with a new cookie with an updated timeout, also referred to as \"renewal-timeout\". Note that smaller values will result in slightly more server load (as new encrypted cookies will be generated more often), however larger values affect the inactivity timeout as the timeout is set when a cookie is generated. For example if this is set to 10 minutes, and the inactivity timeout is 30m, if a users last request is when the cookie is 9m old then the actual timeout will happen 21m after the last request, as the timeout is only refreshed when a new cookie is generated. In other words no timeout is tracked on the server side; the timestamp is encoded and encrypted in the cookie itself, and it is decrypted and parsed with each request.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_AUTH_FORM_NEW_COOKIE_INTERVAL+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_AUTH_FORM_NEW_COOKIE_INTERVAL+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:207
#, no-wrap
msgid "`PT1M`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:219
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-vertx-http_quarkus.http.auth.form.cookie-name]]`link:#quarkus-vertx-http_quarkus.http.auth.form.cookie-name[quarkus.http.auth.form.cookie-name]`\n"
"\n"
"[.description]\n"
"--\n"
"The cookie that is used to store the persistent session\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_AUTH_FORM_COOKIE_NAME+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_AUTH_FORM_COOKIE_NAME+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:223
#, no-wrap
msgid "`quarkus-credential`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:235
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-vertx-http_quarkus.http.auth.form.cookie-path]]`link:#quarkus-vertx-http_quarkus.http.auth.form.cookie-path[quarkus.http.auth.form.cookie-path]`\n"
"\n"
"[.description]\n"
"--\n"
"The cookie path for the session and location cookies.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_AUTH_FORM_COOKIE_PATH+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_AUTH_FORM_COOKIE_PATH+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:251
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-vertx-http_quarkus.http.auth.form.http-only-cookie]]`link:#quarkus-vertx-http_quarkus.http.auth.form.http-only-cookie[quarkus.http.auth.form.http-only-cookie]`\n"
"\n"
"[.description]\n"
"--\n"
"Set the HttpOnly attribute to prevent access to the cookie via JavaScript.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_AUTH_FORM_HTTP_ONLY_COOKIE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_AUTH_FORM_HTTP_ONLY_COOKIE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:267
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-vertx-http_quarkus.http.auth.form.cookie-same-site]]`link:#quarkus-vertx-http_quarkus.http.auth.form.cookie-same-site[quarkus.http.auth.form.cookie-same-site]`\n"
"\n"
"[.description]\n"
"--\n"
"SameSite attribute for the session and location cookies.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_AUTH_FORM_COOKIE_SAME_SITE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_AUTH_FORM_COOKIE_SAME_SITE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:269
#, no-wrap
msgid "`strict`, `lax`, `none`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:272
#, no-wrap
msgid "`strict`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:284
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-vertx-http_quarkus.http.auth.realm]]`link:#quarkus-vertx-http_quarkus.http.auth.realm[quarkus.http.auth.realm]`\n"
"\n"
"[.description]\n"
"--\n"
"The authentication realm\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_AUTH_REALM+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_AUTH_REALM+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:300
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-vertx-http_quarkus.http.auth.proactive]]`link:#quarkus-vertx-http_quarkus.http.auth.proactive[quarkus.http.auth.proactive]`\n"
"\n"
"[.description]\n"
"--\n"
"If this is true and credentials are present then a user will always be authenticated before the request progresses. If this is false then an attempt will only be made to authenticate the user if a permission check is performed or the current user is required for some other reason.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_AUTH_PROACTIVE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_AUTH_PROACTIVE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:304
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:542
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:623
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:639
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1110
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1126
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1142
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1440
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1476
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1494
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1840
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2177
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2193
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2351
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2504
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3061
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3097
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3115
#, no-wrap
msgid "`true`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:316
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-vertx-http_quarkus.http.ssl.client-auth]]`link:#quarkus-vertx-http_quarkus.http.ssl.client-auth[quarkus.http.ssl.client-auth]`\n"
"\n"
"[.description]\n"
"--\n"
"Configures the engine to require/request client authentication. NONE, REQUEST, REQUIRED\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_SSL_CLIENT_AUTH+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_SSL_CLIENT_AUTH+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:318
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2365
#, no-wrap
msgid "`none`, `request`, `required`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:321
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2368
#, no-wrap
msgid "`none`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:333
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-vertx-http_quarkus.http.virtual]]`link:#quarkus-vertx-http_quarkus.http.virtual[quarkus.http.virtual]`\n"
"\n"
"[.description]\n"
"--\n"
"If this is true then only a virtual channel will be set up for vertx web. We have this switch for testing purposes.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_VIRTUAL+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_VIRTUAL+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:361
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-vertx-http_quarkus.http.non-application-root-path]]`link:#quarkus-vertx-http_quarkus.http.non-application-root-path[quarkus.http.non-application-root-path]`\n"
"\n"
"[.description]\n"
"--\n"
"A common root path for non-application endpoints. Various extension-provided endpoints such as metrics, health,\n"
"and openapi are deployed under this path by default.\n"
"\n"
"* Relative path (Default, `q`) ->\n"
"Non-application endpoints will be served from\n"
"`${quarkus.http.root-path}/${quarkus.http.non-application-root-path}`.\n"
"* Absolute path (`/q`) ->\n"
"Non-application endpoints will be served from the specified path.\n"
"* `${quarkus.http.root-path}` -> Setting this path to the same value as HTTP root path disables\n"
"this root path. All extension-provided endpoints will be served from `${quarkus.http.root-path}`.\n"
"\n"
"If the management interface is enabled, the root path for the endpoints exposed on the management interface\n"
"is configured using the `quarkus.management.root-path` property instead of this property.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_NON_APPLICATION_ROOT_PATH+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_NON_APPLICATION_ROOT_PATH+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:365
#, no-wrap
msgid "`q`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:377
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-vertx-http_quarkus.http.test-timeout]]`link:#quarkus-vertx-http_quarkus.http.test-timeout[quarkus.http.test-timeout]`\n"
"\n"
"[.description]\n"
"--\n"
"The REST Assured client timeout for testing.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_TEST_TIMEOUT+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_TEST_TIMEOUT+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:382
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1159
#, no-wrap
msgid "`30S`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:394
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-vertx-http_quarkus.http.enable-compression]]`link:#quarkus-vertx-http_quarkus.http.enable-compression[quarkus.http.enable-compression]`\n"
"\n"
"[.description]\n"
"--\n"
"If enabled then the response body is compressed if the `Content-Type` header is set and the value is a compressed media type as configured via `compress-media-types`. Note that the RESTEasy Reactive and Reactive Routes extensions also make it possible to enable/disable compression declaratively using the annotations `io.quarkus.vertx.http.Compressed` and `io.quarkus.vertx.http.Uncompressed`.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_ENABLE_COMPRESSION+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_ENABLE_COMPRESSION+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:410
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-vertx-http_quarkus.http.enable-decompression]]`link:#quarkus-vertx-http_quarkus.http.enable-decompression[quarkus.http.enable-decompression]`\n"
"\n"
"[.description]\n"
"--\n"
"When enabled, vert.x will decompress the request's body if it's compressed. Note that the compression format (e.g., gzip) must be specified in the Content-Encoding header in the request.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_ENABLE_DECOMPRESSION+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_ENABLE_DECOMPRESSION+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:426
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-vertx-http_quarkus.http.compress-media-types]]`link:#quarkus-vertx-http_quarkus.http.compress-media-types[quarkus.http.compress-media-types]`\n"
"\n"
"[.description]\n"
"--\n"
"List of media types for which the compression should be enabled automatically, unless declared explicitly via `Compressed` or `Uncompressed`.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_COMPRESS_MEDIA_TYPES+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_COMPRESS_MEDIA_TYPES+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:427
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:652
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:668
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:684
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:700
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1039
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1059
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1525
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2045
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2061
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2093
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2238
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2286
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2807
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2827
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3146
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3381
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3397
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3429
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3509
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3557
#, no-wrap
msgid "list of string"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:430
#, no-wrap
msgid "`text/html,text/plain,text/xml,text/css,text/javascript,application/javascript`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:442
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-vertx-http_quarkus.http.compression-level]]`link:#quarkus-vertx-http_quarkus.http.compression-level[quarkus.http.compression-level]`\n"
"\n"
"[.description]\n"
"--\n"
"The compression level used when compression support is enabled.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_COMPRESSION_LEVEL+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_COMPRESSION_LEVEL+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:443
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:475
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:491
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:555
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:571
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1189
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1221
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1285
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1317
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1369
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1621
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1637
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2300
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2437
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2453
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2469
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2923
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2955
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3007
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3162
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3571
#, no-wrap
msgid "int"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:458
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.cors]]`link:#quarkus-vertx-http_quarkus.http.cors[quarkus.http.cors]`\n"
"\n"
"[.description]\n"
"--\n"
"Enable the CORS filter.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_CORS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_CORS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:474
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.port]]`link:#quarkus-vertx-http_quarkus.http.port[quarkus.http.port]`\n"
"\n"
"[.description]\n"
"--\n"
"The HTTP port\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_PORT+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_PORT+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:478
#, no-wrap
msgid "`8080`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:490
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.test-port]]`link:#quarkus-vertx-http_quarkus.http.test-port[quarkus.http.test-port]`\n"
"\n"
"[.description]\n"
"--\n"
"The HTTP port used to run tests\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_TEST_PORT+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_TEST_PORT+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:494
#, no-wrap
msgid "`8081`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:506
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.host]]`link:#quarkus-vertx-http_quarkus.http.host[quarkus.http.host]`\n"
"\n"
"[.description]\n"
"--\n"
"The HTTP host In dev/test mode this defaults to localhost, in prod mode this defaults to 0.0.0.0 Defaulting to 0.0.0.0 makes it easier to deploy Quarkus to container, however it is not suitable for dev/test mode as other people on the network can connect to your development machine.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_HOST+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_HOST+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:510
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2032
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2161
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2225
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2257
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3368
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3496
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3528
#, no-wrap
msgid "required icon:exclamation-circle[title=Configuration property is required]"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:522
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.test-host]]`link:#quarkus-vertx-http_quarkus.http.test-host[quarkus.http.test-host]`\n"
"\n"
"[.description]\n"
"--\n"
"Used when `QuarkusIntegrationTest` is meant to execute against an application that is already running and listening on the host specified by this property.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_TEST_HOST+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_TEST_HOST+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:538
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.host-enabled]]`link:#quarkus-vertx-http_quarkus.http.host-enabled[quarkus.http.host-enabled]`\n"
"\n"
"[.description]\n"
"--\n"
"Enable listening to host:port\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_HOST_ENABLED+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_HOST_ENABLED+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:554
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.ssl-port]]`link:#quarkus-vertx-http_quarkus.http.ssl-port[quarkus.http.ssl-port]`\n"
"\n"
"[.description]\n"
"--\n"
"The HTTPS port\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_SSL_PORT+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_SSL_PORT+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:558
#, no-wrap
msgid "`8443`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:570
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.test-ssl-port]]`link:#quarkus-vertx-http_quarkus.http.test-ssl-port[quarkus.http.test-ssl-port]`\n"
"\n"
"[.description]\n"
"--\n"
"The HTTPS port used to run tests\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_TEST_SSL_PORT+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_TEST_SSL_PORT+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:574
#, no-wrap
msgid "`8444`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:586
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.test-ssl-enabled]]`link:#quarkus-vertx-http_quarkus.http.test-ssl-enabled[quarkus.http.test-ssl-enabled]`\n"
"\n"
"[.description]\n"
"--\n"
"Used when `QuarkusIntegrationTest` is meant to execute against an application that is already running to configure the test to use SSL.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_TEST_SSL_ENABLED+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_TEST_SSL_ENABLED+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:602
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.insecure-requests]]`link:#quarkus-vertx-http_quarkus.http.insecure-requests[quarkus.http.insecure-requests]`\n"
"\n"
"[.description]\n"
"--\n"
"If insecure (i.e. http rather than https) requests are allowed. If this is `enabled` then http works as normal. `redirect` will still open the http port, but all requests will be redirected to the HTTPS port. `disabled` will prevent the HTTP port from opening at all.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_INSECURE_REQUESTS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_INSECURE_REQUESTS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:604
#, no-wrap
msgid "`enabled`, `redirect`, `disabled`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:607
#, no-wrap
msgid "`enabled`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:619
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.http2]]`link:#quarkus-vertx-http_quarkus.http.http2[quarkus.http.http2]`\n"
"\n"
"[.description]\n"
"--\n"
"If this is true (the default) then HTTP/2 will be enabled. Note that for browsers to be able to use it HTTPS must be enabled, and you must be running on JDK11 or above, as JDK8 does not support ALPN.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_HTTP2+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_HTTP2+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:635
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.http2-push-enabled]]`link:#quarkus-vertx-http_quarkus.http.http2-push-enabled[quarkus.http.http2-push-enabled]`\n"
"\n"
"[.description]\n"
"--\n"
"Enables or Disable the HTTP/2 Push feature. This setting can be used to disable server push. The server will not send a `PUSH_PROMISE` frame if it receives this parameter set to @++{++code false++}++.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_HTTP2_PUSH_ENABLED+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_HTTP2_PUSH_ENABLED+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:651
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.cors.origins]]`link:#quarkus-vertx-http_quarkus.http.cors.origins[quarkus.http.cors.origins]`\n"
"\n"
"[.description]\n"
"--\n"
"Origins allowed for CORS Comma separated list of valid URLs, e.g.: http://www.quarkus.io,http://localhost:3000 In case an entry of the list is surrounded by forward slashes, it is interpreted as a regular expression.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_CORS_ORIGINS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_CORS_ORIGINS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:667
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.cors.methods]]`link:#quarkus-vertx-http_quarkus.http.cors.methods[quarkus.http.cors.methods]`\n"
"\n"
"[.description]\n"
"--\n"
"HTTP methods allowed for CORS Comma separated list of valid methods. ex: GET,PUT,POST The filter allows any method if this is not set. default: returns any requested method as valid\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_CORS_METHODS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_CORS_METHODS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:683
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.cors.headers]]`link:#quarkus-vertx-http_quarkus.http.cors.headers[quarkus.http.cors.headers]`\n"
"\n"
"[.description]\n"
"--\n"
"HTTP headers allowed for CORS Comma separated list of valid headers. ex: X-Custom,Content-Disposition The filter allows any header if this is not set. default: returns any requested header as valid\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_CORS_HEADERS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_CORS_HEADERS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:699
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.cors.exposed-headers]]`link:#quarkus-vertx-http_quarkus.http.cors.exposed-headers[quarkus.http.cors.exposed-headers]`\n"
"\n"
"[.description]\n"
"--\n"
"HTTP headers exposed in CORS Comma separated list of valid headers. ex: X-Custom,Content-Disposition default: empty\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_CORS_EXPOSED_HEADERS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_CORS_EXPOSED_HEADERS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:715
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.cors.access-control-max-age]]`link:#quarkus-vertx-http_quarkus.http.cors.access-control-max-age[quarkus.http.cors.access-control-max-age]`\n"
"\n"
"[.description]\n"
"--\n"
"The `Access-Control-Max-Age` response header value indicating how long the results of a pre-flight request can be cached.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_CORS_ACCESS_CONTROL_MAX_AGE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_CORS_ACCESS_CONTROL_MAX_AGE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:732
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.cors.access-control-allow-credentials]]`link:#quarkus-vertx-http_quarkus.http.cors.access-control-allow-credentials[quarkus.http.cors.access-control-allow-credentials]`\n"
"\n"
"[.description]\n"
"--\n"
"The `Access-Control-Allow-Credentials` header is used to tell the browsers to expose the response to front-end JavaScript code when the request’s credentials mode Request.credentials is “include”. The value of this header will default to `true` if `quarkus.http.cors.origins` property is set and there is a match with the precise `Origin` header.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_CORS_ACCESS_CONTROL_ALLOW_CREDENTIALS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_CORS_ACCESS_CONTROL_ALLOW_CREDENTIALS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:748
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.ssl.certificate.credentials-provider]]`link:#quarkus-vertx-http_quarkus.http.ssl.certificate.credentials-provider[quarkus.http.ssl.certificate.credentials-provider]`\n"
"\n"
"[.description]\n"
"--\n"
"The `CredentialsProvider`. If this property is configured then a matching 'CredentialsProvider' will be used to get the keystore, keystore key and truststore passwords unless these passwords have already been configured. Please note that using MicroProfile `ConfigSource` which is directly supported by Quarkus Configuration should be preferred unless using `CredentialsProvider` provides for some additional security and dynamism.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_SSL_CERTIFICATE_CREDENTIALS_PROVIDER+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_SSL_CERTIFICATE_CREDENTIALS_PROVIDER+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:766
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.ssl.certificate.credentials-provider-name]]`link:#quarkus-vertx-http_quarkus.http.ssl.certificate.credentials-provider-name[quarkus.http.ssl.certificate.credentials-provider-name]`\n"
"\n"
"[.description]\n"
"--\n"
"The credentials provider bean name.\n"
"\n"
"It is the `&++#++64;Named` value of the credentials provider bean. It is used to discriminate if multiple CredentialsProvider beans are available. It is recommended to set this property even if there is only one credentials provider currently available to ensure the same provider is always found in deployments where more than one provider may be available.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_SSL_CERTIFICATE_CREDENTIALS_PROVIDER_NAME+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_SSL_CERTIFICATE_CREDENTIALS_PROVIDER_NAME+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:782
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.ssl.certificate.files]]`link:#quarkus-vertx-http_quarkus.http.ssl.certificate.files[quarkus.http.ssl.certificate.files]`\n"
"\n"
"[.description]\n"
"--\n"
"The list of path to server certificates using the PEM format. Specifying multiple files require SNI to be enabled.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_SSL_CERTIFICATE_FILES+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_SSL_CERTIFICATE_FILES+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:783
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:799
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2551
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2567
#, no-wrap
msgid "list of path"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:798
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.ssl.certificate.key-files]]`link:#quarkus-vertx-http_quarkus.http.ssl.certificate.key-files[quarkus.http.ssl.certificate.key-files]`\n"
"\n"
"[.description]\n"
"--\n"
"The list of path to server certificates private key file using the PEM format. Specifying multiple files require SNI to be enabled. The order of the key files must match the order of the certificates.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_SSL_CERTIFICATE_KEY_FILES+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_SSL_CERTIFICATE_KEY_FILES+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:814
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.ssl.certificate.key-store-file]]`link:#quarkus-vertx-http_quarkus.http.ssl.certificate.key-store-file[quarkus.http.ssl.certificate.key-store-file]`\n"
"\n"
"[.description]\n"
"--\n"
"An optional key store which holds the certificate information instead of specifying separate files.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_SSL_CERTIFICATE_KEY_STORE_FILE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_SSL_CERTIFICATE_KEY_STORE_FILE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:815
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:943
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2583
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2711
#, no-wrap
msgid "path"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:830
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.ssl.certificate.key-store-file-type]]`link:#quarkus-vertx-http_quarkus.http.ssl.certificate.key-store-file-type[quarkus.http.ssl.certificate.key-store-file-type]`\n"
"\n"
"[.description]\n"
"--\n"
"An optional parameter to specify type of the key store file. If not given, the type is automatically detected based on the file name.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_SSL_CERTIFICATE_KEY_STORE_FILE_TYPE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_SSL_CERTIFICATE_KEY_STORE_FILE_TYPE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:846
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.ssl.certificate.key-store-provider]]`link:#quarkus-vertx-http_quarkus.http.ssl.certificate.key-store-provider[quarkus.http.ssl.certificate.key-store-provider]`\n"
"\n"
"[.description]\n"
"--\n"
"An optional parameter to specify a provider of the key store file. If not given, the provider is automatically detected based on the key store file type.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_SSL_CERTIFICATE_KEY_STORE_PROVIDER+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_SSL_CERTIFICATE_KEY_STORE_PROVIDER+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:862
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.ssl.certificate.key-store-password]]`link:#quarkus-vertx-http_quarkus.http.ssl.certificate.key-store-password[quarkus.http.ssl.certificate.key-store-password]`\n"
"\n"
"[.description]\n"
"--\n"
"A parameter to specify the password of the key store file. If not given, and if it can not be retrieved from `CredentialsProvider`.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_SSL_CERTIFICATE_KEY_STORE_PASSWORD+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_SSL_CERTIFICATE_KEY_STORE_PASSWORD+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:866
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2634
#, no-wrap
msgid "`password`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:878
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.ssl.certificate.key-store-password-key]]`link:#quarkus-vertx-http_quarkus.http.ssl.certificate.key-store-password-key[quarkus.http.ssl.certificate.key-store-password-key]`\n"
"\n"
"[.description]\n"
"--\n"
"A parameter to specify a `CredentialsProvider` property key which can be used to get the password of the key store file from `CredentialsProvider`.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_SSL_CERTIFICATE_KEY_STORE_PASSWORD_KEY+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_SSL_CERTIFICATE_KEY_STORE_PASSWORD_KEY+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:894
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.ssl.certificate.key-store-key-alias]]`link:#quarkus-vertx-http_quarkus.http.ssl.certificate.key-store-key-alias[quarkus.http.ssl.certificate.key-store-key-alias]`\n"
"\n"
"[.description]\n"
"--\n"
"An optional parameter to select a specific key in the key store. When SNI is disabled, if the key store contains multiple keys and no alias is specified, the behavior is undefined.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_SSL_CERTIFICATE_KEY_STORE_KEY_ALIAS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_SSL_CERTIFICATE_KEY_STORE_KEY_ALIAS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:910
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.ssl.certificate.key-store-key-password]]`link:#quarkus-vertx-http_quarkus.http.ssl.certificate.key-store-key-password[quarkus.http.ssl.certificate.key-store-key-password]`\n"
"\n"
"[.description]\n"
"--\n"
"An optional parameter to define the password for the key, in case it's different from `key-store-password` If not given then it may be retrieved from `CredentialsProvider`.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_SSL_CERTIFICATE_KEY_STORE_KEY_PASSWORD+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_SSL_CERTIFICATE_KEY_STORE_KEY_PASSWORD+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:926
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.ssl.certificate.key-store-key-password-key]]`link:#quarkus-vertx-http_quarkus.http.ssl.certificate.key-store-key-password-key[quarkus.http.ssl.certificate.key-store-key-password-key]`\n"
"\n"
"[.description]\n"
"--\n"
"A parameter to specify a `CredentialsProvider` property key which can be used to get the password for the key from `CredentialsProvider`.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_SSL_CERTIFICATE_KEY_STORE_KEY_PASSWORD_KEY+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_SSL_CERTIFICATE_KEY_STORE_KEY_PASSWORD_KEY+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:942
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.ssl.certificate.trust-store-file]]`link:#quarkus-vertx-http_quarkus.http.ssl.certificate.trust-store-file[quarkus.http.ssl.certificate.trust-store-file]`\n"
"\n"
"[.description]\n"
"--\n"
"An optional trust store which holds the certificate information of the certificates to trust.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_SSL_CERTIFICATE_TRUST_STORE_FILE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_SSL_CERTIFICATE_TRUST_STORE_FILE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:958
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.ssl.certificate.trust-store-file-type]]`link:#quarkus-vertx-http_quarkus.http.ssl.certificate.trust-store-file-type[quarkus.http.ssl.certificate.trust-store-file-type]`\n"
"\n"
"[.description]\n"
"--\n"
"An optional parameter to specify type of the trust store file. If not given, the type is automatically detected based on the file name.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_SSL_CERTIFICATE_TRUST_STORE_FILE_TYPE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_SSL_CERTIFICATE_TRUST_STORE_FILE_TYPE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:974
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.ssl.certificate.trust-store-provider]]`link:#quarkus-vertx-http_quarkus.http.ssl.certificate.trust-store-provider[quarkus.http.ssl.certificate.trust-store-provider]`\n"
"\n"
"[.description]\n"
"--\n"
"An optional parameter to specify a provider of the trust store file. If not given, the provider is automatically detected based on the trust store file type.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_SSL_CERTIFICATE_TRUST_STORE_PROVIDER+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_SSL_CERTIFICATE_TRUST_STORE_PROVIDER+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:990
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.ssl.certificate.trust-store-password]]`link:#quarkus-vertx-http_quarkus.http.ssl.certificate.trust-store-password[quarkus.http.ssl.certificate.trust-store-password]`\n"
"\n"
"[.description]\n"
"--\n"
"A parameter to specify the password of the trust store file. If not given then it may be retrieved from `CredentialsProvider`.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_SSL_CERTIFICATE_TRUST_STORE_PASSWORD+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_SSL_CERTIFICATE_TRUST_STORE_PASSWORD+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1006
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.ssl.certificate.trust-store-password-key]]`link:#quarkus-vertx-http_quarkus.http.ssl.certificate.trust-store-password-key[quarkus.http.ssl.certificate.trust-store-password-key]`\n"
"\n"
"[.description]\n"
"--\n"
"A parameter to specify a `CredentialsProvider` property key which can be used to get the password of the trust store file from `CredentialsProvider`.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_SSL_CERTIFICATE_TRUST_STORE_PASSWORD_KEY+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_SSL_CERTIFICATE_TRUST_STORE_PASSWORD_KEY+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1022
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.ssl.certificate.trust-store-cert-alias]]`link:#quarkus-vertx-http_quarkus.http.ssl.certificate.trust-store-cert-alias[quarkus.http.ssl.certificate.trust-store-cert-alias]`\n"
"\n"
"[.description]\n"
"--\n"
"An optional parameter to trust only one specific certificate in the trust store (instead of trusting all certificates in the store).\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_SSL_CERTIFICATE_TRUST_STORE_CERT_ALIAS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_SSL_CERTIFICATE_TRUST_STORE_CERT_ALIAS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1038
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.ssl.cipher-suites]]`link:#quarkus-vertx-http_quarkus.http.ssl.cipher-suites[quarkus.http.ssl.cipher-suites]`\n"
"\n"
"[.description]\n"
"--\n"
"The cipher suites to use. If none is given, a reasonable default is selected.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_SSL_CIPHER_SUITES+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_SSL_CIPHER_SUITES+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1058
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.ssl.protocols]]`link:#quarkus-vertx-http_quarkus.http.ssl.protocols[quarkus.http.ssl.protocols]`\n"
"\n"
"[.description]\n"
"--\n"
"Sets the ordered list of enabled SSL/TLS protocols.\n"
"\n"
"If not set, it defaults to `\"TLSv1.3, TLSv1.2\"`. The following list of protocols are supported: `TLSv1, TLSv1.1, TLSv1.2, TLSv1.3`. To only enable `TLSv1.3`, set the value to `to \"TLSv1.3\"`.\n"
"\n"
"Note that setting an empty list, and enabling SSL/TLS is invalid. You must at least have one protocol.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_SSL_PROTOCOLS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_SSL_PROTOCOLS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1062
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2830
#, no-wrap
msgid "`TLSv1.3,TLSv1.2`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1074
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.ssl.sni]]`link:#quarkus-vertx-http_quarkus.http.ssl.sni[quarkus.http.ssl.sni]`\n"
"\n"
"[.description]\n"
"--\n"
"Enables Server Name Indication (SNI), an TLS extension allowing the server to use multiple certificates. The client indicate the server name during the TLS handshake, allowing the server to select the right certificate.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_SSL_SNI+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_SSL_SNI+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1090
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.static-resources.index-page]]`link:#quarkus-vertx-http_quarkus.http.static-resources.index-page[quarkus.http.static-resources.index-page]`\n"
"\n"
"[.description]\n"
"--\n"
"Set the index page when serving static resources.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_STATIC_RESOURCES_INDEX_PAGE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_STATIC_RESOURCES_INDEX_PAGE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1094
#, no-wrap
msgid "`index.html`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1106
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.static-resources.include-hidden]]`link:#quarkus-vertx-http_quarkus.http.static-resources.include-hidden[quarkus.http.static-resources.include-hidden]`\n"
"\n"
"[.description]\n"
"--\n"
"Set whether hidden files should be served.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_STATIC_RESOURCES_INCLUDE_HIDDEN+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_STATIC_RESOURCES_INCLUDE_HIDDEN+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1122
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.static-resources.enable-range-support]]`link:#quarkus-vertx-http_quarkus.http.static-resources.enable-range-support[quarkus.http.static-resources.enable-range-support]`\n"
"\n"
"[.description]\n"
"--\n"
"Set whether range requests (resumable downloads; media streaming) should be enabled.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_STATIC_RESOURCES_ENABLE_RANGE_SUPPORT+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_STATIC_RESOURCES_ENABLE_RANGE_SUPPORT+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1138
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.static-resources.caching-enabled]]`link:#quarkus-vertx-http_quarkus.http.static-resources.caching-enabled[quarkus.http.static-resources.caching-enabled]`\n"
"\n"
"[.description]\n"
"--\n"
"Set whether cache handling is enabled.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_STATIC_RESOURCES_CACHING_ENABLED+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_STATIC_RESOURCES_CACHING_ENABLED+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1154
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.static-resources.cache-entry-timeout]]`link:#quarkus-vertx-http_quarkus.http.static-resources.cache-entry-timeout[quarkus.http.static-resources.cache-entry-timeout]`\n"
"\n"
"[.description]\n"
"--\n"
"Set the cache entry timeout. The default is `30` seconds.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_STATIC_RESOURCES_CACHE_ENTRY_TIMEOUT+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_STATIC_RESOURCES_CACHE_ENTRY_TIMEOUT+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1171
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.static-resources.max-age]]`link:#quarkus-vertx-http_quarkus.http.static-resources.max-age[quarkus.http.static-resources.max-age]`\n"
"\n"
"[.description]\n"
"--\n"
"Set value for max age in caching headers. The default is `24` hours.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_STATIC_RESOURCES_MAX_AGE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_STATIC_RESOURCES_MAX_AGE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1176
#, no-wrap
msgid "`24H`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1188
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.static-resources.max-cache-size]]`link:#quarkus-vertx-http_quarkus.http.static-resources.max-cache-size[quarkus.http.static-resources.max-cache-size]`\n"
"\n"
"[.description]\n"
"--\n"
"Set the max cache size.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_STATIC_RESOURCES_MAX_CACHE_SIZE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_STATIC_RESOURCES_MAX_CACHE_SIZE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1192
#, no-wrap
msgid "`10000`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1204
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.handle-100-continue-automatically]]`link:#quarkus-vertx-http_quarkus.http.handle-100-continue-automatically[quarkus.http.handle-100-continue-automatically]`\n"
"\n"
"[.description]\n"
"--\n"
"When set to `true`, the HTTP server automatically sends `100 CONTINUE` response when the request expects it (with the `Expect: 100-Continue` header).\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_HANDLE_100_CONTINUE_AUTOMATICALLY+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_HANDLE_100_CONTINUE_AUTOMATICALLY+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1220
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.io-threads]]`link:#quarkus-vertx-http_quarkus.http.io-threads[quarkus.http.io-threads]`\n"
"\n"
"[.description]\n"
"--\n"
"The number if IO threads used to perform IO. This will be automatically set to a reasonable value based on the number of CPU cores if it is not provided. If this is set to a higher value than the number of Vert.x event loops then it will be capped at the number of event loops. In general this should be controlled by setting quarkus.vertx.event-loops-pool-size, this setting should only be used if you want to limit the number of HTTP io threads to a smaller number than the total number of IO threads.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_IO_THREADS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_IO_THREADS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1236
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.limits.max-header-size]]`link:#quarkus-vertx-http_quarkus.http.limits.max-header-size[quarkus.http.limits.max-header-size]`\n"
"\n"
"[.description]\n"
"--\n"
"The maximum length of all headers.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_LIMITS_MAX_HEADER_SIZE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_LIMITS_MAX_HEADER_SIZE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1237
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1253
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1269
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1301
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2875
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2891
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2907
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2939
#, no-wrap
msgid "MemorySize  link:#memory-size-note-anchor[icon:question-circle[], title=More information about the MemorySize format]"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1240
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2878
#, no-wrap
msgid "`20K`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1252
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.limits.max-body-size]]`link:#quarkus-vertx-http_quarkus.http.limits.max-body-size[quarkus.http.limits.max-body-size]`\n"
"\n"
"[.description]\n"
"--\n"
"The maximum size of a request body.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_LIMITS_MAX_BODY_SIZE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_LIMITS_MAX_BODY_SIZE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1256
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2894
#, no-wrap
msgid "`10240K`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1268
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.limits.max-chunk-size]]`link:#quarkus-vertx-http_quarkus.http.limits.max-chunk-size[quarkus.http.limits.max-chunk-size]`\n"
"\n"
"[.description]\n"
"--\n"
"The max HTTP chunk size\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_LIMITS_MAX_CHUNK_SIZE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_LIMITS_MAX_CHUNK_SIZE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1272
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2910
#, no-wrap
msgid "`8192`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1284
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.limits.max-initial-line-length]]`link:#quarkus-vertx-http_quarkus.http.limits.max-initial-line-length[quarkus.http.limits.max-initial-line-length]`\n"
"\n"
"[.description]\n"
"--\n"
"The maximum length of the initial line (e.g. `\"GET / HTTP/1.0\"`).\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_LIMITS_MAX_INITIAL_LINE_LENGTH+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_LIMITS_MAX_INITIAL_LINE_LENGTH+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1288
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2926
#, no-wrap
msgid "`4096`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1300
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.limits.max-form-attribute-size]]`link:#quarkus-vertx-http_quarkus.http.limits.max-form-attribute-size[quarkus.http.limits.max-form-attribute-size]`\n"
"\n"
"[.description]\n"
"--\n"
"The maximum length of a form attribute.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_LIMITS_MAX_FORM_ATTRIBUTE_SIZE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_LIMITS_MAX_FORM_ATTRIBUTE_SIZE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1304
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2942
#, no-wrap
msgid "`2048`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1316
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.limits.max-connections]]`link:#quarkus-vertx-http_quarkus.http.limits.max-connections[quarkus.http.limits.max-connections]`\n"
"\n"
"[.description]\n"
"--\n"
"The maximum number of connections that are allowed at any one time. If this is set it is recommended to set a short idle timeout.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_LIMITS_MAX_CONNECTIONS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_LIMITS_MAX_CONNECTIONS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1334
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.limits.header-table-size]]`link:#quarkus-vertx-http_quarkus.http.limits.header-table-size[quarkus.http.limits.header-table-size]`\n"
"\n"
"[.description]\n"
"--\n"
"Set the SETTINGS_HEADER_TABLE_SIZE HTTP/2 setting.\n"
"\n"
"Allows the sender to inform the remote endpoint of the maximum size of the header compression table used to decode header blocks, in octets. The encoder can select any size equal to or less than this value by using signaling specific to the header compression format inside a header block. The initial value is `4,096` octets.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_LIMITS_HEADER_TABLE_SIZE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_LIMITS_HEADER_TABLE_SIZE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1335
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1353
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1385
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2973
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2991
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3023
#, no-wrap
msgid "long"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1352
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.limits.max-concurrent-streams]]`link:#quarkus-vertx-http_quarkus.http.limits.max-concurrent-streams[quarkus.http.limits.max-concurrent-streams]`\n"
"\n"
"[.description]\n"
"--\n"
"Set SETTINGS_MAX_CONCURRENT_STREAMS HTTP/2 setting.\n"
"\n"
"Indicates the maximum number of concurrent streams that the sender will allow. This limit is directional: it applies to the number of streams that the sender permits the receiver to create. Initially, there is no limit to this value. It is recommended that this value be no smaller than 100, to not unnecessarily limit parallelism.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_LIMITS_MAX_CONCURRENT_STREAMS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_LIMITS_MAX_CONCURRENT_STREAMS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1368
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.limits.max-frame-size]]`link:#quarkus-vertx-http_quarkus.http.limits.max-frame-size[quarkus.http.limits.max-frame-size]`\n"
"\n"
"[.description]\n"
"--\n"
"Set the SETTINGS_MAX_FRAME_SIZE HTTP/2 setting. Indicates the size of the largest frame payload that the sender is willing to receive, in octets. The initial value is `2^14` (16,384) octets.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_LIMITS_MAX_FRAME_SIZE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_LIMITS_MAX_FRAME_SIZE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1384
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.limits.max-header-list-size]]`link:#quarkus-vertx-http_quarkus.http.limits.max-header-list-size[quarkus.http.limits.max-header-list-size]`\n"
"\n"
"[.description]\n"
"--\n"
"Set the SETTINGS_MAX_HEADER_LIST_SIZE HTTP/2 setting. This advisory setting informs a peer of the maximum size of header list that the sender is prepared to accept, in octets. The value is based on the uncompressed size of header fields, including the length of the name and value in octets plus an overhead of 32 octets for each header field. The default value is `8192`\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_LIMITS_MAX_HEADER_LIST_SIZE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_LIMITS_MAX_HEADER_LIST_SIZE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1400
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.idle-timeout]]`link:#quarkus-vertx-http_quarkus.http.idle-timeout[quarkus.http.idle-timeout]`\n"
"\n"
"[.description]\n"
"--\n"
"Http connection idle timeout\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_IDLE_TIMEOUT+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_IDLE_TIMEOUT+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1405
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3043
#, no-wrap
msgid "`30M`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1417
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.read-timeout]]`link:#quarkus-vertx-http_quarkus.http.read-timeout[quarkus.http.read-timeout]`\n"
"\n"
"[.description]\n"
"--\n"
"Http connection read timeout for blocking IO. This is the maximum amount of time a thread will wait for data, before an IOException will be thrown and the connection closed.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_READ_TIMEOUT+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_READ_TIMEOUT+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1422
#, no-wrap
msgid "`60S`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1436
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.body.handle-file-uploads]]`link:#quarkus-vertx-http_quarkus.http.body.handle-file-uploads[quarkus.http.body.handle-file-uploads]`\n"
"\n"
"[.description]\n"
"--\n"
"Whether the files sent using `multipart/form-data` will be stored locally.\n"
"\n"
"If `true`, they will be stored in `quarkus.http.body-handler.uploads-directory` and will be made available via `io.vertx.ext.web.RoutingContext.fileUploads()`. Otherwise, the files sent using `multipart/form-data` will not be stored locally, and `io.vertx.ext.web.RoutingContext.fileUploads()` will always return an empty collection. Note that even with this option being set to `false`, the `multipart/form-data` requests will be accepted.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_BODY_HANDLE_FILE_UPLOADS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_BODY_HANDLE_FILE_UPLOADS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1454
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.body.uploads-directory]]`link:#quarkus-vertx-http_quarkus.http.body.uploads-directory[quarkus.http.body.uploads-directory]`\n"
"\n"
"[.description]\n"
"--\n"
"The directory where the files sent using `multipart/form-data` should be stored.\n"
"\n"
"Either an absolute path or a path relative to the current directory of the application process.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_BODY_UPLOADS_DIRECTORY+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_BODY_UPLOADS_DIRECTORY+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1458
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3079
#, no-wrap
msgid "`${java.io.tmpdir}/uploads`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1472
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.body.merge-form-attributes]]`link:#quarkus-vertx-http_quarkus.http.body.merge-form-attributes[quarkus.http.body.merge-form-attributes]`\n"
"\n"
"[.description]\n"
"--\n"
"Whether the form attributes should be added to the request parameters.\n"
"\n"
"If `true`, the form attributes will be added to the request parameters; otherwise the form parameters will not be added to the request parameters\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_BODY_MERGE_FORM_ATTRIBUTES+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_BODY_MERGE_FORM_ATTRIBUTES+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1490
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.body.delete-uploaded-files-on-end]]`link:#quarkus-vertx-http_quarkus.http.body.delete-uploaded-files-on-end[quarkus.http.body.delete-uploaded-files-on-end]`\n"
"\n"
"[.description]\n"
"--\n"
"Whether the uploaded files should be removed after serving the request.\n"
"\n"
"If `true` the uploaded files stored in `quarkus.http.body-handler.uploads-directory` will be removed after handling the request. Otherwise, the files will be left there forever.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_BODY_DELETE_UPLOADED_FILES_ON_END+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_BODY_DELETE_UPLOADED_FILES_ON_END+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1508
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.body.preallocate-body-buffer]]`link:#quarkus-vertx-http_quarkus.http.body.preallocate-body-buffer[quarkus.http.body.preallocate-body-buffer]`\n"
"\n"
"[.description]\n"
"--\n"
"Whether the body buffer should pre-allocated based on the `Content-Length` header value.\n"
"\n"
"If `true` the body buffer is pre-allocated according to the size read from the `Content-Length` header. Otherwise, the body buffer is pre-allocated to 1KB, and is resized dynamically\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_BODY_PREALLOCATE_BODY_BUFFER+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_BODY_PREALLOCATE_BODY_BUFFER+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1524
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.body.multipart.file-content-types]]`link:#quarkus-vertx-http_quarkus.http.body.multipart.file-content-types[quarkus.http.body.multipart.file-content-types]`\n"
"\n"
"[.description]\n"
"--\n"
"A comma-separated list of `ContentType` to indicate whether a given multipart field should be handled as a file part. You can use this setting to force HTTP-based extensions to parse a message part as a file based on its content type. For now, this setting only works when using RESTEasy Reactive.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_BODY_MULTIPART_FILE_CONTENT_TYPES+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_BODY_MULTIPART_FILE_CONTENT_TYPES+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1540
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.auth.session.encryption-key]]`link:#quarkus-vertx-http_quarkus.http.auth.session.encryption-key[quarkus.http.auth.session.encryption-key]`\n"
"\n"
"[.description]\n"
"--\n"
"The encryption key that is used to store persistent logins (e.g. for form auth). Logins are stored in a persistent cookie that is encrypted with AES-256 using a key derived from a SHA-256 hash of the key that is provided here. If no key is provided then an in-memory one will be generated, this will change on every restart though so it is not suitable for production environments. This must be more than 16 characters long for security reasons\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_AUTH_SESSION_ENCRYPTION_KEY+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_AUTH_SESSION_ENCRYPTION_KEY+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1556
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.so-reuse-port]]`link:#quarkus-vertx-http_quarkus.http.so-reuse-port[quarkus.http.so-reuse-port]`\n"
"\n"
"[.description]\n"
"--\n"
"Enable socket reuse port (linux/macOs native transport only)\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_SO_REUSE_PORT+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_SO_REUSE_PORT+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1572
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.tcp-quick-ack]]`link:#quarkus-vertx-http_quarkus.http.tcp-quick-ack[quarkus.http.tcp-quick-ack]`\n"
"\n"
"[.description]\n"
"--\n"
"Enable tcp quick ack (linux native transport only)\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_TCP_QUICK_ACK+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_TCP_QUICK_ACK+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1588
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.tcp-cork]]`link:#quarkus-vertx-http_quarkus.http.tcp-cork[quarkus.http.tcp-cork]`\n"
"\n"
"[.description]\n"
"--\n"
"Enable tcp cork (linux native transport only)\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_TCP_CORK+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_TCP_CORK+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1604
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.tcp-fast-open]]`link:#quarkus-vertx-http_quarkus.http.tcp-fast-open[quarkus.http.tcp-fast-open]`\n"
"\n"
"[.description]\n"
"--\n"
"Enable tcp fast open (linux native transport only)\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_TCP_FAST_OPEN+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_TCP_FAST_OPEN+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1620
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.accept-backlog]]`link:#quarkus-vertx-http_quarkus.http.accept-backlog[quarkus.http.accept-backlog]`\n"
"\n"
"[.description]\n"
"--\n"
"The accept backlog, this is how many connections can be waiting to be accepted before connections start being rejected\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_ACCEPT_BACKLOG+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_ACCEPT_BACKLOG+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1624
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3165
#, no-wrap
msgid "`-1`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1636
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.initial-window-size]]`link:#quarkus-vertx-http_quarkus.http.initial-window-size[quarkus.http.initial-window-size]`\n"
"\n"
"[.description]\n"
"--\n"
"Set the SETTINGS_INITIAL_WINDOW_SIZE HTTP/2 setting. Indicates the sender's initial window size (in octets) for stream-level flow control. The initial value is `2^16-1` (65,535) octets.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_INITIAL_WINDOW_SIZE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_INITIAL_WINDOW_SIZE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1652
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.domain-socket]]`link:#quarkus-vertx-http_quarkus.http.domain-socket[quarkus.http.domain-socket]`\n"
"\n"
"[.description]\n"
"--\n"
"Path to a unix domain socket\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_DOMAIN_SOCKET+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_DOMAIN_SOCKET+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1656
#, no-wrap
msgid "`/var/run/io.quarkus.app.socket`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1668
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.domain-socket-enabled]]`link:#quarkus-vertx-http_quarkus.http.domain-socket-enabled[quarkus.http.domain-socket-enabled]`\n"
"\n"
"[.description]\n"
"--\n"
"Enable listening to host:port\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_DOMAIN_SOCKET_ENABLED+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_DOMAIN_SOCKET_ENABLED+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1684
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.record-request-start-time]]`link:#quarkus-vertx-http_quarkus.http.record-request-start-time[quarkus.http.record-request-start-time]`\n"
"\n"
"[.description]\n"
"--\n"
"If this is true then the request start time will be recorded to enable logging of total request time. This has a small performance penalty, so is disabled by default.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_RECORD_REQUEST_START_TIME+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_RECORD_REQUEST_START_TIME+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1700
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.access-log.enabled]]`link:#quarkus-vertx-http_quarkus.http.access-log.enabled[quarkus.http.access-log.enabled]`\n"
"\n"
"[.description]\n"
"--\n"
"If access logging is enabled. By default this will log via the standard logging facility\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_ACCESS_LOG_ENABLED+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_ACCESS_LOG_ENABLED+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1716
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.access-log.exclude-pattern]]`link:#quarkus-vertx-http_quarkus.http.access-log.exclude-pattern[quarkus.http.access-log.exclude-pattern]`\n"
"\n"
"[.description]\n"
"--\n"
"A regular expression that can be used to exclude some paths from logging.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_ACCESS_LOG_EXCLUDE_PATTERN+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_ACCESS_LOG_EXCLUDE_PATTERN+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1740
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.access-log.pattern]]`link:#quarkus-vertx-http_quarkus.http.access-log.pattern[quarkus.http.access-log.pattern]`\n"
"\n"
"[.description]\n"
"--\n"
"The access log pattern.\n"
"\n"
"If this is the string `common`, `combined` or `long` then this will use one of the specified named formats:\n"
"\n"
"- common: `%h %l %u %t \"%r\" %s %b`\n"
"- combined: `%h %l %u %t \"%r\" %s %b \"%{i,Referer}\" \"%{i,User-Agent}\"`\n"
"- long: `%r\\n%{ALL_REQUEST_HEADERS}`\n"
"\n"
"Otherwise, consult the Quarkus documentation for the full list of variables that can be used.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_ACCESS_LOG_PATTERN+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_ACCESS_LOG_PATTERN+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1744
#, no-wrap
msgid "`common`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1756
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.access-log.log-to-file]]`link:#quarkus-vertx-http_quarkus.http.access-log.log-to-file[quarkus.http.access-log.log-to-file]`\n"
"\n"
"[.description]\n"
"--\n"
"If logging should be done to a separate file.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_ACCESS_LOG_LOG_TO_FILE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_ACCESS_LOG_LOG_TO_FILE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1772
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.access-log.base-file-name]]`link:#quarkus-vertx-http_quarkus.http.access-log.base-file-name[quarkus.http.access-log.base-file-name]`\n"
"\n"
"[.description]\n"
"--\n"
"The access log file base name, defaults to 'quarkus' which will give a log file name of 'quarkus.log'.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_ACCESS_LOG_BASE_FILE_NAME+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_ACCESS_LOG_BASE_FILE_NAME+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1776
#, no-wrap
msgid "`quarkus`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1788
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.access-log.log-directory]]`link:#quarkus-vertx-http_quarkus.http.access-log.log-directory[quarkus.http.access-log.log-directory]`\n"
"\n"
"[.description]\n"
"--\n"
"The log directory to use when logging access to a file If this is not set then the current working directory is used.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_ACCESS_LOG_LOG_DIRECTORY+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_ACCESS_LOG_LOG_DIRECTORY+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1804
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.access-log.log-suffix]]`link:#quarkus-vertx-http_quarkus.http.access-log.log-suffix[quarkus.http.access-log.log-suffix]`\n"
"\n"
"[.description]\n"
"--\n"
"The log file suffix\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_ACCESS_LOG_LOG_SUFFIX+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_ACCESS_LOG_LOG_SUFFIX+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1808
#, no-wrap
msgid "`.log`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1820
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.access-log.category]]`link:#quarkus-vertx-http_quarkus.http.access-log.category[quarkus.http.access-log.category]`\n"
"\n"
"[.description]\n"
"--\n"
"The log category to use if logging is being done via the standard log mechanism (i.e. if base-file-name is empty).\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_ACCESS_LOG_CATEGORY+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_ACCESS_LOG_CATEGORY+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1824
#, no-wrap
msgid "`io.quarkus.http.access-log`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1836
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.access-log.rotate]]`link:#quarkus-vertx-http_quarkus.http.access-log.rotate[quarkus.http.access-log.rotate]`\n"
"\n"
"[.description]\n"
"--\n"
"If the log should be rotated daily\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_ACCESS_LOG_ROTATE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_ACCESS_LOG_ROTATE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1856
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.unhandled-error-content-type-default]]`link:#quarkus-vertx-http_quarkus.http.unhandled-error-content-type-default[quarkus.http.unhandled-error-content-type-default]`\n"
"\n"
"[.description]\n"
"--\n"
"Provides a hint (optional) for the default content type of responses generated for the errors not handled by the application.\n"
"\n"
"If the client requested a supported content-type in request headers (e.g. \"Accept: application/json\", \"Accept: text/html\"), Quarkus will use that content type.\n"
"\n"
"Otherwise, it will default to the content type configured here.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_UNHANDLED_ERROR_CONTENT_TYPE_DEFAULT+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_UNHANDLED_ERROR_CONTENT_TYPE_DEFAULT+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1858
#, no-wrap
msgid "`json`, `html`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1873
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.proxy.proxy-address-forwarding]]`link:#quarkus-vertx-http_quarkus.http.proxy.proxy-address-forwarding[quarkus.http.proxy.proxy-address-forwarding]`\n"
"\n"
"[.description]\n"
"--\n"
"If this is true then the address, scheme etc. will be set from headers forwarded by the proxy server, such as `X-Forwarded-For`. This should only be set if you are behind a proxy that sets these headers.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_PROXY_PROXY_ADDRESS_FORWARDING+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_PROXY_PROXY_ADDRESS_FORWARDING+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1889
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.proxy.allow-forwarded]]`link:#quarkus-vertx-http_quarkus.http.proxy.allow-forwarded[quarkus.http.proxy.allow-forwarded]`\n"
"\n"
"[.description]\n"
"--\n"
"If this is true and proxy address forwarding is enabled then the standard `Forwarded` header will be used. In case the not standard `X-Forwarded-For` header is enabled and detected on HTTP requests, the standard header has the precedence. Activating this together with `quarkus.http.proxy.allow-x-forwarded` has security implications as clients can forge requests with a forwarded header that is not overwritten by the proxy. Therefore, proxies should strip unexpected `X-Forwarded` or `X-Forwarded-++*++` headers from the client.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_PROXY_ALLOW_FORWARDED+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_PROXY_ALLOW_FORWARDED+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1905
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.proxy.allow-x-forwarded]]`link:#quarkus-vertx-http_quarkus.http.proxy.allow-x-forwarded[quarkus.http.proxy.allow-x-forwarded]`\n"
"\n"
"[.description]\n"
"--\n"
"If either this or `allow-forwarded` are true and proxy address forwarding is enabled then the not standard `Forwarded` header will be used. In case the standard `Forwarded` header is enabled and detected on HTTP requests, the standard header has the precedence. Activating this together with `quarkus.http.proxy.allow-forwarded` has security implications as clients can forge requests with a forwarded header that is not overwritten by the proxy. Therefore, proxies should strip unexpected `X-Forwarded` or `X-Forwarded-++*++` headers from the client.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_PROXY_ALLOW_X_FORWARDED+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_PROXY_ALLOW_X_FORWARDED+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1921
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.proxy.enable-forwarded-host]]`link:#quarkus-vertx-http_quarkus.http.proxy.enable-forwarded-host[quarkus.http.proxy.enable-forwarded-host]`\n"
"\n"
"[.description]\n"
"--\n"
"Enable override the received request's host through a forwarded host header.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_PROXY_ENABLE_FORWARDED_HOST+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_PROXY_ENABLE_FORWARDED_HOST+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1937
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.proxy.forwarded-host-header]]`link:#quarkus-vertx-http_quarkus.http.proxy.forwarded-host-header[quarkus.http.proxy.forwarded-host-header]`\n"
"\n"
"[.description]\n"
"--\n"
"Configure the forwarded host header to be used if override enabled.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_PROXY_FORWARDED_HOST_HEADER+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_PROXY_FORWARDED_HOST_HEADER+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1941
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3277
#, no-wrap
msgid "`X-Forwarded-Host`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1953
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.proxy.enable-forwarded-prefix]]`link:#quarkus-vertx-http_quarkus.http.proxy.enable-forwarded-prefix[quarkus.http.proxy.enable-forwarded-prefix]`\n"
"\n"
"[.description]\n"
"--\n"
"Enable prefix the received request's path with a forwarded prefix header.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_PROXY_ENABLE_FORWARDED_PREFIX+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_PROXY_ENABLE_FORWARDED_PREFIX+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1969
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.proxy.forwarded-prefix-header]]`link:#quarkus-vertx-http_quarkus.http.proxy.forwarded-prefix-header[quarkus.http.proxy.forwarded-prefix-header]`\n"
"\n"
"[.description]\n"
"--\n"
"Configure the forwarded prefix header to be used if prefixing enabled.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_PROXY_FORWARDED_PREFIX_HEADER+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_PROXY_FORWARDED_PREFIX_HEADER+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1973
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3309
#, no-wrap
msgid "`X-Forwarded-Prefix`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1996
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.proxy.trusted-proxies]]`link:#quarkus-vertx-http_quarkus.http.proxy.trusted-proxies[quarkus.http.proxy.trusted-proxies]`\n"
"\n"
"[.description]\n"
"--\n"
"Configure the list of trusted proxy addresses. Received `Forwarded`, `X-Forwarded` or `X-Forwarded-++*++` headers from any other proxy address will be ignored. The trusted proxy address should be specified as the IP address (IPv4 or IPv6), hostname or Classless Inter-Domain Routing (CIDR) notation. Please note that Quarkus needs to perform DNS lookup for all hostnames during the request. For that reason, using hostnames is not recommended. Examples of a socket address in the form of `host` or `host:port`:\n"
"\n"
" - `127.0.0.1:8084`\n"
" - `++[++0:0:0:0:0:0:0:1++]++`\n"
" - `++[++0:0:0:0:0:0:0:1++]++:8084`\n"
" - `++[++::++]++`\n"
" - `localhost`\n"
" - `localhost:8084`  Examples of a CIDR notation:\n"
"\n"
" - `::/128`\n"
" - `::/0`\n"
" - `127.0.0.0/8`  Please bear in mind that IPv4 CIDR won't match request sent from the IPv6 address and the other way around.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_PROXY_TRUSTED_PROXIES+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_PROXY_TRUSTED_PROXIES+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:1997
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3333
#, no-wrap
msgid "list of TrustedProxyCheckPart"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2000
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3336
#, no-wrap
msgid "`All proxy addresses are trusted`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2012
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-vertx-http_quarkus.http.auth.permission.-permissions-.enabled]]`link:#quarkus-vertx-http_quarkus.http.auth.permission.-permissions-.enabled[quarkus.http.auth.permission.\"permissions\".enabled]`\n"
"\n"
"[.description]\n"
"--\n"
"Determines whether the entire permission set is enabled, or not. By default, if the permission set is defined, it is enabled.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_AUTH_PERMISSION__PERMISSIONS__ENABLED+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_AUTH_PERMISSION__PERMISSIONS__ENABLED+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2028
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-vertx-http_quarkus.http.auth.permission.-permissions-.policy]]`link:#quarkus-vertx-http_quarkus.http.auth.permission.-permissions-.policy[quarkus.http.auth.permission.\"permissions\".policy]`\n"
"\n"
"[.description]\n"
"--\n"
"The HTTP policy that this permission set is linked to. There are 3 built in policies: permit, deny and authenticated. Role based policies can be defined, and extensions can add their own policies.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_AUTH_PERMISSION__PERMISSIONS__POLICY+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_AUTH_PERMISSION__PERMISSIONS__POLICY+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2044
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-vertx-http_quarkus.http.auth.permission.-permissions-.methods]]`link:#quarkus-vertx-http_quarkus.http.auth.permission.-permissions-.methods[quarkus.http.auth.permission.\"permissions\".methods]`\n"
"\n"
"[.description]\n"
"--\n"
"The methods that this permission set applies to. If this is not set then they apply to all methods. Note that if a request matches any path from any permission set, but does not match the constraint due to the method not being listed then the request will be denied. Method specific permissions take precedence over matches that do not have any methods set. This means that for example if Quarkus is configured to allow GET and POST requests to /admin to and no other permissions are configured PUT requests to /admin will be denied.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_AUTH_PERMISSION__PERMISSIONS__METHODS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_AUTH_PERMISSION__PERMISSIONS__METHODS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2060
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-vertx-http_quarkus.http.auth.permission.-permissions-.paths]]`link:#quarkus-vertx-http_quarkus.http.auth.permission.-permissions-.paths[quarkus.http.auth.permission.\"permissions\".paths]`\n"
"\n"
"[.description]\n"
"--\n"
"The paths that this permission check applies to. If the path ends in /++*++ then this is treated as a path prefix, otherwise it is treated as an exact match. Matches are done on a length basis, so the most specific path match takes precedence. If multiple permission sets match the same path then explicit methods matches take precedence over matches without methods set, otherwise the most restrictive permissions are applied.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_AUTH_PERMISSION__PERMISSIONS__PATHS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_AUTH_PERMISSION__PERMISSIONS__PATHS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2076
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-vertx-http_quarkus.http.auth.permission.-permissions-.auth-mechanism]]`link:#quarkus-vertx-http_quarkus.http.auth.permission.-permissions-.auth-mechanism[quarkus.http.auth.permission.\"permissions\".auth-mechanism]`\n"
"\n"
"[.description]\n"
"--\n"
"Path specific authentication mechanism which must be used to authenticate a user. It needs to match `HttpCredentialTransport` authentication scheme such as 'basic', 'bearer', 'form', etc.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_AUTH_PERMISSION__PERMISSIONS__AUTH_MECHANISM+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_AUTH_PERMISSION__PERMISSIONS__AUTH_MECHANISM+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2092
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-vertx-http_quarkus.http.auth.policy.-role-policy-.roles-allowed]]`link:#quarkus-vertx-http_quarkus.http.auth.policy.-role-policy-.roles-allowed[quarkus.http.auth.policy.\"role-policy\".roles-allowed]`\n"
"\n"
"[.description]\n"
"--\n"
"The roles that are allowed to access resources protected by this policy. By default, access is allowed to any authenticated user.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_AUTH_POLICY__ROLE_POLICY__ROLES_ALLOWED+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_AUTH_POLICY__ROLE_POLICY__ROLES_ALLOWED+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2096
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3432
#, no-wrap
msgid "`**`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2108
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-vertx-http_quarkus.http.auth.policy.-role-policy-.permissions-role1]]`link:#quarkus-vertx-http_quarkus.http.auth.policy.-role-policy-.permissions-role1[quarkus.http.auth.policy.\"role-policy\".permissions]`\n"
"\n"
"[.description]\n"
"--\n"
"Permissions granted to the `SecurityIdentity` if this policy is applied successfully (the policy allows request to proceed) and the authenticated request has required role. For example, you can map permission `perm1` with actions `action1` and `action2` to role `admin` by setting `quarkus.http.auth.policy.role-policy1.permissions.admin=perm1:action1,perm1:action2` configuration property. Granted permissions are used for authorization with the `@PermissionsAllowed` annotation.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_AUTH_POLICY__ROLE_POLICY__PERMISSIONS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_AUTH_POLICY__ROLE_POLICY__PERMISSIONS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2109
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3445
#, no-wrap
msgid "`Map<String,List<String>>`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2124
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-vertx-http_quarkus.http.auth.policy.-role-policy-.permission-class]]`link:#quarkus-vertx-http_quarkus.http.auth.policy.-role-policy-.permission-class[quarkus.http.auth.policy.\"role-policy\".permission-class]`\n"
"\n"
"[.description]\n"
"--\n"
"Permissions granted by this policy will be created with a `java.security.Permission` implementation specified by this configuration property. The permission class must declare exactly one constructor that accepts permission name (`String`) or permission name and actions (`String`, `String++[]++`).\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_AUTH_POLICY__ROLE_POLICY__PERMISSION_CLASS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_AUTH_POLICY__ROLE_POLICY__PERMISSION_CLASS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2128
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3464
#, no-wrap
msgid "`io.quarkus.security.StringPermission`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2140
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.same-site-cookie.-same-site-cookie-.case-sensitive]]`link:#quarkus-vertx-http_quarkus.http.same-site-cookie.-same-site-cookie-.case-sensitive[quarkus.http.same-site-cookie.\"same-site-cookie\".case-sensitive]`\n"
"\n"
"[.description]\n"
"--\n"
"If the cookie pattern is case-sensitive\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_SAME_SITE_COOKIE__SAME_SITE_COOKIE__CASE_SENSITIVE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_SAME_SITE_COOKIE__SAME_SITE_COOKIE__CASE_SENSITIVE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2156
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.same-site-cookie.-same-site-cookie-.value]]`link:#quarkus-vertx-http_quarkus.http.same-site-cookie.-same-site-cookie-.value[quarkus.http.same-site-cookie.\"same-site-cookie\".value]`\n"
"\n"
"[.description]\n"
"--\n"
"The value to set in the samesite attribute\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_SAME_SITE_COOKIE__SAME_SITE_COOKIE__VALUE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_SAME_SITE_COOKIE__SAME_SITE_COOKIE__VALUE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2158
#, no-wrap
msgid "`none`, `strict`, `lax`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2173
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.same-site-cookie.-same-site-cookie-.enable-client-checker]]`link:#quarkus-vertx-http_quarkus.http.same-site-cookie.-same-site-cookie-.enable-client-checker[quarkus.http.same-site-cookie.\"same-site-cookie\".enable-client-checker]`\n"
"\n"
"[.description]\n"
"--\n"
"Some User Agents break when sent SameSite=None, this will detect them and avoid sending the value\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_SAME_SITE_COOKIE__SAME_SITE_COOKIE__ENABLE_CLIENT_CHECKER+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_SAME_SITE_COOKIE__SAME_SITE_COOKIE__ENABLE_CLIENT_CHECKER+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2189
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.same-site-cookie.-same-site-cookie-.add-secure-for-none]]`link:#quarkus-vertx-http_quarkus.http.same-site-cookie.-same-site-cookie-.add-secure-for-none[quarkus.http.same-site-cookie.\"same-site-cookie\".add-secure-for-none]`\n"
"\n"
"[.description]\n"
"--\n"
"If this is true then the 'secure' attribute will automatically be sent on cookies with a SameSite attribute of None.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_SAME_SITE_COOKIE__SAME_SITE_COOKIE__ADD_SECURE_FOR_NONE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_SAME_SITE_COOKIE__SAME_SITE_COOKIE__ADD_SECURE_FOR_NONE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2205
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.header.-header-.path]]`link:#quarkus-vertx-http_quarkus.http.header.-header-.path[quarkus.http.header.\"header\".path]`\n"
"\n"
"[.description]\n"
"--\n"
"The path this header should be applied\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_HEADER__HEADER__PATH+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_HEADER__HEADER__PATH+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2209
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3480
#, no-wrap
msgid "`/*`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2221
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.header.-header-.value]]`link:#quarkus-vertx-http_quarkus.http.header.-header-.value[quarkus.http.header.\"header\".value]`\n"
"\n"
"[.description]\n"
"--\n"
"The value for this header configuration\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_HEADER__HEADER__VALUE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_HEADER__HEADER__VALUE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2237
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.header.-header-.methods]]`link:#quarkus-vertx-http_quarkus.http.header.-header-.methods[quarkus.http.header.\"header\".methods]`\n"
"\n"
"[.description]\n"
"--\n"
"The HTTP methods for this header configuration\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_HEADER__HEADER__METHODS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_HEADER__HEADER__METHODS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2253
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.filter.-filter-.matches]]`link:#quarkus-vertx-http_quarkus.http.filter.-filter-.matches[quarkus.http.filter.\"filter\".matches]`\n"
"\n"
"[.description]\n"
"--\n"
"A regular expression for the paths matching this configuration\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_FILTER__FILTER__MATCHES+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_FILTER__FILTER__MATCHES+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2269
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.filter.-filter-.header-header]]`link:#quarkus-vertx-http_quarkus.http.filter.-filter-.header-header[quarkus.http.filter.\"filter\".header]`\n"
"\n"
"[.description]\n"
"--\n"
"Additional HTTP Headers always sent in the response\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_FILTER__FILTER__HEADER+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_FILTER__FILTER__HEADER+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2270
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3541
#, no-wrap
msgid "`Map<String,String>`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2285
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.filter.-filter-.methods]]`link:#quarkus-vertx-http_quarkus.http.filter.-filter-.methods[quarkus.http.filter.\"filter\".methods]`\n"
"\n"
"[.description]\n"
"--\n"
"The HTTP methods for this path configuration\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_FILTER__FILTER__METHODS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_FILTER__FILTER__METHODS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2299
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.http.filter.-filter-.order]]`link:#quarkus-vertx-http_quarkus.http.filter.-filter-.order[quarkus.http.filter.\"filter\".order]`\n"
"\n"
"[.description]\n"
"--\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_FILTER__FILTER__ORDER+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_FILTER__FILTER__ORDER+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2315
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-vertx-http_quarkus.management.enabled]]`link:#quarkus-vertx-http_quarkus.management.enabled[quarkus.management.enabled]`\n"
"\n"
"[.description]\n"
"--\n"
"Enables / Disables the usage of a separate interface/port to expose the management endpoints. If sets to `true`, the management endpoints will be exposed to a different HTTP server. This avoids exposing the management endpoints on a publicly available server.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_ENABLED+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_ENABLED+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2331
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-vertx-http_quarkus.management.auth.basic]]`link:#quarkus-vertx-http_quarkus.management.auth.basic[quarkus.management.auth.basic]`\n"
"\n"
"[.description]\n"
"--\n"
"If basic auth should be enabled.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_AUTH_BASIC+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_AUTH_BASIC+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2347
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-vertx-http_quarkus.management.auth.proactive]]`link:#quarkus-vertx-http_quarkus.management.auth.proactive[quarkus.management.auth.proactive]`\n"
"\n"
"[.description]\n"
"--\n"
"If this is true and credentials are present then a user will always be authenticated before the request progresses. If this is false then an attempt will only be made to authenticate the user if a permission check is performed or the current user is required for some other reason.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_AUTH_PROACTIVE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_AUTH_PROACTIVE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2363
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-vertx-http_quarkus.management.ssl.client-auth]]`link:#quarkus-vertx-http_quarkus.management.ssl.client-auth[quarkus.management.ssl.client-auth]`\n"
"\n"
"[.description]\n"
"--\n"
"Configures the engine to require/request client authentication. NONE, REQUEST, REQUIRED\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_SSL_CLIENT_AUTH+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_SSL_CLIENT_AUTH+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2380
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-vertx-http_quarkus.management.root-path]]`link:#quarkus-vertx-http_quarkus.management.root-path[quarkus.management.root-path]`\n"
"\n"
"[.description]\n"
"--\n"
"A common root path for management endpoints. Various extension-provided management endpoints such as metrics and health are deployed under this path by default.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_ROOT_PATH+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_ROOT_PATH+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2384
#, no-wrap
msgid "`/q`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2402
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-vertx-http_quarkus.management.enable-compression]]`link:#quarkus-vertx-http_quarkus.management.enable-compression[quarkus.management.enable-compression]`\n"
"\n"
"[.description]\n"
"--\n"
"If responses should be compressed.\n"
"\n"
"Note that this will attempt to compress all responses, to avoid compressing already compressed content (such as images) you need to set the following header:\n"
"\n"
"Content-Encoding: identity\n"
"\n"
"Which will tell vert.x not to compress the response.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_ENABLE_COMPRESSION+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_ENABLE_COMPRESSION+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2420
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-vertx-http_quarkus.management.enable-decompression]]`link:#quarkus-vertx-http_quarkus.management.enable-decompression[quarkus.management.enable-decompression]`\n"
"\n"
"[.description]\n"
"--\n"
"When enabled, vert.x will decompress the request's body if it's compressed.\n"
"\n"
"Note that the compression format (e.g., gzip) must be specified in the Content-Encoding header in the request.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_ENABLE_DECOMPRESSION+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_ENABLE_DECOMPRESSION+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2436
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-vertx-http_quarkus.management.compression-level]]`link:#quarkus-vertx-http_quarkus.management.compression-level[quarkus.management.compression-level]`\n"
"\n"
"[.description]\n"
"--\n"
"The compression level used when compression support is enabled.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_COMPRESSION_LEVEL+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_COMPRESSION_LEVEL+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2452
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.management.port]]`link:#quarkus-vertx-http_quarkus.management.port[quarkus.management.port]`\n"
"\n"
"[.description]\n"
"--\n"
"The HTTP port\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_PORT+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_PORT+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2456
#, no-wrap
msgid "`9000`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2468
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.management.test-port]]`link:#quarkus-vertx-http_quarkus.management.test-port[quarkus.management.test-port]`\n"
"\n"
"[.description]\n"
"--\n"
"The HTTP port\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_TEST_PORT+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_TEST_PORT+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2472
#, no-wrap
msgid "`9001`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2484
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.management.host]]`link:#quarkus-vertx-http_quarkus.management.host[quarkus.management.host]`\n"
"\n"
"[.description]\n"
"--\n"
"The HTTP host Defaults to 0.0.0.0 Defaulting to 0.0.0.0 makes it easier to deploy Quarkus to container, however it is not suitable for dev/test mode as other people on the network can connect to your development machine.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_HOST+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_HOST+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2500
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.management.host-enabled]]`link:#quarkus-vertx-http_quarkus.management.host-enabled[quarkus.management.host-enabled]`\n"
"\n"
"[.description]\n"
"--\n"
"Enable listening to host:port\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_HOST_ENABLED+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_HOST_ENABLED+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2516
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.management.ssl.certificate.credentials-provider]]`link:#quarkus-vertx-http_quarkus.management.ssl.certificate.credentials-provider[quarkus.management.ssl.certificate.credentials-provider]`\n"
"\n"
"[.description]\n"
"--\n"
"The `CredentialsProvider`. If this property is configured then a matching 'CredentialsProvider' will be used to get the keystore, keystore key and truststore passwords unless these passwords have already been configured. Please note that using MicroProfile `ConfigSource` which is directly supported by Quarkus Configuration should be preferred unless using `CredentialsProvider` provides for some additional security and dynamism.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_SSL_CERTIFICATE_CREDENTIALS_PROVIDER+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_SSL_CERTIFICATE_CREDENTIALS_PROVIDER+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2534
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.management.ssl.certificate.credentials-provider-name]]`link:#quarkus-vertx-http_quarkus.management.ssl.certificate.credentials-provider-name[quarkus.management.ssl.certificate.credentials-provider-name]`\n"
"\n"
"[.description]\n"
"--\n"
"The credentials provider bean name.\n"
"\n"
"It is the `&++#++64;Named` value of the credentials provider bean. It is used to discriminate if multiple CredentialsProvider beans are available. It is recommended to set this property even if there is only one credentials provider currently available to ensure the same provider is always found in deployments where more than one provider may be available.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_SSL_CERTIFICATE_CREDENTIALS_PROVIDER_NAME+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_SSL_CERTIFICATE_CREDENTIALS_PROVIDER_NAME+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2550
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.management.ssl.certificate.files]]`link:#quarkus-vertx-http_quarkus.management.ssl.certificate.files[quarkus.management.ssl.certificate.files]`\n"
"\n"
"[.description]\n"
"--\n"
"The list of path to server certificates using the PEM format. Specifying multiple files require SNI to be enabled.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_SSL_CERTIFICATE_FILES+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_SSL_CERTIFICATE_FILES+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2566
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.management.ssl.certificate.key-files]]`link:#quarkus-vertx-http_quarkus.management.ssl.certificate.key-files[quarkus.management.ssl.certificate.key-files]`\n"
"\n"
"[.description]\n"
"--\n"
"The list of path to server certificates private key file using the PEM format. Specifying multiple files require SNI to be enabled. The order of the key files must match the order of the certificates.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_SSL_CERTIFICATE_KEY_FILES+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_SSL_CERTIFICATE_KEY_FILES+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2582
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.management.ssl.certificate.key-store-file]]`link:#quarkus-vertx-http_quarkus.management.ssl.certificate.key-store-file[quarkus.management.ssl.certificate.key-store-file]`\n"
"\n"
"[.description]\n"
"--\n"
"An optional key store which holds the certificate information instead of specifying separate files.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_SSL_CERTIFICATE_KEY_STORE_FILE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_SSL_CERTIFICATE_KEY_STORE_FILE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2598
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.management.ssl.certificate.key-store-file-type]]`link:#quarkus-vertx-http_quarkus.management.ssl.certificate.key-store-file-type[quarkus.management.ssl.certificate.key-store-file-type]`\n"
"\n"
"[.description]\n"
"--\n"
"An optional parameter to specify type of the key store file. If not given, the type is automatically detected based on the file name.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_SSL_CERTIFICATE_KEY_STORE_FILE_TYPE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_SSL_CERTIFICATE_KEY_STORE_FILE_TYPE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2614
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.management.ssl.certificate.key-store-provider]]`link:#quarkus-vertx-http_quarkus.management.ssl.certificate.key-store-provider[quarkus.management.ssl.certificate.key-store-provider]`\n"
"\n"
"[.description]\n"
"--\n"
"An optional parameter to specify a provider of the key store file. If not given, the provider is automatically detected based on the key store file type.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_SSL_CERTIFICATE_KEY_STORE_PROVIDER+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_SSL_CERTIFICATE_KEY_STORE_PROVIDER+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2630
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.management.ssl.certificate.key-store-password]]`link:#quarkus-vertx-http_quarkus.management.ssl.certificate.key-store-password[quarkus.management.ssl.certificate.key-store-password]`\n"
"\n"
"[.description]\n"
"--\n"
"A parameter to specify the password of the key store file. If not given, and if it can not be retrieved from `CredentialsProvider`.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_SSL_CERTIFICATE_KEY_STORE_PASSWORD+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_SSL_CERTIFICATE_KEY_STORE_PASSWORD+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2646
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.management.ssl.certificate.key-store-password-key]]`link:#quarkus-vertx-http_quarkus.management.ssl.certificate.key-store-password-key[quarkus.management.ssl.certificate.key-store-password-key]`\n"
"\n"
"[.description]\n"
"--\n"
"A parameter to specify a `CredentialsProvider` property key which can be used to get the password of the key store file from `CredentialsProvider`.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_SSL_CERTIFICATE_KEY_STORE_PASSWORD_KEY+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_SSL_CERTIFICATE_KEY_STORE_PASSWORD_KEY+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2662
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.management.ssl.certificate.key-store-key-alias]]`link:#quarkus-vertx-http_quarkus.management.ssl.certificate.key-store-key-alias[quarkus.management.ssl.certificate.key-store-key-alias]`\n"
"\n"
"[.description]\n"
"--\n"
"An optional parameter to select a specific key in the key store. When SNI is disabled, if the key store contains multiple keys and no alias is specified, the behavior is undefined.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_SSL_CERTIFICATE_KEY_STORE_KEY_ALIAS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_SSL_CERTIFICATE_KEY_STORE_KEY_ALIAS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2678
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.management.ssl.certificate.key-store-key-password]]`link:#quarkus-vertx-http_quarkus.management.ssl.certificate.key-store-key-password[quarkus.management.ssl.certificate.key-store-key-password]`\n"
"\n"
"[.description]\n"
"--\n"
"An optional parameter to define the password for the key, in case it's different from `key-store-password` If not given then it may be retrieved from `CredentialsProvider`.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_SSL_CERTIFICATE_KEY_STORE_KEY_PASSWORD+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_SSL_CERTIFICATE_KEY_STORE_KEY_PASSWORD+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2694
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.management.ssl.certificate.key-store-key-password-key]]`link:#quarkus-vertx-http_quarkus.management.ssl.certificate.key-store-key-password-key[quarkus.management.ssl.certificate.key-store-key-password-key]`\n"
"\n"
"[.description]\n"
"--\n"
"A parameter to specify a `CredentialsProvider` property key which can be used to get the password for the key from `CredentialsProvider`.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_SSL_CERTIFICATE_KEY_STORE_KEY_PASSWORD_KEY+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_SSL_CERTIFICATE_KEY_STORE_KEY_PASSWORD_KEY+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2710
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.management.ssl.certificate.trust-store-file]]`link:#quarkus-vertx-http_quarkus.management.ssl.certificate.trust-store-file[quarkus.management.ssl.certificate.trust-store-file]`\n"
"\n"
"[.description]\n"
"--\n"
"An optional trust store which holds the certificate information of the certificates to trust.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_SSL_CERTIFICATE_TRUST_STORE_FILE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_SSL_CERTIFICATE_TRUST_STORE_FILE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2726
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.management.ssl.certificate.trust-store-file-type]]`link:#quarkus-vertx-http_quarkus.management.ssl.certificate.trust-store-file-type[quarkus.management.ssl.certificate.trust-store-file-type]`\n"
"\n"
"[.description]\n"
"--\n"
"An optional parameter to specify type of the trust store file. If not given, the type is automatically detected based on the file name.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_SSL_CERTIFICATE_TRUST_STORE_FILE_TYPE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_SSL_CERTIFICATE_TRUST_STORE_FILE_TYPE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2742
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.management.ssl.certificate.trust-store-provider]]`link:#quarkus-vertx-http_quarkus.management.ssl.certificate.trust-store-provider[quarkus.management.ssl.certificate.trust-store-provider]`\n"
"\n"
"[.description]\n"
"--\n"
"An optional parameter to specify a provider of the trust store file. If not given, the provider is automatically detected based on the trust store file type.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_SSL_CERTIFICATE_TRUST_STORE_PROVIDER+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_SSL_CERTIFICATE_TRUST_STORE_PROVIDER+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2758
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.management.ssl.certificate.trust-store-password]]`link:#quarkus-vertx-http_quarkus.management.ssl.certificate.trust-store-password[quarkus.management.ssl.certificate.trust-store-password]`\n"
"\n"
"[.description]\n"
"--\n"
"A parameter to specify the password of the trust store file. If not given then it may be retrieved from `CredentialsProvider`.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_SSL_CERTIFICATE_TRUST_STORE_PASSWORD+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_SSL_CERTIFICATE_TRUST_STORE_PASSWORD+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2774
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.management.ssl.certificate.trust-store-password-key]]`link:#quarkus-vertx-http_quarkus.management.ssl.certificate.trust-store-password-key[quarkus.management.ssl.certificate.trust-store-password-key]`\n"
"\n"
"[.description]\n"
"--\n"
"A parameter to specify a `CredentialsProvider` property key which can be used to get the password of the trust store file from `CredentialsProvider`.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_SSL_CERTIFICATE_TRUST_STORE_PASSWORD_KEY+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_SSL_CERTIFICATE_TRUST_STORE_PASSWORD_KEY+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2790
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.management.ssl.certificate.trust-store-cert-alias]]`link:#quarkus-vertx-http_quarkus.management.ssl.certificate.trust-store-cert-alias[quarkus.management.ssl.certificate.trust-store-cert-alias]`\n"
"\n"
"[.description]\n"
"--\n"
"An optional parameter to trust only one specific certificate in the trust store (instead of trusting all certificates in the store).\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_SSL_CERTIFICATE_TRUST_STORE_CERT_ALIAS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_SSL_CERTIFICATE_TRUST_STORE_CERT_ALIAS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2806
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.management.ssl.cipher-suites]]`link:#quarkus-vertx-http_quarkus.management.ssl.cipher-suites[quarkus.management.ssl.cipher-suites]`\n"
"\n"
"[.description]\n"
"--\n"
"The cipher suites to use. If none is given, a reasonable default is selected.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_SSL_CIPHER_SUITES+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_SSL_CIPHER_SUITES+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2826
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.management.ssl.protocols]]`link:#quarkus-vertx-http_quarkus.management.ssl.protocols[quarkus.management.ssl.protocols]`\n"
"\n"
"[.description]\n"
"--\n"
"Sets the ordered list of enabled SSL/TLS protocols.\n"
"\n"
"If not set, it defaults to `\"TLSv1.3, TLSv1.2\"`. The following list of protocols are supported: `TLSv1, TLSv1.1, TLSv1.2, TLSv1.3`. To only enable `TLSv1.3`, set the value to `to \"TLSv1.3\"`.\n"
"\n"
"Note that setting an empty list, and enabling SSL/TLS is invalid. You must at least have one protocol.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_SSL_PROTOCOLS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_SSL_PROTOCOLS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2842
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.management.ssl.sni]]`link:#quarkus-vertx-http_quarkus.management.ssl.sni[quarkus.management.ssl.sni]`\n"
"\n"
"[.description]\n"
"--\n"
"Enables Server Name Indication (SNI), an TLS extension allowing the server to use multiple certificates. The client indicate the server name during the TLS handshake, allowing the server to select the right certificate.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_SSL_SNI+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_SSL_SNI+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2858
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.management.handle-100-continue-automatically]]`link:#quarkus-vertx-http_quarkus.management.handle-100-continue-automatically[quarkus.management.handle-100-continue-automatically]`\n"
"\n"
"[.description]\n"
"--\n"
"When set to `true`, the HTTP server automatically sends `100 CONTINUE` response when the request expects it (with the `Expect: 100-Continue` header).\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_HANDLE_100_CONTINUE_AUTOMATICALLY+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_HANDLE_100_CONTINUE_AUTOMATICALLY+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2874
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.management.limits.max-header-size]]`link:#quarkus-vertx-http_quarkus.management.limits.max-header-size[quarkus.management.limits.max-header-size]`\n"
"\n"
"[.description]\n"
"--\n"
"The maximum length of all headers.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_LIMITS_MAX_HEADER_SIZE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_LIMITS_MAX_HEADER_SIZE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2890
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.management.limits.max-body-size]]`link:#quarkus-vertx-http_quarkus.management.limits.max-body-size[quarkus.management.limits.max-body-size]`\n"
"\n"
"[.description]\n"
"--\n"
"The maximum size of a request body.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_LIMITS_MAX_BODY_SIZE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_LIMITS_MAX_BODY_SIZE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2906
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.management.limits.max-chunk-size]]`link:#quarkus-vertx-http_quarkus.management.limits.max-chunk-size[quarkus.management.limits.max-chunk-size]`\n"
"\n"
"[.description]\n"
"--\n"
"The max HTTP chunk size\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_LIMITS_MAX_CHUNK_SIZE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_LIMITS_MAX_CHUNK_SIZE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2922
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.management.limits.max-initial-line-length]]`link:#quarkus-vertx-http_quarkus.management.limits.max-initial-line-length[quarkus.management.limits.max-initial-line-length]`\n"
"\n"
"[.description]\n"
"--\n"
"The maximum length of the initial line (e.g. `\"GET / HTTP/1.0\"`).\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_LIMITS_MAX_INITIAL_LINE_LENGTH+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_LIMITS_MAX_INITIAL_LINE_LENGTH+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2938
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.management.limits.max-form-attribute-size]]`link:#quarkus-vertx-http_quarkus.management.limits.max-form-attribute-size[quarkus.management.limits.max-form-attribute-size]`\n"
"\n"
"[.description]\n"
"--\n"
"The maximum length of a form attribute.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_LIMITS_MAX_FORM_ATTRIBUTE_SIZE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_LIMITS_MAX_FORM_ATTRIBUTE_SIZE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2954
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.management.limits.max-connections]]`link:#quarkus-vertx-http_quarkus.management.limits.max-connections[quarkus.management.limits.max-connections]`\n"
"\n"
"[.description]\n"
"--\n"
"The maximum number of connections that are allowed at any one time. If this is set it is recommended to set a short idle timeout.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_LIMITS_MAX_CONNECTIONS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_LIMITS_MAX_CONNECTIONS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2972
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.management.limits.header-table-size]]`link:#quarkus-vertx-http_quarkus.management.limits.header-table-size[quarkus.management.limits.header-table-size]`\n"
"\n"
"[.description]\n"
"--\n"
"Set the SETTINGS_HEADER_TABLE_SIZE HTTP/2 setting.\n"
"\n"
"Allows the sender to inform the remote endpoint of the maximum size of the header compression table used to decode header blocks, in octets. The encoder can select any size equal to or less than this value by using signaling specific to the header compression format inside a header block. The initial value is `4,096` octets.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_LIMITS_HEADER_TABLE_SIZE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_LIMITS_HEADER_TABLE_SIZE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:2990
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.management.limits.max-concurrent-streams]]`link:#quarkus-vertx-http_quarkus.management.limits.max-concurrent-streams[quarkus.management.limits.max-concurrent-streams]`\n"
"\n"
"[.description]\n"
"--\n"
"Set SETTINGS_MAX_CONCURRENT_STREAMS HTTP/2 setting.\n"
"\n"
"Indicates the maximum number of concurrent streams that the sender will allow. This limit is directional: it applies to the number of streams that the sender permits the receiver to create. Initially, there is no limit to this value. It is recommended that this value be no smaller than 100, to not unnecessarily limit parallelism.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_LIMITS_MAX_CONCURRENT_STREAMS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_LIMITS_MAX_CONCURRENT_STREAMS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3006
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.management.limits.max-frame-size]]`link:#quarkus-vertx-http_quarkus.management.limits.max-frame-size[quarkus.management.limits.max-frame-size]`\n"
"\n"
"[.description]\n"
"--\n"
"Set the SETTINGS_MAX_FRAME_SIZE HTTP/2 setting. Indicates the size of the largest frame payload that the sender is willing to receive, in octets. The initial value is `2^14` (16,384) octets.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_LIMITS_MAX_FRAME_SIZE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_LIMITS_MAX_FRAME_SIZE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3022
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.management.limits.max-header-list-size]]`link:#quarkus-vertx-http_quarkus.management.limits.max-header-list-size[quarkus.management.limits.max-header-list-size]`\n"
"\n"
"[.description]\n"
"--\n"
"Set the SETTINGS_MAX_HEADER_LIST_SIZE HTTP/2 setting. This advisory setting informs a peer of the maximum size of header list that the sender is prepared to accept, in octets. The value is based on the uncompressed size of header fields, including the length of the name and value in octets plus an overhead of 32 octets for each header field. The default value is `8192`\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_LIMITS_MAX_HEADER_LIST_SIZE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_LIMITS_MAX_HEADER_LIST_SIZE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3038
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.management.idle-timeout]]`link:#quarkus-vertx-http_quarkus.management.idle-timeout[quarkus.management.idle-timeout]`\n"
"\n"
"[.description]\n"
"--\n"
"Http connection idle timeout\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_IDLE_TIMEOUT+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_IDLE_TIMEOUT+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3057
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.management.body.handle-file-uploads]]`link:#quarkus-vertx-http_quarkus.management.body.handle-file-uploads[quarkus.management.body.handle-file-uploads]`\n"
"\n"
"[.description]\n"
"--\n"
"Whether the files sent using `multipart/form-data` will be stored locally.\n"
"\n"
"If `true`, they will be stored in `quarkus.http.body-handler.uploads-directory` and will be made available via `io.vertx.ext.web.RoutingContext.fileUploads()`. Otherwise, the files sent using `multipart/form-data` will not be stored locally, and `io.vertx.ext.web.RoutingContext.fileUploads()` will always return an empty collection. Note that even with this option being set to `false`, the `multipart/form-data` requests will be accepted.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_BODY_HANDLE_FILE_UPLOADS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_BODY_HANDLE_FILE_UPLOADS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3075
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.management.body.uploads-directory]]`link:#quarkus-vertx-http_quarkus.management.body.uploads-directory[quarkus.management.body.uploads-directory]`\n"
"\n"
"[.description]\n"
"--\n"
"The directory where the files sent using `multipart/form-data` should be stored.\n"
"\n"
"Either an absolute path or a path relative to the current directory of the application process.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_BODY_UPLOADS_DIRECTORY+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_BODY_UPLOADS_DIRECTORY+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3093
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.management.body.merge-form-attributes]]`link:#quarkus-vertx-http_quarkus.management.body.merge-form-attributes[quarkus.management.body.merge-form-attributes]`\n"
"\n"
"[.description]\n"
"--\n"
"Whether the form attributes should be added to the request parameters.\n"
"\n"
"If `true`, the form attributes will be added to the request parameters; otherwise the form parameters will not be added to the request parameters\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_BODY_MERGE_FORM_ATTRIBUTES+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_BODY_MERGE_FORM_ATTRIBUTES+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3111
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.management.body.delete-uploaded-files-on-end]]`link:#quarkus-vertx-http_quarkus.management.body.delete-uploaded-files-on-end[quarkus.management.body.delete-uploaded-files-on-end]`\n"
"\n"
"[.description]\n"
"--\n"
"Whether the uploaded files should be removed after serving the request.\n"
"\n"
"If `true` the uploaded files stored in `quarkus.http.body-handler.uploads-directory` will be removed after handling the request. Otherwise, the files will be left there forever.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_BODY_DELETE_UPLOADED_FILES_ON_END+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_BODY_DELETE_UPLOADED_FILES_ON_END+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3129
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.management.body.preallocate-body-buffer]]`link:#quarkus-vertx-http_quarkus.management.body.preallocate-body-buffer[quarkus.management.body.preallocate-body-buffer]`\n"
"\n"
"[.description]\n"
"--\n"
"Whether the body buffer should pre-allocated based on the `Content-Length` header value.\n"
"\n"
"If `true` the body buffer is pre-allocated according to the size read from the `Content-Length` header. Otherwise, the body buffer is pre-allocated to 1KB, and is resized dynamically\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_BODY_PREALLOCATE_BODY_BUFFER+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_BODY_PREALLOCATE_BODY_BUFFER+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3145
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.management.body.multipart.file-content-types]]`link:#quarkus-vertx-http_quarkus.management.body.multipart.file-content-types[quarkus.management.body.multipart.file-content-types]`\n"
"\n"
"[.description]\n"
"--\n"
"A comma-separated list of `ContentType` to indicate whether a given multipart field should be handled as a file part. You can use this setting to force HTTP-based extensions to parse a message part as a file based on its content type. For now, this setting only works when using RESTEasy Reactive.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_BODY_MULTIPART_FILE_CONTENT_TYPES+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_BODY_MULTIPART_FILE_CONTENT_TYPES+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3161
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.management.accept-backlog]]`link:#quarkus-vertx-http_quarkus.management.accept-backlog[quarkus.management.accept-backlog]`\n"
"\n"
"[.description]\n"
"--\n"
"The accept backlog, this is how many connections can be waiting to be accepted before connections start being rejected\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_ACCEPT_BACKLOG+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_ACCEPT_BACKLOG+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3177
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.management.domain-socket]]`link:#quarkus-vertx-http_quarkus.management.domain-socket[quarkus.management.domain-socket]`\n"
"\n"
"[.description]\n"
"--\n"
"Path to a unix domain socket\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_DOMAIN_SOCKET+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_DOMAIN_SOCKET+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3181
#, no-wrap
msgid "`/var/run/io.quarkus.management.socket`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3193
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.management.domain-socket-enabled]]`link:#quarkus-vertx-http_quarkus.management.domain-socket-enabled[quarkus.management.domain-socket-enabled]`\n"
"\n"
"[.description]\n"
"--\n"
"Enable listening to host:port\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_DOMAIN_SOCKET_ENABLED+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_DOMAIN_SOCKET_ENABLED+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3209
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.management.proxy.proxy-address-forwarding]]`link:#quarkus-vertx-http_quarkus.management.proxy.proxy-address-forwarding[quarkus.management.proxy.proxy-address-forwarding]`\n"
"\n"
"[.description]\n"
"--\n"
"If this is true then the address, scheme etc. will be set from headers forwarded by the proxy server, such as `X-Forwarded-For`. This should only be set if you are behind a proxy that sets these headers.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_PROXY_PROXY_ADDRESS_FORWARDING+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_PROXY_PROXY_ADDRESS_FORWARDING+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3225
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.management.proxy.allow-forwarded]]`link:#quarkus-vertx-http_quarkus.management.proxy.allow-forwarded[quarkus.management.proxy.allow-forwarded]`\n"
"\n"
"[.description]\n"
"--\n"
"If this is true and proxy address forwarding is enabled then the standard `Forwarded` header will be used. In case the not standard `X-Forwarded-For` header is enabled and detected on HTTP requests, the standard header has the precedence. Activating this together with `quarkus.http.proxy.allow-x-forwarded` has security implications as clients can forge requests with a forwarded header that is not overwritten by the proxy. Therefore, proxies should strip unexpected `X-Forwarded` or `X-Forwarded-++*++` headers from the client.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_PROXY_ALLOW_FORWARDED+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_PROXY_ALLOW_FORWARDED+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3241
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.management.proxy.allow-x-forwarded]]`link:#quarkus-vertx-http_quarkus.management.proxy.allow-x-forwarded[quarkus.management.proxy.allow-x-forwarded]`\n"
"\n"
"[.description]\n"
"--\n"
"If either this or `allow-forwarded` are true and proxy address forwarding is enabled then the not standard `Forwarded` header will be used. In case the standard `Forwarded` header is enabled and detected on HTTP requests, the standard header has the precedence. Activating this together with `quarkus.http.proxy.allow-forwarded` has security implications as clients can forge requests with a forwarded header that is not overwritten by the proxy. Therefore, proxies should strip unexpected `X-Forwarded` or `X-Forwarded-++*++` headers from the client.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_PROXY_ALLOW_X_FORWARDED+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_PROXY_ALLOW_X_FORWARDED+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3257
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.management.proxy.enable-forwarded-host]]`link:#quarkus-vertx-http_quarkus.management.proxy.enable-forwarded-host[quarkus.management.proxy.enable-forwarded-host]`\n"
"\n"
"[.description]\n"
"--\n"
"Enable override the received request's host through a forwarded host header.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_PROXY_ENABLE_FORWARDED_HOST+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_PROXY_ENABLE_FORWARDED_HOST+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3273
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.management.proxy.forwarded-host-header]]`link:#quarkus-vertx-http_quarkus.management.proxy.forwarded-host-header[quarkus.management.proxy.forwarded-host-header]`\n"
"\n"
"[.description]\n"
"--\n"
"Configure the forwarded host header to be used if override enabled.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_PROXY_FORWARDED_HOST_HEADER+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_PROXY_FORWARDED_HOST_HEADER+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3289
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.management.proxy.enable-forwarded-prefix]]`link:#quarkus-vertx-http_quarkus.management.proxy.enable-forwarded-prefix[quarkus.management.proxy.enable-forwarded-prefix]`\n"
"\n"
"[.description]\n"
"--\n"
"Enable prefix the received request's path with a forwarded prefix header.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_PROXY_ENABLE_FORWARDED_PREFIX+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_PROXY_ENABLE_FORWARDED_PREFIX+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3305
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.management.proxy.forwarded-prefix-header]]`link:#quarkus-vertx-http_quarkus.management.proxy.forwarded-prefix-header[quarkus.management.proxy.forwarded-prefix-header]`\n"
"\n"
"[.description]\n"
"--\n"
"Configure the forwarded prefix header to be used if prefixing enabled.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_PROXY_FORWARDED_PREFIX_HEADER+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_PROXY_FORWARDED_PREFIX_HEADER+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3332
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.management.proxy.trusted-proxies]]`link:#quarkus-vertx-http_quarkus.management.proxy.trusted-proxies[quarkus.management.proxy.trusted-proxies]`\n"
"\n"
"[.description]\n"
"--\n"
"Configure the list of trusted proxy addresses. Received `Forwarded`, `X-Forwarded` or `X-Forwarded-++*++` headers from any other proxy address will be ignored. The trusted proxy address should be specified as the IP address (IPv4 or IPv6), hostname or Classless Inter-Domain Routing (CIDR) notation. Please note that Quarkus needs to perform DNS lookup for all hostnames during the request. For that reason, using hostnames is not recommended. Examples of a socket address in the form of `host` or `host:port`:\n"
"\n"
" - `127.0.0.1:8084`\n"
" - `++[++0:0:0:0:0:0:0:1++]++`\n"
" - `++[++0:0:0:0:0:0:0:1++]++:8084`\n"
" - `++[++::++]++`\n"
" - `localhost`\n"
" - `localhost:8084`  Examples of a CIDR notation:\n"
"\n"
" - `::/128`\n"
" - `::/0`\n"
" - `127.0.0.0/8`  Please bear in mind that IPv4 CIDR won't match request sent from the IPv6 address and the other way around.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_PROXY_TRUSTED_PROXIES+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_PROXY_TRUSTED_PROXIES+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3348
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-vertx-http_quarkus.management.auth.permission.-permissions-.enabled]]`link:#quarkus-vertx-http_quarkus.management.auth.permission.-permissions-.enabled[quarkus.management.auth.permission.\"permissions\".enabled]`\n"
"\n"
"[.description]\n"
"--\n"
"Determines whether the entire permission set is enabled, or not. By default, if the permission set is defined, it is enabled.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_AUTH_PERMISSION__PERMISSIONS__ENABLED+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_AUTH_PERMISSION__PERMISSIONS__ENABLED+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3364
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-vertx-http_quarkus.management.auth.permission.-permissions-.policy]]`link:#quarkus-vertx-http_quarkus.management.auth.permission.-permissions-.policy[quarkus.management.auth.permission.\"permissions\".policy]`\n"
"\n"
"[.description]\n"
"--\n"
"The HTTP policy that this permission set is linked to. There are 3 built in policies: permit, deny and authenticated. Role based policies can be defined, and extensions can add their own policies.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_AUTH_PERMISSION__PERMISSIONS__POLICY+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_AUTH_PERMISSION__PERMISSIONS__POLICY+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3380
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-vertx-http_quarkus.management.auth.permission.-permissions-.methods]]`link:#quarkus-vertx-http_quarkus.management.auth.permission.-permissions-.methods[quarkus.management.auth.permission.\"permissions\".methods]`\n"
"\n"
"[.description]\n"
"--\n"
"The methods that this permission set applies to. If this is not set then they apply to all methods. Note that if a request matches any path from any permission set, but does not match the constraint due to the method not being listed then the request will be denied. Method specific permissions take precedence over matches that do not have any methods set. This means that for example if Quarkus is configured to allow GET and POST requests to /admin to and no other permissions are configured PUT requests to /admin will be denied.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_AUTH_PERMISSION__PERMISSIONS__METHODS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_AUTH_PERMISSION__PERMISSIONS__METHODS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3396
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-vertx-http_quarkus.management.auth.permission.-permissions-.paths]]`link:#quarkus-vertx-http_quarkus.management.auth.permission.-permissions-.paths[quarkus.management.auth.permission.\"permissions\".paths]`\n"
"\n"
"[.description]\n"
"--\n"
"The paths that this permission check applies to. If the path ends in /++*++ then this is treated as a path prefix, otherwise it is treated as an exact match. Matches are done on a length basis, so the most specific path match takes precedence. If multiple permission sets match the same path then explicit methods matches take precedence over matches without methods set, otherwise the most restrictive permissions are applied.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_AUTH_PERMISSION__PERMISSIONS__PATHS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_AUTH_PERMISSION__PERMISSIONS__PATHS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3412
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-vertx-http_quarkus.management.auth.permission.-permissions-.auth-mechanism]]`link:#quarkus-vertx-http_quarkus.management.auth.permission.-permissions-.auth-mechanism[quarkus.management.auth.permission.\"permissions\".auth-mechanism]`\n"
"\n"
"[.description]\n"
"--\n"
"Path specific authentication mechanism which must be used to authenticate a user. It needs to match `HttpCredentialTransport` authentication scheme such as 'basic', 'bearer', 'form', etc.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_AUTH_PERMISSION__PERMISSIONS__AUTH_MECHANISM+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_AUTH_PERMISSION__PERMISSIONS__AUTH_MECHANISM+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3428
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-vertx-http_quarkus.management.auth.policy.-role-policy-.roles-allowed]]`link:#quarkus-vertx-http_quarkus.management.auth.policy.-role-policy-.roles-allowed[quarkus.management.auth.policy.\"role-policy\".roles-allowed]`\n"
"\n"
"[.description]\n"
"--\n"
"The roles that are allowed to access resources protected by this policy. By default, access is allowed to any authenticated user.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_AUTH_POLICY__ROLE_POLICY__ROLES_ALLOWED+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_AUTH_POLICY__ROLE_POLICY__ROLES_ALLOWED+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3444
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-vertx-http_quarkus.management.auth.policy.-role-policy-.permissions-role1]]`link:#quarkus-vertx-http_quarkus.management.auth.policy.-role-policy-.permissions-role1[quarkus.management.auth.policy.\"role-policy\".permissions]`\n"
"\n"
"[.description]\n"
"--\n"
"Permissions granted to the `SecurityIdentity` if this policy is applied successfully (the policy allows request to proceed) and the authenticated request has required role. For example, you can map permission `perm1` with actions `action1` and `action2` to role `admin` by setting `quarkus.http.auth.policy.role-policy1.permissions.admin=perm1:action1,perm1:action2` configuration property. Granted permissions are used for authorization with the `@PermissionsAllowed` annotation.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_AUTH_POLICY__ROLE_POLICY__PERMISSIONS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_AUTH_POLICY__ROLE_POLICY__PERMISSIONS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3460
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-vertx-http_quarkus.management.auth.policy.-role-policy-.permission-class]]`link:#quarkus-vertx-http_quarkus.management.auth.policy.-role-policy-.permission-class[quarkus.management.auth.policy.\"role-policy\".permission-class]`\n"
"\n"
"[.description]\n"
"--\n"
"Permissions granted by this policy will be created with a `java.security.Permission` implementation specified by this configuration property. The permission class must declare exactly one constructor that accepts permission name (`String`) or permission name and actions (`String`, `String++[]++`).\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_AUTH_POLICY__ROLE_POLICY__PERMISSION_CLASS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_AUTH_POLICY__ROLE_POLICY__PERMISSION_CLASS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3476
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.management.header.-header-.path]]`link:#quarkus-vertx-http_quarkus.management.header.-header-.path[quarkus.management.header.\"header\".path]`\n"
"\n"
"[.description]\n"
"--\n"
"The path this header should be applied\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_HEADER__HEADER__PATH+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_HEADER__HEADER__PATH+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3492
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.management.header.-header-.value]]`link:#quarkus-vertx-http_quarkus.management.header.-header-.value[quarkus.management.header.\"header\".value]`\n"
"\n"
"[.description]\n"
"--\n"
"The value for this header configuration\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_HEADER__HEADER__VALUE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_HEADER__HEADER__VALUE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3508
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.management.header.-header-.methods]]`link:#quarkus-vertx-http_quarkus.management.header.-header-.methods[quarkus.management.header.\"header\".methods]`\n"
"\n"
"[.description]\n"
"--\n"
"The HTTP methods for this header configuration\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_HEADER__HEADER__METHODS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_HEADER__HEADER__METHODS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3524
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.management.filter.-filter-.matches]]`link:#quarkus-vertx-http_quarkus.management.filter.-filter-.matches[quarkus.management.filter.\"filter\".matches]`\n"
"\n"
"[.description]\n"
"--\n"
"A regular expression for the paths matching this configuration\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_FILTER__FILTER__MATCHES+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_FILTER__FILTER__MATCHES+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3540
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.management.filter.-filter-.header-header]]`link:#quarkus-vertx-http_quarkus.management.filter.-filter-.header-header[quarkus.management.filter.\"filter\".header]`\n"
"\n"
"[.description]\n"
"--\n"
"Additional HTTP Headers always sent in the response\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_FILTER__FILTER__HEADER+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_FILTER__FILTER__HEADER+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3556
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.management.filter.-filter-.methods]]`link:#quarkus-vertx-http_quarkus.management.filter.-filter-.methods[quarkus.management.filter.\"filter\".methods]`\n"
"\n"
"[.description]\n"
"--\n"
"The HTTP methods for this path configuration\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_FILTER__FILTER__METHODS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_FILTER__FILTER__METHODS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3570
#, no-wrap
msgid ""
"[[quarkus-vertx-http_quarkus.management.filter.-filter-.order]]`link:#quarkus-vertx-http_quarkus.management.filter.-filter-.order[quarkus.management.filter.\"filter\".order]`\n"
"\n"
"[.description]\n"
"--\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_FILTER__FILTER__ORDER+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_FILTER__FILTER__ORDER+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Block title
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3577
#, no-wrap
msgid "About the Duration format"
msgstr ""

#. type: delimited block =
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3581
msgid "The format for durations uses the standard `java.time.Duration` format.  You can learn more about it in the link:https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html#parse-java.lang.CharSequence-[Duration#parse() javadoc]."
msgstr ""

#. type: delimited block =
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3585
msgid "You can also provide duration values starting with a number.  In this case, if the value consists only of a number, the converter treats the value as seconds.  Otherwise, `PT` is implicitly prepended to the value to obtain a standard `java.time.Duration` format."
msgstr ""

#. type: Block title
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3590
#, no-wrap
msgid "About the MemorySize format"
msgstr ""

#. type: delimited block =
#: upstream/_generated-doc/latest/config/quarkus-vertx-http.adoc:3594
msgid "A size configuration option recognises string in this format (shown as a regular expression): `[0-9]+[KkMmGgTtPpEeZzYy]?`.  If no suffix is given, assume bytes."
msgstr ""

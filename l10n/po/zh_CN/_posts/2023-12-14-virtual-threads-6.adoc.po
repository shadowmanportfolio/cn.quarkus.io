# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-12-14 16:10+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: author
#: upstream/_posts/2023-12-14-virtual-threads-6.adoc:1
#, no-wrap
msgid "cescoffier"
msgstr ""

#. type: YAML Front Matter: date
#: upstream/_posts/2023-12-14-virtual-threads-6.adoc:1
#, no-wrap
msgid "2023-12-14"
msgstr ""

#. type: YAML Front Matter: layout
#: upstream/_posts/2023-12-14-virtual-threads-6.adoc:1
#, no-wrap
msgid "post"
msgstr ""

#. type: YAML Front Matter: synopsis
#: upstream/_posts/2023-12-14-virtual-threads-6.adoc:1
#, no-wrap
msgid "Learn how to containerized applications using virtual threads."
msgstr ""

#. type: YAML Front Matter: tags
#: upstream/_posts/2023-12-14-virtual-threads-6.adoc:1
#, no-wrap
msgid "virtual-threads native"
msgstr ""

#. type: YAML Front Matter: title
#: upstream/_posts/2023-12-14-virtual-threads-6.adoc:1
#, no-wrap
msgid "Containerizing virtual thread applications"
msgstr ""

#. type: Plain text
#: upstream/_posts/2023-12-14-virtual-threads-6.adoc:15
msgid "In another https://quarkus.io/blog/virtual-threads-2/[blog post], we explored how to implement a CRUD application with Quarkus to harness the power of virtual threads.  This post continues from that point, explaining how to containerize the application.  Containerization involves packaging the application into a container image, and we'll use the `quarkus-container-image-jib` extension for this purpose.  Quarkus offers other extensions for containerization, such as `quarkus-container-image-docker`, so choose the one that suits your preference."
msgstr ""

#. type: Plain text
#: upstream/_posts/2023-12-14-virtual-threads-6.adoc:18
msgid "Packaging an application using virtual threads is not different from packaging a regular application.  Quarkus hides all the complexity, selecting the right base image and configuring the native image build process to use the right flags."
msgstr ""

#. type: Plain text
#: upstream/_posts/2023-12-14-virtual-threads-6.adoc:20
msgid "The full code for this blog post is available in the `crud-example` directory of the https://github.com/quarkusio/virtual-threads-demos[virtual-threads-demos GitHub repository]."
msgstr ""

#. type: Title ==
#: upstream/_posts/2023-12-14-virtual-threads-6.adoc:22
#, no-wrap
msgid "Adding Jib to the Project"
msgstr ""

#. type: Plain text
#: upstream/_posts/2023-12-14-virtual-threads-6.adoc:25
msgid "First, add the `quarkus-container-image-jib` extension to the project:"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2023-12-14-virtual-threads-6.adoc:32
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-container-image-jib</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2023-12-14-virtual-threads-6.adoc:35
msgid "Next, open the `application.properties` file and add the following properties:"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2023-12-14-virtual-threads-6.adoc:40
#, no-wrap
msgid ""
"quarkus.container-image.build=true # <1>\n"
"quarkus.container-image.name=virtual-threads-demos-${quarkus.application.name} # <2>\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2023-12-14-virtual-threads-6.adoc:42
msgid "Enable container image build; every `mvn package` run will build a container image."
msgstr ""

#. type: Plain text
#: upstream/_posts/2023-12-14-virtual-threads-6.adoc:43
msgid "Define the name of the container image. The `${quarkus.application.name}` placeholder is replaced by the application name, which is `crud-example` in our case."
msgstr ""

#. type: Title ==
#: upstream/_posts/2023-12-14-virtual-threads-6.adoc:44
#, no-wrap
msgid "Building the Container Image for the JVM"
msgstr ""

#. type: Plain text
#: upstream/_posts/2023-12-14-virtual-threads-6.adoc:47
msgid "To create the container image for the Java application, run the following command:"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2023-12-14-virtual-threads-6.adoc:51
#, no-wrap
msgid "$ mvn clean package\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2023-12-14-virtual-threads-6.adoc:55
msgid "The logs will show the container image build process, with the image being built using the `registry.access.redhat.com/ubi8/openjdk-21-runtime:1.18` base image.  This image is automatically selected by Quarkus as the project uses Java 21."
msgstr ""

#. type: Plain text
#: upstream/_posts/2023-12-14-virtual-threads-6.adoc:57
msgid "Take note of the resulting image name: `clement/virtual-threads-demos-crud-example:1.0.0-SNAPSHOT`. The first part is your username by default, do do not forget to change it in the other commands."
msgstr ""

#. type: Plain text
#: upstream/_posts/2023-12-14-virtual-threads-6.adoc:59
msgid "You can run the container image with:"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2023-12-14-virtual-threads-6.adoc:66
#: upstream/_posts/2023-12-14-virtual-threads-6.adoc:97
#, no-wrap
msgid ""
"$ docker run -it \\\n"
"  -p8080:8080 \\\n"
"  -e QUARKUS_DATASOURCE_JDBC_URL=jdbc:postgresql://docker.for.mac.localhost/rest-crud \\\n"
"  clement/virtual-threads-demos-crud-example:1.0.0-SNAPSHOT\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2023-12-14-virtual-threads-6.adoc:69
msgid "Ensure to replace `clement` with your username."
msgstr ""

#. type: Plain text
#: upstream/_posts/2023-12-14-virtual-threads-6.adoc:72
msgid "If you are running on ARM64, you may encounter a warning regarding the image's platform mismatch.  You can override this using: `$ mvn clean package -DskipTests -Dquarkus.jib.platforms=linuxarm64`."
msgstr ""

#. type: Title ==
#: upstream/_posts/2023-12-14-virtual-threads-6.adoc:73
#, no-wrap
msgid "Building the Container Image for the Native Executable"
msgstr ""

#. type: Plain text
#: upstream/_posts/2023-12-14-virtual-threads-6.adoc:76
msgid "To build the container image for the native executable, use the following command:"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2023-12-14-virtual-threads-6.adoc:83
#, no-wrap
msgid ""
"$ mvn package -DskipTests \\\n"
"  -Dnative \\\n"
"  -Dquarkus.native.container-build=true \\\n"
"  -Dquarkus.jib.platforms=linux/arm64\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2023-12-14-virtual-threads-6.adoc:86
msgid "The `-Dnative` flag enables native compilation, and `-Dquarkus.jib.platforms=linux/arm64` specifies the target platform (required if you are on ARM64, as by default it will pick `linux/amd64`)."
msgstr ""

#. type: Plain text
#: upstream/_posts/2023-12-14-virtual-threads-6.adoc:88
msgid "Note the property `quarkus.native.container-build=true`, which instructs Quarkus to use a container image to build the native executable, avoiding the need for GraalVM installation."
msgstr ""

#. type: Plain text
#: upstream/_posts/2023-12-14-virtual-threads-6.adoc:90
msgid "Run the container image with:"
msgstr ""

#. type: Plain text
#: upstream/_posts/2023-12-14-virtual-threads-6.adoc:100
msgid "Use the same configuration trick for the database connection, and replace `clement` with your username."
msgstr ""

#. type: Title ==
#: upstream/_posts/2023-12-14-virtual-threads-6.adoc:101
#, no-wrap
msgid "Pushing the Container Image"
msgstr ""

#. type: Plain text
#: upstream/_posts/2023-12-14-virtual-threads-6.adoc:105
msgid "Quarkus can push the container image to a registry.  To push to the GitHub container repository, use these properties:"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2023-12-14-virtual-threads-6.adoc:112
#, no-wrap
msgid ""
"quarkus.container-image.registry=ghcr.io\n"
"quarkus.container-image.group=cescoffier\n"
"quarkus.container-image.username=cescoffier\n"
"quarkus.container-image.password=${GITHUB_TOKEN}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2023-12-14-virtual-threads-6.adoc:115
msgid "The `GITHUB_TOKEN` environment variable configures the GitHub token, which must have permission to create packages. Push the container image using:"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2023-12-14-virtual-threads-6.adoc:119
#, no-wrap
msgid "$ mvn clean package -DskipTests -Dquarkus.container-image.push=true\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2023-12-14-virtual-threads-6.adoc:122
msgid "Append `-Dnative` for native images."
msgstr ""

#. type: Plain text
#: upstream/_posts/2023-12-14-virtual-threads-6.adoc:124
msgid "Multi-architecture container images can be created using:"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2023-12-14-virtual-threads-6.adoc:128
#, no-wrap
msgid "$ mvn clean package -DskipTests -Dquarkus.container-image.push=true -Dquarkus.jib.platforms=linux/amd64,linux/arm64\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2023-12-14-virtual-threads-6.adoc:131
msgid "This option is not applicable for native executables, howver, it is very convenient for JVM applications as you can then use the same container image on different platforms."
msgstr ""

#. type: Title ==
#: upstream/_posts/2023-12-14-virtual-threads-6.adoc:132
#, no-wrap
msgid "Summary"
msgstr ""

#. type: Plain text
#: upstream/_posts/2023-12-14-virtual-threads-6.adoc:135
msgid "This blog post demonstrated how to containerize a virtual thread application using Quarkus and the Jib container image extension. Both JVM applications and native executables were covered."
msgstr ""

#. type: Plain text
#: upstream/_posts/2023-12-14-virtual-threads-6.adoc:138
msgid "Attentive readers would have seen that nothing is different from a regular application.  Quarkus handles all the complexity, selecting the right base image and configuring the native image build process to use the right flags."
msgstr ""

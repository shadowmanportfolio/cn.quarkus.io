# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-08-02 18:19+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: upstream/_guides/logging.adoc:7
#, fuzzy, no-wrap
msgid "Logging configuration"
msgstr "文件TRACE日志配置"

#. type: Plain text
#: upstream/_guides/logging.adoc:13
msgid "Read about the use of logging API in Quarkus, configuring logging output, and using logging adapters to unify the output from other logging APIs."
msgstr ""

#. type: Plain text
#: upstream/_guides/logging.adoc:17
msgid "Quarkus uses the JBoss Log Manager logging backend for publishing application and framework logs.  Quarkus supports the JBoss Logging API as well as multiple other logging APIs, seamlessly integrated with JBoss Log Manager.  You can use any of the xref:logging-apis[following APIs]:"
msgstr ""

#. type: Plain text
#: upstream/_guides/logging.adoc:19
#, fuzzy
msgid "link:https://github.com/jboss-logging/jboss-logging[JBoss Logging]"
msgstr "link:https://github.com/jboss-logging/jboss-logging[JBoss日志]"

#. type: Plain text
#: upstream/_guides/logging.adoc:20
#, fuzzy
msgid "JDK `java.util.logging` (JUL)"
msgstr "JDK `java.util.logging` （也叫JUL）。"

#. type: Plain text
#: upstream/_guides/logging.adoc:21
#, fuzzy
msgid "link:https://www.slf4j.org/[SLF4J]"
msgstr "link:https://www.slf4j.org/[SLF4J]"

#. type: Plain text
#: upstream/_guides/logging.adoc:22
#, fuzzy
msgid "link:https://commons.apache.org/proper/commons-logging/[Apache Commons Logging]"
msgstr "link:https://commons.apache.org/proper/commons-logging/[阿帕奇公社日志]"

#. type: Plain text
#: upstream/_guides/logging.adoc:23
#, fuzzy
msgid "link:https://logging.apache.org/log4j/2.x/[Apache Log4j 2]"
msgstr "link:https://commons.apache.org/proper/commons-logging/[阿帕奇公社日志]"

#. type: Plain text
#: upstream/_guides/logging.adoc:24
#, fuzzy
msgid "link:https://logging.apache.org/log4j/1.2/[Apache Log4j 1]"
msgstr "link:https://commons.apache.org/proper/commons-logging/[阿帕奇公社日志]"

#. type: Title ==
#: upstream/_guides/logging.adoc:26
#, no-wrap
msgid "Use JBoss Logging for application logging"
msgstr ""

#. type: Plain text
#: upstream/_guides/logging.adoc:29
msgid "When using the JBoss Logging API, your application requires no additional dependencies, as Quarkus automatically provides it."
msgstr ""

#. type: Block title
#: upstream/_guides/logging.adoc:30
#, no-wrap
msgid "An example of using the JBoss Logging API to log a message:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/logging.adoc:34 upstream/_guides/logging.adoc:132
#, no-wrap
msgid "import org.jboss.logging.Logger;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/logging.adoc:39
#, no-wrap
msgid ""
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.Path;\n"
"import jakarta.ws.rs.Produces;\n"
"import jakarta.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/logging.adoc:42
#, no-wrap
msgid ""
"@Path(\"/hello\")\n"
"public class ExampleResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/logging.adoc:44
#, no-wrap
msgid "    private static final Logger LOG = Logger.getLogger(ExampleResource.class);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/logging.adoc:52
#, no-wrap
msgid ""
"    @GET\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String hello() {\n"
"        LOG.info(\"Hello\");\n"
"        return \"hello\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/logging.adoc:56
msgid "While JBoss Logging routes log messages into JBoss Log Manager directly, one of your libraries might rely on a different logging API.  In such cases, you need to use a xref:logging-apis[logging adapter] to ensure that its log messages are routed to JBoss Log Manager as well."
msgstr ""

#. type: Title ==
#: upstream/_guides/logging.adoc:57
#, no-wrap
msgid "Get an application logger"
msgstr ""

#. type: Plain text
#: upstream/_guides/logging.adoc:60
msgid "In Quarkus, the most common ways to obtain an application logger are by:"
msgstr ""

#. type: Plain text
#: upstream/_guides/logging.adoc:62
#, fuzzy
msgid "xref:declaring-a-logger-field[Declaring a logger field]"
msgstr "注入一个记录器"

#. type: Plain text
#: upstream/_guides/logging.adoc:63
msgid "xref:simplified-logging[Simplified logging]"
msgstr ""

#. type: Plain text
#: upstream/_guides/logging.adoc:64
msgid "xref:injection-of-a-configured-logger[Injecting a configured logger]"
msgstr ""

#. type: Title ===
#: upstream/_guides/logging.adoc:66
#, fuzzy, no-wrap
msgid "Declaring a logger field"
msgstr "注入一个记录器"

#. type: Plain text
#: upstream/_guides/logging.adoc:69
msgid "With this classic approach, you use a specific API to obtain a logger instance, store it in a static field of a class, and call logging operations upon this instance."
msgstr ""

#. type: Plain text
#: upstream/_guides/logging.adoc:71
msgid "The same flow can be applied with any of the xref:logging-apis[supported logging APIs]."
msgstr ""

#. type: Block title
#: upstream/_guides/logging.adoc:72
#, no-wrap
msgid "An example of storing a logger instance into a static field by using the JBoss Logging API:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/logging.adoc:77
#, no-wrap
msgid ""
"package com.example;\n"
"import org.jboss.logging.Logger;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/logging.adoc:80
#, no-wrap
msgid ""
"public class MyService {\n"
"    private static final Logger log = Logger.getLogger(MyService.class); <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/logging.adoc:85
#, no-wrap
msgid ""
"    public void doSomething() {\n"
"        log.info(\"It works!\"); <2>\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/logging.adoc:87
msgid "Define the logger field."
msgstr ""

#. type: Plain text
#: upstream/_guides/logging.adoc:88
msgid "Invoke the desired logging methods on the `log` object."
msgstr ""

#. type: Title ===
#: upstream/_guides/logging.adoc:91
#, fuzzy, no-wrap
msgid "Simplified logging"
msgstr "支持的日志API"

#. type: Plain text
#: upstream/_guides/logging.adoc:95
msgid "Quarkus simplifies logging by automatically adding logger fields to classes that use `io.quarkus.logging.Log`.  This eliminates the need for repetitive boilerplate code and enhances logging setup convenience."
msgstr ""

#. type: Block title
#: upstream/_guides/logging.adoc:96
#, no-wrap
msgid "An example of simplified logging using static method calls:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/logging.adoc:100
#, no-wrap
msgid "package com.example;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/logging.adoc:102
#, no-wrap
msgid "import io.quarkus.logging.Log; // <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/logging.adoc:108
#, no-wrap
msgid ""
"class MyService { // <2>\n"
"    public void doSomething() {\n"
"        Log.info(\"Simple!\"); // <3>\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/logging.adoc:110
#, fuzzy
msgid "The `io.quarkus.logging.Log` class contains the same methods as JBoss Logging, except that they are `static`."
msgstr " `io.quarkus.logging.Log` 类反映了JBoss Logging API，除了所有方法都是 `static` 。"

#. type: Plain text
#: upstream/_guides/logging.adoc:114
#, fuzzy
msgid "Note that the class does not declare a logger field.  This is because during application build, a `private static final org.jboss.logging.Logger` field is created automatically in each class that uses the `Log` API.  The fully qualified name of the class that calls the `Log` methods is used as a logger name.  In this example, the logger name would be `com.example.MyService`."
msgstr "请注意，该类并没有声明一个记录器字段。这是因为在应用程序构建期间，在每个使用 `Log` API的类中，会自动创建一个 `private static final org.jboss.logging.Logger` 字段。调用 `Log` 方法的类的完全限定名称被用作记录器名称。在这个例子中，记录仪的名字是 `com.example.MyService` 。"

#. type: Plain text
#: upstream/_guides/logging.adoc:115
#, fuzzy
msgid "Finally, all calls to `Log` methods are rewritten to regular JBoss Logging calls on the logger field during the application build."
msgstr "最后，在应用程序的构建过程中，所有对 `Log` 方法的调用都被改写为对logger字段的常规JBoss Logging调用。"

#. type: Plain text
#: upstream/_guides/logging.adoc:118
#, fuzzy
msgid "Only use the `Log` API in application classes, not in external dependencies.  `Log` method calls that are not processed by Quarkus at build time will throw an exception."
msgstr "只在应用类中使用 `Log` API，而不是在外部依赖中使用。 `Log` 方法调用如果在构建时没有被Quarkus处理，将抛出一个异常。"

#. type: Title ===
#: upstream/_guides/logging.adoc:121
#, fuzzy, no-wrap
msgid "Injecting a configured logger"
msgstr "注入一个记录器"

#. type: Plain text
#: upstream/_guides/logging.adoc:124
msgid "The injection of a configured `org.jboss.logging.Logger` logger instance with the `@Inject` annotation is another alternative to adding an application logger, but is applicable only to CDI beans."
msgstr ""

#. type: Plain text
#: upstream/_guides/logging.adoc:127
msgid "You can use `@Inject Logger log`, where the logger gets named after the class you inject it to, or `@Inject @LoggerName(\"...\") Logger log`, where the logger will receive the specified name.  Once injected, you can use the `log` object to invoke logging methods."
msgstr ""

#. type: Block title
#: upstream/_guides/logging.adoc:128
#, no-wrap
msgid "An example of two different types of logger injection:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/logging.adoc:135
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"class SimpleBean {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/logging.adoc:138
#, no-wrap
msgid ""
"   @Inject\n"
"   Logger log; <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/logging.adoc:141
#, no-wrap
msgid ""
"   @LoggerName(\"foo\")\n"
"   Logger fooLog; <2>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/logging.adoc:147
#, no-wrap
msgid ""
"   public void ping() {\n"
"     log.info(\"Simple!\");\n"
"     fooLog.info(\"Goes to _foo_ logger!\");\n"
"   }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/logging.adoc:149
#, fuzzy
msgid "The FQCN of the declaring class is used as a logger name, for example, `org.jboss.logging.Logger.getLogger(SimpleBean.class)` will be used."
msgstr "声明类的FQCN被用作记录器的名称，即 `org.jboss.logging.Logger.getLogger(SimpleBean.class)` ，将被使用。"

#. type: Plain text
#: upstream/_guides/logging.adoc:150
#, fuzzy
msgid "In this case, the name _foo_ is used as a logger name, for example,`org.jboss.logging.Logger.getLogger(\"foo\")` will be used."
msgstr "在这种情况下，名称 _foo_ 被用作记录器名称，即 `org.jboss.logging.Logger.getLogger(\"foo\")` 。"

#. type: Plain text
#: upstream/_guides/logging.adoc:152
#, fuzzy
msgid "The logger instances are cached internally. Therefore, when a logger is injected, for example, into a `@RequestScoped` bean, it is shared for all bean instances to avoid possible performance penalties associated with logger instantiation."
msgstr "记录器实例是内部缓存的。因此，注入到 `@RequestScoped` bean中的日志器被所有bean实例共享，以避免与日志器实例化相关的可能的性能损失。"

#. type: Title ==
#: upstream/_guides/logging.adoc:154
#, fuzzy, no-wrap
msgid "Use log levels"
msgstr "日志水平"

#. type: Plain text
#: upstream/_guides/logging.adoc:157
msgid "Quarkus provides different log levels, which helps developers control the amount of information logged based on the severity of the events."
msgstr ""

#. type: Block title
#: upstream/_guides/logging.adoc:158
#, fuzzy, no-wrap
msgid "Log levels used by Quarkus"
msgstr "这些是Quarkus使用的日志级别。"

#. type: Labeled list
#: upstream/_guides/logging.adoc:161
#, fuzzy, no-wrap
msgid "OFF"
msgstr "关闭"

#. type: Plain text
#: upstream/_guides/logging.adoc:162
#, fuzzy
msgid "A special level to use in configuration in order to turn off logging."
msgstr "特殊级别，关闭日志记录。"

#. type: Table
#: upstream/_guides/logging.adoc:162 upstream/_guides/logging.adoc:185
#, fuzzy, no-wrap
msgid "FATAL"
msgstr "死亡"

#. type: Plain text
#: upstream/_guides/logging.adoc:163
#, fuzzy
msgid "A critical service failure or complete inability to service requests of any kind."
msgstr "严重的服务故障/完全无法为任何类型的请求提供服务。"

#. type: Table
#: upstream/_guides/logging.adoc:163 upstream/_guides/logging.adoc:187
#, fuzzy, no-wrap
msgid "ERROR"
msgstr "错误"

#. type: Plain text
#: upstream/_guides/logging.adoc:164
#, fuzzy
msgid "A significant disruption in a request or the inability to service a request."
msgstr "一项请求的重大中断或无法为一项请求提供服务。"

#. type: Table
#: upstream/_guides/logging.adoc:164 upstream/_guides/logging.adoc:189
#, fuzzy, no-wrap
msgid "WARN"
msgstr "警告"

#. type: Plain text
#: upstream/_guides/logging.adoc:165
#, fuzzy
msgid "A non-critical service error or problem that may not require immediate correction."
msgstr "非关键性的服务错误或问题，可能不需要立即纠正。"

#. type: Table
#: upstream/_guides/logging.adoc:165 upstream/_guides/logging.adoc:191
#: upstream/_guides/logging.adoc:193 upstream/_guides/logging.adoc:281
#, fuzzy, no-wrap
msgid "INFO"
msgstr "信息"

#. type: Plain text
#: upstream/_guides/logging.adoc:166
#, fuzzy
msgid "Service lifecycle events or important related very low-frequency information."
msgstr "服务生命周期事件或重要的相关极低频信息。"

#. type: Table
#: upstream/_guides/logging.adoc:166 upstream/_guides/logging.adoc:195
#: upstream/_guides/logging.adoc:262 upstream/_guides/logging.adoc:282
#, fuzzy, no-wrap
msgid "DEBUG"
msgstr "DEBUG"

#. type: Plain text
#: upstream/_guides/logging.adoc:167
#, fuzzy
msgid "Messages that convey extra information regarding lifecycle or non-request-bound events, useful for debugging."
msgstr "传达有关生命周期或非请求约束事件的额外信息的消息，这可能对调试有帮助。"

#. type: Table
#: upstream/_guides/logging.adoc:167 upstream/_guides/logging.adoc:197
#, fuzzy, no-wrap
msgid "TRACE"
msgstr "追踪"

#. type: Plain text
#: upstream/_guides/logging.adoc:168
#, fuzzy
msgid "Messages that convey extra per-request debugging information that may be very high frequency."
msgstr "传达额外的每个请求的调试信息的消息，可能是非常高的频率。"

#. type: Labeled list
#: upstream/_guides/logging.adoc:168
#, fuzzy, no-wrap
msgid "ALL"
msgstr "所有"

#. type: Plain text
#: upstream/_guides/logging.adoc:169
#, fuzzy
msgid "A special level to use in configuration to turn on logging for all messages, including custom levels."
msgstr "所有信息的特殊级别，包括自定义级别。"

#. type: Plain text
#: upstream/_guides/logging.adoc:171
#, fuzzy
msgid "You can also configure the following levels for applications and libraries that use link:https://docs.oracle.com/javase/8/docs/api/java/util/logging/Level.html[`java.util.logging`]:"
msgstr "此外，可以使用以下级别为应用程序和库配置 link:https://docs.oracle.com/javase/8/docs/api/java/util/logging/Level.html[`java.util.logging`] :"

#. type: Table
#: upstream/_guides/logging.adoc:173 upstream/_guides/logging.adoc:189
#, fuzzy, no-wrap
msgid "SEVERE"
msgstr "严重的"

#. type: Plain text
#: upstream/_guides/logging.adoc:174
#, fuzzy
msgid "Same as **ERROR**."
msgstr "与 *ERROR* 相同。"

#. type: Table
#: upstream/_guides/logging.adoc:174 upstream/_guides/logging.adoc:191
#, fuzzy, no-wrap
msgid "WARNING"
msgstr "警告"

#. type: Plain text
#: upstream/_guides/logging.adoc:175
#, fuzzy
msgid "Same as **WARN**."
msgstr "与 *WARN* 相同。"

#. type: Table
#: upstream/_guides/logging.adoc:175 upstream/_guides/logging.adoc:195
#, fuzzy, no-wrap
msgid "CONFIG"
msgstr "配置"

#. type: Plain text
#: upstream/_guides/logging.adoc:176
#, fuzzy
msgid "Service configuration information."
msgstr "服务配置信息。"

#. type: Table
#: upstream/_guides/logging.adoc:176 upstream/_guides/logging.adoc:197
#, fuzzy, no-wrap
msgid "FINE"
msgstr "精细"

#. type: Plain text
#: upstream/_guides/logging.adoc:177
#, fuzzy
msgid "Same as **DEBUG**."
msgstr "与 *DEBUG* 相同。"

#. type: Table
#: upstream/_guides/logging.adoc:177 upstream/_guides/logging.adoc:199
#, fuzzy, no-wrap
msgid "FINER"
msgstr "罚款"

#. type: Plain text
#: upstream/_guides/logging.adoc:178
#, fuzzy
msgid "Same as **TRACE**."
msgstr "与 *TRACE* 相同。"

#. type: Table
#: upstream/_guides/logging.adoc:178 upstream/_guides/logging.adoc:200
#, fuzzy, no-wrap
msgid "FINEST"
msgstr "最好的"

#. type: Plain text
#: upstream/_guides/logging.adoc:179
#, fuzzy
msgid "Increased debug output compared to `TRACE`, which might have a higher frequency."
msgstr "事件比 `TRACE` 更多的调试信息，也许频率还更高。"

#. type: Block title
#: upstream/_guides/logging.adoc:180
#, no-wrap
msgid "The mapping between the levels"
msgstr ""

#. type: Table
#: upstream/_guides/logging.adoc:183
#, no-wrap
msgid "Numerical level value"
msgstr ""

#. type: Table
#: upstream/_guides/logging.adoc:183
#, no-wrap
msgid "Standard level name"
msgstr ""

#. type: Table
#: upstream/_guides/logging.adoc:185
#, no-wrap
msgid "Equivalent `java.util.logging` (JUL) level name"
msgstr ""

#. type: Table
#: upstream/_guides/logging.adoc:185
#, no-wrap
msgid "1100"
msgstr ""

#. type: Table
#: upstream/_guides/logging.adoc:187 upstream/_guides/logging.adoc:193
#: upstream/_guides/logging.adoc:199
#, no-wrap
msgid "Not applicable"
msgstr ""

#. type: Table
#: upstream/_guides/logging.adoc:187
#, no-wrap
msgid "1000"
msgstr ""

#. type: Table
#: upstream/_guides/logging.adoc:189
#, no-wrap
msgid "900"
msgstr ""

#. type: Table
#: upstream/_guides/logging.adoc:191
#, no-wrap
msgid "800"
msgstr ""

#. type: Table
#: upstream/_guides/logging.adoc:193
#, no-wrap
msgid "700"
msgstr ""

#. type: Table
#: upstream/_guides/logging.adoc:195
#, no-wrap
msgid "500"
msgstr ""

#. type: Table
#: upstream/_guides/logging.adoc:197
#, no-wrap
msgid "400"
msgstr ""

#. type: Table
#: upstream/_guides/logging.adoc:199
#, no-wrap
msgid "300"
msgstr ""

#. type: Title ==
#: upstream/_guides/logging.adoc:203
#, no-wrap
msgid "Configure the log level, category, and format"
msgstr ""

#. type: Plain text
#: upstream/_guides/logging.adoc:206
msgid "JBoss Logging is built into Quarkus and provides link:https://quarkus.io/developer-joy/[unified configuration] for all xref:logging-apis[supported logging APIs]."
msgstr ""

#. type: Plain text
#: upstream/_guides/logging.adoc:208
#, fuzzy
msgid "Configure the runtime logging in the `application.properties` file."
msgstr "然后，所有的日志配置将在你的 `application.properties` 。"

#. type: Block title
#: upstream/_guides/logging.adoc:209
#, fuzzy, no-wrap
msgid "An example of how you can set the default log level to `INFO` logging and include Hibernate `DEBUG` logs:"
msgstr "运行时日志是在 `application.properties` 文件中配置的，例如，将默认日志级别设置为 `INFO` 日志，并包括Hibernate `DEBUG` 日志。"

#. type: delimited block -
#: upstream/_guides/logging.adoc:214
#, no-wrap
msgid ""
"quarkus.log.level=INFO\n"
"quarkus.log.category.\"org.hibernate\".level=DEBUG\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/logging.adoc:218
msgid "When you set the log level to below `DEBUG`, you must also adjust the minimum log level.  This setting is either global, using the `quarkus.log.min-level` configuration property, or per category:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/logging.adoc:222
#, fuzzy, no-wrap
msgid "quarkus.log.category.\"org.hibernate\".min-level=TRACE\n"
msgstr "quarkus.log.category.\"<category-name>\".min-leve"

#. type: Plain text
#: upstream/_guides/logging.adoc:226
msgid "This sets a floor level for which Quarkus needs to generate supporting code.  The minimum log level must be set at build time so that Quarkus can open the door to optimization opportunities where logging on unusable levels can be elided."
msgstr ""

#. type: Block title
#: upstream/_guides/logging.adoc:227
#, no-wrap
msgid "An example from native execution:"
msgstr ""

#. type: Plain text
#: upstream/_guides/logging.adoc:230
msgid "Setting `INFO` as the minimum logging level sets lower-level checks, such as `isTraceEnabled`, to `false`.  This identifies code like `if(logger.isDebug()) callMethod();` that will never be executed and mark it as \"dead.\""
msgstr ""

#. type: delimited block =
#: upstream/_guides/logging.adoc:234
#, fuzzy
msgid "If you add these properties on the command line, ensure the `\"` character is escaped properly:"
msgstr "如果你是通过命令行添加这些属性，请确保 `\"` 是转义的。例如， `-Dquarkus.log.category.\\\"org.hibernate\\\".level=TRACE` 。"

#. type: delimited block -
#: upstream/_guides/logging.adoc:236
#, fuzzy, no-wrap
msgid "-Dquarkus.log.category.\\\"org.hibernate\\\".level=TRACE\n"
msgstr "quarkus.log.category.\"<category-name>\".leve"

#. type: delimited block =
#: upstream/_guides/logging.adoc:240
#, fuzzy
msgid "All potential properties are listed in the xref:loggingConfigurationReference[logging configuration reference] section."
msgstr "所有可能的属性都列在 link:#loggingConfigurationReference[日志配置参考] 中。"

#. type: Title ===
#: upstream/_guides/logging.adoc:242
#, fuzzy, no-wrap
msgid "Logging categories"
msgstr "记录类别"

#. type: delimited block =
#: upstream/_guides/logging.adoc:246
msgid "Logging is done on a per-category basis, with each category being configured independently.  A category configuration recursively applies to all subcategories of that category unless there is a more specific matching sub-category configuration."
msgstr ""

#. type: delimited block =
#: upstream/_guides/logging.adoc:249
msgid "The parent of all logging categories is called the \"root category\".  This category, being the ultimate parent, may contain configuration which applies globally to all other categories. This includes the globally configured handlers and formatters."
msgstr ""

#. type: delimited block =
#: upstream/_guides/logging.adoc:251
msgid "Thus, configurations made under `quarkus.log.console.*`, `quarkus.log.file.*`, and `quarkus.log.syslog.*`, are global and apply for all categories. For more information, see xref:loggingConfigurationReference[Logging configuration reference]."
msgstr ""

#. type: delimited block =
#: upstream/_guides/logging.adoc:253
msgid "If you want to configure something extra for a specific category, create a named handler like `quarkus.log.handler.[console|file|syslog].<your-handler-name>.*` and set it up for that category by using `quarkus.log.category.<my-category>.handlers`."
msgstr ""

#. type: delimited block =
#: upstream/_guides/logging.adoc:255
msgid "An example use case can be a desire to use a different timestamp format for log messages which are saved to a file than the format used for other handlers."
msgstr ""

#. type: delimited block =
#: upstream/_guides/logging.adoc:257
msgid "For further demonstration, see the outputs of the xref:category-named-handlers-example[Attaching named handlers to a category] example."
msgstr ""

#. type: Table
#: upstream/_guides/logging.adoc:260 upstream/_guides/logging.adoc:280
#, fuzzy, no-wrap
msgid "Property Nam"
msgstr "财产南"

#. type: Table
#: upstream/_guides/logging.adoc:260 upstream/_guides/logging.adoc:280
#, fuzzy, no-wrap
msgid "Default"
msgstr "默认情况下"

#. type: Table
#: upstream/_guides/logging.adoc:261 upstream/_guides/logging.adoc:281
#: upstream/_guides/logging.adoc:306
#, fuzzy, no-wrap
msgid "Description"
msgstr "描述"

#. type: Table
#: upstream/_guides/logging.adoc:261
#, fuzzy, no-wrap
msgid "quarkus.log.category.\"<category-name>\".leve"
msgstr "quarkus.log.category.\"<category-name>\".leve"

#. type: Table
#: upstream/_guides/logging.adoc:261
#, fuzzy, no-wrap
msgid "INFO footnote:[Some extensions may define customized default log levels for certain categories, in order to reduce log noise by default. Setting the log level in configuration will override any extension-defined log levels.]"
msgstr "INFO[ link:#_footnotedef_1[1, id=\"_footnoteref_1\", class=\"footnote\", title=\"View footnote.\"]]"

#. type: Table
#: upstream/_guides/logging.adoc:262
#, fuzzy, no-wrap
msgid "The level to use to configure the category named `<category-name>`. The quotes are necessary."
msgstr "用来配置名为 `<category-name>` 的类别的级别。引号是必要的。"

#. type: Table
#: upstream/_guides/logging.adoc:262
#, fuzzy, no-wrap
msgid "quarkus.log.category.\"<category-name>\".min-leve"
msgstr "quarkus.log.category.\"<category-name>\".min-leve"

#. type: Table
#: upstream/_guides/logging.adoc:263
#, fuzzy, no-wrap
msgid "The minimum logging level to use to configure the category named `<category-name>`. The quotes are necessary."
msgstr "用于配置类别的最小日志级别，名为 `<category-name>` 。引号是必要的。"

#. type: Table
#: upstream/_guides/logging.adoc:263
#, fuzzy, no-wrap
msgid "quarkus.log.category.\"<category-name>\".use-parent-handler"
msgstr "quarkus.log.category.\"<category-name>\".use-parent-handler"

#. type: Table
#: upstream/_guides/logging.adoc:263
#, fuzzy, no-wrap
msgid "tru"
msgstr "妗妗"

#. type: Table
#: upstream/_guides/logging.adoc:264
#, fuzzy, no-wrap
msgid "Specify whether this logger should send its output to its parent logger."
msgstr "指定此记录仪是否应将其输出发送到其父记录仪。"

#. type: Table
#: upstream/_guides/logging.adoc:264
#, fuzzy, no-wrap
msgid "quarkus.log.category.\"<category-name>\".handlers=[<handler>]"
msgstr "quarkus.log.category.\"<category-name>\".handlers=[<handler>]"

#. type: Table
#: upstream/_guides/logging.adoc:264
#, fuzzy, no-wrap
msgid "empty footnote:[By default, the configured category gets the same handlers attached as the one on the root logger.]"
msgstr "空[ link:#_footnotedef_1[1, id=\"_footnoteref_1\", class=\"footnote\", title=\"View footnote.\"]]"

#. type: Table
#: upstream/_guides/logging.adoc:265
#, fuzzy, no-wrap
msgid "The names of the handlers that you want to attach to a specific category."
msgstr "你想附加到一个特定类别的处理程序的名称。"

#. type: delimited block =
#: upstream/_guides/logging.adoc:271
msgid "The `.` symbol separates the specific parts in the configuration property.  The quotes in the property name are used as a required escape to keep category specifications, such as `quarkus.log.category.\"io.quarkus.smallrye.jwt\".level=TRACE`, intact."
msgstr ""

#. type: Title ===
#: upstream/_guides/logging.adoc:274
#, fuzzy, no-wrap
msgid "Root logger configuration"
msgstr "根记录仪配置"

#. type: Plain text
#: upstream/_guides/logging.adoc:277
#, fuzzy
msgid "The root logger category is handled separately, and is configured by using the following properties:"
msgstr "根记录器类别被单独处理，并通过以下属性进行配置。"

#. type: Table
#: upstream/_guides/logging.adoc:281
#, fuzzy, no-wrap
msgid "quarkus.log.leve"
msgstr "quarkus.log.leve"

#. type: Table
#: upstream/_guides/logging.adoc:282
#, fuzzy, no-wrap
msgid "The default log level for every log category."
msgstr "每个日志类别的默认日志级别。"

#. type: Table
#: upstream/_guides/logging.adoc:282
#, fuzzy, no-wrap
msgid "quarkus.log.min-leve"
msgstr "quarkus.log.min-leve"

#. type: Table
#: upstream/_guides/logging.adoc:283
#, fuzzy, no-wrap
msgid "The default minimum log level for every log category."
msgstr "每个日志类别的默认最小日志级别。"

#. type: Plain text
#: upstream/_guides/logging.adoc:286
msgid "The parent category is examined if no level configuration exists for a given logger category."
msgstr ""

#. type: Plain text
#: upstream/_guides/logging.adoc:287
msgid "The root logger configuration is used if no specific configurations are provided for the category and any of its parent categories."
msgstr ""

#. type: delimited block =
#: upstream/_guides/logging.adoc:291
msgid "Although the root logger's handlers are usually configured directly via `quarkus.log.console`, `quarkus.log.file` and `quarkus.log.syslog`, it can nonetheless have additional named handlers attached to it using the `quarkus.log.handlers` property."
msgstr ""

#. type: Title ==
#: upstream/_guides/logging.adoc:294
#, fuzzy, no-wrap
msgid "Logging format"
msgstr "记录格式"

#. type: Plain text
#: upstream/_guides/logging.adoc:297
#, fuzzy
msgid "Quarkus uses a pattern-based logging formatter that generates human-readable text logs by default, but you can also configure the format for each log handler by using a dedicated property."
msgstr "默认情况下，Quarkus使用基于模式的日志格式化，生成人类可读的文本日志。"

#. type: Plain text
#: upstream/_guides/logging.adoc:299
#, fuzzy
msgid "For the console handler, the property is `quarkus.log.console.format`."
msgstr "你可以通过一个专门的属性为每个日志处理程序配置格式。对于控制台处理程序，该属性是 `quarkus.log.console.format` 。"

#. type: Plain text
#: upstream/_guides/logging.adoc:301
#, fuzzy
msgid "The logging format string supports the following symbols:"
msgstr "日志格式字符串支持以下符号。"

#. type: Table
#: upstream/_guides/logging.adoc:304
#, fuzzy, no-wrap
msgid "Symbo"
msgstr "シンボ"

#. type: Table
#: upstream/_guides/logging.adoc:304
#, fuzzy, no-wrap
msgid "Summary"
msgstr "摘要"

#. type: Table
#: upstream/_guides/logging.adoc:306
#, fuzzy, no-wrap
msgid "%%"
msgstr "%%"

#. type: Table
#: upstream/_guides/logging.adoc:306
#, fuzzy, no-wrap
msgid "`%`"
msgstr " `%` "

#. type: Table
#: upstream/_guides/logging.adoc:307
#, fuzzy, no-wrap
msgid "Renders a simple `%` character."
msgstr "渲染一个简单的 `%` 字符。"

#. type: Table
#: upstream/_guides/logging.adoc:307
#, fuzzy, no-wrap
msgid "%c"
msgstr "%c"

#. type: Table
#: upstream/_guides/logging.adoc:307
#, fuzzy, no-wrap
msgid "Category"
msgstr "类别"

#. type: Table
#: upstream/_guides/logging.adoc:308
#, fuzzy, no-wrap
msgid "Renders the category name."
msgstr "渲染类别名称。"

#. type: Table
#: upstream/_guides/logging.adoc:308
#, fuzzy, no-wrap
msgid "%C"
msgstr "%C"

#. type: Table
#: upstream/_guides/logging.adoc:308
#, fuzzy, no-wrap
msgid "Source clas"
msgstr "来源clas"

#. type: Table
#: upstream/_guides/logging.adoc:309
#, fuzzy, no-wrap
msgid "Renders the source class name.footnote:calc[Format sequences which examine caller information may affect performance]"
msgstr "渲染源类名称。[ link:#_footnotedef_1[1, id=\"_footnoteref_1\", class=\"footnote\", title=\"View footnote.\"]]"

#. type: Table
#: upstream/_guides/logging.adoc:309
#, fuzzy, no-wrap
msgid "%d{xxx}"
msgstr "%d{xxx}"

#. type: Table
#: upstream/_guides/logging.adoc:309
#, fuzzy, no-wrap
msgid "Dat"
msgstr "达"

#. type: Table
#: upstream/_guides/logging.adoc:310
#, fuzzy, no-wrap
msgid "Renders a date with the given date format string, which uses the syntax defined by `java.text.SimpleDateFormat`."
msgstr "用给定的日期格式字符串渲染一个日期，它使用由 `java.text.SimpleDateFormat` 定义的语法。"

#. type: Table
#: upstream/_guides/logging.adoc:310 upstream/_guides/logging.adoc:312
#: upstream/_guides/logging.adoc:315 upstream/_guides/logging.adoc:317
#: upstream/_guides/logging.adoc:323
#, fuzzy, no-wrap
msgid "%"
msgstr "%"

#. type: Table
#: upstream/_guides/logging.adoc:310
#, fuzzy, no-wrap
msgid "Exception"
msgstr "例外"

#. type: Table
#: upstream/_guides/logging.adoc:311
#, fuzzy, no-wrap
msgid "Renders the thrown exception, if any."
msgstr "呈现被抛出的异常，如果有的话。"

#. type: Table
#: upstream/_guides/logging.adoc:311
#, fuzzy, no-wrap
msgid "%F"
msgstr "%F"

#. type: Table
#: upstream/_guides/logging.adoc:311
#, fuzzy, no-wrap
msgid "Source fil"
msgstr "来源：中国新闻网"

#. type: Table
#: upstream/_guides/logging.adoc:312
#, fuzzy, no-wrap
msgid "Renders the source file name.footnote:calc[]"
msgstr "渲染源文件名。[计算]"

#. type: Table
#: upstream/_guides/logging.adoc:312
#, fuzzy, no-wrap
msgid "Host nam"
msgstr "主持人姓名"

#. type: Table
#: upstream/_guides/logging.adoc:313
#, fuzzy, no-wrap
msgid "Renders the system simple host name."
msgstr "渲染系统的简单主机名。"

#. type: Table
#: upstream/_guides/logging.adoc:313
#, fuzzy, no-wrap
msgid "%H"
msgstr "%H"

#. type: Table
#: upstream/_guides/logging.adoc:313
#, fuzzy, no-wrap
msgid "Qualified host nam"
msgstr "合格的主机名"

#. type: Table
#: upstream/_guides/logging.adoc:314
#, fuzzy, no-wrap
msgid "Renders the system's fully qualified host name, which may be the same as the simple host name, depending on OS configuration."
msgstr "呈现系统的完全合格的主机名，它可能与简单的主机名相同，这取决于操作系统的配置。"

#. type: Table
#: upstream/_guides/logging.adoc:314
#, fuzzy, no-wrap
msgid "%i"
msgstr "%i"

#. type: Table
#: upstream/_guides/logging.adoc:314
#, fuzzy, no-wrap
msgid "Process ID"
msgstr "过程标识"

#. type: Table
#: upstream/_guides/logging.adoc:315
#, fuzzy, no-wrap
msgid "Render the current process PID."
msgstr "渲染当前进程的PID。"

#. type: Table
#: upstream/_guides/logging.adoc:315
#, fuzzy, no-wrap
msgid "Source location"
msgstr "来源地点"

#. type: Table
#: upstream/_guides/logging.adoc:316
#, fuzzy, no-wrap
msgid "Renders the source location information, which includes source file name, line number, class name, and method name.footnote:calc[]"
msgstr "渲染源码位置信息，包括源码文件名、行数、类名和方法名。[计算]"

#. type: Table
#: upstream/_guides/logging.adoc:316
#, fuzzy, no-wrap
msgid "%L"
msgstr "%L"

#. type: Table
#: upstream/_guides/logging.adoc:316
#, fuzzy, no-wrap
msgid "Source lin"
msgstr "来源于林"

#. type: Table
#: upstream/_guides/logging.adoc:317
#, fuzzy, no-wrap
msgid "Renders the source line number.footnote:calc[]"
msgstr "渲染源的行数。[计算]"

#. type: Table
#: upstream/_guides/logging.adoc:317
#, fuzzy, no-wrap
msgid "Full Messag"
msgstr "全部信息"

#. type: Table
#: upstream/_guides/logging.adoc:318
#, fuzzy, no-wrap
msgid "Renders the log message plus exception (if any)."
msgstr "渲染日志信息和异常（如果有的话）。"

#. type: Table
#: upstream/_guides/logging.adoc:318
#, fuzzy, no-wrap
msgid "%M"
msgstr "%M"

#. type: Table
#: upstream/_guides/logging.adoc:318
#, fuzzy, no-wrap
msgid "Source metho"
msgstr "来源：中国新闻网"

#. type: Table
#: upstream/_guides/logging.adoc:319
#, fuzzy, no-wrap
msgid "Renders the source method name.footnote:calc[]"
msgstr "渲染源方法名称。[计算]"

#. type: Table
#: upstream/_guides/logging.adoc:319
#, fuzzy, no-wrap
msgid "%n"
msgstr "%n"

#. type: Table
#: upstream/_guides/logging.adoc:319
#, fuzzy, no-wrap
msgid "Newlin"
msgstr "纽林"

#. type: Table
#: upstream/_guides/logging.adoc:320
#, fuzzy, no-wrap
msgid "Renders the platform-specific line separator string."
msgstr "渲染平台特定的行分隔符字符串。"

#. type: Table
#: upstream/_guides/logging.adoc:320
#, fuzzy, no-wrap
msgid "%N"
msgstr "%N"

#. type: Table
#: upstream/_guides/logging.adoc:320
#, fuzzy, no-wrap
msgid "Process nam"
msgstr "工艺名称"

#. type: Table
#: upstream/_guides/logging.adoc:321
#, fuzzy, no-wrap
msgid "Render the name of the current process."
msgstr "渲染当前进程的名称。"

#. type: Table
#: upstream/_guides/logging.adoc:321
#, fuzzy, no-wrap
msgid "%p"
msgstr "%p"

#. type: Table
#: upstream/_guides/logging.adoc:321
#, fuzzy, no-wrap
msgid "Leve"
msgstr "乐视网"

#. type: Table
#: upstream/_guides/logging.adoc:322
#, fuzzy, no-wrap
msgid "Render the log level of the message."
msgstr "渲染消息的日志级别。"

#. type: Table
#: upstream/_guides/logging.adoc:322
#, fuzzy, no-wrap
msgid "%r"
msgstr "%r"

#. type: Table
#: upstream/_guides/logging.adoc:322
#, fuzzy, no-wrap
msgid "Relative tim"
msgstr "相对时间"

#. type: Table
#: upstream/_guides/logging.adoc:323
#, fuzzy, no-wrap
msgid "Render the time in milliseconds since the start of the application log."
msgstr "渲染自应用程序日志开始以来的时间，单位为毫秒。"

#. type: Table
#: upstream/_guides/logging.adoc:323
#, fuzzy, no-wrap
msgid "Simple messag"
msgstr "简单的信息"

#. type: Table
#: upstream/_guides/logging.adoc:324
#, fuzzy, no-wrap
msgid "Renders just the log message, with no exception trace."
msgstr "只显示日志信息，没有异常跟踪。"

#. type: Table
#: upstream/_guides/logging.adoc:324
#, fuzzy, no-wrap
msgid "%t"
msgstr "%t"

#. type: Table
#: upstream/_guides/logging.adoc:324
#, fuzzy, no-wrap
msgid "Thread nam"
msgstr "螺纹名"

#. type: Table
#: upstream/_guides/logging.adoc:325
#, fuzzy, no-wrap
msgid "Render the thread name."
msgstr "渲染线程名称。"

#. type: Table
#: upstream/_guides/logging.adoc:325
#, fuzzy, no-wrap
msgid "%t{id}"
msgstr "%t{id}"

#. type: Table
#: upstream/_guides/logging.adoc:325
#, fuzzy, no-wrap
msgid "Thread ID"
msgstr "螺纹标识"

#. type: Table
#: upstream/_guides/logging.adoc:326
#, fuzzy, no-wrap
msgid "Render the thread ID."
msgstr "渲染线程ID。"

#. type: Table
#: upstream/_guides/logging.adoc:326
#, fuzzy, no-wrap
msgid "%z{<zone name>}"
msgstr "%z{<区名>}"

#. type: Table
#: upstream/_guides/logging.adoc:326
#, fuzzy, no-wrap
msgid "Time zon"
msgstr "时间区间"

#. type: Table
#: upstream/_guides/logging.adoc:327
#, fuzzy, no-wrap
msgid "Set the time zone of the output to `<zone name>`."
msgstr "将输出的时区设置为 `<zone name>` 。"

#. type: Table
#: upstream/_guides/logging.adoc:327
#, fuzzy, no-wrap
msgid "%X{<MDC property name>}"
msgstr "%X{<<MDC属性名称>>}。"

#. type: Table
#: upstream/_guides/logging.adoc:327
#, fuzzy, no-wrap
msgid "Mapped Diagnostic Context Valu"
msgstr "映射出的诊断内容价值"

#. type: Table
#: upstream/_guides/logging.adoc:328
#, fuzzy, no-wrap
msgid "Renders the value from Mapped Diagnostic Context"
msgstr "渲染映射的诊断上下文的值"

#. type: Table
#: upstream/_guides/logging.adoc:328
#, fuzzy, no-wrap
msgid "%X"
msgstr "%X"

#. type: Table
#: upstream/_guides/logging.adoc:328
#, fuzzy, no-wrap
msgid "Mapped Diagnostic Context Value"
msgstr "映射的诊断语境值"

#. type: Table
#: upstream/_guides/logging.adoc:329
#, fuzzy, no-wrap
msgid "Renders all the values from Mapped Diagnostic Context in format {property.key=property.value}"
msgstr "以{property.key=property.value}的格式渲染映射的诊断上下文的所有值。"

#. type: Table
#: upstream/_guides/logging.adoc:329
#, fuzzy, no-wrap
msgid "%x"
msgstr "%x"

#. type: Table
#: upstream/_guides/logging.adoc:329
#, fuzzy, no-wrap
msgid "Nested Diagnostics context value"
msgstr "嵌套诊断的背景值"

#. type: Table
#: upstream/_guides/logging.adoc:330
#, fuzzy, no-wrap
msgid "Renders all the values from Nested Diagnostics Context in format {value1.value2}"
msgstr "以{value1.value2}的格式渲染来自嵌套诊断上下文的所有值。"

#. type: Title ===
#: upstream/_guides/logging.adoc:334
#, fuzzy, no-wrap
msgid "Alternative console logging formats"
msgstr "替代的控制台日志格式"

#. type: Plain text
#: upstream/_guides/logging.adoc:337
#, fuzzy
msgid "Changing the console log format is useful, for example, when the console output of the Quarkus application is captured by a service that processes and stores the log information for later analysis."
msgstr "它可以改变控制台日志的输出格式。这在Quarkus应用程序的输出被一个服务捕获的环境中可能很有用，例如，该服务可以处理和存储日志信息供以后分析。"

#. type: Title ====
#: upstream/_guides/logging.adoc:340
#, fuzzy, no-wrap
msgid "JSON logging format"
msgstr "JSON日志格式"

#. type: Plain text
#: upstream/_guides/logging.adoc:343
msgid "The `quarkus-logging-json` extension may be employed to add support for the JSON logging format and its related configuration."
msgstr ""

#. type: Plain text
#: upstream/_guides/logging.adoc:345
msgid "Add this extension to your build file as the following snippet illustrates:"
msgstr ""

#. type: Block title
#: upstream/_guides/logging.adoc:347 upstream/_guides/logging.adoc:670
#: upstream/_guides/logging.adoc:687 upstream/_guides/logging.adoc:704
#: upstream/_guides/logging.adoc:726
#, fuzzy, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_guides/logging.adoc:353
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-logging-json</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_guides/logging.adoc:356 upstream/_guides/logging.adoc:679
#: upstream/_guides/logging.adoc:696 upstream/_guides/logging.adoc:713
#: upstream/_guides/logging.adoc:735
#, fuzzy, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_guides/logging.adoc:359
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-logging-json\")\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/logging.adoc:363
#, fuzzy
msgid "By default, the presence of this extension replaces the output format configuration from the console configuration, and the format string and the color settings (if any) are ignored.  The other console configuration items, including those controlling asynchronous logging and the log level, will continue to be applied."
msgstr "默认情况下，该扩展的存在将取代控制台配置中的输出格式配置。这意味着格式字符串和颜色设置（如果有的话）将被忽略。其他控制台配置项目（包括控制异步日志和日志级别的项目）将继续应用。"

#. type: Plain text
#: upstream/_guides/logging.adoc:366
#, fuzzy
msgid "For some, it will make sense to use humanly readable (unstructured) logging in dev mode and JSON logging (structured) in production mode.  This can be achieved using different profiles, as shown in the following configuration."
msgstr "对于一些人来说，在开发模式下使用人类可读的日志（非结构化），在生产模式下使用JSON日志（结构化）是有意义的。这可以使用不同的配置文件来实现，如以下配置所示。"

#. type: Block title
#: upstream/_guides/logging.adoc:367
#, fuzzy, no-wrap
msgid "Disable JSON logging in application.properties for dev and test mode"
msgstr "对于开发和测试模式，在application.properties中禁用JSON日志记录"

#. type: delimited block -
#: upstream/_guides/logging.adoc:372
#, no-wrap
msgid ""
"%dev.quarkus.log.console.json=false\n"
"%test.quarkus.log.console.json=false\n"
msgstr ""

#. type: Title =====
#: upstream/_guides/logging.adoc:374
#, fuzzy, no-wrap
msgid "Configuration"
msgstr "配置"

#. type: Plain text
#: upstream/_guides/logging.adoc:377
msgid "Configure the JSON logging extension using supported properties to customize its behavior."
msgstr ""

#. type: Plain text
#: upstream/_guides/logging.adoc:381
#, fuzzy
msgid "Enabling pretty printing might cause certain processors and JSON parsers to fail."
msgstr "启用漂亮打印可能会导致某些处理器和JSON分析器失败。"

#. type: Plain text
#: upstream/_guides/logging.adoc:384
#, fuzzy
msgid "Printing the details can be expensive as the values are retrieved from the caller.  The details include the source class name, source file name, source method name, and source line number."
msgstr "打印这些细节可能很昂贵，因为这些值是从调用者那里获取的。这些细节包括源类名称、源文件名称、源方法名称和源行号。"

#. type: Title ==
#: upstream/_guides/logging.adoc:386
#, fuzzy, no-wrap
msgid "Log handlers"
msgstr "日志处理程序"

#. type: Plain text
#: upstream/_guides/logging.adoc:390
#, fuzzy
msgid "A log handler is a logging component responsible for the emission of log events to a recipient.  Quarkus includes several different log handlers: **console**, **file**, and **syslog**."
msgstr "日志处理程序是一个负责向接收者发送日志事件的日志组件。Quarkus有三种不同的日志处理程序： *控制台* 、 *文件* 和 *syslog* 。"

#. type: Plain text
#: upstream/_guides/logging.adoc:392
msgid "The featured examples use `com.example` as a logging category."
msgstr ""

#. type: Title ===
#: upstream/_guides/logging.adoc:393
#, fuzzy, no-wrap
msgid "Console log handler"
msgstr "控制台日志处理程序"

#. type: Plain text
#: upstream/_guides/logging.adoc:396
#, fuzzy
msgid "The console log handler is enabled by default, and it directs all log events to the application's console, usually the system's `stdout`."
msgstr "控制台日志处理程序是默认启用的。它将所有的日志事件输出到你的应用程序的控制台（通常是到系统的 `stdout` ）。"

#. type: Plain text
#: upstream/_guides/logging.adoc:398 upstream/_guides/logging.adoc:428
#: upstream/_guides/logging.adoc:460
#, fuzzy
msgid "A global configuration example:"
msgstr "文件TRACE日志配置"

#. type: delimited block -
#: upstream/_guides/logging.adoc:402
#, no-wrap
msgid "quarkus.log.console.format=%d{yyyy-MM-dd HH:mm:ss} %-5p [%c] (%t) %s%e%n\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/logging.adoc:405 upstream/_guides/logging.adoc:437
#: upstream/_guides/logging.adoc:469
#, fuzzy
msgid "A per-category configuration example:"
msgstr "文件TRACE日志配置"

#. type: delimited block -
#: upstream/_guides/logging.adoc:409
#, no-wrap
msgid "quarkus.log.handler.console.my-console-handler.format=%d{yyyy-MM-dd HH:mm:ss} [com.example] %s%e%n\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/logging.adoc:412
#, no-wrap
msgid ""
"quarkus.log.category.\"com.example\".handlers=my-console-handler\n"
"quarkus.log.category.\"com.example\".use-parent-handlers=false\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/logging.adoc:415
#, fuzzy
msgid "For details about its configuration, see the xref:#quarkus-log-logging-log-config_quarkus.log.console-console-logging[console logging configuration] reference."
msgstr "关于其配置选项的细节，请参见控制台 link:#quarkus-log-logging-log-config_quarkus.log.console-console-logging[日志配置参考] 。"

#. type: Title ===
#: upstream/_guides/logging.adoc:417
#, fuzzy, no-wrap
msgid "File log handler"
msgstr "文件日志处理程序"

#. type: Plain text
#: upstream/_guides/logging.adoc:421
msgid "To log events to a file on the application's host, use the Quarkus file log handler.  The file log handler is disabled by default, so you must first enable it."
msgstr ""

#. type: Plain text
#: upstream/_guides/logging.adoc:424
msgid "The Quarkus file log handler supports log file rotation.  Log file rotation ensures effective log file management over time by maintaining a specified number of backup log files, while also keeping the primary log file up-to-date and manageable."
msgstr ""

#. type: Plain text
#: upstream/_guides/logging.adoc:426
msgid "Log file rotation ensures effective log file management over time by maintaining a specified number of backup log files, while keeping the primary log file up-to-date and manageable."
msgstr ""

#. type: delimited block -
#: upstream/_guides/logging.adoc:434
#, no-wrap
msgid ""
"quarkus.log.file.enable=true\n"
"quarkus.log.file.path=application.log\n"
"quarkus.log.file.format=%d{yyyy-MM-dd HH:mm:ss} %-5p [%c] (%t) %s%e%n\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/logging.adoc:443
#, no-wrap
msgid ""
"quarkus.log.handler.file.my-file-handler.enable=true\n"
"quarkus.log.handler.file.my-file-handler.path=application.log\n"
"quarkus.log.handler.file.my-file-handler.format=%d{yyyy-MM-dd HH:mm:ss} [com.example] %s%e%n\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/logging.adoc:446
#, no-wrap
msgid ""
"quarkus.log.category.\"com.example\".handlers=my-file-handler\n"
"quarkus.log.category.\"com.example\".use-parent-handlers=false\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/logging.adoc:449
#, fuzzy
msgid "For details about its configuration, see the xref:#quarkus-log-logging-log-config_quarkus.log.file-file-logging[file logging configuration] reference."
msgstr "有关其配置选项的详情，请参见 link:#quarkus-log-logging-log-config_quarkus.log.file-file-logging[文件记录配置参考] 。"

#. type: Title ===
#: upstream/_guides/logging.adoc:451
#, fuzzy, no-wrap
msgid "Syslog log handler"
msgstr "Syslog日志处理程序"

#. type: Plain text
#: upstream/_guides/logging.adoc:455
#, fuzzy
msgid "The syslog handler in Quarkus follows the link:https://en.wikipedia.org/wiki/Syslog[Syslog] protocol, which is used to send log messages on Unix-like systems.  It utilizes the protocol defined in link:https://tools.ietf.org/html/rfc5424[RFC 5424]."
msgstr "link:https://en.wikipedia.org/wiki/Syslog[Syslog] 是一个在类Unix系统上发送日志信息的协议，使用 link:https://tools.ietf.org/html/rfc5424[RFC 5424] 定义的协议。"

#. type: Plain text
#: upstream/_guides/logging.adoc:458
#, fuzzy
msgid "By default, the syslog handler is disabled.  When enabled, it sends all log events to a syslog server, typically the local syslog server for the application."
msgstr "系统日志处理程序将所有日志事件发送到一个系统日志服务器（默认情况下，是应用程序本地的系统日志服务器）。它在默认情况下是禁用的。"

#. type: delimited block -
#: upstream/_guides/logging.adoc:466
#, no-wrap
msgid ""
"quarkus.log.syslog.enable=true\n"
"quarkus.log.syslog.app-name=my-application\n"
"quarkus.log.syslog.format=%d{yyyy-MM-dd HH:mm:ss} %-5p [%c] (%t) %s%e%n\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/logging.adoc:475
#, no-wrap
msgid ""
"quarkus.log.handler.syslog.my-syslog-handler.enable=true\n"
"quarkus.log.handler.syslog.my-syslog-handler.app-name=my-application\n"
"quarkus.log.handler.syslog.my-syslog-handler.format=%d{yyyy-MM-dd HH:mm:ss} [com.example] %s%e%n\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/logging.adoc:478
#, no-wrap
msgid ""
"quarkus.log.category.\"com.example\".handlers=my-syslog-handler\n"
"quarkus.log.category.\"com.example\".use-parent-handlers=false\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/logging.adoc:481
#, fuzzy
msgid "For details about its configuration, see the xref:#quarkus-log-logging-log-config_quarkus.log.syslog-syslog-logging[Syslog logging configuration] reference."
msgstr "有关其配置选项的详情，请参阅 link:#quarkus-log-logging-log-config_quarkus.log.syslog-syslog-logging[Syslog Logging配置参考] 。"

#. type: Title ==
#: upstream/_guides/logging.adoc:483
#, no-wrap
msgid "Add a logging filter to your log handler"
msgstr ""

#. type: Plain text
#: upstream/_guides/logging.adoc:486
#, fuzzy
msgid "Log handlers, such as the console log handler, can be linked with a link:https://docs.oracle.com/en/java/javase/11/docs/api/java.logging/java/util/logging/Filter.html[filter] that determines whether a log record should be logged."
msgstr "日志处理程序（如控制台日志处理程序）可以有一个与之相关的 link:https://docs.oracle.com/en/java/javase/11/docs/api/java.logging/java/util/logging/Filter.html[过滤器] ，其目的是确定一条记录是否真的应该被记录下来。"

#. type: Plain text
#: upstream/_guides/logging.adoc:488
msgid "To register a logging filter:"
msgstr ""

#. type: Plain text
#: upstream/_guides/logging.adoc:490
msgid "Annotate a `final` class that implements `java.util.logging.Filter` with `@io.quarkus.logging.LoggingFilter`, and set the `name` property:"
msgstr ""

#. type: Block title
#: upstream/_guides/logging.adoc:491
#, no-wrap
msgid "An example of writing a filter:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/logging.adoc:497
#, no-wrap
msgid ""
"import io.quarkus.logging.LoggingFilter;\n"
"import java.util.logging.Filter;\n"
"import java.util.logging.LogRecord;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/logging.adoc:500
#, no-wrap
msgid ""
"@LoggingFilter(name = \"my-filter\")\n"
"public final class TestFilter implements Filter {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/logging.adoc:502
#, no-wrap
msgid "    private final String part;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/logging.adoc:506
#, no-wrap
msgid ""
"    public TestFilter(@ConfigProperty(name = \"my-filter.part\") String part) {\n"
"        this.part = part;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/logging.adoc:512
#, no-wrap
msgid ""
"    @Override\n"
"    public boolean isLoggable(LogRecord record) {\n"
"        return !record.getMessage().contains(part);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/logging.adoc:516
msgid "In this example, we exclude log records containing specific text from console logs.  The specific text to filter on is not hard-coded; instead, it is read from the `my-filter.part` configuration property."
msgstr ""

#. type: Block title
#: upstream/_guides/logging.adoc:517
#, fuzzy, no-wrap
msgid "An example of Configuring the filter in `application.properties`:"
msgstr "然后，所有的日志配置将在你的 `application.properties` 。"

#. type: delimited block -
#: upstream/_guides/logging.adoc:521
#, no-wrap
msgid "my-filter.part=TEST\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/logging.adoc:524
#, fuzzy
msgid "Attach the filter to the corresponding handler using the `filter` configuration property, located in `application.properties`:"
msgstr "最后，使用适当处理程序的 `filter` 配置属性附加过滤器。"

#. type: delimited block -
#: upstream/_guides/logging.adoc:528
#, no-wrap
msgid "quarkus.log.console.filter=my-filter\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/logging.adoc:531
#, fuzzy, no-wrap
msgid "Examples of logging configurations"
msgstr "文件TRACE日志配置"

#. type: Plain text
#: upstream/_guides/logging.adoc:534
msgid "The following examples show some of the ways in which you can configure logging in Quarkus:"
msgstr ""

#. type: Block title
#: upstream/_guides/logging.adoc:535
#, fuzzy, no-wrap
msgid "Console DEBUG logging except for Quarkus logs (INFO), no color, shortened time, shortened category prefixes"
msgstr "控制台DEBUG日志，除了Quarkus日志（INFO），没有颜色，缩短时间，缩短类别前缀"

#. type: delimited block -
#: upstream/_guides/logging.adoc:541
#, no-wrap
msgid ""
"quarkus.log.console.format=%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n\n"
"quarkus.log.console.level=DEBUG\n"
"quarkus.console.color=false\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/logging.adoc:543
#, no-wrap
msgid "quarkus.log.category.\"io.quarkus\".level=INFO\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/logging.adoc:547
#, fuzzy
msgid "If you add these properties in the command line, ensure `\"` is escaped.  For example, `-Dquarkus.log.category.\\\"io.quarkus\\\".level=DEBUG`."
msgstr "如果你是通过命令行添加这些属性，请确保 `\"` 是转义的。例如， `-Dquarkus.log.category.\\\"io.quarkus\\\".level=DEBUG` 。"

#. type: Block title
#: upstream/_guides/logging.adoc:549
#, fuzzy, no-wrap
msgid "File TRACE logging configuration"
msgstr "文件TRACE日志配置"

#. type: delimited block -
#: upstream/_guides/logging.adoc:561
#, no-wrap
msgid ""
"quarkus.log.file.enable=true\n"
"# Send output to a trace.log file under the /tmp directory\n"
"quarkus.log.file.path=/tmp/trace.log\n"
"quarkus.log.file.level=TRACE\n"
"quarkus.log.file.format=%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n\n"
"# Set 2 categories (io.quarkus.smallrye.jwt, io.undertow.request.security) to TRACE level\n"
"quarkus.log.min-level=TRACE\n"
"quarkus.log.category.\"io.quarkus.smallrye.jwt\".level=TRACE\n"
"quarkus.log.category.\"io.undertow.request.security\".level=TRACE\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/logging.adoc:564
#, fuzzy
msgid "As we don't change the root logger, the console log will only contain `INFO` or higher level logs."
msgstr "由于我们不改变根记录器，控制台日志将只包含 `INFO` 或更高阶的日志。"

#. type: Block title
#: upstream/_guides/logging.adoc:566
#, fuzzy, no-wrap
msgid "Named handlers attached to a category"
msgstr "隶属于一个类别的命名处理程序"

#. type: delimited block -
#: upstream/_guides/logging.adoc:580
#, no-wrap
msgid ""
"# Send output to a trace.log file under the /tmp directory\n"
"quarkus.log.file.path=/tmp/trace.log\n"
"quarkus.log.console.format=%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n\n"
"# Configure a named handler that logs to console\n"
"quarkus.log.handler.console.\"STRUCTURED_LOGGING\".format=%e%n\n"
"# Configure a named handler that logs to file\n"
"quarkus.log.handler.file.\"STRUCTURED_LOGGING_FILE\".enable=true\n"
"quarkus.log.handler.file.\"STRUCTURED_LOGGING_FILE\".format=%e%n\n"
"# Configure the category and link the two named handlers to it\n"
"quarkus.log.category.\"io.quarkus.category\".level=INFO\n"
"quarkus.log.category.\"io.quarkus.category\".handlers=STRUCTURED_LOGGING,STRUCTURED_LOGGING_FILE\n"
msgstr ""

#. type: Block title
#: upstream/_guides/logging.adoc:583
#, fuzzy, no-wrap
msgid "Named handlers attached to the root logger"
msgstr "隶属于一个类别的命名处理程序"

#. type: delimited block -
#: upstream/_guides/logging.adoc:591
#, no-wrap
msgid ""
"# configure a named file handler that sends the output to 'quarkus.log'\n"
"quarkus.log.handler.file.CONSOLE_MIRROR.enable=true\n"
"quarkus.log.handler.file.CONSOLE_MIRROR.path=quarkus.log\n"
"# attach the handler to the root logger\n"
"quarkus.log.handlers=CONSOLE_MIRROR\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/logging.adoc:594
#, fuzzy, no-wrap
msgid "Centralized log management"
msgstr "集中的日志管理"

#. type: Plain text
#: upstream/_guides/logging.adoc:597
msgid "Use a centralized location to efficiently collect, store, and analyze log data from various components and instances of the application."
msgstr ""

#. type: Plain text
#: upstream/_guides/logging.adoc:599
#, fuzzy
msgid "To send logs to a centralized tool such as Graylog, Logstash, or Fluentd, see the Quarkus xref:centralized-log-management.adoc[Centralized log management] guide."
msgstr "如果你想把你的日志发送到一个集中的工具，如Graylog、Logstash或Fluentd，你可以按照 link:centralized-log-management.html[集中的日志管理指南] 。"

#. type: Title ==
#: upstream/_guides/logging.adoc:601
#, fuzzy, no-wrap
msgid "Configure logging for `@QuarkusTest`"
msgstr "如何配置日志记录 `@QuarkusTest` "

#. type: Plain text
#: upstream/_guides/logging.adoc:604
msgid "Enable proper logging for `@QuarkusTest` by setting the `java.util.logging.manager` system property to `org.jboss.logmanager.LogManager`."
msgstr ""

#. type: Plain text
#: upstream/_guides/logging.adoc:606
msgid "The system property must be set early on to be effective, so it is recommended to configure it in the build system."
msgstr ""

#. type: Block title
#: upstream/_guides/logging.adoc:607
#, no-wrap
msgid "Setting the `java.util.logging.manager` system property in the Maven Surefire plugin configuration"
msgstr ""

#. type: delimited block -
#: upstream/_guides/logging.adoc:625
#, no-wrap
msgid ""
"<build>\n"
"  <plugins>\n"
"    <plugin>\n"
"      <artifactId>maven-surefire-plugin</artifactId>\n"
"      <version>${surefire-plugin.version}</version>\n"
"      <configuration>\n"
"        <systemPropertyVariables>\n"
"          <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager> <1>\n"
"          <quarkus.log.level>DEBUG</quarkus.log.level>  <2>\n"
"          <maven.home>${maven.home}</maven.home>\n"
"        </systemPropertyVariables>\n"
"      </configuration>\n"
"    </plugin>\n"
"  </plugins>\n"
"</build>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/logging.adoc:627
#, fuzzy
msgid "Make sure the `org.jboss.logmanager.LogManager` is used."
msgstr "确保使用 `org.jboss.logmanager.LogManager` 。"

#. type: Plain text
#: upstream/_guides/logging.adoc:628
#, fuzzy
msgid "Enable debug logging for all logging categories."
msgstr "启用所有日志类别的调试日志。"

#. type: Plain text
#: upstream/_guides/logging.adoc:630
#, fuzzy
msgid "For Gradle, add the following configuration to the `build.gradle` file:"
msgstr "如果你使用的是Gradle，请将此添加到你的 `build.gradle` 。"

#. type: delimited block -
#: upstream/_guides/logging.adoc:636
#, no-wrap
msgid ""
"test {\n"
"\tsystemProperty \"java.util.logging.manager\", \"org.jboss.logmanager.LogManager\"\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/logging.adoc:639
#, fuzzy
msgid "See also xref:getting-started-testing.adoc#test-from-ide[Running `@QuarkusTest` from an IDE]."
msgstr "另请参见。 link:getting-started-testing.html#test-from-ide[从IDE中运行 `@QuarkusTest`]"

#. type: Title ==
#: upstream/_guides/logging.adoc:641
#, fuzzy, no-wrap
msgid "Use other logging APIs"
msgstr "支持的日志API"

#. type: Plain text
#: upstream/_guides/logging.adoc:644
#, fuzzy
msgid "Quarkus relies on the JBoss Logging library for all the logging requirements."
msgstr "Quarkus依靠JBoss Logging库来满足所有的日志需求。"

#. type: Plain text
#: upstream/_guides/logging.adoc:647
#, fuzzy
msgid "Suppose you use libraries that depend on other logging libraries, such as Apache Commons Logging, Log4j, or SLF4J.  In that case, exclude them from the dependencies and use one of the JBoss Logging adapters."
msgstr "如果你使用的是对其他日志库有依赖性的库，如Apache Commons Logging、Log4j或SLF4J，你需要把它们从依赖关系中排除，使用JBoss Logging提供的一个适配器。"

#. type: Plain text
#: upstream/_guides/logging.adoc:649
#, fuzzy
msgid "This is especially important when building native executables, as you could encounter issues similar to the following when compiling the native executable:"
msgstr "在构建本地可执行文件时，这一点尤其重要，因为在编译本地可执行文件时，你可能会遇到类似以下的问题。"

#. type: delimited block -
#: upstream/_guides/logging.adoc:653
#, no-wrap
msgid "Caused by java.lang.ClassNotFoundException: org.apache.commons.logging.impl.LogFactoryImpl\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/logging.adoc:656
#, fuzzy
msgid "The logging implementation is not included in the native executable, but you can resolve this issue using JBoss Logging adapters."
msgstr "这是由于日志实现没有被包含在本地可执行文件中。使用JBoss Logging适配器可以解决这个问题。"

#. type: Plain text
#: upstream/_guides/logging.adoc:658
#, fuzzy
msgid "These adapters are available for popular open-source logging components, as explained in the next chapter."
msgstr "这些适配器可用于大多数常见的开源日志组件。"

#. type: Title ===
#: upstream/_guides/logging.adoc:659
#, no-wrap
msgid "Add a logging adapter to your application"
msgstr ""

#. type: Plain text
#: upstream/_guides/logging.adoc:662
msgid "For each logging API that is not `jboss-logging`:"
msgstr ""

#. type: Plain text
#: upstream/_guides/logging.adoc:664
msgid "Add a logging adapter library to ensure that messages logged through these APIs are routed to the JBoss Log Manager backend."
msgstr ""

#. type: Plain text
#: upstream/_guides/logging.adoc:666
#, fuzzy
msgid "This step is unnecessary for libraries that are dependencies of a Quarkus extension where the extension handles it automatically."
msgstr "对于依赖Quarkus扩展的库来说，这一点是不需要的，因为扩展将为你处理这个问题。"

#. type: Plain text
#: upstream/_guides/logging.adoc:668
#, fuzzy
msgid "Apache Commons Logging:"
msgstr "Apache Commons日志。"

#. type: delimited block -
#: upstream/_guides/logging.adoc:676
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>org.jboss.logging</groupId>\n"
"    <artifactId>commons-logging-jboss-logging</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/logging.adoc:682
#, no-wrap
msgid "implementation(\"org.jboss.logging:commons-logging-jboss-logging\")\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/logging.adoc:685
#, fuzzy
msgid "Log4j:"
msgstr "Log4j。"

#. type: delimited block -
#: upstream/_guides/logging.adoc:693
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>org.jboss.logmanager</groupId>\n"
"    <artifactId>log4j-jboss-logmanager</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/logging.adoc:699
#, no-wrap
msgid "implementation(\"org.jboss.logmanager:log4j-jboss-logmanager\")\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/logging.adoc:702
#, fuzzy
msgid "Log4j 2:"
msgstr "Log4j 2:"

#. type: delimited block -
#: upstream/_guides/logging.adoc:710
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>org.jboss.logmanager</groupId>\n"
"    <artifactId>log4j2-jboss-logmanager</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/logging.adoc:716
#, no-wrap
msgid "implementation(\"org.jboss.logmanager:log4j2-jboss-logmanager\")\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/logging.adoc:721
#, fuzzy
msgid "Do not include any Log4j dependencies because the `log4j2-jboss-logmanager` library contains all that is needed to use Log4j as a logging implementation."
msgstr "不要包括任何Log4j的依赖性。 `log4j2-jboss-logmanager` 库包括使用Log4j作为日志界面所需的内容。"

#. type: Plain text
#: upstream/_guides/logging.adoc:724
#, fuzzy
msgid "SLF4J:"
msgstr "还有SLF4J。"

#. type: delimited block -
#: upstream/_guides/logging.adoc:732
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>org.jboss.slf4j</groupId>\n"
"    <artifactId>slf4j-jboss-logmanager</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/logging.adoc:738
#, no-wrap
msgid "implementation(\"org.jboss.slf4j:slf4j-jboss-logmanager\")\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/logging.adoc:741
msgid "Verify whether the logs generated by the added library adhere to the same format as the other Quarkus logs."
msgstr ""

#. type: Title ===
#: upstream/_guides/logging.adoc:742
#, no-wrap
msgid "Use MDC to add contextual log information"
msgstr ""

#. type: Plain text
#: upstream/_guides/logging.adoc:745
msgid "Quarkus overrides the logging Mapped Diagnostic Context (MDC) to improve the compatibility with its reactive core."
msgstr ""

#. type: Title ====
#: upstream/_guides/logging.adoc:746
#, no-wrap
msgid "Add and read MDC data"
msgstr ""

#. type: Plain text
#: upstream/_guides/logging.adoc:749
msgid "To add data to the MDC and extract it in your log output:"
msgstr ""

#. type: Plain text
#: upstream/_guides/logging.adoc:751
msgid "Use the `MDC` class to set the data."
msgstr ""

#. type: Plain text
#: upstream/_guides/logging.adoc:752
msgid "Customize the log format to use `%X\\{mdc-key\\}`."
msgstr ""

#. type: Plain text
#: upstream/_guides/logging.adoc:754
msgid "Let's consider the following code:"
msgstr ""

#. type: Block title
#: upstream/_guides/logging.adoc:756
#, no-wrap
msgid "Example with JBoss Logging and `io.quarkus.logging.Log`"
msgstr ""

#. type: delimited block -
#: upstream/_guides/logging.adoc:759
#, no-wrap
msgid "package me.sample;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/logging.adoc:764
#, no-wrap
msgid ""
"import io.quarkus.logging.Log;\n"
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.Path;\n"
"import org.jboss.logmanager.MDC;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/logging.adoc:766
#, no-wrap
msgid "import java.util.UUID;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/logging.adoc:769
#, no-wrap
msgid ""
"@Path(\"/hello/jboss\")\n"
"public class GreetingResourceJbossLogging {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/logging.adoc:779
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/test\")\n"
"    public String greeting() {\n"
"        MDC.put(\"request.id\", UUID.randomUUID().toString());\n"
"        MDC.put(\"request.path\", \"/hello/test\");\n"
"        Log.info(\"request received\");\n"
"        return \"hello world!\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/logging.adoc:782
msgid "If you configure the log format with the following line:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/logging.adoc:786
#, no-wrap
msgid "quarkus.log.console.format=%d{HH:mm:ss} %-5p request.id=%X{request.id} request.path=%X{request.path} [%c{2.}] (%t) %s%n\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/logging.adoc:789
msgid "You get messages containing the MDC data:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/logging.adoc:793
#, no-wrap
msgid "08:48:13 INFO  request.id=c37a3a36-b7f6-4492-83a1-de41dbc26fe2 request.path=/hello/test [me.sa.GreetingResourceJbossLogging] (executor-thread-1) request received\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/logging.adoc:795
#, fuzzy, no-wrap
msgid "MDC and supported logging APIs"
msgstr "支持的日志API"

#. type: Plain text
#: upstream/_guides/logging.adoc:799
msgid "Depending on the API you use, the MDC class is slightly different.  However, the APIs are very similar:"
msgstr ""

#. type: Plain text
#: upstream/_guides/logging.adoc:801
msgid "Log4j 1 - `org.apache.log4j.MDC.put(key, value)`"
msgstr ""

#. type: Plain text
#: upstream/_guides/logging.adoc:802
msgid "Log4j 2 - `org.apache.logging.log4j.ThreadContext.put(key, value)`"
msgstr ""

#. type: Plain text
#: upstream/_guides/logging.adoc:803
msgid "SLF4J - `org.slf4j.MDC.put(key, value)`"
msgstr ""

#. type: Title ====
#: upstream/_guides/logging.adoc:805
#, no-wrap
msgid "MDC propagation"
msgstr ""

#. type: Plain text
#: upstream/_guides/logging.adoc:808
msgid "In Quarkus, the MDC provider has a specific implementation for handling the reactive context, ensuring that MDC data is propagated during reactive and asynchronous processing."
msgstr ""

#. type: Plain text
#: upstream/_guides/logging.adoc:810
msgid "As a result, you can still access the MDC data in various scenarios:"
msgstr ""

#. type: Plain text
#: upstream/_guides/logging.adoc:812
msgid "After asynchronous calls, for example, when a REST client returns a Uni."
msgstr ""

#. type: Plain text
#: upstream/_guides/logging.adoc:813
msgid "In code submitted to `org.eclipse.microprofile.context.ManagedExecutor`."
msgstr ""

#. type: Plain text
#: upstream/_guides/logging.adoc:814
msgid "In code executed with `vertx.executeBlocking()`."
msgstr ""

#. type: Plain text
#: upstream/_guides/logging.adoc:816
msgid "If applicable, MDC data is stored in a _duplicated context_, which is an isolated context for processing a single task (request)."
msgstr ""

#. type: Title ==
#: upstream/_guides/logging.adoc:819
#, no-wrap
msgid "Logging configuration reference"
msgstr ""

#, fuzzy
#~ msgid "To configure your logging, you will exclusively work within your `application.properties` file."
#~ msgstr "然后，所有的日志配置将在你的 `application.properties` 。"

#, fuzzy
#~ msgid "Logging with Panache"
#~ msgstr "潇洒写意的日志"

#, fuzzy
#~ msgid "Runtime configuration"
#~ msgstr "运行时配置"

#, fuzzy
#~ msgid "Logging filters"
#~ msgstr "记录适配器"

#, fuzzy
#~ msgid "For instance, if you want to filter out log records containing specific text from the console logs, you can define the text as part of the application configuration instead of hardcoding it."
#~ msgstr "比方说，我们想过滤掉包含控制台日志中一部分文本的日志记录。文本本身是应用程序配置的一部分，不是硬编码的。我们可以这样写一个过滤器。"

#, fuzzy
#~ msgid "Then, configure it in the usual Quarkus way, for example, by using `application.properties`:"
#~ msgstr "并以通常的Quarkus方式配置它（例如使用 `application.properties` ），像这样。"

#, fuzzy
#~ msgid "To configure logging for your `@QuarkusTest`, ensure that you configure the `maven-surefire-plugin` accordingly.  Specifically, you need to set the appropriate `LogManager` by using the `java.util.logging.manager` system property."
#~ msgstr "如果你想为你的 `@QuarkusTest` 配置日志，别忘了对 `maven-surefire-plugin` 进行相应的设置。特别是，你需要使用 `java.util.logging.manager` 系统属性来设置相应的 `LogManager` 。"

#, fuzzy
#~ msgid "Example Configuration"
#~ msgstr "配置实例"

#, fuzzy
#~ msgid "Logging adapters"
#~ msgstr "记录适配器"

#, fuzzy
#~ msgid "Configuring Logging"
#~ msgstr "配置日志"

#, fuzzy
#~ msgid "This guide explains logging and how to configure it."
#~ msgstr "本指南解释了日志记录以及如何配置它。"

#, fuzzy
#~ msgid "Internally, Quarkus uses JBoss Log Manager and the JBoss Logging facade.  You can use the JBoss Logging facade inside your code as it's already provided, or any of the supported Logging API listed in the next chapter as Quarkus will send them to JBoss Log Manager."
#~ msgstr "在内部，Quarkus使用JBoss Log Manager和JBoss Logging facade。你可以在你的代码中使用JBoss Logging facade，因为它已经提供了，或者是下一章中列出的任何支持的Logging API，因为Quarkus会把它们发送到JBoss Log Manager。"

#, fuzzy
#~ msgid "Applications and components may use any of the following APIs for logging, and the logs will be merged:"
#~ msgstr "应用程序和组件可以使用以下任何一个API进行日志记录，并且日志将被合并。"

#, fuzzy
#~ msgid "Internally Quarkus uses JBoss Logging; you can also use it inside your application so that no other dependencies should be added for your logs."
#~ msgstr "Quarkus内部使用JBoss Logging；你也可以在你的应用程序中使用它，这样就不需要为你的日志添加其他的依赖性。"

#, fuzzy
#~ msgid "If you use JBoss Logging but one of your libraries uses a different logging API, you may need to configure a xref:logging-adapters[logging adapter]."
#~ msgstr "如果你使用JBoss Logging，但你的一个库使用不同的日志API，你可能需要配置一个 link:#logging-adapters[日志适配器] 。"

#, fuzzy
#~ msgid "Instead of declaring a `Logger` field, you can use the simplified logging API:"
#~ msgstr "而不是声明一个 `Logger` 字段，你可以使用简化的日志API。"

#, fuzzy
#~ msgid "You can also inject a configured `org.jboss.logging.Logger` instance in your beans and resource classes."
#~ msgstr "你也可以在你的Bean和资源类中注入一个配置的 `org.jboss.logging.Logger` 实例。"

#, fuzzy
#~ msgid "What about Apache Log4j ?"
#~ msgstr "Apache Log4j怎么样？"

#, fuzzy
#~ msgid "link:https://logging.apache.org/log4j/2.x/[Log4j] is a logging implementation: it contains a logging backend and a logging facade.  Quarkus uses the JBoss Log Manager backend, so you will need to include the `log4j2-jboss-logmanager` library to route Log4j logs to JBoss Log Manager."
#~ msgstr "link:https://logging.apache.org/log4j/2.x/[Log4j] 是一个日志实现：它包含一个日志后端和一个日志界面。Quarkus使用JBoss Log Manager后端，所以你需要包含 `log4j2-jboss-logmanager` 库来将Log4j日志发送到JBoss Log Manager。"

#, fuzzy
#~ msgid "This is the library needed for Log4j version 2; if you use the legacy Log4j version 1 you need to use `log4j-jboss-logmanager` instead."
#~ msgstr "这是Log4j版本2所需要的库；如果你使用传统的Log4j版本1，你需要使用 `log4j-jboss-logmanager` 。"

#, fuzzy
#~ msgid "You can then use the Log4j API inside your application."
#~ msgstr "然后你可以在你的应用程序中使用Log4j API。"

#, fuzzy
#~ msgid "Setting a log level below `DEBUG` requires the minimum log level to be adjusted, either globally via the `quarkus.log.min-level` property or per-category as shown in the example above, as well as adjusting the log level itself."
#~ msgstr "设置一个低于 `DEBUG` 的日志级别需要调整最小的日志级别，可以通过 `quarkus.log.min-level` 属性全局调整，也可以像上面的例子那样按类别调整，同时也要调整日志级别本身。"

#, fuzzy
#~ msgid "Minimum logging level sets a floor level that Quarkus will be needed to potentially generate, opening the door to optimization opportunities.  As an example, in native execution the minimum level enables lower level checks (e.g. `isTraceEnabled`) to be folded to `false`, resulting in dead code elimination for code that will never to be executed."
#~ msgstr "最小记录水平设定了Quarkus需要潜在生成的底层水平，为优化机会打开了大门。例如，在本地执行中，最小级别使较低级别的检查（例如： `isTraceEnabled` ）被折叠到 `false` ，从而消除了永远不会被执行的代码的死代码。"

#, fuzzy
#~ msgid "Logging is done on a per-category basis.  Each category can be independently configured.  A configuration which applies to a category will also apply to all sub-categories of that category, unless there is a more specific matching sub-category configuration.  For every category the same settings that are configured on ( console / file / syslog ) apply.  These can also be overridden by attaching one or more named handlers to a category.  See example in the xref:category-named-handlers-example[Named handlers attached to a category] output."
#~ msgstr "记录是按类别进行的。每个类别都可以独立配置。适用于某一类别的配置也将适用于该类别的所有子类别，除非有一个更具体的匹配的子类别配置。对于每一个类别，在（控制台/文件/系统日志）上配置的相同设置都适用。这些也可以通过给一个类别附加一个或多个命名的处理程序来覆盖。见 link:#category-named-handlers-example[[category-named-handlers-example]] 中的例子。"

#, fuzzy
#~ msgid "The quotes shown in the property name are required as categories normally contain '.', which must be escaped.  See the example in xref:category-example[File TRACE Logging Configuration]."
#~ msgstr "在属性名称中显示的引号是必须的，因为类别通常包含'.'，必须被转义。一个例子显示在 link:#category-example[[category-example]] 。"

#, fuzzy
#~ msgid "If no level configuration exists for a given logger category, the enclosing (parent) category is examined. If no categories are configured which enclose the category in question, then the root logger configuration is used."
#~ msgstr "如果某个记录仪类别不存在级别配置，则会检查包围的（父）类别。如果没有配置包围有关类别的类别，则使用根记录仪配置。"

#, fuzzy
#~ msgid "In order to configure the JSON logging format, the `quarkus-logging-json` extension may be employed.  Add this extension to your build file as the following snippet illustrates:"
#~ msgstr "为了配置JSON日志格式，可以使用 `quarkus-logging-json` 扩展。把这个扩展添加到你的构建文件中，如下面的片段所示。"

#, fuzzy
#~ msgid "The JSON logging extension can be configured in various ways.  The following properties are supported:"
#~ msgstr "JSON日志扩展可以通过各种方式进行配置。支持以下属性。"

#, fuzzy
#~ msgid "These filters are registered by placing the `@io.quarkus.logging.LoggingFilter` annotation on a (`final`) class that implements `java.util.logging.Filter` and setting the `name` property."
#~ msgstr "这些过滤器是通过将 `@io.quarkus.logging.LoggingFilter` 注解放在一个实现了 `java.util.logging.Filter` 的( `final` )类上并设置 `name` 属性来注册。"

#, fuzzy
#~ msgid "The file log handler is disabled by default. It outputs all log events to a file on the application's host.  It supports log file rotation."
#~ msgstr "文件日志处理程序默认是禁用的。它将所有的日志事件输出到应用程序主机上的一个文件。它支持日志文件旋转。"

#, fuzzy
#~ msgid "Examples"
#~ msgstr "实例"

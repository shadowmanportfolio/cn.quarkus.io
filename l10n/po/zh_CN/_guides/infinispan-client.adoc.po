# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-09-28 11:16+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/infinispan-client.adoc:6
#, fuzzy, no-wrap
msgid "Infinispan Client"
msgstr "Infinispan客户端"

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:13
#, fuzzy
msgid "Infinispan is a distributed, in-memory key/value store that provides Quarkus applications with a highly configurable and independently scalable data layer.  This extension gives you client functionality that connects applications running on Quarkus with remote Infinispan clusters."
msgstr "Infinispan是一个分布式的、内存中的键/值存储，为Quarkus应用程序提供了一个高度可配置和独立可扩展的数据层。这个扩展为你提供了客户端功能，将运行在Quarkus上的应用程序与远程Infinispan集群连接起来。"

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:15
#, fuzzy
msgid "To find out more about Infinispan, visit the https://infinispan.org/documentation[Infinispan documentation]."
msgstr "要了解更多关于Infinispan的信息，请访问 link:https://infinispan.org/documentation[Infinispan文档] 。"

#. type: Title ==
#: upstream/_guides/infinispan-client.adoc:16
#, fuzzy, no-wrap
msgid "Solution"
msgstr "解决方案"

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:20
#, fuzzy
msgid "We recommend that you complete each step in the following sections to create the application.  However, you can proceed directly to the completed solution as follows:"
msgstr "我们建议你完成以下各部分的每一个步骤来创建应用程序。然而，你可以直接进入已完成的解决方案，如下所示。"

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:23
#, fuzzy
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}` or download an {quickstarts-archive-url}[archive].  Locate the solution in the `infinispan-client-quickstart` {quickstarts-tree-url}/infinispan-client-quickstart[directory]."
msgstr "克隆Git仓库： `git clone {quickstarts-clone-url}` 或下载一个{quickstarts-archive-url}[档案]。在 `infinispan-client-quickstart` {quickstarts-tree-url}/infinispan-client-quickstart[目录]中找到该解决方案。"

#. type: Title ==
#: upstream/_guides/infinispan-client.adoc:24
#, fuzzy, no-wrap
msgid "Adding the Infinispan client extension"
msgstr "添加Infinispan客户端扩展"

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:27
#, fuzzy
msgid "Run the following command in the base directory of your Quarkus project to add the `infinispan-client` extension:"
msgstr "在你的Quarkus项目的基本目录下运行以下命令，添加 `infinispan-client` 扩展。"

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:32
#, fuzzy
msgid "This command adds the following dependency to your build file:"
msgstr "这个命令在你的构建文件中添加了以下依赖关系。"

#. type: Block title
#: upstream/_guides/infinispan-client.adoc:34
#, fuzzy, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_guides/infinispan-client.adoc:40
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-infinispan-client</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_guides/infinispan-client.adoc:43
#, fuzzy, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_guides/infinispan-client.adoc:46
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-infinispan-client\")\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/infinispan-client.adoc:48
#, fuzzy, no-wrap
msgid "Configuring the Infinispan client"
msgstr "配置Infinispan客户端"

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:51
#, fuzzy
msgid "Open the `application.properties` file in the `src/main/resources` directory with any text editor."
msgstr "用任何文本编辑器打开 `src/main/resources` 目录中的 `application.properties` 文件。"

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:55
#, fuzzy
msgid "Note that Infinispan documentation refers to a `hotrod-client.properties` file.  You can configure the Infinispan client with either properties file but `application.properties` always takes priority over `hotrod-client.properties`."
msgstr "注意，Infinispan文档中提到了一个 `hotrod-client.properties` 文件。你可以用任何一个属性文件来配置Infinispan客户端，但 `application.properties` 总是优先于 `hotrod-client.properties` 。"

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:58
#, fuzzy
msgid "Additionally, you cannot update configuration properties at runtime.  If you modify `application.properties` or `hotrod-client.properties`, you must rebuild the application before those changes take effect."
msgstr "此外，你不能在运行时更新配置属性。如果你修改了 `application.properties` 或 `hotrod-client.properties` ，你必须在这些修改生效之前重建应用程序。"

#. type: Title ==
#: upstream/_guides/infinispan-client.adoc:59
#, fuzzy, no-wrap
msgid "Connecting to Infinispan clusters"
msgstr "连接到Infinispan集群"

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:62
#, fuzzy
msgid "Add the following properties to connect to Infinispan Server:"
msgstr "添加以下属性以连接到Infinispan服务器。"

#. type: delimited block -
#: upstream/_guides/infinispan-client.adoc:66
#, fuzzy, no-wrap
msgid "quarkus.infinispan-client.server-list=localhost:11222 <1>\n"
msgstr " `quarkus.infinispan-client.server-list` 进行了配置。"

#. type: delimited block -
#: upstream/_guides/infinispan-client.adoc:69
#, no-wrap
msgid ""
"quarkus.infinispan-client.auth-username=admin <2>\n"
"quarkus.infinispan-client.auth-password=password <3>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/infinispan-client.adoc:71
#, fuzzy, no-wrap
msgid "quarkus.infinispan-client.client-intelligence=BASIC <4>\n"
msgstr " `quarkus.infinispan-client.server-list` 进行了配置。"

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:73
msgid "Sets Infinispan Server address list, separated with commas"
msgstr ""

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:74
msgid "Sets the authentication username"
msgstr ""

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:75
msgid "Sets the authentication password"
msgstr ""

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:76
msgid "Sets the client intelligence. Use BASIC as a workaround if using Docker for Mac."
msgstr ""

#. type: Block title
#: upstream/_guides/infinispan-client.adoc:77
#, fuzzy, no-wrap
msgid "Running Infinispan Server"
msgstr "运行Infinispan服务器"

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:80
#, fuzzy
msgid "To use the Infinispan client extension, you need at least one running instance of Infinispan Server."
msgstr "为了使用Infinispan客户端扩展，你需要至少有一个运行中的Infinispan服务器实例。"

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:82
#, fuzzy
msgid "Check out our 5-minute https://infinispan.org/get-started/[Getting stated with Infinispan] tutorial to run Infinispan Server locally."
msgstr "请看我们的5分钟 link:https://infinispan.org/get-started/[Infinispan入门教程] ，在本地运行Infinispan服务器。"

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:84
#, fuzzy
msgid "Infinispan Server also enables authentication and security authorization by default, so you need to create a user with permissions."
msgstr "Infinispan服务器也默认启用了认证和安全授权，所以你需要创建一个有权限的用户。"

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:86
#, fuzzy
msgid "If you run the Infinispan Server image, pass the `USER=\"admin\"` and `PASS=\"password\"` parameters."
msgstr "如果你运行Infinispan服务器镜像，请传递 `USER=\"admin\"` 和 `PASS=\"password\"` 参数。"

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:87
#, fuzzy
msgid "If you run the bare metal distribution, use the Command Line Interface (CLI) as follows:"
msgstr "如果你运行的是裸机发行版，请使用命令行界面（CLI），如下所示。"

#. type: delimited block -
#: upstream/_guides/infinispan-client.adoc:91
#, no-wrap
msgid "$ ./bin/cli.sh user create admin -p password\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/infinispan-client.adoc:93
#, no-wrap
msgid "Creating caches from the client"
msgstr ""

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:97
msgid "When a cache is accessed from the client, if the cache does not exist in the Infinispan Server and you want to create it on first access, use one of the following properties:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/infinispan-client.adoc:102
#, no-wrap
msgid ""
"quarkus.infinispan-client.cache.books.configuration-uri=cacheConfig.xml <1>\n"
"quarkus.infinispan-client.cache.magazine.configuration=<distributed-cache><encoding media-type=\"application/x-protostream\"/></distributed-cache> <2>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:104
msgid "The file name located under the `resources` folder that contains the configuration of the 'books' cache"
msgstr ""

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:105
msgid "The configuration of the 'magazine' cache as a plain text property"
msgstr ""

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:108
msgid "If both `configuration-uri` and `configuration` are configured for the same cache with the same Quarkus profile, `configuration-uri` gets preference over `configuration`."
msgstr ""

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:110
msgid "If nothing is configured for a particular cache, it will be created with the following basic configuration:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/infinispan-client.adoc:116
#, no-wrap
msgid ""
"<distributed-cache>\n"
"    <encoding media-type=\"application/x-protostream\"/>\n"
"</distributed-cache>\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/infinispan-client.adoc:118
#, fuzzy, no-wrap
msgid "Authentication mechanisms"
msgstr "认证机制"

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:121
#, fuzzy
msgid "You can use the following authentication mechanisms with the Infinispan client:"
msgstr "你可以在Infinispan客户端使用以下认证机制。"

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:123
#, fuzzy
msgid "DIGEST-MD5"
msgstr "DIGEST-MD5"

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:124
#, fuzzy
msgid "PLAIN (recommended only in combination with TLS encryption)"
msgstr "PLAIN（只推荐与TLS加密结合使用）。"

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:125
#, fuzzy
msgid "EXTERNAL"
msgstr "外部的"

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:127
#, fuzzy
msgid "Other authentication mechanisms, such as SCRAM and GSSAPI, are not yet verified with the Infinispan client."
msgstr "其他认证机制，如SCRAM和GSSAPI，还没有经过Infinispan客户端的验证。"

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:129
#, fuzzy
msgid "You can find more information on configuring authentication in https://infinispan.org/docs/stable/titles/hotrod_java/hotrod_java.html#hotrod_endpoint_auth-hotrod-client-configuration[Hot Rod Endpoint Authentication Mechanisms]."
msgstr "你可以在 link:https://infinispan.org/docs/stable/titles/hotrod_java/hotrod_java.html#hotrod_endpoint_auth-hotrod-client-configuration[Hot Rod Endpoint Authentication Mechanisms] 中找到更多关于配置认证的信息。"

#. type: delimited block =
#: upstream/_guides/infinispan-client.adoc:133
#, fuzzy
msgid "You must configure authentication in the `hotrod-client.properties` file if you use Dependency Injection."
msgstr "如果你使用依赖性注入，你必须在 `hotrod-client.properties` 文件中配置认证。"

#. type: Title ==
#: upstream/_guides/infinispan-client.adoc:135
#, fuzzy, no-wrap
msgid "Serialization (Key Value types support)"
msgstr "序列化（支持键值类型）"

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:140
#, fuzzy
msgid "By default, the client will support keys and values of the following types: byte[], primitive wrappers (e.g. Integer, Long, Double), String, Date and Instant. User types require some additional steps that are detailed here. Let's say we have the following user classes:"
msgstr "默认情况下，客户端将支持以下类型的键和值：byte[]，原始包装（例如：Integer, Long, Double等），String, Date和Instant。用户类型需要一些额外的步骤，这里会详细说明。比方说，我们有以下用户类型。"

#. type: Block title
#: upstream/_guides/infinispan-client.adoc:141
#: upstream/_guides/infinispan-client.adoc:196
#, fuzzy, no-wrap
msgid "Author.java"
msgstr "Author.java"

#. type: delimited block -
#: upstream/_guides/infinispan-client.adoc:147
#, no-wrap
msgid ""
"public class Author {\n"
"   private final String name;\n"
"   private final String surname;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/infinispan-client.adoc:154
#, no-wrap
msgid ""
"   public Author(String name, String surname) {\n"
"      this.name = Objects.requireNonNull(name);\n"
"      this.surname = Objects.requireNonNull(surname);\n"
"   }\n"
"   // Getter/Setter/equals/hashCode/toString omitted\n"
"}\n"
msgstr ""

#. type: Block title
#: upstream/_guides/infinispan-client.adoc:156
#: upstream/_guides/infinispan-client.adoc:216
#, fuzzy, no-wrap
msgid "Book.java"
msgstr "书籍.java"

#. type: delimited block -
#: upstream/_guides/infinispan-client.adoc:165
#, no-wrap
msgid ""
"public class Book {\n"
"   private final String title;\n"
"   private final String description;\n"
"   private final int publicationYear;\n"
"   private final Set<Author> authors;\n"
"   private final BigDecimal price;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/infinispan-client.adoc:175
#, no-wrap
msgid ""
"   public Book(String title, String description, int publicationYear, Set<Author> authors, BigDecimal price) {\n"
"      this.title = Objects.requireNonNull(title);\n"
"      this.description = Objects.requireNonNull(description);\n"
"      this.publicationYear = publicationYear;\n"
"      this.authors = Objects.requireNonNull(authors);\n"
"      this.price = price;\n"
"   }\n"
"   // Getter/Setter/equals/hashCode/toString omitted\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:179
#, fuzzy
msgid "Serialization of user types uses a library based on protobuf, called https://github.com/infinispan/protostream[Protostream]."
msgstr "用户类型的序列化使用一个基于protobuf的库，称为 link:https://github.com/infinispan/protostream[Protostream] 。"

#. type: delimited block =
#: upstream/_guides/infinispan-client.adoc:183
#, fuzzy
msgid "Infinispan caches can store keys and values in different encodings, but recommend using https://developers.google.com/protocol-buffers[Protocol Buffers (Protobuf)]."
msgstr "Infinispan缓存可以存储不同编码的键和值，但推荐使用 link:https://developers.google.com/protocol-buffers[协议缓冲区（Protobuf] ）。"

#. type: delimited block =
#: upstream/_guides/infinispan-client.adoc:185
#, fuzzy
msgid "For more information see our https://infinispan.org/docs/stable/titles/encoding/encoding.html[Cache Encoding and Marshalling] guide."
msgstr "欲了解更多信息，请参阅我们的缓存 link:https://infinispan.org/docs/stable/titles/encoding/encoding.html[编码和集合] 指南。"

#. type: Title ===
#: upstream/_guides/infinispan-client.adoc:188
#, fuzzy, no-wrap
msgid "Annotation based Serialization"
msgstr "基于注解的序列化"

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:193
#, fuzzy
msgid "This can be done automatically by adding protostream annotations to your user classes.  In addition, a single Initializer annotated interface is required which controls how the supporting classes are generated."
msgstr "这可以通过向你的用户类添加原流注释来自动完成。此外，还需要一个Initializer注解的接口，它可以控制支持类的生成方式。"

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:195
#, fuzzy
msgid "Here is an example of how the preceding classes should be changed:"
msgstr "下面是一个例子，说明前面的类应该如何改变。"

#. type: delimited block -
#: upstream/_guides/infinispan-client.adoc:204
#, no-wrap
msgid ""
"    @ProtoFactory\n"
"    public Author(String name, String surname) {\n"
"        this.name = Objects.requireNonNull(name);\n"
"        this.surname = Objects.requireNonNull(surname);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/infinispan-client.adoc:209
#, no-wrap
msgid ""
"    @ProtoField(number = 1)\n"
"    public String getName() {\n"
"        return name;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/infinispan-client.adoc:214
#, no-wrap
msgid ""
"    @ProtoField(number = 2)\n"
"    public String getSurname() {\n"
"        return surname;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/infinispan-client.adoc:226
#, no-wrap
msgid ""
"    @ProtoFactory\n"
"    public Book(String title, String description, int publicationYear, Set<Author> authors) {\n"
"        this.title = Objects.requireNonNull(title);\n"
"        this.description = Objects.requireNonNull(description);\n"
"        this.publicationYear = publicationYear;\n"
"        this.authors = Objects.requireNonNull(authors);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/infinispan-client.adoc:231
#, no-wrap
msgid ""
"    @ProtoField(number = 1)\n"
"    public String getTitle() {\n"
"        return title;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/infinispan-client.adoc:236
#, no-wrap
msgid ""
"    @ProtoField(number = 2)\n"
"    public String getDescription() {\n"
"        return description;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/infinispan-client.adoc:241
#, no-wrap
msgid ""
"    @ProtoField(number = 3, defaultValue = \"-1\")\n"
"    public int getPublicationYear() {\n"
"        return publicationYear;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/infinispan-client.adoc:246
#, no-wrap
msgid ""
"    @ProtoField(number = 4)\n"
"    public Set<Author> getAuthors() {\n"
"        return authors;\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:250
#, fuzzy
msgid "If your classes have only mutable fields, then the `ProtoFactory` annotation is not required, assuming your class has a no arg constructor."
msgstr "如果你的类只有可变的字段，那么就不需要 `ProtoFactory` 注释了，假设你的类有一个无参数的构造函数。"

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:253
#, fuzzy
msgid "Then all that is required is a very simple `GeneratedSchema` interface with an annotation on it to specify configuration settings"
msgstr "那么所需要的就是一个非常简单的 `GeneratedSchema` 接口，上面有一个注释，可以指定配置设置"

#. type: Block title
#: upstream/_guides/infinispan-client.adoc:254
#, fuzzy, no-wrap
msgid "BooksSchema.java"
msgstr "BooksSchema.java"

#. type: delimited block -
#: upstream/_guides/infinispan-client.adoc:260
#, no-wrap
msgid ""
"import org.infinispan.protostream.GeneratedSchema;\n"
"import org.infinispan.protostream.annotations.AutoProtoSchemaBuilder;\n"
"import org.infinispan.protostream.types.java.math.BigDecimalAdapter;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/infinispan-client.adoc:264
#, no-wrap
msgid ""
"@AutoProtoSchemaBuilder(includeClasses = { Book.class, Author.class, BigDecimalAdapter.class }, schemaPackageName = \"book_sample\")\n"
"interface BookStoreSchema extends GeneratedSchema {\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:268
#, fuzzy
msgid "Protostream provides default Protobuf mappers for commonly used types as `BigDecimal`, included in the `org.infinispan.protostream.types` package."
msgstr "Protostream为常用的类型提供了默认的Protobuf映射器，如 `BigDecimal` ，包含在 `org.infinispan.protostream.types` 包中。"

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:271
#, fuzzy
msgid "So in this case we will automatically generate the marshaller and schemas for the included classes and place them in the schema package automatically. The package does not have to be provided, but if you use Infinispan query capabilities, you must know the generated package."
msgstr "所以在这种情况下，我们会自动为所包含的类生成marshaller和schema，并将它们自动放在schema包中。这个包不需要提供，但是如果你使用Infinispan的查询功能，你必须知道生成的包。"

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:273
#, fuzzy
msgid "In Quarkus the `schemaFileName` and `schemaFilePath` attributes should NOT be set on the `AutoProtoSchemaBuilder` annotation. Setting either attributes causes native runtime errors."
msgstr "在Quarkus中， `schemaFileName` 和 `schemaFilePath` 属性不应该被设置在 `AutoProtoSchemaBuilder` 注释上。设置这两个属性会导致本地运行时错误。"

#. type: Title ===
#: upstream/_guides/infinispan-client.adoc:274
#, fuzzy, no-wrap
msgid "Custom serialization"
msgstr "自定义序列化"

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:280
#, fuzzy
msgid "The previous method is suggested for any case when the user can annotate their classes.  Unfortunately the user may not be able to annotate all classes they will put in the cache. In this case you must define your schema and create your own Marshaller(s)  yourself."
msgstr "前面的方法被建议用于任何用户可以注释他们的类的情况。不幸的是，用户可能无法注释他们要放在缓存中的所有类。在这种情况下，你必须定义你的模式并自己创建你自己的Marshaller（s）。"

#. type: Labeled list
#: upstream/_guides/infinispan-client.adoc:281
#, fuzzy, no-wrap
msgid "Protobuf schema"
msgstr "Protobuf模式"

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:282
#, fuzzy
msgid "You can supply a protobuf schema through either one of two ways."
msgstr "你可以通过以下两种方式之一提供一个protobuf模式。"

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:283
#, fuzzy
msgid "Proto File"
msgstr "原始文件"

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:286
#, fuzzy
msgid "+ You can put the `.proto` file in the `META-INF` directory of the project. These files will automatically be picked up at initialization time."
msgstr "+ 你可以把 `.proto` 文件放到项目的 `META-INF` 目录中。这些文件将在初始化时自动被取走。"

#. type: Block title
#: upstream/_guides/infinispan-client.adoc:287
#, fuzzy, no-wrap
msgid "library.proto"
msgstr "库.proto"

#. type: delimited block -
#: upstream/_guides/infinispan-client.adoc:290
#, no-wrap
msgid "package book_sample;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/infinispan-client.adoc:298
#, no-wrap
msgid ""
"message Book {\n"
"  required string title = 1;\n"
"  required string description = 2;\n"
"  required int32 publicationYear = 3; // no native Date type available in Protobuf\n"
"  repeated Author authors = 4;\n"
"  requited double price = 5; // no native BigDecimal type available in Protobuf\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/infinispan-client.adoc:303
#, no-wrap
msgid ""
"message Author {\n"
"  required string name = 1;\n"
"  required string surname = 2;\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:305
#, fuzzy
msgid "In Code"
msgstr "代码中"

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:308
#, fuzzy
msgid "+ Or you can define the proto schema directly in user code by defining a produced bean of type `org.infinispan.protostream.FileDescriptorSource`."
msgstr "+ 或者你可以在用户代码中直接定义proto模式，通过定义一个类型为 `org.infinispan.protostream.FileDescriptorSource` 的生产豆。"

#. type: delimited block -
#: upstream/_guides/infinispan-client.adoc:330
#, no-wrap
msgid ""
"   @Produces\n"
"   FileDescriptorSource bookProtoDefinition() {\n"
"      return FileDescriptorSource.fromString(\"library.proto\", \"package book_sample;\\n\" +\n"
"            \"\\n\" +\n"
"            \"message Book {\\n\" +\n"
"            \"  required string title = 1;\\n\" +\n"
"            \"  required string description = 2;\\n\" +\n"
"            \"  required int32 publicationYear = 3; // no native Date type available in Protobuf\\n\" +\n"
"            \"\\n\" +\n"
"            \"  repeated Author authors = 4;\\n\" +\n"
"            \"\\n\" +\n"
"            \"  required double price = 5; // no native BigDecimal type available in Protobuf\\n\" +\n"
"            \"}\\n\" +\n"
"            \"\\n\" +\n"
"            \"message Author {\\n\" +\n"
"            \"  required string name = 1;\\n\" +\n"
"            \"  required string surname = 2;\\n\" +\n"
"            \"}\");\n"
"   }\n"
msgstr ""

#. type: Labeled list
#: upstream/_guides/infinispan-client.adoc:331
#, fuzzy, no-wrap
msgid "User Marshaller"
msgstr "用户马歇尔"

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:335
#, fuzzy
msgid "The last thing to do is to provide a `org.infinispan.protostream.MessageMarshaller` implementation for each user class defined in the proto schema. This class is then provided via `@Produces` in a similar fashion to the code based proto schema definition above."
msgstr "最后要做的是为proto schema中定义的每个用户类提供一个 `org.infinispan.protostream.MessageMarshaller` 实现。然后通过 `@Produces` ，以类似于上面基于代码的proto模式定义的方式提供这个类。"

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:337
#, fuzzy
msgid "Here is the Marshaller class for our Author & Book classes."
msgstr "这里是我们的作者和图书班的马歇尔班。"

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:339
#, fuzzy
msgid "The type name must match the `<protobuf package>.<protobuf message>` exactly!"
msgstr "类型名称必须与 `<protobuf package>.<protobuf message>` 完全匹配！"

#. type: Block title
#: upstream/_guides/infinispan-client.adoc:340
#, fuzzy, no-wrap
msgid "AuthorMarshaller.java"
msgstr "AuthorMarshaller.java"

#. type: delimited block -
#: upstream/_guides/infinispan-client.adoc:344
#, no-wrap
msgid "public class AuthorMarshaller implements MessageMarshaller<Author> {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/infinispan-client.adoc:349
#, no-wrap
msgid ""
"   @Override\n"
"   public String getTypeName() {\n"
"      return \"book_sample.Author\";\n"
"   }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/infinispan-client.adoc:354
#, no-wrap
msgid ""
"   @Override\n"
"   public Class<? extends Author> getJavaClass() {\n"
"      return Author.class;\n"
"   }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/infinispan-client.adoc:360
#, no-wrap
msgid ""
"   @Override\n"
"   public void writeTo(ProtoStreamWriter writer, Author author) throws IOException {\n"
"      writer.writeString(\"name\", author.getName());\n"
"      writer.writeString(\"surname\", author.getSurname());\n"
"   }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/infinispan-client.adoc:368
#, no-wrap
msgid ""
"   @Override\n"
"   public Author readFrom(ProtoStreamReader reader) throws IOException {\n"
"      String name = reader.readString(\"name\");\n"
"      String surname = reader.readString(\"surname\");\n"
"      return new Author(name, surname);\n"
"   }\n"
"}\n"
msgstr ""

#. type: Block title
#: upstream/_guides/infinispan-client.adoc:370
#, fuzzy, no-wrap
msgid "BookMarshaller.java"
msgstr "BookMarshaller.java"

#. type: delimited block -
#: upstream/_guides/infinispan-client.adoc:374
#, no-wrap
msgid "public class BookMarshaller implements MessageMarshaller<Book> {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/infinispan-client.adoc:379
#, no-wrap
msgid ""
"   @Override\n"
"   public String getTypeName() {\n"
"      return \"book_sample.Book\";\n"
"   }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/infinispan-client.adoc:384
#, no-wrap
msgid ""
"   @Override\n"
"   public Class<? extends Book> getJavaClass() {\n"
"      return Book.class;\n"
"   }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/infinispan-client.adoc:393
#, no-wrap
msgid ""
"   @Override\n"
"   public void writeTo(ProtoStreamWriter writer, Book book) throws IOException {\n"
"      writer.writeString(\"title\", book.getTitle());\n"
"      writer.writeString(\"description\", book.getDescription());\n"
"      writer.writeInt(\"publicationYear\", book.getPublicationYear());\n"
"      writer.writeCollection(\"authors\", book.getAuthors(), Author.class);\n"
"      writer.writeDouble(\"price\", book.getPrice().doubleValue());\n"
"   }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/infinispan-client.adoc:404
#, no-wrap
msgid ""
"   @Override\n"
"   public Book readFrom(ProtoStreamReader reader) throws IOException {\n"
"      String title = reader.readString(\"title\");\n"
"      String description = reader.readString(\"description\");\n"
"      int publicationYear = reader.readInt(\"publicationYear\");\n"
"      Set<Author> authors = reader.readCollection(\"authors\", new HashSet<>(), Author.class);\n"
"      BigDecimal price = BigDecimal.valueOf(reader.readDouble(\"price\"));\n"
"      return new Book(title, description, publicationYear, authors, price);\n"
"   }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:407
#, fuzzy
msgid "And you pass the marshaller by defining the following:"
msgstr "而你通过定义以下内容来传递给marshaller。"

#. type: delimited block -
#: upstream/_guides/infinispan-client.adoc:414
#, no-wrap
msgid ""
"   @Produces\n"
"   MessageMarshaller authorMarshaller() {\n"
"      return new AuthorMarshaller();\n"
"   }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/infinispan-client.adoc:419
#, no-wrap
msgid ""
"   @Produces\n"
"   MessageMarshaller bookMarshaller() {\n"
"      return new BookMarshaller();\n"
"   }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:421
#, fuzzy
msgid "The above produced Marshaller method MUST return `MessageMarshaller` without types or else it will not be found."
msgstr "上述产生的Marshaller方法必须返回 `MessageMarshaller` ，没有类型，否则将无法找到。"

#. type: Title ==
#: upstream/_guides/infinispan-client.adoc:422
#, fuzzy, no-wrap
msgid "Dependency Injection"
msgstr "依赖性注入"

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:428
#, fuzzy
msgid "As you saw above we support the user injecting Marshaller configuration. You can do the inverse with the Infinispan client extension providing injection for `RemoteCacheManager` and `RemoteCache` objects.  There is one global `RemoteCacheManager` that takes all the configuration parameters setup in the above sections."
msgstr "正如你在上面看到的，我们支持用户注入Marshaller配置。你可以用Infinispan客户端扩展做相反的事情，为 `RemoteCacheManager` 和 `RemoteCache` 对象提供注入。有一个全局的 `RemoteCacheManager` ，它接受上述各节中设置的所有配置参数。"

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:431
#, fuzzy
msgid "It is very simple to inject these components. All you need to do is to add the `@Inject` annotation to the field, constructor or method. In the below code we utilize field and constructor injection."
msgstr "注入这些组件是非常简单的。你所需要做的就是在字段、构造函数或方法中添加Inject注解。在下面的代码中，我们利用字段和构造函数注入。"

#. type: Block title
#: upstream/_guides/infinispan-client.adoc:432
#, fuzzy, no-wrap
msgid "SomeClass.java"
msgstr "SomeClass.java"

#. type: delimited block -
#: upstream/_guides/infinispan-client.adoc:438
#, no-wrap
msgid ""
"    @Inject SomeClass(RemoteCacheManager remoteCacheManager) {\n"
"       this.remoteCacheManager = remoteCacheManager;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/infinispan-client.adoc:441
#, no-wrap
msgid ""
"    @Inject @Remote(\"myCache\")\n"
"    RemoteCache<String, Book> cache;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/infinispan-client.adoc:443
#, no-wrap
msgid "    RemoteCacheManager remoteCacheManager;\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:448
#, fuzzy
msgid "If you notice the `RemoteCache` declaration has an additional optional annotation named `Remote`.  This is a qualifier annotation allowing you to specify which named cache that will be injected. This annotation is not required and if it is not supplied, the default cache will be injected."
msgstr "如果你注意到 `RemoteCache` 声明中有一个额外的可选注解，名为 `Remote` 。这是一个限定符注释，允许你指定将被注入的命名缓存。这个注解不是必须的，如果不提供这个注解，默认的缓存将被注入。"

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:450
#, fuzzy
msgid "Other types may be supported for injection, please see other sections for more information"
msgstr "可能支持其他类型的注射，更多信息请见其他章节"

#. type: Title ===
#: upstream/_guides/infinispan-client.adoc:451
#, fuzzy, no-wrap
msgid "Registering Protobuf Schemas with Infinispan Server"
msgstr "在Infinispan服务器上注册Protobuf模式"

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:454
#, fuzzy
msgid "You need to register the generated Protobuf schemas with Infinispan Server to perform queries or convert from `Protobuf` to other media types such as `JSON`."
msgstr "你需要在Infinispan服务器上注册生成的Protobuf模式，以执行查询或从 `Protobuf` 转换到其他媒体类型，如 `JSON` 。"

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:458
#, fuzzy
msgid "You can check the schemas that exist under the `Schemas` tab by logging into Infinispan Console at `http://localhost:11222`"
msgstr "你可以通过登录Infinispan控制台检查 `Schemas` 标签下存在的模式，地址是 `<a href=\"http://localhost:11222\" class=\"bare\">http://localhost:11222</a>` "

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:463
#, fuzzy
msgid "By default, Protobuf schemas generated this way will be registered by this extension when the client first connects.  However, it might be required to handle the registration manually as a schema may evolve over time when used in production, so you can disable this from occurring by configuring the `quarkus.infinispan-client.use-schema-registration` to `false`."
msgstr "默认情况下，以这种方式生成的Protobuf模式将在客户端首次连接时由该扩展注册。然而，可能需要手动处理注册，因为在生产中使用的模式可能会随着时间的推移而演变，所以你可以通过将 `quarkus.infinispan-client.use-schema-registration` 配置为 `false` ，来禁止这种情况的发生。"

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:469
#, fuzzy
msgid "To configure the schema manually please use https://infinispan.org/docs/infinispan-operator/main/operator.html[Infinispan Operator] for Kubernetes deployments, Infinispan Console, https://infinispan.org/docs/stable/titles/rest/rest.html#rest_v2_protobuf_schemas[REST API] or the https://infinispan.org/docs/stable/titles/encoding/encoding.html#registering-sci-remote-caches_marshalling[Hot Rod Java Client]."
msgstr "要手动配置模式，请使用 link:https://infinispan.org/docs/infinispan-operator/master/operator.html[Infinispan Operator] for Kubernetes部署、Infinispan Console、 link:https://infinispan.org/docs/stable/titles/rest/rest.html#rest_v2_protobuf_schemas[REST API] 或 link:https://infinispan.org/docs/stable/titles/encoding/encoding.html#registering-sci-remote-caches_marshalling[Hot Rod Java Client] 。"

#. type: Title ==
#: upstream/_guides/infinispan-client.adoc:471
#, fuzzy, no-wrap
msgid "Querying"
msgstr "查询"

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:476
#, fuzzy
msgid "The Infinispan client supports both indexed and non-indexed querying as long as the `ProtoStreamMarshaller` is configured above. This allows the user to query based on the properties of the proto schema."
msgstr "只要 `ProtoStreamMarshaller` ，Infinispan客户端就支持索引和非索引的查询。这允许用户根据proto模式的属性来查询。"

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:481
#, fuzzy
msgid "Query builds upon the proto definitions you can configure when setting up the `ProtoStreamMarshaller`.  Either method of Serialization above will automatically register the schema with the server at startup, meaning that you will automatically gain the ability to query objects stored in the remote Infinispan Server."
msgstr "Query建立在你在设置 `ProtoStreamMarshaller` 时可以配置的proto定义之上。 上述任何一种序列化方法都会在启动时自动向服务器注册模式，这意味着你将自动获得查询存储在远程Infinispan服务器上的对象的能力。"

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:483
#, fuzzy
msgid "You can read more about https://infinispan.org/docs/stable/titles/developing/developing.html#creating_ickle_queries-querying[querying] in the Infinispan documentation."
msgstr "你可以在Infinispan文档中阅读更多关于 link:https://infinispan.org/docs/stable/titles/developing/developing.html#creating_ickle_queries-querying[查询] 的内容。"

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:486
#, fuzzy
msgid "You can use either the Query DSL or the Ickle Query language with the Quarkus Infinispan client extension."
msgstr "你可以在Quarkus Infinispan客户端扩展中使用Query DSL或Ickle查询语言。"

#. type: Title ==
#: upstream/_guides/infinispan-client.adoc:487
#, fuzzy, no-wrap
msgid "Counters"
msgstr "计数器"

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:491
#, fuzzy
msgid "Infinispan also has a notion of counters and the Quarkus Infinispan client supports them out of the box."
msgstr "Infinispan也有一个计数器的概念，Quarkus Infinispan客户端开箱就支持这些计数器。"

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:495
#, fuzzy
msgid "The Quarkus Infinispan client extension allows for Dependency Injection of the `CounterManager` directly. All you need to do is annotate your field, constructor or method, and you get it with no fuss. You can then use counters as you would normally."
msgstr "Quarkus Infinispan客户端扩展允许直接进行依赖注入 `CounterManager` 。你所需要做的就是注释你的字段、构造函数或方法，你就可以毫不费力地得到它。然后你可以像平常一样使用计数器。"

#. type: delimited block -
#: upstream/_guides/infinispan-client.adoc:500
#, no-wrap
msgid ""
"@Inject\n"
"CounterManager counterManager;\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:503
#, fuzzy
msgid "You can read more about https://infinispan.org/docs/stable/titles/developing/developing.html#clustered_counters[clustered counters] in the Infinispan documentation."
msgstr "你可以在Infinispan文档中阅读更多关于集群 link:https://infinispan.org/docs/stable/titles/developing/developing.html#clustered_counters[计数器] 的信息。"

#. type: Title ==
#: upstream/_guides/infinispan-client.adoc:504
#, fuzzy, no-wrap
msgid "Near Caching"
msgstr "接近缓存"

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:507
msgid "Near caching is disabled by default, but you can enable it on a per cache basic by configuring the following properties:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/infinispan-client.adoc:513
#, no-wrap
msgid ""
"quarkus.infinispan-client.cache.books.near-cache-mode=INVALIDATED <1>\n"
"quarkus.infinispan-client.cache.books.near-cache-max-entries=200 <2>\n"
"quarkus.infinispan-client.cache.books.near-cache-use-bloom-filter=true <3>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:516
msgid "Enables near caching for the 'books' cache by setting the mode to `INVALIDATED`"
msgstr ""

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:517
msgid "Sets the maximum number of entries that the near cache of the 'books' cache can hold before eviction occurs"
msgstr ""

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:518
msgid "Enables bloom filter for the 'books' cache"
msgstr ""

#. type: Title ===
#: upstream/_guides/infinispan-client.adoc:519
#, fuzzy, no-wrap
msgid "Bounded near caching"
msgstr "接近缓存"

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:522
msgid "You should always use bounded near caches by specifying the maximum number of entries they can contain."
msgstr ""

#. type: Title ===
#: upstream/_guides/infinispan-client.adoc:523
#, no-wrap
msgid "Bloom filters"
msgstr ""

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:528
msgid "If you need to optimize the performance for write operations by reducing the total number of invalidation messages, enable bloom filter. Bloom filters reside on Infinispan Server and keep track of the entries that the client has requested.  They cannot be used with unbounded near cache: maximum number of entries must be defined when enabling bloom filters."
msgstr ""

#. type: Title ==
#: upstream/_guides/infinispan-client.adoc:529
#, fuzzy, no-wrap
msgid "Encryption"
msgstr "加密"

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:532
#, fuzzy
msgid "Encryption at this point requires additional steps to get working."
msgstr "在这一点上，加密需要额外的步骤来获得工作。"

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:535
#, fuzzy
msgid "The first step is to configure the `hotrod-client.properties` file to point to your truststore and/or keystore. This is further detailed https://infinispan.org/docs/stable/titles/hotrod_java/hotrod_java.html#hotrod_encryption[here]."
msgstr "第一步是配置 `hotrod-client.properties` 文件以指向你的信任商店和/或钥匙库。这 link:https://infinispan.org/docs/stable/titles/hotrod_java/hotrod_java.html#hotrod_encryption[在这里] 有进一步的详细说明。"

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:538
#, fuzzy
msgid "The Infinispan Client extension enables SSL/TLS by default. You can read more about this at xref:native-and-ssl.adoc[Using SSL With Native Executables]."
msgstr "Infinispan客户端扩展默认启用SSL/TLS。你可以在 link:native-and-ssl.html[Using SSL With Native Executables中] 阅读更多关于这个问题的信息。"

#. type: Title ==
#: upstream/_guides/infinispan-client.adoc:539
#, fuzzy, no-wrap
msgid "Additional Features"
msgstr "附加功能"

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:544
#, fuzzy
msgid "The Infinispan Client has additional features that were not mentioned here. This means this feature was not tested in a Quarkus environment, and they may or may not work. Please let us know if you need these added!"
msgstr "Infinispan客户端有一些额外的功能，这里没有提到。这意味着这个功能没有在Quarkus环境中测试，它们可能会也可能不会工作。如果你需要添加这些，请让我们知道!"

#. type: Title ==
#: upstream/_guides/infinispan-client.adoc:546
#, fuzzy, no-wrap
msgid "Dev Services for Infinispan"
msgstr "为Infinispan提供的开发服务"

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:549
#, fuzzy
msgid "When you use the infinispan-client extension in dev mode or in test, Quarkus automatically starts an Infinispan server and configure your application."
msgstr "当你在开发模式或测试中使用infinispan-client扩展时，Quarkus会自动启动一个Infinispan服务器并配置你的应用程序。"

#. type: Title ===
#: upstream/_guides/infinispan-client.adoc:550
#, fuzzy, no-wrap
msgid "Enabling / Disabling Dev Services for Infinispan"
msgstr "启用/禁用Infinispan的开发服务"

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:553
#, fuzzy
msgid "Dev Services for Infinispan is automatically enabled unless:"
msgstr "Infinispan的开发服务是自动启用的，除非。"

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:555
#, fuzzy
msgid "`quarkus.infinispan-client.devservices.enabled` is set to `false`"
msgstr " `quarkus.infinispan-client.devservices.enabled` 被设置为 `false` "

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:556
#, fuzzy
msgid "the `quarkus.infinispan-client.server-list` is configured"
msgstr " `quarkus.infinispan-client.server-list` 进行了配置。"

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:560
#, fuzzy
msgid "Dev Services for Infinispan relies on Docker to start the broker.  If your environment does not support Docker, you will need to start the broker manually, or connect to an already running broker.  You can configure the broker address using `quarkus.infinispan-client.server-list`."
msgstr "Dev Services for Infinispan依赖于Docker来启动代理。如果你的环境不支持Docker，你将需要手动启动代理，或者连接到一个已经运行的代理。你可以使用 `quarkus.infinispan-client.server-list` 来配置经纪人的地址。"

#. type: Title ==
#: upstream/_guides/infinispan-client.adoc:561
#, fuzzy, no-wrap
msgid "Shared server"
msgstr "共享的服务器"

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:565
#, fuzzy
msgid "Quarkus will share the Infinispan broker if you have multiple applications running in dev mode.  Dev Services for Infinispan implements a _service discovery_ mechanism for your multiple Quarkus applications running in _dev_ mode to share a single broker."
msgstr "如果你有多个应用程序在开发模式下运行，Quarkus将共享Infinispan代理。Dev Services for Infinispan实现了一个 _服务发现_ 机制，让你的多个Quarkus应用程序在 _开发_ 模式下运行，以共享一个代理。"

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:567
#, fuzzy
msgid "Dev Services for Infinispan starts the container with the `quarkus-dev-service-infinispan` label which is used to identify the container."
msgstr "Dev Services for Infinispan用 `quarkus-dev-service-infinispan` 标签来启动容器，该标签用于识别容器。"

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:571
#, fuzzy
msgid "If you need multiple (shared) Infinispan server, you can configure the `quarkus.infinispan-client.devservices.service-name` attribute and indicate the server name.  It looks for a container with the same value, or starts a new one if none can be found.  The default service name is `infinispan`."
msgstr "如果你需要多个（共享的）Infinispan服务器，你可以配置 `quarkus.infinispan-client.devservices.service-name` 属性并指明服务器的名称。它寻找一个具有相同值的容器，如果找不到，就启动一个新的容器。默认的服务名称是 `infinispan` 。"

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:574
#, fuzzy
msgid "Sharing is enabled by default in dev mode, but disabled in test mode.  You can disable the sharing with `quarkus.infinispan-client.devservices.shared=false`."
msgstr "在开发模式下，共享是默认启用的，但在测试模式下禁用。你可以用 `quarkus.infinispan-client.devservices.shared=false` 停用共享。"

#. type: Title ==
#: upstream/_guides/infinispan-client.adoc:575
#, fuzzy, no-wrap
msgid "Setting the port"
msgstr "设置端口"

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:579
#, fuzzy
msgid "By default, Dev Services for Infinispan picks a random port and configures the application.  You can set the port by configuring the `quarkus.infinispan-client.devservices.port` property."
msgstr "默认情况下，Dev Services for Infinispan会随机挑选一个端口并配置应用程序。你可以通过配置 `quarkus.infinispan-client.devservices.port` 属性来设置端口。"

#. type: Title ==
#: upstream/_guides/infinispan-client.adoc:580
#, fuzzy, no-wrap
msgid "Testing helpers"
msgstr "测试帮手"

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:583
#, fuzzy
msgid "To start an Infinispan Server for your unit tests, Quarkus provides one `QuarkusTestResourceLifecycleManager` that relies on link:https://infinispan.org/docs/stable/titles/hotrod_java/hotrod_java.html#junit-testing[Infinispan Server Test Container]."
msgstr "为了给你的单元测试启动一个Infinispan服务器，Quarkus提供了一个 `QuarkusTestResourceLifecycleManager` ，它依赖于 link:https://infinispan.org/docs/stable/titles/hotrod_java/hotrod_java.html#junit-testing[Infinispan服务器测试容器] 。"

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:585
msgid "`io.quarkus.test.infinispan.client.InfinispanTestResource` will start a single instance on port 11222 with user 'admin' and password 'password'."
msgstr ""

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:587
msgid "To use them, you need to add the `io.quarkus:quarkus-test-infinispan-client` dependency to your pom.xml."
msgstr ""

#. type: Plain text
#: upstream/_guides/infinispan-client.adoc:589
msgid "For more information about the usage of a `QuarkusTestResourceLifecycleManager` please read xref:getting-started-testing.adoc#quarkus-test-resource[Quarkus test resource]."
msgstr ""

#. type: Title ==
#: upstream/_guides/infinispan-client.adoc:590
#, no-wrap
msgid "Configuration Reference"
msgstr ""

#, fuzzy
#~ msgid "Near caching is disabled by default, but you can enable it by setting the profile config property `quarkus.infinispan-client.near-cache-max-entries` to a value greater than 0. You can also configure a regular expression so that only a subset of caches have near caching applied through the `quarkus.infinispan-client.near-cache-name-pattern` attribute."
#~ msgstr "近似缓存默认是禁用的，但你可以通过将配置文件配置属性 `quarkus.infinispan-client.near-cache-max-entries` 设置为大于0的值来启用它。你也可以配置一个正则表达式，以便只有一个子集的缓存通过 `quarkus.infinispan-client.near-cache-name-pattern` 属性应用近似缓存。"

# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-04-26 15:09+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: upstream/_guides/security-identity-providers-concept.adoc:7
#, fuzzy, no-wrap
msgid "Identity providers"
msgstr "身份提供者"

#. type: Plain text
#: upstream/_guides/security-identity-providers-concept.adoc:13
#, fuzzy
msgid "In the Quarkus Security framework, identity providers play a key role in authentication and authorization, providing services for storing and verifying user identities.  The Jakarta Persistence `IdentityProvider` creates a `SecurityIdentity` instance used during user authentication to verify and authorize access requests, making your Quarkus application secure."
msgstr "在Quarkus安全框架中，身份提供者在认证和授权中起着关键作用，为存储和验证用户身份提供服务。JPA `IdentityProvider` 创建了一个 `SecurityIdentity` 实例，在用户认证过程中用来验证和授权访问请求，使你的Quarkus应用程序安全。"

#. type: Plain text
#: upstream/_guides/security-identity-providers-concept.adoc:16
#, fuzzy
msgid "`IdentityProvider` converts the authentication credentials provided by `HttpAuthenticationMechanism` to a `SecurityIdentity` instance."
msgstr " `IdentityProvider` 将 提供的认证凭证转换为 实例。 `HttpAuthenticationMechanism` `SecurityIdentity` "

#. type: Plain text
#: upstream/_guides/security-identity-providers-concept.adoc:19
#, fuzzy
msgid "Some extensions, for example, `OIDC`, `OAuth2`, and `SmallRye JWT` have inline `IdentityProvider` implementations specific to the supported authentication flow.  For example, `quarkus-oidc` uses its own `IdentityProvider` to convert a token to a `SecurityIdentity` instance."
msgstr "一些扩展，例如： `OIDC` , `OAuth2` , 和 `SmallRye JWT` 都有针对支持的认证流程的内联 `IdentityProvider` 实现。例如， `quarkus-oidc` 使用它自己的 `IdentityProvider` ，将一个令牌转换成一个 `SecurityIdentity` 实例。"

#. type: Plain text
#: upstream/_guides/security-identity-providers-concept.adoc:21
msgid "If you use Basic or form-based authentication, you must add an `IdentityProvider` instance that can convert a username and password to a `SecurityIdentity` instance."
msgstr ""

#. type: Plain text
#: upstream/_guides/security-identity-providers-concept.adoc:23
msgid "To get started with security in Quarkus, we recommend you combine the Quarkus built-in Basic HTTP authentication with the Jakarta Persistence identity provider to enable role-based access control (RBAC)."
msgstr ""

#. type: Plain text
#: upstream/_guides/security-identity-providers-concept.adoc:25
msgid "For more information about Basic authentication, its mechanisms, and related identity providers, see the following resources:"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-identity-providers-concept.adoc:27
msgid "xref:security-jpa-concept.adoc[Quarkus Security with Jakarta Persistence]"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-identity-providers-concept.adoc:28
msgid "xref:security-basic-authentication-tutorial.adoc[Secure a Quarkus application with Basic authentication and Jakarta Persistence]"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-identity-providers-concept.adoc:29
msgid "xref:security-authentication-mechanisms-concept.adoc#form-auth[Form-based authentication]"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-identity-providers-concept.adoc:30
msgid "xref:security-jdbc.adoc[Using security with JDBC]"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-identity-providers-concept.adoc:31
msgid "xref:security-ldap.adoc[Using security with an LDAP realm]"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-identity-providers-concept.adoc:31
msgid "xref:security-overview-concept.adoc[Quarkus Security overview]"
msgstr ""

# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-04-26 15:09+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/databases-dev-services.adoc:6
#, fuzzy, no-wrap
msgid "Dev Services for Databases"
msgstr "数据库的开发服务"

#. type: Plain text
#: upstream/_guides/databases-dev-services.adoc:13
#, fuzzy
msgid "When testing or running in dev mode Quarkus can provide you with a zero-config database out of the box, a feature we refer to as Dev Services.  Depending on your database type you may need Docker installed in order to use this feature.  Dev Services is supported for the following databases:"
msgstr "当测试或以开发模式运行时，Quarkus可以为你提供一个开箱即用的零配置数据库，这个功能我们称之为开发服务。根据你的数据库类型，你可能需要安装Docker来使用这个功能。以下数据库支持开发服务。"

#. type: Plain text
#: upstream/_guides/databases-dev-services.adoc:15
#, fuzzy
msgid "DB2 (container) (requires xref:license_acceptance[license acceptance])"
msgstr "DB2（容器）（需要 link:#license_acceptance[接受许可证] ）。"

#. type: Plain text
#: upstream/_guides/databases-dev-services.adoc:16
#, fuzzy
msgid "Derby (in-process)"
msgstr "德比（正在进行中）"

#. type: Plain text
#: upstream/_guides/databases-dev-services.adoc:17
#, fuzzy
msgid "H2 (in-process)"
msgstr "H2 (正在进行中)"

#. type: Plain text
#: upstream/_guides/databases-dev-services.adoc:18
#, fuzzy
msgid "MariaDB (container)"
msgstr "MariaDB (容器)"

#. type: Plain text
#: upstream/_guides/databases-dev-services.adoc:19
#, fuzzy
msgid "Microsoft SQL Server (container) (requires xref:license_acceptance[license acceptance])"
msgstr "微软SQL服务器（容器）（需要 link:#license_acceptance[接受许可证] ）。"

#. type: Plain text
#: upstream/_guides/databases-dev-services.adoc:20
#, fuzzy
msgid "MySQL (container)"
msgstr "MySQL (容器)"

#. type: Plain text
#: upstream/_guides/databases-dev-services.adoc:21
#, fuzzy
msgid "Oracle Express Edition (container)"
msgstr "甲骨文快速版（容器）"

#. type: Plain text
#: upstream/_guides/databases-dev-services.adoc:22
#, fuzzy
msgid "PostgreSQL (container)"
msgstr "PostgreSQL (容器)"

#. type: Plain text
#: upstream/_guides/databases-dev-services.adoc:25
#, fuzzy
msgid "If you want to use Dev Services then all you need to do is include the relevant extension for the type of database you want (either reactive or JDBC, or both).  Don't configure a database URL, username and password - Quarkus will provide the database and you can just start coding without worrying about config."
msgstr "如果你想使用Dev Services，那么你所需要做的就是为你想要的数据库类型（反应式或JDBC，或两者）包含相关的扩展。不要配置数据库的URL、用户名和密码--Quarkus会提供数据库，你可以直接开始编码而不用担心配置问题。"

#. type: Plain text
#: upstream/_guides/databases-dev-services.adoc:28
#, fuzzy
msgid "Production databases need to be configured as normal, so if you want to include a production database config in your `application.properties` and continue to use Dev Services we recommend that you use the `%prod.` profile to define your database settings."
msgstr "生产数据库需要正常配置，所以如果你想在你的 `application.properties` ，并继续使用开发服务，我们建议你使用 `%prod.` 配置文件来定义你的数据库设置。"

#. type: Title ==
#: upstream/_guides/databases-dev-services.adoc:29
#, fuzzy, no-wrap
msgid "Enabling / Disabling Dev Services for Database"
msgstr "启用/禁用数据库的开发服务"

#. type: Plain text
#: upstream/_guides/databases-dev-services.adoc:34
#, fuzzy
msgid "Dev Services for databases automatically starts a database server in dev mode and when running tests.  So, you don't have to start a server manually.  The application is configured automatically."
msgstr "数据库的开发服务在开发模式和运行测试时自动启动数据库服务器。所以，你不需要手动启动服务器。该应用程序是自动配置的。"

#. type: Plain text
#: upstream/_guides/databases-dev-services.adoc:36
#, fuzzy
msgid "You can disable the automatic database start in `application.properties` via:"
msgstr "你可以通过 `application.properties` ，禁用数据库的自动启动。"

#. type: delimited block -
#: upstream/_guides/databases-dev-services.adoc:42
#, no-wrap
msgid ""
"quarkus.devservices.enabled=false\n"
"# OR\n"
"quarkus.datasource.devservices.enabled=false\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/databases-dev-services.adoc:46
#, fuzzy
msgid "Dev Services for databases relies on Docker to start the server (except for H2 and Derby which are run in process).  If your environment does not support Docker, you will need to start the server manually, or connect to an already running server."
msgstr "数据库的Dev服务依赖于Docker来启动服务器（除了H2和Derby是在进程中运行）。如果你的环境不支持Docker，你将需要手动启动服务器，或连接到一个已经运行的服务器。"

#. type: Title ===
#: upstream/_guides/databases-dev-services.adoc:48
#, fuzzy, no-wrap
msgid "Proprietary Databases - License Acceptance"
msgstr "专有数据库 - 许可证的接受"

#. type: Plain text
#: upstream/_guides/databases-dev-services.adoc:53
#, fuzzy
msgid "If you are using a proprietary database such as DB2 or MSSQL you will need to accept the license agreement.  To do this create a `src/main/resources/container-license-acceptance.txt` files in your project and add a line with the image name and tag of the database.  By default, Quarkus uses the default image for the current version of Testcontainers, if you attempt to start Quarkus the resulting failure will tell you the exact image name in use for you to add to the file."
msgstr "如果你使用的是专有数据库，如DB2或MSSQL，你将需要接受许可协议。要做到这一点，在你的项目中创建一个 `src/main/resources/container-license-acceptance.txt` 文件，并添加一行数据库的图像名称和标签。默认情况下，Quarkus使用当前版本Testcontainers的默认镜像，如果你试图启动Quarkus，结果会告诉你正在使用的确切镜像名称，以便你添加到文件中。"

#. type: Plain text
#: upstream/_guides/databases-dev-services.adoc:55
#, fuzzy
msgid "An example file is shown below:"
msgstr "下面是一个例子的文件。"

#. type: Block title
#: upstream/_guides/databases-dev-services.adoc:56
#, fuzzy, no-wrap
msgid "src/main/resources/container-license-acceptance.txt"
msgstr "src/main/resources/container-license-acceptance.txt"

#. type: delimited block -
#: upstream/_guides/databases-dev-services.adoc:60
#, no-wrap
msgid ""
"ibmcom/db2:11.5.0.0a\n"
"mcr.microsoft.com/mssql/server:2017-CU12\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/databases-dev-services.adoc:62
#, fuzzy, no-wrap
msgid "Mapping volumes into Dev Services for Database"
msgstr "启用/禁用数据库的开发服务"

#. type: Plain text
#: upstream/_guides/databases-dev-services.adoc:65
msgid "Mapping volumes from the Docker host's filesystem to the containers is handy to provide files like scripts or configuration, but also to preserve database data and reuse it after an application restart."
msgstr ""

#. type: delimited block =
#: upstream/_guides/databases-dev-services.adoc:69
msgid "Mapping volumes will only work in Dev Services with a container-based database like PostgreSQL."
msgstr ""

#. type: Plain text
#: upstream/_guides/databases-dev-services.adoc:72
msgid "Dev Services volumes can be mapped to the filesystem or the classpath:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/databases-dev-services.adoc:79
#, no-wrap
msgid ""
"# Using a filesystem volume:\n"
"quarkus.datasource.devservices.volumes.\"/path/from\"=/container/to <1>\n"
"# Using a classpath volume:\n"
"quarkus.datasource.devservices.volumes.\"classpath:./file\"=/container/to <2>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/databases-dev-services.adoc:82
msgid "The file or folder \"/path/from\" from the local machine will be accessible at \"/container/to\" in the container."
msgstr ""

#. type: Plain text
#: upstream/_guides/databases-dev-services.adoc:83
msgid "When using classpath volumes, the location has to start with \"classpath:\". The file or folder \"./file\" from the project's classpath will be accessible at \"/container/to\" in the container."
msgstr ""

#. type: Plain text
#: upstream/_guides/databases-dev-services.adoc:85
msgid "when using a classpath volume, the container will only be granted read permission. On the other hand, when using a filesystem volume, the container will be granted read and write permission."
msgstr ""

#. type: Title ===
#: upstream/_guides/databases-dev-services.adoc:86
#, no-wrap
msgid "Example of mapping volumes to persist the database data"
msgstr ""

#. type: Plain text
#: upstream/_guides/databases-dev-services.adoc:89
msgid "Let's see an example using PostgreSQL where we'll map a file system volume to keep the database data permantently and use it:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/databases-dev-services.adoc:94
#, no-wrap
msgid ""
"quarkus.datasource.db-kind=postgresql\n"
"quarkus.datasource.devservices.volumes.\"/local/test/data\"=/var/lib/postgresql/data\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/databases-dev-services.adoc:97
msgid "The appropriate in-container location varies depending on the database vendor. For PostgresSQL is \"/var/lib/postgresql/data\", but for MySQL, you would need this configuration instead:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/databases-dev-services.adoc:102
#, no-wrap
msgid ""
"quarkus.datasource.db-kind=mysql\n"
"quarkus.datasource.devservices.volumes.\"/local/test/data\"=/var/lib/mysql\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/databases-dev-services.adoc:105
msgid "When starting Dev Services (for example, in tests or in DEV mode), you will see that the folder \"/local/test/data\" will be created at your file sytem and that will contain all the database data. When rerunning again the same dev services, this data will contain all the data you might have created beforehand."
msgstr ""

#. type: delimited block =
#: upstream/_guides/databases-dev-services.adoc:110
msgid "When using Dev Services with Hibernate ORM, by default Quarkus will wipe out the database on application startup, which will wipe out the database data on your Docker host's filesystem.  Configure `quarkus.hibernate-orm.database.generation=none` or `quarkus.hibernate-orm.database.generation=validate` to avoid this behavior."
msgstr ""

#. type: delimited block =
#: upstream/_guides/databases-dev-services.adoc:112
msgid "Also, using Flyway to migrate your schema when starting the application will modify the database data on your Docker hosts's file system."
msgstr ""

#. type: Title ==
#: upstream/_guides/databases-dev-services.adoc:114
#, fuzzy, no-wrap
msgid "Database Vendor Specific Configuration"
msgstr "数据库供应商特定配置"

#. type: Plain text
#: upstream/_guides/databases-dev-services.adoc:118
#, fuzzy
msgid "All services based on containers are run using Testcontainers but Quarkus is not using the Testcontainers JDBC driver.  Thus, even though extra JDBC URL properties can be set in your `application.properties` file, specific properties supported by the Testcontainers JDBC driver such as `TC_INITSCRIPT`, `TC_INITFUNCTION`, `TC_DAEMON`, `TC_TMPFS` are not supported."
msgstr "所有基于容器的服务都是使用Testcontainers运行的，但Quarkus没有使用Testcontainers JDBC驱动。因此，即使可以在你的 `application.properties` 文件中设置额外的JDBC URL属性，也不支持Testcontainers JDBC驱动所支持的特定属性，如 `TC_INITSCRIPT` , `TC_INITFUNCTION` , `TC_DAEMON` , `TC_TMPFS` 。"

#. type: Plain text
#: upstream/_guides/databases-dev-services.adoc:120
#, fuzzy
msgid "Quarkus can support *specific* properties sent to the container itself though, e.g. this is the case for `TC_MY_CNF` which allows to override the MariaDB/MySQL configuration file."
msgstr "Quarkus可以支持发送到容器本身的 *特定* 属性，例如， `TC_MY_CNF` ，它允许覆盖MariaDB/MySQL配置文件的情况。"

#. type: Plain text
#: upstream/_guides/databases-dev-services.adoc:122
#, fuzzy
msgid "Overriding the MariaDB/MySQL configuration would be done as follows:"
msgstr "覆盖MariaDB/MySQL的配置将按如下方式进行。"

#. type: delimited block -
#: upstream/_guides/databases-dev-services.adoc:126
#, no-wrap
msgid "quarkus.datasource.devservices.container-properties.TC_MY_CNF=testcontainers/mysql-conf\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/databases-dev-services.adoc:129
#, fuzzy
msgid "This support is database specific and needs to be implemented in each dev service specifically."
msgstr "这种支持是针对数据库的，需要在每个开发服务中具体实施。"

#. type: Title ==
#: upstream/_guides/databases-dev-services.adoc:130
#, fuzzy, no-wrap
msgid "Connect To Database Run as a Dev Service"
msgstr "连接到作为开发服务运行的数据库"

#. type: Plain text
#: upstream/_guides/databases-dev-services.adoc:133
#, fuzzy
msgid "You can connect to a database running as a Dev Service as you would do with any database running inside a Docker container."
msgstr "你可以像对待在Docker容器内运行的任何数据库那样，连接到作为Dev Service运行的数据库。"

#. type: Plain text
#: upstream/_guides/databases-dev-services.adoc:135
#, fuzzy
msgid "Login credentials are the same for most databases, except when the database requirements don't allow it:"
msgstr "登录凭证对大多数数据库都是一样的，除非数据库的要求不允许。"

#. type: Table
#: upstream/_guides/databases-dev-services.adoc:137
#, fuzzy, no-wrap
msgid "Database"
msgstr "数据库"

#. type: Table
#: upstream/_guides/databases-dev-services.adoc:137
#, fuzzy, no-wrap
msgid "Username"
msgstr "帐号"

#. type: Table
#: upstream/_guides/databases-dev-services.adoc:137
#, fuzzy, no-wrap
msgid "Password"
msgstr "密码"

#. type: Table
#: upstream/_guides/databases-dev-services.adoc:139
#, fuzzy, no-wrap
msgid "Database name"
msgstr "数据库名称"

#. type: Table
#: upstream/_guides/databases-dev-services.adoc:140
#, fuzzy, no-wrap
msgid "PostgreSQL, MariaDB, MySQL, IBM Db2, H2"
msgstr "PostgreSQL, MariaDB, MySQL, IBM Db2, H2"

#. type: Table
#: upstream/_guides/databases-dev-services.adoc:141
#, fuzzy, no-wrap
msgid "`quarkus` for the default datasource or name of the datasource"
msgstr " `quarkus` 为默认数据源或数据源的名称"

#. type: Table
#: upstream/_guides/databases-dev-services.adoc:142
#: upstream/_guides/databases-dev-services.adoc:144
#, fuzzy, no-wrap
msgid "`quarkus`"
msgstr " `quarkus` "

#. type: Table
#: upstream/_guides/databases-dev-services.adoc:145
#, fuzzy, no-wrap
msgid "Microsoft SQL Server"
msgstr "微软SQL服务器"

#. type: Table
#: upstream/_guides/databases-dev-services.adoc:146
#, fuzzy, no-wrap
msgid "`SA`"
msgstr " `SA` "

#. type: Table
#: upstream/_guides/databases-dev-services.adoc:147
#, fuzzy, no-wrap
msgid "`Quarkus123`"
msgstr " `Quarkus123` "

#. type: delimited block =
#: upstream/_guides/databases-dev-services.adoc:155
#, fuzzy
msgid "The Microsoft SQL Server Testcontainer doesn't support defining the username or database name.  It also requires a strong password."
msgstr "Microsoft SQL Server Testcontainer不支持定义用户名或数据库名称。它还需要一个强大的密码。"

#. type: delimited block =
#: upstream/_guides/databases-dev-services.adoc:162
#, fuzzy
msgid "For databases supporting it (i.e. all of them except Microsoft SQL Server for which it is only possible to override the password), you can override the database name, username and password used by the Dev Service."
msgstr "对于支持它的数据库（即除了Microsoft SQL Server以外的所有数据库，因为它只能覆盖密码），你可以覆盖开发服务所使用的数据库名称、用户名和密码。"

#. type: delimited block =
#: upstream/_guides/databases-dev-services.adoc:164
#, fuzzy
msgid "See xref:configuration-reference[Configuration Reference] for more information."
msgstr "更多信息见 link:#configuration-reference[[配置-参考]] 。"

#. type: Plain text
#: upstream/_guides/databases-dev-services.adoc:168
#, fuzzy
msgid "Keep in mind that, except if configured otherwise (see below), a Dev Service runs on a random port.  For instance, when you run PostgreSQL as a Dev Service and have `psql` installed on the host, you can connect via:"
msgstr "请记住，除非另有配置（见下文），否则开发服务会在一个随机的端口上运行。例如，当你作为一个开发服务运行PostgreSQL并且在主机上安装了 `psql` ，你可以通过以下方式连接。"

#. type: delimited block -
#: upstream/_guides/databases-dev-services.adoc:172
#, no-wrap
msgid "psql -h localhost -p <random port> -U quarkus\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/databases-dev-services.adoc:175
msgid "The random port can be found with `docker ps`"
msgstr ""

#. type: delimited block -
#: upstream/_guides/databases-dev-services.adoc:179
#, no-wrap
msgid "docker ps\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/databases-dev-services.adoc:181
#, no-wrap
msgid "# returns something like this:\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/databases-dev-services.adoc:184
#, no-wrap
msgid ""
"CONTAINER ID   IMAGE           [..]    PORTS                                         [..]\n"
"b826e3a168c4   postgres:14.2   [..]    0.0.0.0:49174->5432/tcp, :::49174->5432/tcp   [..] <1>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/databases-dev-services.adoc:186
msgid "The random port is `49174`."
msgstr ""

#. type: Plain text
#: upstream/_guides/databases-dev-services.adoc:188
msgid "You can require a fixed port for a database Dev Service using:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/databases-dev-services.adoc:192
#, no-wrap
msgid "quarkus.datasource.devservices.port=<your fixed port> <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/databases-dev-services.adoc:194
#, no-wrap
msgid "quarkus.datasource.\"datasource-name\".devservices.port=<your fixed port> <2>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/databases-dev-services.adoc:196
msgid "Fixed port for the default datasource."
msgstr ""

#. type: Plain text
#: upstream/_guides/databases-dev-services.adoc:197
msgid "Fixed port for a named datasource."
msgstr ""

#. type: delimited block =
#: upstream/_guides/databases-dev-services.adoc:202
msgid "`docker ps` allows for more advanced retrieval of container information using the `--format` argument.  For example, to get the running container ID, the image, the labels and the ports, the following command can be used:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/databases-dev-services.adoc:206
#, no-wrap
msgid "docker ps --format \"table {{.ID}}\\t{{.Image}}\\t{{.Labels}}\\t{{.Ports}}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/databases-dev-services.adoc:209
msgid "An example output using Dev Services for PostgreSQL is the following:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/databases-dev-services.adoc:214
#, no-wrap
msgid ""
"CONTAINER ID   IMAGE          LABELS                                                                        PORTS\n"
"a7034c91a392   postgres:14    org.testcontainers.sessionId=xyz,datasource=default,org.testcontainers=true   0.0.0.0:49154->5432/tcp, :::49154->5432/tcp\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/databases-dev-services.adoc:218
msgid "In the labels tab, we see that Quarkus added the datasource label, which can be very useful in differentiating containers when multiple Dev Services have been started."
msgstr ""

#. type: Title ==
#: upstream/_guides/databases-dev-services.adoc:222
#, no-wrap
msgid "Configuration Reference"
msgstr ""

#. type: delimited block =
#: upstream/_guides/databases-dev-services.adoc:225
msgid "Dev Services for Databases support the following configuration options:"
msgstr ""

# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-12-14 18:10+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/config-mappings.adoc:6
#, fuzzy, no-wrap
msgid "Mapping configuration to objects"
msgstr "将配置映射到对象上"

#. type: Plain text
#: upstream/_guides/config-mappings.adoc:16
#, fuzzy
msgid "With config mappings it is possible to group multiple configuration properties in a single interface that share the same prefix."
msgstr "通过配置映射，可以在一个接口中对共享相同前缀的多个配置属性进行分组。"

#. type: Title ==
#: upstream/_guides/config-mappings.adoc:18
#, fuzzy, no-wrap
msgid "`@ConfigMapping`"
msgstr " `@ConfigMapping` "

#. type: Plain text
#: upstream/_guides/config-mappings.adoc:22
#, fuzzy
msgid "A config mapping requires an interface with minimal metadata configuration and annotated with the `@io.smallrye.config.ConfigMapping` annotation."
msgstr "一个配置映射需要一个具有最小元数据配置的接口，并且用 `@io.smallrye.config.ConfigMapping` 注释来注释。"

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:28
#, no-wrap
msgid ""
"@ConfigMapping(prefix = \"server\")\n"
"interface Server {\n"
"    String host();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:31
#: upstream/_guides/config-mappings.adoc:64
#: upstream/_guides/config-mappings.adoc:148
#: upstream/_guides/config-mappings.adoc:177
#, no-wrap
msgid ""
"    int port();\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/config-mappings.adoc:36
#, fuzzy
msgid "The `Server` interface is able to map configuration properties with the name `server.host` into the `Server.host()` method and `server.port` into `Server.port()` method. The configuration property name to look up is built from the prefix, and the method name with `.` (dot) as the separator."
msgstr " `Server` 接口能够将名称为 `server.host` 的配置属性映射到 `Server.host()` 方法中，将 `server.port` 映射到 `Server.port()` 方法中。要查询的配置属性名称是由前缀建立的，方法名称以 `.` （点）为分隔符。"

#. type: Plain text
#: upstream/_guides/config-mappings.adoc:39
#, fuzzy
msgid "If a mapping fails to match a configuration property a `NoSuchElementException` is thrown, unless the mapped element is an `Optional`."
msgstr "如果一个映射不能匹配配置属性，就会抛出一个 `NoSuchElementException` ，除非映射的元素是一个 `Optional` 。"

#. type: Title ===
#: upstream/_guides/config-mappings.adoc:40
#, fuzzy, no-wrap
msgid "Registration"
msgstr "注册"

#. type: Plain text
#: upstream/_guides/config-mappings.adoc:44
#, fuzzy
msgid "When a Quarkus application starts, a config mapping can be registered twice. One time for _STATIC INIT_ and a second time for _RUNTIME INIT_:"
msgstr "当Quarkus应用程序启动时，一个配置映射可以被注册两次。一次是 _STATIC INIT_ ，第二次是 _RUNTIME INIT_ 。"

#. type: Title ====
#: upstream/_guides/config-mappings.adoc:45
#, fuzzy, no-wrap
msgid "STATIC INIT"
msgstr "静态 INIT"

#. type: Plain text
#: upstream/_guides/config-mappings.adoc:52
#, fuzzy
msgid "Quarkus starts some of its services during static initialization, and `Config` is usually one of the first things that is created. In certain situations it may not be possible to correctly initialize a config mapping. For instance, if the mapping requires values from a custom `ConfigSource`. For this reason, any config mapping requires the annotation `@io.quarkus.runtime.configuration.StaticInitSafe` to mark the mapping as safe to be used at this stage. Learn more about xref:config-extending-support.adoc#custom-config-source[registration] of a custom `ConfigSource`."
msgstr "Quarkus在静态初始化过程中启动一些服务， `Config` ，通常是最先创建的东西之一。在某些情况下，可能无法正确初始化一个配置映射。例如，如果该映射需要来自自定义 `ConfigSource` 的值。出于这个原因，任何配置映射都需要注释 `@io.quarkus.runtime.configuration.StaticInitSafe` ，在这个阶段将映射标记为安全使用。了解更多关于 link:config-extending-support.html#custom-config-source[注册] 一个自定义 `ConfigSource` 。"

#. type: Title =====
#: upstream/_guides/config-mappings.adoc:53
#, fuzzy, no-wrap
msgid "Example"
msgstr "例子"

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:61
#, no-wrap
msgid ""
"@StaticInitSafe\n"
"@ConfigMapping(prefix = \"server\")\n"
"interface Server {\n"
"    String host();\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/config-mappings.adoc:66
#, fuzzy, no-wrap
msgid "RUNTIME INIT"
msgstr "运行时间INIT"

#. type: Plain text
#: upstream/_guides/config-mappings.adoc:70
#, fuzzy
msgid "The _RUNTIME INIT_ stage happens after _STATIC INIT_. There are no restrictions at this stage, and any config mapping is added to the `Config` instance as expected."
msgstr " _RUNTIME INIT_ 阶段发生在 _STATIC INIT_ 之后。在这个阶段没有任何限制，任何配置映射都会按照预期添加到 `Config` 实例中。"

#. type: Title ===
#: upstream/_guides/config-mappings.adoc:71
#, fuzzy, no-wrap
msgid "Retrieval"
msgstr "检索"

#. type: Plain text
#: upstream/_guides/config-mappings.adoc:74
#, fuzzy
msgid "A config mapping interface can be injected into any CDI aware bean:"
msgstr "一个配置映射接口可以被注入到任何CDI感知的Bean中。"

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:80
#, no-wrap
msgid ""
"class BusinessBean {\n"
"    @Inject\n"
"    Server server;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:85
#, no-wrap
msgid ""
"    public void businessMethod() {\n"
"        String host = server.host();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/config-mappings.adoc:89
#, fuzzy
msgid "In non-CDI contexts, use the API `io.smallrye.config.SmallRyeConfig#getConfigMapping` to retrieve the config mapping instance:"
msgstr "在非CDI背景下，使用API `io.smallrye.config.SmallRyeConfig#getConfigMapping` 检索配置映射实例。"

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:94
#, no-wrap
msgid ""
"SmallRyeConfig config = ConfigProvider.getConfig().unwrap(SmallRyeConfig.class);\n"
"Server server = config.getConfigMapping(Server.class);\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/config-mappings.adoc:96
#, fuzzy, no-wrap
msgid "Nested groups"
msgstr "嵌套组"

#. type: Plain text
#: upstream/_guides/config-mappings.adoc:99
#, fuzzy
msgid "A nested mapping provides a way to subgroup other config properties:"
msgstr "嵌套映射提供了一种对其他配置属性进行分组的方法。"

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:105
#: upstream/_guides/config-mappings.adoc:399
#, no-wrap
msgid ""
"@ConfigMapping(prefix = \"server\")\n"
"public interface Server {\n"
"    String host();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:107
#: upstream/_guides/config-mappings.adoc:401
#, no-wrap
msgid "    int port();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:109
#, no-wrap
msgid "    Log log();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:112
#, no-wrap
msgid ""
"    interface Log {\n"
"        boolean enabled();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:114
#, no-wrap
msgid "        String suffix();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:118
#, no-wrap
msgid ""
"        boolean rotate();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Block title
#: upstream/_guides/config-mappings.adoc:120
#: upstream/_guides/config-mappings.adoc:150
#: upstream/_guides/config-mappings.adoc:183
#: upstream/_guides/config-mappings.adoc:209
#: upstream/_guides/config-mappings.adoc:228
#: upstream/_guides/config-mappings.adoc:287
#: upstream/_guides/config-mappings.adoc:341
#: upstream/_guides/config-mappings.adoc:375
#: upstream/_guides/config-mappings.adoc:406
#, fuzzy, no-wrap
msgid "application.properties"
msgstr "应用程序.属性"

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:128
#, no-wrap
msgid ""
"server.host=localhost\n"
"server.port=8080\n"
"server.log.enabled=true\n"
"server.log.suffix=.log\n"
"server.log.rotate=false\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/config-mappings.adoc:131
#, fuzzy
msgid "The method name of a mapping group acts as sub-namespace to the configurations properties."
msgstr "映射组的方法名称作为配置属性的子命名空间。"

#. type: Title ===
#: upstream/_guides/config-mappings.adoc:132
#, fuzzy, no-wrap
msgid "Overriding property names"
msgstr "重写属性名称"

#. type: Title ====
#: upstream/_guides/config-mappings.adoc:134
#, fuzzy, no-wrap
msgid "`@WithName`"
msgstr " `@WithName` "

#. type: Plain text
#: upstream/_guides/config-mappings.adoc:138
#, fuzzy
msgid "If a method name, or a property name do not match with each other, the `@WithName` annotation can override the method name mapping and use the name supplied in the annotation:"
msgstr "如果一个方法名或一个属性名彼此不匹配， `@WithName` 注释可以覆盖方法名映射，并使用注释中提供的名称。"

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:145
#, no-wrap
msgid ""
"@ConfigMapping(prefix = \"server\")\n"
"interface Server {\n"
"    @WithName(\"name\")\n"
"    String host();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:155
#, no-wrap
msgid ""
"server.name=localhost\n"
"server.port=8080\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/config-mappings.adoc:157
#, fuzzy, no-wrap
msgid "`@WithParentName`"
msgstr " `@WithParentName` "

#. type: Plain text
#: upstream/_guides/config-mappings.adoc:161
#, fuzzy
msgid "The `@WithParentName` annotation allows to configurations mapping to inherit its container name, simplifying the configuration property name required to match the mapping:"
msgstr " `@WithParent` 注解允许配置映射继承其容器名称，简化了匹配映射所需的配置属性名称。"

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:167
#, no-wrap
msgid ""
"interface Server {\n"
"    @WithParentName\n"
"    ServerHostAndPort hostAndPort();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:171
#, no-wrap
msgid ""
"    @WithParentName\n"
"    ServerInfo info();\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:174
#, no-wrap
msgid ""
"interface ServerHostAndPort {\n"
"    String host();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:181
#, no-wrap
msgid ""
"interface ServerInfo {\n"
"    String name();\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:189
#, no-wrap
msgid ""
"server.host=localhost\n"
"server.port=8080\n"
"server.name=konoha\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/config-mappings.adoc:194
#, fuzzy
msgid "Without the `@WithParentName` the method `name()` requires the configuration property `server.info.name`. Because we use `@WithParentName`, the `info()` mapping will inherit the parent name from `Server` and `name()` maps to `server.name` instead."
msgstr "如果没有 `@WithParentName` ，方法 `name()` 需要配置属性 `server.info.name` 。因为我们使用了 `@WithParentName` ，所以 `info()` 映射将从 `Server` 继承父名，而 `name()` 则映射到 `server.name` 。"

#. type: Title ====
#: upstream/_guides/config-mappings.adoc:195
#, fuzzy, no-wrap
msgid "NamingStrategy"
msgstr "命名策略"

#. type: Plain text
#: upstream/_guides/config-mappings.adoc:198
#, fuzzy
msgid "Method names in camelCase map to kebab-case property names:"
msgstr "骆驼大写的方法名称映射到凯巴大写的属性名称。"

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:204
#, no-wrap
msgid ""
"@ConfigMapping(prefix = \"server\")\n"
"interface Server {\n"
"    String theHost();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:207
#: upstream/_guides/config-mappings.adoc:226
#, no-wrap
msgid ""
"    int thePort();\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:214
#, no-wrap
msgid ""
"server.the-host=localhost\n"
"server.the-port=8080\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/config-mappings.adoc:217
#, fuzzy
msgid "The mapping strategy can be adjusted by setting `namingStrategy` value in the `@ConfigMapping` annotation:"
msgstr "映射策略可以通过在 `@ConfigMapping` 注释中设置 `namingStrategy` 值来调整。"

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:223
#, no-wrap
msgid ""
"@ConfigMapping(prefix = \"server\", namingStrategy = ConfigMapping.NamingStrategy.VERBATIM)\n"
"public interface ServerVerbatimNamingStrategy {\n"
"    String theHost();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:233
#, no-wrap
msgid ""
"server.theHost=localhost\n"
"server.thePort=8080\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/config-mappings.adoc:236
#, fuzzy
msgid "The `@ConfigMapping` annotation support the following naming strategies:"
msgstr " `@ConfigMapping` 注释支持以下命名策略。"

#. type: Plain text
#: upstream/_guides/config-mappings.adoc:238
#, fuzzy
msgid "`KEBAB_CASE` (default) - The method name is derived by replacing case changes with a dash to map the configuration property."
msgstr " `KEBAB_CASE` (缺省）--方法名称是通过用破折号替换大小写来映射配置属性而得出的。"

#. type: Plain text
#: upstream/_guides/config-mappings.adoc:239
#, fuzzy
msgid "`VERBATIM` - The method name is used as is to map the configuration property."
msgstr " `VERBATIM` - 方法名称被用作映射配置属性的原样。"

#. type: Plain text
#: upstream/_guides/config-mappings.adoc:240
#, fuzzy
msgid "`SNAKE_CASE` - The method name is derived by replacing case changes with an underscore to map the configuration property."
msgstr " `SNAKE_CASE` - 方法的名称是通过用下划线替换大小写的方式得出的，以映射配置属性。"

#. type: Title ===
#: upstream/_guides/config-mappings.adoc:241
#, fuzzy, no-wrap
msgid "Conversions"
msgstr "转换"

#. type: Plain text
#: upstream/_guides/config-mappings.adoc:244
#, fuzzy
msgid "A config mapping class support automatic conversions of all types available for conversion in `Config`:"
msgstr "一个配置映射类支持所有类型的自动转换，可在 `Config` 。"

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:251
#, no-wrap
msgid ""
"@ConfigMapping\n"
"public interface SomeTypes {\n"
"    @WithName(\"int\")\n"
"    int intPrimitive();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:254
#, no-wrap
msgid ""
"    @WithName(\"int\")\n"
"    Integer intWrapper();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:257
#, no-wrap
msgid ""
"    @WithName(\"long\")\n"
"    long longPrimitive();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:260
#, no-wrap
msgid ""
"    @WithName(\"long\")\n"
"    Long longWrapper();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:263
#, no-wrap
msgid ""
"    @WithName(\"float\")\n"
"    float floatPrimitive();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:266
#, no-wrap
msgid ""
"    @WithName(\"float\")\n"
"    Float floatWrapper();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:269
#, no-wrap
msgid ""
"    @WithName(\"double\")\n"
"    double doublePrimitive();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:272
#, no-wrap
msgid ""
"    @WithName(\"double\")\n"
"    Double doubleWrapper();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:275
#, no-wrap
msgid ""
"    @WithName(\"char\")\n"
"    char charPrimitive();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:278
#, no-wrap
msgid ""
"    @WithName(\"char\")\n"
"    Character charWrapper();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:281
#, no-wrap
msgid ""
"    @WithName(\"boolean\")\n"
"    boolean booleanPrimitive();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:285
#, no-wrap
msgid ""
"    @WithName(\"boolean\")\n"
"    Boolean booleanWrapper();\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:296
#, no-wrap
msgid ""
"int=9\n"
"long=9999999999\n"
"float=99.9\n"
"double=99.99\n"
"char=c\n"
"boolean=true\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/config-mappings.adoc:299
#, fuzzy
msgid "This is also valid for `Optional` and friends:"
msgstr "这也适用于 `Optional` 和朋友。"

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:305
#, no-wrap
msgid ""
"@ConfigMapping\n"
"public interface Optionals {\n"
"    Optional<Server> server();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:307
#, no-wrap
msgid "    Optional<String> optional();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:310
#, no-wrap
msgid ""
"    @WithName(\"optional.int\")\n"
"    OptionalInt optionalInt();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:313
#, no-wrap
msgid ""
"    interface Server {\n"
"        String host();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:317
#, no-wrap
msgid ""
"        int port();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/config-mappings.adoc:320
#, fuzzy
msgid "In this case, the mapping won't fail if there is no configuration property to match the mapping."
msgstr "在这种情况下，如果没有配置属性与映射匹配，映射就不会失败。"

#. type: Title ====
#: upstream/_guides/config-mappings.adoc:321
#, fuzzy, no-wrap
msgid "`@WithConverter`"
msgstr " `@WithConverter` "

#. type: Plain text
#: upstream/_guides/config-mappings.adoc:324
#, fuzzy
msgid "The `@WithConverter` annotation provides a way to set a `Converter` to use in a specific mapping:"
msgstr " `@WithConverter` 注解提供了一种方法来设置一个 `Converter` ，以便在特定的映射中使用。"

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:332
#, no-wrap
msgid ""
"@ConfigMapping\n"
"public interface Converters {\n"
"    @WithConverter(FooBarConverter.class)\n"
"    String foo();\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:339
#, no-wrap
msgid ""
"public static class FooBarConverter implements Converter<String> {\n"
"    @Override\n"
"    public String convert(final String value) {\n"
"        return \"bar\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:345
#, no-wrap
msgid "foo=foo\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/config-mappings.adoc:348
#, fuzzy
msgid "A call to `Converters.foo()` results in the value `bar`."
msgstr "调用 `Converters.foo()` ，得到的值是 `bar` 。"

#. type: Title ====
#: upstream/_guides/config-mappings.adoc:349
#, fuzzy, no-wrap
msgid "Collections"
msgstr "收藏品"

#. type: Plain text
#: upstream/_guides/config-mappings.adoc:352
#, fuzzy
msgid "A config mapping is also able to map collections types `List` and `Set`:"
msgstr "一个配置映射也能够映射集合类型 `List` 和 `Set` 。"

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:358
#, no-wrap
msgid ""
"@ConfigMapping(prefix = \"server\")\n"
"public interface ServerCollections {\n"
"    Set<Environment> environments();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:361
#, no-wrap
msgid ""
"    interface Environment {\n"
"        String name();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:363
#, no-wrap
msgid "        List<App> apps();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:366
#, no-wrap
msgid ""
"        interface App {\n"
"            String name();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:368
#, no-wrap
msgid "            List<String> services();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:373
#, no-wrap
msgid ""
"            Optional<List<String>> databases();\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:384
#, no-wrap
msgid ""
"server.environments[0].name=dev\n"
"server.environments[0].apps[0].name=rest\n"
"server.environments[0].apps[0].services=bookstore,registration\n"
"server.environments[0].apps[0].databases=pg,h2\n"
"server.environments[0].apps[1].name=batch\n"
"server.environments[0].apps[1].services=stock,warehouse\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/config-mappings.adoc:389
#, fuzzy
msgid "The `List` or `Set` mappings can use xref:config-reference.adoc#indexed-properties[indexed properties] to map configuration values in mapping groups. For collection with simple element types like `String`, their configuration value is a comma separated string."
msgstr " `List` 或 `Set` 映射可以使用 link:config-reference.html#indexed-properties[索引的属性] 来映射映射组中的配置值。对于具有简单元素类型的集合，如 `String` ，其配置值是一个逗号分隔的字符串。"

#. type: Title ====
#: upstream/_guides/config-mappings.adoc:390
#, fuzzy, no-wrap
msgid "Maps"
msgstr "地图"

#. type: Plain text
#: upstream/_guides/config-mappings.adoc:393
#, fuzzy
msgid "A config mapping is also able to map a `Map`:"
msgstr "一个配置映射也能够映射一个 `Map` 。"

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:404
#, no-wrap
msgid ""
"    Map<String, String> form();\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:414
#, no-wrap
msgid ""
"server.host=localhost\n"
"server.port=8080\n"
"server.form.login-page=login.html\n"
"server.form.error-page=error.html\n"
"server.form.landing-page=index.html\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/config-mappings.adoc:418
#, fuzzy
msgid "The configuration property needs to specify an additional name to act as the key. In this case the `form()` `Map` will contain three elements with the keys `login-page`, `error-page` and `landing-page`."
msgstr "配置属性需要指定一个额外的名字来作为键。在这种情况下， `form()` `Map` 将包含三个元素，其键为 `login-page` , `error-page` 和 `landing-page` 。"

#. type: Title ===
#: upstream/_guides/config-mappings.adoc:419
#, fuzzy, no-wrap
msgid "Defaults"
msgstr "默认值"

#. type: Plain text
#: upstream/_guides/config-mappings.adoc:423
#, fuzzy
msgid "The `@WithDefault` annotation allows to set a default property into a mapping (and prevent and error if the configuration value is not available in any `ConfigSource`):"
msgstr " `@WithDefault` 注解允许在映射中设置一个默认的属性（如果配置值在任何 `ConfigSource` 中不可用，则防止错误）。"

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:429
#, no-wrap
msgid ""
"public interface Defaults {\n"
"    @WithDefault(\"foo\")\n"
"    String foo();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:433
#, no-wrap
msgid ""
"    @WithDefault(\"bar\")\n"
"    String bar();\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/config-mappings.adoc:437
#, fuzzy
msgid "No configuration properties required. The `Defaults.foo()` will return the value `foo` and `Defaults.bar()` will return the value `bar`."
msgstr "不需要配置属性。 `Defaults.foo()` 将返回值 `foo` ， `Defaults.bar()` 将返回值 `bar` 。"

#. type: Title ===
#: upstream/_guides/config-mappings.adoc:438
#, fuzzy, no-wrap
msgid "Validation"
msgstr "审定"

#. type: Plain text
#: upstream/_guides/config-mappings.adoc:442
#, fuzzy
msgid "A config mapping may combine annotations from https://beanvalidation.org[Bean Validation] to validate configuration values:"
msgstr "一个配置映射可以结合 link:https://beanvalidation.org[Bean Validation] 的注解来验证配置值。"

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:449
#, no-wrap
msgid ""
"@ConfigMapping(prefix = \"server\")\n"
"interface Server {\n"
"    @Size(min = 2, max = 20)\n"
"    String host();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:453
#, no-wrap
msgid ""
"    @Max(10000)\n"
"    int port();\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/config-mappings.adoc:457
#, fuzzy
msgid "For validation to work, the `quarkus-hibernate-validator` extension is required, and it is performed automatically."
msgstr "为了使验证工作顺利进行，需要 `quarkus-hibernate-validator` ，而且是自动进行的。"

#. type: Title ===
#: upstream/_guides/config-mappings.adoc:458
#, fuzzy, no-wrap
msgid "Mocking"
msgstr "嘲讽"

#. type: Plain text
#: upstream/_guides/config-mappings.adoc:462
#, fuzzy
msgid "A mapping interface implementation is not a proxy, so it cannot be mocked directly with `@InjectMock` like other CDI beans. One trick is to make it proxyable with a producer method:"
msgstr "一个映射接口的实现不是一个代理，所以它不能像其他CDI Bean一样直接用 `@InjectMock` 。一个技巧是用生产者方法使其可代理。"

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:468
#, no-wrap
msgid ""
"public class ServerMockProducer {\n"
"    @Inject\n"
"    Config config;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:476
#, no-wrap
msgid ""
"    @Produces\n"
"    @ApplicationScoped\n"
"    @io.quarkus.test.Mock\n"
"    Server server() {\n"
"        return config.unwrap(SmallRyeConfig.class).getConfigMapping(Server.class);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/config-mappings.adoc:479
#, fuzzy
msgid "The `Server` can be injected as a mock into a Quarkus test class with `@InjectMock`:"
msgstr " `Server` 可以作为一个模拟注入到Quarkus测试类中，使用 `@InjectMock` 。"

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:486
#, no-wrap
msgid ""
"@QuarkusTest\n"
"class ServerMockTest {\n"
"    @InjectMock\n"
"    Server server;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:493
#, no-wrap
msgid ""
"    @Test\n"
"    void localhost() {\n"
"        Mockito.when(server.host()).thenReturn(\"localhost\");\n"
"        assertEquals(\"localhost\", server.host());\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/config-mappings.adoc:496
#, fuzzy
msgid "The mock is just an empty shell without any actual configuration values."
msgstr "模拟只是一个没有任何实际配置值的空壳。"

#. type: Plain text
#: upstream/_guides/config-mappings.adoc:499
#, fuzzy
msgid "If the goal is to only mock certain configuration values and retain the original configuration, the mocking instance requires a spy:"
msgstr "如果目标是只模拟某些配置值并保留原始配置，那么模拟实例需要一个间谍。"

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:506
#, no-wrap
msgid ""
"@ConfigMapping(prefix = \"app\")\n"
"public interface AppConfig {\n"
"    @WithDefault(\"app\")\n"
"    String name();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:508
#, no-wrap
msgid "    Info info();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:516
#, no-wrap
msgid ""
"    interface Info {\n"
"        @WithDefault(\"alias\")\n"
"        String alias();\n"
"        @WithDefault(\"10\")\n"
"        Integer count();\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:520
#, no-wrap
msgid ""
"public static class AppConfigProducer {\n"
"    @Inject\n"
"    Config config;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:532
#, no-wrap
msgid ""
"    @Produces\n"
"    @ApplicationScoped\n"
"    @io.quarkus.test.Mock\n"
"    AppConfig appConfig() {\n"
"        AppConfig appConfig = config.unwrap(SmallRyeConfig.class).getConfigMapping(AppConfig.class);\n"
"        AppConfig appConfigSpy = Mockito.spy(appConfig);\n"
"        AppConfig.Info infoSpy = Mockito.spy(appConfig.info());\n"
"        Mockito.when(appConfigSpy.info()).thenReturn(infoSpy);\n"
"        return appConfigSpy;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/config-mappings.adoc:535
#, fuzzy
msgid "The `AppConfig` can be injected as a mock into a Quarkus test class with `@Inject`:"
msgstr " `AppConfig` 可以作为一个模拟注入到Quarkus测试类中，使用 `@Inject` 。"

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:542
#, no-wrap
msgid ""
"@QuarkusTest\n"
"class AppConfigTest {\n"
"    @Inject\n"
"    AppConfig appConfig;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:547
#, no-wrap
msgid ""
"    @Test\n"
"    void localhost() {\n"
"        Mockito.when(appConfig.name()).thenReturn(\"mocked-app\");\n"
"        assertEquals(\"mocked-app\", server.host());\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-mappings.adoc:552
#, no-wrap
msgid ""
"        Mockito.when(appConfig.info().alias()).thenReturn(\"mocked-alias\");\n"
"        assertEquals(\"mocked-alias\", server.info().alias());\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/config-mappings.adoc:554
#, fuzzy
msgid "Nested elements need to be spied individually by Mockito."
msgstr "嵌套的元素需要被Mockito单独窥视。"

#, fuzzy
#~ msgid "[.line-through]#`@ConfigProperties`# (Deprecated)"
#~ msgstr " `@ConfigProperties` (已弃用)"

#, fuzzy
#~ msgid "This feature will be removed soon, please update your code base and use `@ConfigMapping` instead."
#~ msgstr "这个功能将很快被删除，请更新你的代码库并使用 `@ConfigMapping` 。"

#, fuzzy
#~ msgid "The `@io.quarkus.arc.config.ConfigProperties` annotation is able to group multiple related configuration values in its own class:"
#~ msgstr " `@io.quarkus.arc.config.ConfigProperties` 注解能够将多个相关的配置值归入自己的类。"

#, fuzzy
#~ msgid "`prefix` is optional. If not set then the prefix to be used will be determined by the class name. In this case it would still be `greeting` (since the `Configuration` suffix is removed). If the class were named `GreetingExtraConfiguration` then the resulting default prefix would be `greeting-extra`."
#~ msgstr " `prefix` 是可选的。如果不设置，那么要使用的前缀将由类名决定。在这种情况下，它仍然是 （因为 的后缀被移除）。如果该类被命名为 ，那么产生的默认前缀将是 。 `greeting` `Configuration` `GreetingExtraConfiguration` `greeting-extra` "

#, fuzzy
#~ msgid "`!` will be the default value if `greeting.suffix` is not set."
#~ msgstr " `!` 如果没有设置 ，将是默认值。 `greeting.suffix` "

#, fuzzy
#~ msgid "Inject the `GreetingResource` with CDI `@Inject`:"
#~ msgstr "注入CDI的 `GreetingResource` `@Inject` 。"

#, fuzzy
#~ msgid "Another alternative style provided by Quarkus is to create `GreetingConfiguration` as an interface:"
#~ msgstr "Quarkus提供的另一种替代风格是创建 `GreetingConfiguration` ，作为一种界面。"

#, fuzzy
#~ msgid "The `@ConfigProperty` annotation is needed because the name of the configuration property that the method corresponds does not follow the getter method naming conventions."
#~ msgstr "之所以需要 `@ConfigProperty` 注释，是因为该方法所对应的配置属性的名称并不遵循getter方法的命名惯例。"

#, fuzzy
#~ msgid "In this case since `name` is not set, the corresponding property will be `greeting.suffix`."
#~ msgstr "在这种情况下，由于 `name` 没有被设置，相应的属性将是 `greeting.suffix` 。"

#, fuzzy
#~ msgid "It is unnecessary to specify the `@ConfigProperty` annotation because the method name follows the getter method naming conventions (`greeting.name` being the corresponding property) and no default value is required."
#~ msgstr "没有必要指定 `@ConfigProperty` 注解，因为该方法的名称遵循getter方法的命名惯例（ `greeting.name` 是对应的属性），而且不需要默认值。"

#, fuzzy
#~ msgid "When using `@ConfigProperties` on a class or an interface, if the value of one of its fields is not provided, the application startup will fail, and a `javax.enterprise.inject.spi.DeploymentException` will be thrown. This does not apply to `Optional` fields and fields with a default value."
#~ msgstr "当在一个类或一个接口上使用 `@ConfigProperties` ，如果它的一个字段的值没有被提供，应用程序的启动将失败，并且会抛出一个 `javax.enterprise.inject.spi.DeploymentException` 。这不适用于 `Optional` 字段和有默认值的字段。"

#, fuzzy
#~ msgid "Additional notes on @ConfigProperties"
#~ msgstr "关于@ConfigProperties的补充说明"

#, fuzzy
#~ msgid "When using a regular class annotated with `@ConfigProperties` the class doesn't necessarily have to declare getters and setters. Having simple public non-final fields is valid as well."
#~ msgstr "当使用一个带有 `@ConfigProperties` 注释的普通类时，该类不一定要声明getters和setters。拥有简单的公共非终结字段也是有效的。"

#, fuzzy
#~ msgid "Furthermore, the configuration classes support nested object configuration. Suppose there was a need to have an extra layer of greeting configuration named `content` that would contain a few fields:"
#~ msgstr "此外，配置类支持嵌套对象配置。假设需要有一个额外的问候配置层，名为 `content` ，它将包含几个字段。"

#, fuzzy
#~ msgid "The name of the field (not the class name) will determine the name of the properties that are bound to the object."
#~ msgstr "字段的名称（而不是类的名称）将决定绑定到对象的属性的名称。"

#, fuzzy
#~ msgid "Setting the properties would occur in the normal manner:"
#~ msgstr "设置属性将以正常方式发生。"

#, fuzzy
#~ msgid "Furthermore, classes annotated with `@ConfigProperties` can be annotated with Bean Validation annotations:"
#~ msgstr "此外，用 `@ConfigProperties` 注释的类可以用Bean Validation注解来标注。"

#, fuzzy
#~ msgid "For validation to work, the `quarkus-hibernate-validator` extension is required."
#~ msgstr "为了使验证工作顺利进行，需要有 `quarkus-hibernate-validator` 的扩展。"

#, fuzzy
#~ msgid "Using same ConfigProperties with different prefixes"
#~ msgstr "使用不同前缀的相同的ConfigProperties"

#, fuzzy
#~ msgid "Quarkus also supports the use of the same `@ConfigProperties` object with different prefixes for each injection point using the `io.quarkus.arc.config.@ConfigPrefix` annotation. If `GreetingConfiguration` from above needs to be used for both the `greeting` prefix and the `other` prefix:"
#~ msgstr "Quarkus还支持使用 `io.quarkus.arc.config.@ConfigPrefix` 注释为每个注入点使用相同的 `@ConfigProperties` 对象的不同前缀。如果上面的 `GreetingConfiguration` ，需要同时使用 `greeting` 前缀和 `other` 前缀。"

#, fuzzy
#~ msgid "At this injection point `greetingConfiguration` will use the `greeting` prefix since that is what has been defined on `@ConfigProperties`."
#~ msgstr "在这个注入点， `greetingConfiguration` 将使用 `greeting` 前缀，因为这是在 `@ConfigProperties` 上已经定义的内容。"

#, fuzzy
#~ msgid "At this injection point `otherConfiguration` will use the `other` prefix from `@ConfigPrefix` instead of the `greeting` prefix. Notice that in this case `@Inject` is not required."
#~ msgstr "在这个注入点， `otherConfiguration` 将使用来自 `@ConfigPrefix` 的 `other` 前缀，而不是 `greeting` 前缀。注意，在这种情况下， `@Inject` 是不需要的。"

#, fuzzy
#~ msgid "Combining ConfigProperties with build time conditions"
#~ msgstr "将ConfigProperties与构建时间条件相结合"

#, fuzzy
#~ msgid "Quarkus allows you to define conditions evaluated at build time (`@IfBuildProfile`, `@UnlessBuildProfile`, `@IfBuildProperty` and `@UnlessBuildProperty`) to enable or not the annotations `@ConfigProperties` and `@ConfigPrefix` which gives you a very flexible way to map your configuration."
#~ msgstr "Quarkus允许你定义在构建时评估的条件（ `@IfBuildProfile` , `@UnlessBuildProfile` , `@IfBuildProperty` 和 `@UnlessBuildProperty` ）来启用或不启用注释 `@ConfigProperties` 和 `@ConfigPrefix` ，这给了你一个非常灵活的方式来映射你的配置。"

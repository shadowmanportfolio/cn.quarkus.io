# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-11-09 13:39+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/podman.adoc:6
#, fuzzy, no-wrap
msgid "Using Podman with Quarkus"
msgstr "在Quarkus中使用Podman"

#. type: Plain text
#: upstream/_guides/podman.adoc:11
#, fuzzy
msgid "https://podman.io/[Podman] is a daemonless and rootless container engine for developing, managing, and running OCI Containers on your Linux system or other OS.  If you're using Podman with Quarkus, some one-off setup is needed, but once it's done, you can take advantage of all the Quarkus features."
msgstr "link:https://podman.io/[Podman] 是一个无守护程序和无根的容器引擎，用于在你的Linux系统或其他操作系统上开发、管理和运行OCI容器。Podman的使用方式与Docker的 `podman-docker` 包相同。"

#. type: Title ==
#: upstream/_guides/podman.adoc:12
#, fuzzy, no-wrap
msgid "Installing Podman"
msgstr "在Linux上安装Podman"

#. type: Title ===
#: upstream/_guides/podman.adoc:14
#, fuzzy, no-wrap
msgid "macOS"
msgstr "macOS"

#. type: Plain text
#: upstream/_guides/podman.adoc:21
#, fuzzy
msgid "Containers are really Linux.  As such, Linux containers cannot run natively on macOS or Windows.  Therefore, the containers must run in a Linux virtual machine (VM), and a Podman client interacts with that VM.  A native hypervisor subsystem and virtualization software is used to run the Linux VM on the OS, and then containers are run within this VM.  In Podman, this is known as the Podman machine, and it is built into the tool."
msgstr "容器实际上是Linux。因此，Linux容器不能在MacOS或Windows上运行。因此，容器必须在Linux虚拟机（VM）中运行，并且Podman客户端与该虚拟机进行交互。本地管理程序子系统和虚拟化软件被用来在操作系统上运行Linux虚拟机，然后容器在这个虚拟机中运行。在Podman中，这被称为Podman机器，它被内置在工具中。"

#. type: Plain text
#: upstream/_guides/podman.adoc:24
#, fuzzy
msgid "macOS users can install Podman through https://brew.sh/[Homebrew].  Once you have set up `brew`, you can use the `brew install` command to install Podman and `docker-compose`:"
msgstr "macOS用户可以通过 link:https://brew.sh/[Homebrew] 安装Podman。一旦你设置了 `brew` ，你可以使用 `brew install` 命令来安装Podman和 `docker-compose` 。"

#. type: delimited block -
#: upstream/_guides/podman.adoc:35
#, no-wrap
msgid ""
"brew install podman\n"
"brew install docker-compose\n"
"podman machine init -v $HOME:$HOME\n"
"PODMAN_VERSION=`podman -v | sed 's/[a-zA-Z ]*//'`\n"
"sudo /opt/homebrew/Cellar/podman/$PODMAN_VERSION/bin/podman-mac-helper install\n"
"podman machine set --rootful\n"
"podman machine start\n"
"alias docker='podman'\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/podman.adoc:38
#, fuzzy
msgid "If you're using Podman 4.1 or higher, you don't need the `-v $HOME:$HOME` volume mount."
msgstr "如果你使用Podman 4.1或更高版本，你不需要 `-v $HOME:$HOME` 卷装载。"

#. type: Plain text
#: upstream/_guides/podman.adoc:40
#, fuzzy
msgid "If you're using Mac M1, an extra step is required to https://edofic.com/posts/2021-09-12-podman-m1-amd64[make AMD64 images work]:"
msgstr "如果你使用Mac M1，需要一个额外的步骤来 link:https://edofic.com/posts/2021-09-12-podman-m1-amd64[使AMD64图像工作] 。"

#. type: delimited block -
#: upstream/_guides/podman.adoc:47
#, no-wrap
msgid ""
"podman machine ssh\n"
"sudo -i\n"
"rpm-ostree install qemu-user-static\n"
"systemctl reboot\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/podman.adoc:50
#, fuzzy
msgid "Once the virtual machine restarts, you should be good to run dev services."
msgstr "一旦虚拟机重新启动，你应该可以运行开发服务了。"

#. type: Plain text
#: upstream/_guides/podman.adoc:52
#, fuzzy
msgid "For more details, please see"
msgstr "更多细节，请见"

#. type: Plain text
#: upstream/_guides/podman.adoc:54
#, fuzzy
msgid "the https://podman.io/getting-started/installation#macos[official Podman documentation]"
msgstr "link:https://podman.io/getting-started/installation#macos[官方的Podman文件]"

#. type: Plain text
#: upstream/_guides/podman.adoc:55
#, fuzzy
msgid "article about https://www.redhat.com/sysadmin/replace-docker-podman-macos[running Podman on Mac]"
msgstr "关于 link:https://www.redhat.com/sysadmin/replace-docker-podman-macos[在Mac上运行Podman] 的文章"

#. type: Plain text
#: upstream/_guides/podman.adoc:56
#, fuzzy
msgid "https://xphyr.net/post/podman_on_osx/[another article], with good guidance on `--rootful` and mounting volumes"
msgstr "link:https://xphyr.net/post/podman_on_osx/[另一篇文章] ，对 `--rootful` 和安装卷有很好的指导。"

#. type: Plain text
#: upstream/_guides/podman.adoc:57
#, fuzzy
msgid "article about https://edofic.com/posts/2021-09-12-podman-m1-amd64[running AMD64 images with Podman on Mac M1]"
msgstr "关于 link:https://edofic.com/posts/2021-09-12-podman-m1-amd64[在Mac M1上用Podman运行AMD64图像] 的文章"

#. type: Title ===
#: upstream/_guides/podman.adoc:58
#, fuzzy, no-wrap
msgid "Windows"
msgstr "窗户"

#. type: Plain text
#: upstream/_guides/podman.adoc:61
#, fuzzy
msgid "Please see the https://github.com/containers/podman/blob/main/docs/tutorials/podman-for-windows.md[Podman for Windows guide] for setup and usage instructions."
msgstr "请参阅 link:https://github.com/containers/podman/blob/main/docs/tutorials/podman-for-windows.md[Podman for Windows指南] ，了解设置和使用说明。"

#. type: Plain text
#: upstream/_guides/podman.adoc:63
#, fuzzy
msgid "Before starting the Podman machine, set it to prefer rootful container execution:"
msgstr "在启动Podman机器之前，将其设置为倾向于rootful容器执行。"

#. type: delimited block -
#: upstream/_guides/podman.adoc:67
#, no-wrap
msgid "podman machine set --rootful\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/podman.adoc:70
#, fuzzy
msgid "This action only needs to be done once."
msgstr "这个动作只需要做一次。"

#. type: Title ===
#: upstream/_guides/podman.adoc:71
#, fuzzy, no-wrap
msgid "Linux"
msgstr "基础设施"

#. type: Plain text
#: upstream/_guides/podman.adoc:77
#, fuzzy
msgid "The Podman package is available in several Linux distributions.  Podman can be used the same way as Docker with the `podman-docker` package.  To install it for your OS, please refer to the https://podman.io/getting-started/installation[Podman installation guide].  Below is the short installation instruction for popular Linux distributions:"
msgstr "Podman软件包在多个Linux发行版中可用。要为你的操作系统安装它，请参考 link:https://podman.io/getting-started/installation[Podman安装指南] 。以下是流行的Linux发行版的简短安装说明。"

#. type: Title ====
#: upstream/_guides/podman.adoc:78
#, fuzzy, no-wrap
msgid "Fedora"
msgstr "Fedora"

#. type: delimited block -
#: upstream/_guides/podman.adoc:83
#, no-wrap
msgid "sudo dnf install podman podman-docker docker-compose\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/podman.adoc:85
#, fuzzy, no-wrap
msgid "Ubuntu (21.04 and later)"
msgstr "乌班图（21.04及以后版本）"

#. type: delimited block -
#: upstream/_guides/podman.adoc:90
#, no-wrap
msgid "sudo apt install podman podman-docker docker-compose\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/podman.adoc:92
#, fuzzy, no-wrap
msgid "Setting DOCKER_HOST on Linux"
msgstr "在Linux上设置DOCKER_HOST"

#. type: Plain text
#: upstream/_guides/podman.adoc:100
#, fuzzy
msgid "Podman supports two modes of operation: rootful, in which case the container runs as root on the host system, and rootless, where the container runs under a standard Unix user account.  On Linux, the REST API Unix socket is, by default, restricted to only allow the root user to access it.  This prevents someone from using a container to achieve a privilege escalation on the syetem.  While these restrictions can be softened to allow a special group instead of just root, the recommended approach is to use rootless Podman on Linux.  To use rootless Podman, you need to set a DOCKER_HOST environment variable to point to the user-specific socket.  In both cases, you need to start the REST API by enabling the Podman socket service through systemd."
msgstr "Podman支持两种操作模式：rootful，在这种情况下，容器在主机系统上以root身份运行；无root，容器在标准Unix用户账户下运行。在Linux上，REST API Unix套接字默认被限制为只允许root用户访问。这可以防止有人利用容器来实现系统的权限升级。虽然这些限制可以软化，允许一个特殊的组，而不仅仅是root，但建议的方法是在Linux上使用无根的Podman。要使用无根的Podman，你需要设置一个DOCKER_HOST环境变量来指向用户特定的套接字。在这两种情况下，你都需要通过systemd启用Podman socket服务来启动REST API。"

#. type: delimited block -
#: upstream/_guides/podman.adoc:107
#, no-wrap
msgid ""
"# Enable the podman socket with Docker REST API (only needs to be done once)\n"
"systemctl --user enable podman.socket --now\n"
"# Set the required environment variables (need to be run everytime or added to profile)\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/podman.adoc:109
#, no-wrap
msgid "export DOCKER_HOST=unix:///run/user/${UID}/podman/podman.sock\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/podman.adoc:113
#, fuzzy
msgid "For a detailed explanation, see this https://quarkus.io/blog/quarkus-devservices-testcontainers-podman/[blog article]."
msgstr "详细解释请见本 link:https://quarkus.io/blog/quarkus-devservices-testcontainers-podman/[博客文章] 。"

#. type: Title ==
#: upstream/_guides/podman.adoc:114
#, fuzzy, no-wrap
msgid "After installation"
msgstr "安装后"

#. type: Title ===
#: upstream/_guides/podman.adoc:116
#, fuzzy, no-wrap
msgid "Testcontainers privileges"
msgstr "测试容器的特权"

#. type: Plain text
#: upstream/_guides/podman.adoc:119
#, fuzzy
msgid "Edit `~/.testcontainers.properties` and add the following line"
msgstr "编辑 `~/.testcontainers.properties` ，并添加以下一行"

#. type: delimited block -
#: upstream/_guides/podman.adoc:123
#, no-wrap
msgid "ryuk.container.privileged=true\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/podman.adoc:126
#, fuzzy
msgid "Alternatively, you can disable ryuk:"
msgstr "另外，你也可以禁用ryuk。"

#. type: delimited block -
#: upstream/_guides/podman.adoc:130
#, no-wrap
msgid "export TESTCONTAINERS_RYUK_DISABLED=true #not recommended - see above!\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/podman.adoc:134
msgid "This has the disadvantage of https://github.com/containers/podman/discussions/14238[disabling container cleanup], so you may find stale containers hanging around.  This can be a problem if you're running automated tests."
msgstr ""

#. type: Title ==
#: upstream/_guides/podman.adoc:135
#, fuzzy, no-wrap
msgid "Short names of images"
msgstr "图像的短名称"

#. type: Plain text
#: upstream/_guides/podman.adoc:139
#, fuzzy
msgid "Testcontainers and Quarkus Dev Services also expect the container service they make requests against to be non-interactive.  In case you have multiple registries configured in your Docker or Podman configuration, and when using short image names, Podman responds with a prompt asking which registry should be used to pull images."
msgstr "Testcontainers和Quarkus Dev Services也希望他们对容器服务提出的请求是非交互式的。如果你在Docker或Podman配置中配置了多个注册表，并且使用短的镜像名称时，Podman会响应一个提示，询问应该使用哪个注册表来提取镜像。"

#. type: Plain text
#: upstream/_guides/podman.adoc:142
#, fuzzy
msgid "While we recommend you to avoid short names and always use fully specified names including the registry, Testcontainers unfortunately relies on short names internally for the time being.  If you are using Testcontainers, either directly or through Dev Services, you need to disable this prompt by setting the `short-name-mode=\"disabled\"` configuration property of Podman in `/etc/containers/registries.conf`."
msgstr "虽然我们建议你避免使用短名称，总是使用包括注册表在内的完全指定的名称，但不幸的是，Testcontainers暂时在内部依赖短名称。如果你直接或通过Dev Services使用Testcontainers，你需要在 `/etc/containers/registries.conf` ，通过设置Podman的 `short-name-mode=\"disabled\"` 配置属性来禁用这个提示。"

#, fuzzy
#~ msgid "Podman is a daemonless container engine. Most Quarkus Dev Services and Testcontainers expect a running Docker daemon listening at a Unix socket.  That's why the following steps are required."
#~ msgstr "Podman是一个无守护程序的容器引擎。大多数Quarkus开发服务和Testcontainers都希望有一个运行中的Docker守护程序在Unix套接字上监听。这就是为什么需要采取以下步骤。"

#, fuzzy
#~ msgid "To make changes permanent, add the exported environment variables to the \"init\" file from your shell. For example, the `bash` shell uses the `~/.bashrc` file:"
#~ msgstr "要使改变永久化，请将导出的环境变量添加到你的shell的 \"init \"文件中。例如， `bash` shell使用 `~/.bashrc` 文件。"

#, fuzzy
#~ msgid "Other operating systems"
#~ msgstr "其他操作系统"

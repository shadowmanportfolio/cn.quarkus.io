# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-11-09 13:39+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/deploying-to-kubernetes.adoc:6
#, fuzzy, no-wrap
msgid "Kubernetes extension"
msgstr "Kubernetes扩展"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:15
#, fuzzy
msgid "Quarkus offers the ability to automatically generate Kubernetes resources based on sane defaults and user-supplied configuration using https://github.com/dekorateio/dekorate/[dekorate].  It currently supports generating resources for vanilla <<#kubernetes,Kubernetes>>, <<#openshift,OpenShift>> and <<#knative,Knative>>.  Furthermore, Quarkus can deploy the application to a target Kubernetes cluster by applying the generated manifests to the target cluster's API Server.  Finally, when either one of container image extensions is present (see the xref:container-image.adoc[container image guide] for more details), Quarkus has the ability to create a container image and push it to a registry *before* deploying the application to the target platform."
msgstr "Quarkus提供了自动生成Kubernetes资源的能力，这些资源基于合理的默认值和用户使用 link:https://github.com/dekorateio/dekorate/[dekorate] 提供的配置。它目前支持为vanilla link:#kubernetes[Kubernetes] 、 link:#openshift[OpenShift] 和 link:#knative[Knative] 生成资源。此外，Quarkus可以通过将生成的清单应用于目标集群的API服务器，将应用程序部署到目标Kubernetes集群。最后，当容器镜像扩展中的任何一个出现时（详见 link:container-imag.html[容器镜像指南] ），Quarkus有能力创建一个容器镜像，并 *在* 将应用程序部署到目标平台 *之前* 将其推送到注册表。"

#. type: Title ==
#: upstream/_guides/deploying-to-kubernetes.adoc:16
#, fuzzy, no-wrap
msgid "Prerequisites"
msgstr "先决条件"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:21
#, fuzzy
msgid "Access to a Kubernetes cluster (Minikube is a viable option)"
msgstr "访问一个Kubernetes集群（Minikube是一个可行的选择）"

#. type: Block title
#: upstream/_guides/deploying-to-kubernetes.adoc:23
#: upstream/_guides/deploying-to-kubernetes.adoc:900
#, fuzzy, no-wrap
msgid "Kubernetes"
msgstr "库伯内特斯"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:26
#, fuzzy
msgid "Let's create a new project that contains both the Kubernetes and Jib extensions:"
msgstr "让我们创建一个新的项目，包含Kubernetes和Jib扩展。"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:33
#, fuzzy
msgid "This added the following dependencies to the build file:"
msgstr "这在构建文件中添加了以下依赖项。"

#. type: Block title
#: upstream/_guides/deploying-to-kubernetes.adoc:35
#: upstream/_guides/deploying-to-kubernetes.adoc:553
#: upstream/_guides/deploying-to-kubernetes.adoc:805
#: upstream/_guides/deploying-to-kubernetes.adoc:834
#, fuzzy, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:49
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-resteasy-reactive</artifactId>\n"
"</dependency>\n"
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-kubernetes</artifactId>\n"
"</dependency>\n"
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-container-image-jib</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_guides/deploying-to-kubernetes.adoc:52
#: upstream/_guides/deploying-to-kubernetes.adoc:562
#: upstream/_guides/deploying-to-kubernetes.adoc:814
#: upstream/_guides/deploying-to-kubernetes.adoc:843
#, fuzzy, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:57
#, no-wrap
msgid ""
"implementation(\"io.quarkus:quarkus-resteasy-reactive\")\n"
"implementation(\"io.quarkus:quarkus-kubernetes\")\n"
"implementation(\"io.quarkus:quarkus-container-image-jib\")\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:61
#, fuzzy
msgid "By adding these dependencies, we enable the generation of Kubernetes manifests each time we perform a build while also enabling the build of a container image using Jib.  For example, following the execution of:"
msgstr "通过添加这些依赖关系，我们在每次执行构建时都能生成Kubernetes清单，同时也能使用Jib构建容器镜像。例如，在执行了:"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:66
#, fuzzy
msgid "you will notice amongst the other files that are created, two files named `kubernetes.json` and `kubernetes.yml` in the `target/kubernetes/` directory."
msgstr "你会注意到，在其他被创建的文件中，有两个名为 `kubernetes.json` 和 `kubernetes.yml` 的文件在 `target/kubernetes/` 目录中。"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:68
#, fuzzy
msgid "If you look at either file you will see that it contains both a Kubernetes `Deployment` and a `Service`."
msgstr "如果你看一下这两个文件，你会发现它同时包含一个Kubernetes `Deployment` 和一个 `Service` 。"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:70
#, fuzzy
msgid "The full source of the `kubernetes.json` file looks something like this:"
msgstr " `kubernetes.json` 文件的完整来源看起来是这样的。"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:149
#, no-wrap
msgid ""
"{\n"
"  {\n"
"    \"apiVersion\" : \"apps/v1\",\n"
"    \"kind\" : \"Deployment\",\n"
"    \"metadata\" : {\n"
"      \"annotations\": {\n"
"       \"app.quarkus.io/vcs-url\" : \"<some url>\",\n"
"       \"app.quarkus.io/commit-id\" : \"<some git SHA>\",\n"
"      },\n"
"      \"labels\" : {\n"
"        \"app.kubernetes.io/name\" : \"test-quarkus-app\",\n"
"        \"app.kubernetes.io/version\" : \"1.0.0-SNAPSHOT\",\n"
"      },\n"
"      \"name\" : \"test-quarkus-app\"\n"
"    },\n"
"    \"spec\" : {\n"
"      \"replicas\" : 1,\n"
"      \"selector\" : {\n"
"        \"matchLabels\" : {\n"
"          \"app.kubernetes.io/name\" : \"test-quarkus-app\",\n"
"          \"app.kubernetes.io/version\" : \"1.0.0-SNAPSHOT\",\n"
"        }\n"
"      },\n"
"      \"template\" : {\n"
"        \"metadata\" : {\n"
"          \"labels\" : {\n"
"            \"app.kubernetes.io/name\" : \"test-quarkus-app\",\n"
"            \"app.kubernetes.io/version\" : \"1.0.0-SNAPSHOT\"\n"
"          }\n"
"        },\n"
"        \"spec\" : {\n"
"          \"containers\" : [ {\n"
"            \"env\" : [ {\n"
"              \"name\" : \"KUBERNETES_NAMESPACE\",\n"
"              \"valueFrom\" : {\n"
"                \"fieldRef\" : {\n"
"                  \"fieldPath\" : \"metadata.namespace\"\n"
"                }\n"
"              }\n"
"            } ],\n"
"            \"image\" : \"yourDockerUsername/test-quarkus-app:1.0.0-SNAPSHOT\",\n"
"            \"imagePullPolicy\" : \"Always\",\n"
"            \"name\" : \"test-quarkus-app\"\n"
"          } ]\n"
"        }\n"
"      }\n"
"    }\n"
"  },\n"
"  {\n"
"  \"apiVersion\" : \"v1\",\n"
"  \"kind\" : \"Service\",\n"
"    \"metadata\" : {\n"
"      \"annotations\": {\n"
"       \"app.quarkus.io/vcs-url\" : \"<some url>\",\n"
"       \"app.quarkus.io/commit-id\" : \"<some git SHA>\",\n"
"      },\n"
"      \"labels\" : {\n"
"        \"app.kubernetes.io/name\" : \"test-quarkus-app\",\n"
"        \"app.kubernetes.io/version\" : \"1.0.0-SNAPSHOT\",\n"
"      },\n"
"      \"name\" : \"test-quarkus-app\"\n"
"    },\n"
"  \"spec\" : {\n"
"    \"ports\" : [ {\n"
"      \"name\" : \"http\",\n"
"      \"port\" : 8080,\n"
"      \"targetPort\" : 8080\n"
"    } ],\n"
"    \"selector\" : {\n"
"      \"app.kubernetes.io/name\" : \"test-quarkus-app\",\n"
"      \"app.kubernetes.io/version\" : \"1.0.0-SNAPSHOT\"\n"
"    },\n"
"    \"type\" : \"ClusterIP\"\n"
"  }\n"
" }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:152
#, fuzzy
msgid "The generated manifest can be applied to the cluster from the project root using `kubectl`:"
msgstr "生成的清单可以使用 `kubectl` ，从项目根部应用到集群。"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:156
#, no-wrap
msgid "kubectl apply -f target/kubernetes/kubernetes.json\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:160
#, fuzzy
msgid "An important thing to note about the `Deployment` (or `StatefulSet`) is that is uses `yourDockerUsername/test-quarkus-app:1.0.0-SNAPSHOT` as the container image of the `Pod`.  The name of the image is controlled by the Jib extension and can be customized using the usual `application.properties`."
msgstr "关于 `Deployment` （或 `StatefulSet` ），需要注意的一件事是，它使用 `yourDockerUsername/test-quarkus-app:1.0.0-SNAPSHOT` 作为 `Pod` 的容器图像。图像的名称由Jib扩展控制，可以使用通常的 `application.properties` 来定制。"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:162
#, fuzzy
msgid "For example with a configuration like:"
msgstr "例如，用这样的配置。"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:168
#, no-wrap
msgid ""
"quarkus.container-image.group=quarkus #optional, default to the system username\n"
"quarkus.container-image.name=demo-app #optional, defaults to the application name\n"
"quarkus.container-image.tag=1.0       #optional, defaults to the application version\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:171
#, fuzzy
msgid "The image that will be used in the generated manifests will be `quarkus/demo-app:1.0`"
msgstr "生成的清单中使用的图像将是 `quarkus/demo-app:1.0` "

#. type: Title ===
#: upstream/_guides/deploying-to-kubernetes.adoc:172
#, no-wrap
msgid "Changing the generated deployment resource"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:175
#, fuzzy
msgid "Besides generating a `Deployment` resource, you can also choose to generate either a `StatefulSet`, or a `Job`, or a `CronJob` resource instead via `application.properties`:"
msgstr "除了生成一个 `Deployment` ，你还可以选择通过 `application.properties` ，获得一个 `StatefulSet` 。"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:179
#, no-wrap
msgid "quarkus.kubernetes.deployment-kind=StatefulSet\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/deploying-to-kubernetes.adoc:181
#, fuzzy, no-wrap
msgid "Generating Job resources"
msgstr "利用现有资源"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:184
#, fuzzy
msgid "If you want to generate a Job resource, you need to add the following property to the `application.properties`:"
msgstr "要在您的清单中指定命名空间，请在您的 `application.properties` 中定制以下属性。"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:188
#, fuzzy, no-wrap
msgid "quarkus.kubernetes.deployment-kind=Job\n"
msgstr "quarkus.kubernetes.deployment-kind"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:191
msgid "If you are using the Picocli extension, by default a Job resource will be generated."
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:193
msgid "You can provide the arguments that will be used by the Kubernetes Job via the property `quarkus.kubernetes.arguments`. For example, by adding the property `quarkus.kubernetes.arguments=A,B`."
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:195
msgid "Finally, the Kubernetes job will be launched every time it is installed in Kubernetes. You can know more about how to run Kubernetes jobs in this https://kubernetes.io/docs/concepts/workloads/controllers/job/#running-an-example-job[link]."
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:197
msgid "You can configure the rest of the Kubernetes Job configuration using the properties under `quarkus.kubernetes.job.xxx` (see https://quarkus.io/guides/deploying-to-kubernetes#quarkus-kubernetes-kubernetes-config_quarkus.kubernetes.job.parallelism-parallelism[link])."
msgstr ""

#. type: Title ====
#: upstream/_guides/deploying-to-kubernetes.adoc:198
#, fuzzy, no-wrap
msgid "Generating CronJob resources"
msgstr "利用现有资源"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:201
#, fuzzy
msgid "If you want to generate a CronJob resource, you need to add the following property via the `application.properties`:"
msgstr "要在您的清单中指定命名空间，请在您的 `application.properties` 中定制以下属性。"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:207
#, no-wrap
msgid ""
"quarkus.kubernetes.deployment-kind=CronJob\n"
"# Cron expression to run the job every hour\n"
"quarkus.kubernetes.cron-job.schedule=0 * * * *\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:210
msgid "CronJob resources require the https://en.wikipedia.org/wiki/Cron[Cron] expression to specify when to launch the job via the property `quarkus.kubernetes.cron-job.schedule`. If not provide, the build will fail."
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:212
msgid "You can configure the rest of the Kubernetes CronJob configuration using the properties under `quarkus.kubernetes.cron-job.xxx` (see https://quarkus.io/guides/deploying-to-kubernetes#quarkus-kubernetes-kubernetes-config_quarkus.kubernetes.cron-job.parallelism-parallelism[link])."
msgstr ""

#. type: Title ===
#: upstream/_guides/deploying-to-kubernetes.adoc:213
#, fuzzy, no-wrap
msgid "Namespace"
msgstr "名称空间"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:216
#, fuzzy
msgid "By default, Quarkus omits the namespace in the generated manifests, rather than enforce the `default` namespace. That means that you can apply the manifest to your chosen namespace when using `kubectl`, which in the example below is `test`:"
msgstr "默认情况下，Quarkus在生成的清单中省略了命名空间，而不是强制使用 `default` 命名空间。这意味着，在使用 `kubectl` 时，您可以将清单应用于您所选择的命名空间，在下面的例子中，命名空间是 `test` 。"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:220
#, no-wrap
msgid "kubectl apply -f target/kubernetes/kubernetes.json -n=test\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:223
#, fuzzy
msgid "To specify the namespace in your manifest customize with the following property in your `application.properties`:"
msgstr "要在您的清单中指定命名空间，请在您的 `application.properties` 中定制以下属性。"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:227
#, no-wrap
msgid "quarkus.kubernetes.namespace=mynamespace \n"
msgstr ""

#. type: Title ===
#: upstream/_guides/deploying-to-kubernetes.adoc:229
#, fuzzy, no-wrap
msgid "Defining a Docker registry"
msgstr "定义一个Docker注册表"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:232
#, fuzzy
msgid "The Docker registry can be specified with the following property:"
msgstr "Docker注册表可以通过以下属性指定。"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:236
#, no-wrap
msgid "quarkus.container-image.registry=my.docker-registry.net\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:240
#, fuzzy
msgid "By adding this property along with the rest of the container image properties of the previous section, the generated manifests will use the image `my.docker-registry.net/quarkus/demo-app:1.0`.  The image is not the only thing that can be customized in the generated manifests, as will become evident in the following sections."
msgstr "通过将此属性与上一节中的其他容器镜像属性一起添加，生成的清单将使用该镜像 `my.docker-registry.net/quarkus/demo-app:1.0` 。图像并不是生成的清单中唯一可以定制的东西，这一点在下面的章节中会变得很明显。"

#. type: Title ===
#: upstream/_guides/deploying-to-kubernetes.adoc:241
#, fuzzy, no-wrap
msgid "Labels and Annotations"
msgstr "标签和注解"

#. type: Title ====
#: upstream/_guides/deploying-to-kubernetes.adoc:243
#, fuzzy, no-wrap
msgid "Labels"
msgstr "标签"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:248
#, fuzzy
msgid "The generated manifests use the Kubernetes link:https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels[recommended labels].  These labels can be customized using `quarkus.kubernetes.name`, `quarkus.kubernetes.version` and `quarkus.kubernetes.part-of`.  For example by adding the following configuration to your `application.properties`:"
msgstr "生成的清单使用Kubernetes link:https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels[推荐的标签] 。这些标签可以使用 `quarkus.kubernetes.name` , `quarkus.kubernetes.version` 和 `quarkus.kubernetes.part-of` 进行定制。例如，通过在你的 `application.properties` ，添加以下配置。"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:254
#, no-wrap
msgid ""
"quarkus.kubernetes.part-of=todo-app\n"
"quarkus.kubernetes.name=todo-rest\n"
"quarkus.kubernetes.version=1.0-rc.1\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/deploying-to-kubernetes.adoc:260
#, fuzzy
msgid "As is described in detail in the <<#openshift, OpenShift>> section, customizing OpenShift (or Knative) properties is done in the same way, but replacing `kubernetes` with `openshift` (or `knative`). The previous example for OpenShift would look like this:"
msgstr "正如在 link:#openshift[OpenShift] 部分详细描述的那样，定制OpenShift（或Knative）属性的方法是相同的，但用 `openshift` （或 `knative` ）代替 `kubernetes` 。之前OpenShift的例子会是这样的。"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:266
#, no-wrap
msgid ""
"quarkus.openshift.part-of=todo-app\n"
"quarkus.openshift.name=todo-rest\n"
"quarkus.openshift.version=1.0-rc.1\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/deploying-to-kubernetes.adoc:270
#, fuzzy
msgid "The labels in generated resources will look like:"
msgstr "生成的资源中的标签将看起来像。"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:278
#, no-wrap
msgid ""
"  \"labels\" : {\n"
"    \"app.kubernetes.io/part-of\" : \"todo-app\",\n"
"    \"app.kubernetes.io/name\" : \"todo-rest\",\n"
"    \"app.kubernetes.io/version\" : \"1.0-rc.1\"\n"
"  }\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/deploying-to-kubernetes.adoc:283
#, fuzzy
msgid "You can also remove the `app.kubernetes.io/version` label by applying the following configuration:"
msgstr "你也可以通过应用以下配置来删除 `app.kubernetes.io/version` 标签。"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:287
#, no-wrap
msgid "quarkus.kubernetes.add-version-to-label-selectors=false\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/deploying-to-kubernetes.adoc:290
#, fuzzy, no-wrap
msgid "Custom Labels"
msgstr "定制标签"

#. type: delimited block =
#: upstream/_guides/deploying-to-kubernetes.adoc:293
#, fuzzy
msgid "To add additional custom labels, for example `foo=bar` just apply the following configuration:"
msgstr "要添加额外的自定义标签，例如 `foo=bar` ，只需应用以下配置。"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:297
#, no-wrap
msgid "quarkus.kubernetes.labels.foo=bar\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:300
#, fuzzy
msgid "When using the `quarkus-container-image-jib` extension to build a container image, then any label added via the aforementioned property will also be added to the generated container image."
msgstr "当使用 `quarkus-container-image-jib` 扩展来建立一个容器镜像时，那么通过上述属性添加的任何标签也将被添加到生成的容器镜像中。"

#. type: Title ====
#: upstream/_guides/deploying-to-kubernetes.adoc:301
#, fuzzy, no-wrap
msgid "Annotations"
msgstr "注释"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:304
#, fuzzy
msgid "Out of the box, the generated resources will be annotated with version control related information that can be used either by tooling, or by the user for troubleshooting purposes."
msgstr "开箱即用，生成的资源将被注释上与版本控制相关的信息，这些信息既可以被工具使用，也可以被用户用于故障排除的目的。"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:311
#, no-wrap
msgid ""
"  \"annotations\": {\n"
"    \"app.quarkus.io/vcs-url\" : \"<some url>\",\n"
"    \"app.quarkus.io/commit-id\" : \"<some git SHA>\",\n"
"   }\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/deploying-to-kubernetes.adoc:313
#, fuzzy, no-wrap
msgid "Custom Annotations"
msgstr "自定义注解"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:316
#, fuzzy
msgid "Custom annotations can be added in a way similar to labels.For example to add the annotation `foo=bar` and `app.quarkus/id=42` just apply the following configuration:"
msgstr "自定义注解的添加方式与标签类似。例如，要添加注解 `foo=bar` 和 `app.quarkus/id=42` ，只需应用以下配置。"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:321
#, no-wrap
msgid ""
"quarkus.kubernetes.annotations.foo=bar\n"
"quarkus.kubernetes.annotations.\"app.quarkus/id\"=42\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/deploying-to-kubernetes.adoc:324
#, fuzzy, no-wrap
msgid "Environment variables"
msgstr "环境变量"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:327
#, fuzzy
msgid "Kubernetes provides multiple ways of defining environment variables:"
msgstr "Kubernetes提供了多种定义环境变量的方法。"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:329
#, fuzzy
msgid "key/value pairs"
msgstr "键/值对"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:330
#, fuzzy
msgid "import all values from a Secret or ConfigMap"
msgstr "从一个Secret或ConfigMap中导入所有值"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:331
#, fuzzy
msgid "interpolate a single value identified by a given field in a Secret or ConfigMap"
msgstr "内插一个由Secret或ConfigMap中给定字段识别的单一值"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:332
#, fuzzy
msgid "interpolate a value from a field within the same resource"
msgstr "从同一资源中的一个字段中插值"

#. type: Title =====
#: upstream/_guides/deploying-to-kubernetes.adoc:333
#, fuzzy, no-wrap
msgid "Environment variables from key/value pairs"
msgstr "来自键/值对的环境变量"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:336
#, fuzzy
msgid "To add a key/value pair as an environment variable in the generated resources:"
msgstr "要在生成的资源中添加一个键/值对作为环境变量。"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:340
#, no-wrap
msgid "quarkus.kubernetes.env.vars.my-env-var=foobar\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:344
#, fuzzy
msgid "The command above will add `MY_ENV_VAR=foobar` as an environment variable.  Please note that the key `my-env-var` will be converted to uppercase and dashes will be replaced by underscores resulting in `MY_ENV_VAR`."
msgstr "上面的命令将添加 `MY_ENV_VAR=foobar` 作为环境变量。请注意，键 `my-env-var` 将被转换为大写字母，破折号将被下划线取代，结果为 `MY_ENV_VAR` 。"

#. type: Title =====
#: upstream/_guides/deploying-to-kubernetes.adoc:346
#, fuzzy, no-wrap
msgid "Environment variables from Secret"
msgstr "来自Secret的环境变量"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:350
#, fuzzy
msgid "To add all key/value pairs of `Secret` as environment variables just apply the following configuration, separating each `Secret` to be used as source by a comma (`,`):"
msgstr "要将 `Secret` 的所有键/值对添加为环境变量，只需应用以下配置，用逗号（ `,` ）将每个 `Secret` 作为来源分开。"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:354
#, no-wrap
msgid "quarkus.kubernetes.env.secrets=my-secret,my-other-secret\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:357
#: upstream/_guides/deploying-to-kubernetes.adoc:401
#, fuzzy
msgid "which would generate the following in the container definition:"
msgstr "这将在容器定义中产生以下内容。"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:367
#, no-wrap
msgid ""
"envFrom:\n"
"  - secretRef:\n"
"      name: my-secret\n"
"      optional: false\n"
"  - secretRef:\n"
"      name: my-other-secret\n"
"      optional: false\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:370
#, fuzzy
msgid "The following extracts a value identified by the `keyName` field from the `my-secret` Secret into a `foo` environment variable:"
msgstr "下面从 `my-secret` 秘密中提取一个由 `keyName` 字段标识的值到一个 `foo` 环境变量中。"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:375
#, no-wrap
msgid ""
"quarkus.kubernetes.env.mapping.foo.from-secret=my-secret\n"
"quarkus.kubernetes.env.mapping.foo.with-key=keyName\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:378
#: upstream/_guides/deploying-to-kubernetes.adoc:423
#, fuzzy
msgid "This would generate the following in the `env` section of your container:"
msgstr "这将在你的容器的 `env` 部分产生以下内容。"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:388
#, no-wrap
msgid ""
"- env:\n"
"  - name: FOO\n"
"    valueFrom:\n"
"      secretKeyRef:\n"
"        key: keyName\n"
"        name: my-secret\n"
"        optional: false\n"
msgstr ""

#. type: Title =====
#: upstream/_guides/deploying-to-kubernetes.adoc:390
#, fuzzy, no-wrap
msgid "Environment variables from ConfigMap"
msgstr "来自ConfigMap的环境变量"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:394
#, fuzzy
msgid "To add all key/value pairs from `ConfigMap` as environment variables just apply the following configuration, separating each `ConfigMap` to be used as source by a comma (`,`):"
msgstr "要将 `ConfigMap` 中的所有键/值对添加为环境变量，只需应用以下配置，用逗号（ `,` ）将每个 `ConfigMap` 作为来源分开。"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:398
#, no-wrap
msgid "quarkus.kubernetes.env.configmaps=my-config-map,another-config-map\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:411
#, no-wrap
msgid ""
"envFrom:\n"
"  - configMapRef:\n"
"      name: my-config-map\n"
"      optional: false\n"
"  - configMapRef:\n"
"      name: another-config-map\n"
"      optional: false\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:415
#, fuzzy
msgid "The following extracts a value identified by the `keyName` field from the `my-config-map` ConfigMap into a `foo` environment variable:"
msgstr "下面的内容是从 `my-config-map` ConfigMap中提取一个由 `keyName` 字段标识的值到 `foo` 环境变量中。"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:420
#, no-wrap
msgid ""
"quarkus.kubernetes.env.mapping.foo.from-configmap=my-configmap\n"
"quarkus.kubernetes.env.mapping.foo.with-key=keyName\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:433
#, no-wrap
msgid ""
"- env:\n"
"  - name: FOO\n"
"    valueFrom:\n"
"      configMapRefKey:\n"
"        key: keyName\n"
"        name: my-configmap\n"
"        optional: false\n"
msgstr ""

#. type: Title =====
#: upstream/_guides/deploying-to-kubernetes.adoc:435
#, fuzzy, no-wrap
msgid "Environment variables from fields"
msgstr "来自字段的环境变量"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:438
#, fuzzy
msgid "It's also possible to use the value from another field to add a new environment variable by specifying the path of the field to be used as a source, as follows:"
msgstr "也可以使用另一个字段的值来添加一个新的环境变量，指定字段的路径作为来源，如下所示。"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:442
#, no-wrap
msgid "quarkus.kubernetes.env.fields.foo=metadata.name\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/deploying-to-kubernetes.adoc:448
#, fuzzy
msgid "As is described in detail in the <<#openshift, OpenShift>> section, customizing OpenShift properties is done in the same way, but replacing `kubernetes` with `openshift`. The previous example for OpenShift would look like this:"
msgstr "正如在 link:#openshift[OpenShift] 部分所详细描述的那样，定制OpenShift属性的方法是一样的，只是用 `openshift` 来代替 `kubernetes` 。之前关于OpenShift的例子会是这样的。"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:452
#, no-wrap
msgid "quarkus.openshift.env.fields.foo=metadata.name\n"
msgstr ""

#. type: Title =====
#: upstream/_guides/deploying-to-kubernetes.adoc:455
#, fuzzy, no-wrap
msgid "Validation"
msgstr "审定"

#. type: delimited block =
#: upstream/_guides/deploying-to-kubernetes.adoc:458
#, fuzzy
msgid "A conflict between two definitions, e.g. mistakenly assigning both a value and specifying that a variable is derived from a field, will result in an error being thrown at build time so that you get the opportunity to fix the issue before you deploy your application to your cluster where it might be more difficult to diagnose the source of the issue."
msgstr "两个定义之间的冲突，例如错误地同时赋值和指定一个变量来自一个字段，将导致在构建时抛出一个错误，这样你就有机会在将你的应用程序部署到你的集群上之前修复这个问题，因为在那里可能更难诊断出问题的来源。"

#. type: delimited block =
#: upstream/_guides/deploying-to-kubernetes.adoc:460
#, fuzzy
msgid "Similarly, two redundant definitions, e.g. defining an injection from the same secret twice, will not cause an issue but will indeed report a warning to let you know that you might not have intended to duplicate that definition."
msgstr "同样地，两个多余的定义，例如从同一个秘密中定义两次注入，不会引起问题，但确实会报告一个警告，让你知道你可能没有打算重复该定义。"

#. type: Title =====
#: upstream/_guides/deploying-to-kubernetes.adoc:462
#, fuzzy, no-wrap
msgid "Backwards compatibility"
msgstr "向后兼容"

#. type: delimited block =
#: upstream/_guides/deploying-to-kubernetes.adoc:465
#, fuzzy
msgid "Previous versions of the Kubernetes extension supported a different syntax to add environment variables. The older syntax is still supported but is deprecated, and it's advised that you migrate to the new syntax."
msgstr "以前版本的Kubernetes扩展支持不同的语法来添加环境变量。旧的语法仍被支持，但已被废弃，建议你迁移到新的语法。"

#. type: Block title
#: upstream/_guides/deploying-to-kubernetes.adoc:466
#, fuzzy, no-wrap
msgid "Old vs. new syntax"
msgstr "旧语法与新语法"

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:468
#, fuzzy, no-wrap
msgid "Old"
msgstr "旧的"

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:468
#, fuzzy, no-wrap
msgid "New"
msgstr "新的"

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:469
#, fuzzy, no-wrap
msgid "Plain variable"
msgstr "普通变量"

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:469
#, fuzzy, no-wrap
msgid "`quarkus.kubernetes.env-vars.my-env-var.value=foobar`"
msgstr " `quarkus.kubernetes.env-vars.my-env-var.value=foobar` "

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:469
#, fuzzy, no-wrap
msgid "`quarkus.kubernetes.env.vars.my-env-var=foobar`"
msgstr " `quarkus.kubernetes.env.vars.my-env-var=foobar` "

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:470
#, fuzzy, no-wrap
msgid "From field"
msgstr "来自外地的"

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:470
#, fuzzy, no-wrap
msgid "`quarkus.kubernetes.env-vars.my-env-var.field=foobar`"
msgstr " `quarkus.kubernetes.env-vars.my-env-var.field=foobar` "

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:470
#, fuzzy, no-wrap
msgid "`quarkus.kubernetes.env.fields.my-env-var=foobar`"
msgstr " `quarkus.kubernetes.env.fields.my-env-var=foobar` "

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:471
#, fuzzy, no-wrap
msgid "All from `ConfigMap`"
msgstr "全部来自 `ConfigMap` "

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:471
#, fuzzy, no-wrap
msgid "`quarkus.kubernetes.env-vars.xxx.configmap=foobar`"
msgstr " `quarkus.kubernetes.env-vars.xxx.configmap=foobar` "

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:471
#, fuzzy, no-wrap
msgid "`quarkus.kubernetes.env.configmaps=foobar`"
msgstr " `quarkus.kubernetes.env.configmaps=foobar` "

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:472
#, fuzzy, no-wrap
msgid "All from `Secret`"
msgstr "全部来自 `Secret` "

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:472
#, fuzzy, no-wrap
msgid "`quarkus.kubernetes.env-vars.xxx.secret=foobar`"
msgstr " `quarkus.kubernetes.env-vars.xxx.secret=foobar` "

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:472
#, fuzzy, no-wrap
msgid "`quarkus.kubernetes.env.secrets=foobar`"
msgstr " `quarkus.kubernetes.env.secrets=foobar` "

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:473
#, fuzzy, no-wrap
msgid "From one `Secret` field"
msgstr "从一个 `Secret` 场"

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:473
#, fuzzy, no-wrap
msgid "`quarkus.kubernetes.env-vars.foo.secret=foobar`"
msgstr " `quarkus.kubernetes.env-vars.foo.secret=foobar` "

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:473
#, fuzzy, no-wrap
msgid "`quarkus.kubernetes.env.mapping.foo.from-secret=foobar`"
msgstr " `quarkus.kubernetes.env.mapping.foo.from-secret=foobar` "

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:474
#: upstream/_guides/deploying-to-kubernetes.adoc:476
#, fuzzy, no-wrap
msgid "`quarkus.kubernetes.env-vars.foo.value=field`"
msgstr " `quarkus.kubernetes.env-vars.foo.value=field` "

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:474
#: upstream/_guides/deploying-to-kubernetes.adoc:476
#, fuzzy, no-wrap
msgid "`quarkus.kubernetes.env.mapping.foo.with-key=field`"
msgstr " `quarkus.kubernetes.env.mapping.foo.with-key=field` "

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:475
#, fuzzy, no-wrap
msgid "From one `ConfigMap` field"
msgstr "从一个 `ConfigMap` 场"

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:475
#, fuzzy, no-wrap
msgid "`quarkus.kubernetes.env-vars.foo.configmap=foobar`"
msgstr " `quarkus.kubernetes.env-vars.foo.configmap=foobar` "

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:475
#, fuzzy, no-wrap
msgid "`quarkus.kubernetes.env.mapping.foo.from-configmap=foobar`"
msgstr " `quarkus.kubernetes.env.mapping.foo.from-configmap=foobar` "

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:483
#, fuzzy
msgid "If you redefine the same variable using the new syntax while keeping the old syntax, **ONLY** the new version will be kept and a warning will be issued to alert you of the problem.For example, if you define both `quarkus.kubernetes.env-vars.my-env-var.value=foobar` and `quarkus.kubernetes.env.vars.my-env-var=newValue`, the extension will only generate an environment variable `MY_ENV_VAR=newValue` and issue a warning."
msgstr "如果你使用新的语法重新定义同一个变量，同时保留旧的语法，那么将 *只* 保留新的版本，并发出警告提醒你注意这个问题。例如，如果你同时定义 `quarkus.kubernetes.env-vars.my-env-var.value=foobar` 和 `quarkus.kubernetes.env.vars.my-env-var=newValue` ，扩展将只生成一个环境变量 `MY_ENV_VAR=newValue` ，并发出警告。"

#. type: Title ====
#: upstream/_guides/deploying-to-kubernetes.adoc:484
#, fuzzy, no-wrap
msgid "Mounting volumes"
msgstr "安装量"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:488
#, fuzzy
msgid "The Kubernetes extension allows the user to configure both volumes and mounts for the application.  Any volume can be mounted with a simple configuration:"
msgstr "Kubernetes扩展允许用户为应用程序配置卷和挂载。通过简单的配置，任何卷都可以被挂载。"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:492
#, no-wrap
msgid "quarkus.kubernetes.mounts.my-volume.path=/where/to/mount\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:496
#, fuzzy
msgid "This will add a mount to the pod for volume `my-volume` to path `/where/to/mount`.  The volumes themselves can be configured as shown in the sections below."
msgstr "这将为卷 `my-volume` 添加一个挂载到路径 `/where/to/mount` 。卷本身可以按照下面的部分进行配置。"

#. type: Title =====
#: upstream/_guides/deploying-to-kubernetes.adoc:497
#, fuzzy, no-wrap
msgid "Secret volumes"
msgstr "秘密卷"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:502
#, no-wrap
msgid "quarkus.kubernetes.secret-volumes.my-volume.secret-name=my-secret\n"
msgstr ""

#. type: Title =====
#: upstream/_guides/deploying-to-kubernetes.adoc:504
#, fuzzy, no-wrap
msgid "ConfigMap volumes"
msgstr "配置图卷"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:509
#, no-wrap
msgid "quarkus.kubernetes.config-map-volumes.my-volume.config-map-name=my-secret\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/deploying-to-kubernetes.adoc:511
#, fuzzy, no-wrap
msgid "Passing application configuration"
msgstr "传递应用程序配置"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:515
#, fuzzy
msgid "Quarkus supports passing configuration from external locations (via Smallrye Config). This usually requires setting an additional environment variable or system property.  When you need to use a secret or a config map for the purpose of application configuration, you need to:"
msgstr "Quarkus支持从外部位置传递配置（通过Smallrye Config）。这通常需要设置一个额外的环境变量或系统属性。当你需要为应用配置的目的使用一个秘密或配置地图时，你需要。"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:517
#, fuzzy
msgid "define a volume"
msgstr "定义一个体积"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:518
#, fuzzy
msgid "mount the volume"
msgstr "挂载该卷"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:519
#, fuzzy
msgid "create an environment variable for `SMALLRYE_CONFIG_LOCATIONS`"
msgstr "创建一个环境变量用于 `SMALLRYE_CONFIG_LOCATIONS` "

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:521
#, fuzzy
msgid "To simplify things, quarkus provides single step alternative:"
msgstr "为了简化事情，quarkus提供了单一步骤的选择。"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:525
#, no-wrap
msgid "quarkus.kubernetes.app-secret=<name of the secret containing the configuration>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:528
#, fuzzy
msgid "or"
msgstr "或"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:532
#, no-wrap
msgid "quarkus.kubernetes.app-config-map=<name of the config map containing the configuration>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:536
#, fuzzy
msgid "When these properties are used, the generated manifests will contain everything required.  The application config volumes will be created using path: `/mnt/app-secret` and `/mnt/app-config-map` for secrets and configmaps respectively."
msgstr "使用这些属性时，生成的清单将包含所需的一切。将使用路径： `/mnt/app-secret` 和 `/mnt/app-config-map` 分别为秘密和配置地图创建应用程序配置卷。"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:538
#, fuzzy
msgid "Note: Users may use both properties at the same time."
msgstr "注意：用户可以同时使用这两个属性。"

#. type: Title ===
#: upstream/_guides/deploying-to-kubernetes.adoc:539
#, fuzzy, no-wrap
msgid "Changing the number of replicas:"
msgstr "改变复制品的数量。"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:542
#, fuzzy
msgid "To change the number of replicas from 1 to 3:"
msgstr "要将复制的数量从1改为3。"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:546
#, no-wrap
msgid "quarkus.kubernetes.replicas=3\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/deploying-to-kubernetes.adoc:548
#, fuzzy, no-wrap
msgid "Add readiness and liveness probes"
msgstr "添加就绪性和有效性探针"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:551
#, fuzzy
msgid "By default, the Kubernetes resources do not contain readiness and liveness probes in the generated `Deployment`. Adding them however is just a matter of adding the SmallRye Health extension like so:"
msgstr "默认情况下，Kubernetes资源在生成的 `Deployment` ，不包含就绪性和有效性探测。然而，添加它们只需像这样添加SmallRye Health扩展即可。"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:559
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-smallrye-health</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:565
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-smallrye-health\")\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:569
#, fuzzy
msgid "The values of the generated probes will be determined by the configured health properties: `quarkus.smallrye-health.root-path`, `quarkus.smallrye-health.liveness-path` and `quarkus.smallrye-health.readiness-path`.  More information about the health extension can be found in the relevant xref:microprofile-health.adoc[guide]."
msgstr "生成的探针的值将由配置的健康属性决定。 `quarkus.smallrye-health.root-path` , `quarkus.smallrye-health.liveness-path` 和 `quarkus.smallrye-health.readiness-path` 。关于健康扩展的更多信息可以在相关 link:microprofile-health.html[指南] 中找到。"

#. type: Title ===
#: upstream/_guides/deploying-to-kubernetes.adoc:570
#, fuzzy, no-wrap
msgid "Customizing the readiness probe"
msgstr "定制准备好的探头。"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:572
#, fuzzy
msgid "To set the initial delay of the probe to 20 seconds and the period to 45:"
msgstr "将探头的初始延迟设置为20秒，周期为45。"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:577
#: upstream/_guides/deploying-to-kubernetes.adoc:911
#, no-wrap
msgid ""
"quarkus.kubernetes.readiness-probe.initial-delay=20s\n"
"quarkus.kubernetes.readiness-probe.period=45s\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/deploying-to-kubernetes.adoc:579
#, fuzzy, no-wrap
msgid "Add hostAliases"
msgstr "添加hostAliases"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:581
#, fuzzy
msgid "To add entries to a Pod's `/etc/hosts` file (more information can be found in https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/[Kubernetes documentation]), just apply the following configuration:"
msgstr "要向Pod的 `/etc/hosts` 文件添加条目（更多信息可在 link:https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/[Kubernetes文档] 中找到），只需应用以下配置。"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:585
#, no-wrap
msgid "quarkus.kubernetes.hostaliases.\"10.0.0.0\".hostnames=foo.com,bar.org\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:588
#, fuzzy
msgid "This would generate the following `hostAliases` section in the `deployment` definition:"
msgstr "这将在 `deployment` 定义中产生以下 `hostAliases` 部分。"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:600
#, no-wrap
msgid ""
"kind: Deployment\n"
"spec:\n"
"  template:\n"
"    spec:\n"
"      hostAliases:\n"
"      - hostnames:\n"
"        - foo.com\n"
"        - bar.org\n"
"        ip: 10.0.0.0\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/deploying-to-kubernetes.adoc:602
#, fuzzy, no-wrap
msgid "Container Resources Management"
msgstr "容器资源管理"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:605
#, fuzzy
msgid "CPU & Memory limits and requests can be applied to a `Container` (more info in https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/[Kubernetes documentation]) using the following configuration:"
msgstr "可以使用以下配置将CPU和内存限制和请求应用到 `Container` （更多信息见 link:https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/[Kubernetes文档] ）。"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:612
#, no-wrap
msgid ""
"quarkus.kubernetes.resources.requests.memory=64Mi\n"
"quarkus.kubernetes.resources.requests.cpu=250m\n"
"quarkus.kubernetes.resources.limits.memory=512Mi\n"
"quarkus.kubernetes.resources.limits.cpu=1000m\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:615
#, fuzzy
msgid "This would generate the following entry in the `container` section:"
msgstr "这将在 `container` 部分产生以下条目。"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:626
#, no-wrap
msgid ""
"containers:\n"
"  resources:\n"
"    limits:\n"
"      cpu: 1000m\n"
"      memory: 512Mi\n"
"    requests:\n"
"      cpu: 250m\n"
"      memory: 64Mi\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/deploying-to-kubernetes.adoc:628
#, no-wrap
msgid "Exposing your application in Kubernetes"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:631
#, fuzzy
msgid "Kubernetes exposes applications using https://kubernetes.io/docs/concepts/services-networking/ingress[Ingress resources]. To generate the Ingress resource, just apply the following configuration:"
msgstr "要向Pod的 `/etc/hosts` 文件添加条目（更多信息可在 link:https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/[Kubernetes文档] 中找到），只需应用以下配置。"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:635
#, fuzzy, no-wrap
msgid "quarkus.kubernetes.ingress.expose=true\n"
msgstr "quarkus.kubernetes.ingress.expose"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:638
#: upstream/_guides/deploying-to-kubernetes.adoc:680
#: upstream/_guides/deploying-to-kubernetes.adoc:722
#, fuzzy
msgid "This would generate the following Ingress resource:"
msgstr "这将在你的容器的 `env` 部分产生以下内容。"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:662
#, no-wrap
msgid ""
"apiVersion: networking.k8s.io/v1\n"
"kind: Ingress\n"
"metadata:\n"
"  annotations:\n"
"    app.quarkus.io/commit-id: a58d2211c86f07a47d4b073ea9ce000d2c6828d5\n"
"    app.quarkus.io/build-timestamp: 2022-06-29 - 13:22:41 +0000\n"
"  labels:\n"
"    app.kubernetes.io/name: kubernetes-with-ingress\n"
"    app.kubernetes.io/version: 0.1-SNAPSHOT\n"
"  name: kubernetes-with-ingress\n"
"spec:\n"
"  rules:\n"
"    - http:\n"
"        paths:\n"
"          - backend:\n"
"              service:\n"
"                name: kubernetes-with-ingress\n"
"                port:\n"
"                  name: http\n"
"            path: /\n"
"            pathType: Prefix\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:665
msgid "After deploying these resources to Kubernetes, the Ingress resource will allow unsecured connections to reach out your application."
msgstr ""

#. type: Title ====
#: upstream/_guides/deploying-to-kubernetes.adoc:666
#, fuzzy, no-wrap
msgid "Adding Ingress rules"
msgstr "额外资源"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:669
msgid "To customize the default `host` and `path` properties of the generated Ingress resources, you need to apply the following configuration:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:677
#, no-wrap
msgid ""
"quarkus.kubernetes.ingress.expose=true\n"
"# To change the Ingress host. By default, it's empty.\n"
"quarkus.kubernetes.ingress.host=prod.svc.url\n"
"# To change the Ingress path of the generated Ingress rule. By default, it's \"/\".\n"
"quarkus.kubernetes.ports.http.path=/prod\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:702
#, no-wrap
msgid ""
"apiVersion: networking.k8s.io/v1\n"
"kind: Ingress\n"
"metadata:\n"
"  labels:\n"
"    app.kubernetes.io/name: kubernetes-with-ingress\n"
"    app.kubernetes.io/version: 0.1-SNAPSHOT\n"
"  name: kubernetes-with-ingress\n"
"spec:\n"
"  rules:\n"
"    - host: prod.svc.url\n"
"      http:\n"
"        paths:\n"
"          - backend:\n"
"              service:\n"
"                name: kubernetes-with-ingress\n"
"                port:\n"
"                  name: http\n"
"            path: /prod\n"
"            pathType: Prefix\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:705
#, fuzzy
msgid "Additionally, you can also add new Ingress rules by adding the following configuration:"
msgstr "你也可以通过应用以下配置来删除 `app.kubernetes.io/version` 标签。"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:713
#, no-wrap
msgid ""
"# Example to add a new rule\n"
"quarkus.kubernetes.ingress.rules.1.host=dev.svc.url\n"
"quarkus.kubernetes.ingress.rules.1.path=/dev\n"
"quarkus.kubernetes.ingress.rules.1.path-type=ImplementationSpecific\n"
"# by default, path type is Prefix\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:719
#, no-wrap
msgid ""
"# Exmple to add a new rule that use another service binding\n"
"quarkus.kubernetes.ingress.rules.2.host=alt.svc.url\n"
"quarkus.kubernetes.ingress.rules.2.path=/ea\n"
"quarkus.kubernetes.ingress.rules.2.service-name=updated-service\n"
"quarkus.kubernetes.ingress.rules.2.service-port-name=tcpurl\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:764
#, no-wrap
msgid ""
"apiVersion: networking.k8s.io/v1\n"
"kind: Ingress\n"
"metadata:\n"
"  labels:\n"
"    app.kubernetes.io/name: kubernetes-with-ingress\n"
"    app.kubernetes.io/version: 0.1-SNAPSHOT\n"
"  name: kubernetes-with-ingress\n"
"spec:\n"
"  rules:\n"
"    - host: prod.svc.url\n"
"      http:\n"
"        paths:\n"
"          - backend:\n"
"              service:\n"
"                name: kubernetes-with-ingress\n"
"                port:\n"
"                  name: http\n"
"            path: /prod\n"
"            pathType: Prefix\n"
"    - host: dev.svc.url\n"
"      http:\n"
"        paths:\n"
"          - backend:\n"
"              service:\n"
"                name: kubernetes-with-ingress\n"
"                port:\n"
"                  name: http\n"
"            path: /dev\n"
"            pathType: ImplementationSpecific\n"
"    - host: alt.svc.url\n"
"      http:\n"
"        paths:\n"
"          - backend:\n"
"              service:\n"
"                name: updated-service\n"
"                port:\n"
"                  name: tcpurl\n"
"            path: /ea\n"
"            pathType: Prefix\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/deploying-to-kubernetes.adoc:766
#, fuzzy, no-wrap
msgid "Securing the Ingress resource"
msgstr "利用现有资源"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:769
msgid "To secure the incoming connections, Kubernetes allows enabling https://kubernetes.io/docs/concepts/services-networking/ingress/#tls[TLS] within the Ingress resource by specifying a Secret that contains a TLS private key and certificate. You can generate a secured Ingress resource by simply adding the \"tls.secret-name\" properties:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:775
#, no-wrap
msgid ""
"quarkus.kubernetes.ingress.expose=true\n"
"## Ingress TLS configuration:\n"
"quarkus.kubernetes.ingress.tls.my-secret.enabled=true\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:778
#, fuzzy
msgid "This configuration will generate the following secured Ingress resource:"
msgstr "这将在 `container` 部分产生以下条目。"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:791
#, no-wrap
msgid ""
"apiVersion: networking.k8s.io/v1\n"
"kind: Ingress\n"
"metadata:\n"
"  ...\n"
"  name: kubernetes-with-secure-ingress\n"
"spec:\n"
"  rules:\n"
"    ...\n"
"  tls:\n"
"    - secretName: my-secret\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:794
msgid "Now, Kubernetes will validate all the incoming connections using SSL with the certificates provided within the secret with name \"my-secret\"."
msgstr ""

#. type: delimited block =
#: upstream/_guides/deploying-to-kubernetes.adoc:798
msgid "More information about how to create the secret in https://kubernetes.io/docs/concepts/services-networking/ingress/#tls[here]."
msgstr ""

#. type: Title ===
#: upstream/_guides/deploying-to-kubernetes.adoc:800
#, fuzzy, no-wrap
msgid "Using the Kubernetes client"
msgstr "使用Kubernetes客户端"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:803
#, fuzzy
msgid "Applications that are deployed to Kubernetes and need to access the API server will usually make use of the `kubernetes-client` extension:"
msgstr "部署到Kubernetes并需要访问API服务器的应用程序通常会利用 `kubernetes-client` 扩展。"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:811
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-kubernetes-client</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:817
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-kubernetes-client\")\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:822
#, fuzzy
msgid "To access the API server from within a Kubernetes cluster, some RBAC related resources are required (e.g. a ServiceAccount, a RoleBinding).  So, when the `kubernetes-client` extension is present, the `kubernetes` extension is going to create those resources automatically, so that application will be granted the `view` role.  If more roles are required, they will have to be added manually."
msgstr "要从Kubernetes集群内访问API服务器，需要一些RBAC相关的资源（例如，ServiceAccount，RoleBinding等）。因此，当 `kubernetes-client` 扩展出现时， `kubernetes` 扩展将自动创建这些资源，因此该应用程序将被授予 `view` 角色。如果需要更多的角色，它们将不得不被手动添加。"

#. type: delimited block =
#: upstream/_guides/deploying-to-kubernetes.adoc:826
#, fuzzy
msgid "You can disable the RBAC resources generation using the property `quarkus.kubernetes-client.generate-rbac=false`."
msgstr "你可以使用属性 `quarkus.kubernetes-client.generate-rbac=false` 停用RBAC资源的生成。"

#. type: Title ===
#: upstream/_guides/deploying-to-kubernetes.adoc:828
#, fuzzy, no-wrap
msgid "Deploying to Minikube"
msgstr "部署到Minikube"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:832
#, fuzzy
msgid "https://github.com/kubernetes/minikube[Minikube] is quite popular when a Kubernetes cluster is needed for development purposes. To make the deployment to Minikube experience as frictionless as possible, Quarkus provides the `quarkus-minikube` extension. This extension can be added to a project like so:"
msgstr "当需要一个Kubernetes集群用于开发目的时， link:https://github.com/kubernetes/minikube[Minikube] 是相当受欢迎的。为了使部署到Minikube的经验尽可能的无摩擦，Quarkus提供了 `quarkus-minikube` 扩展。这个扩展可以像这样被添加到一个项目中。"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:840
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-minikube</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:846
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-minikube\")\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:850
#, fuzzy
msgid "The purpose of this extension is to generate Kubernetes manifests (`minikube.yaml` and `minikube.json`) that are tailored to Minikube.  This extension assumes a couple of things:"
msgstr "这个扩展的目的是生成适合Minikube的Kubernetes清单（ `minikube.yaml` 和 `minikube.json` ）。这个扩展假设了几件事。"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:853
#, fuzzy
msgid "Users won't be using an image registry and will instead make their container image accessible to the Kubernetes cluster by building it directly into Minikube's Docker daemon. To use Minikube's Docker daemon you must first execute:"
msgstr "用户不会使用镜像注册表，而是通过将其直接构建到Minikube的Docker守护进程中，使他们的容器镜像能够被Kubernetes集群访问。要使用Minikube的Docker守护程序，你必须首先执行。"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:857
#, no-wrap
msgid "eval $(minikube -p minikube docker-env)\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:861
#, fuzzy
msgid "Applications deployed to Kubernetes won't be accessed via a Kubernetes `Ingress`, but rather as a `NodePort` `Service`.  The advantage of doing this is that the URL of an application can be retrieved trivially by executing:"
msgstr "部署到Kubernetes的应用程序不会通过Kubernetes `Ingress` ，而是作为 `NodePort` `Service` 。这样做的好处是，可以通过执行来检索应用程序的URL，很简单。"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:865
#, no-wrap
msgid "minikube service list\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:869
#, fuzzy
msgid "To control the https://kubernetes.io/docs/concepts/services-networking/service/#nodeport[nodePort] that is used in this case, users can set `quarkus.kubernetes.node-port`.  Note however that this configuration is entirely optional because Quarkus will automatically use a proper (and non-changing) value if none is set."
msgstr "为了控制在这种情况下使用的 link:https://kubernetes.io/docs/concepts/services-networking/service/#nodeport[nodePort] ，用户可以设置 `quarkus.kubernetes.node-port` 。但是请注意，这个配置是完全可选的，因为如果没有设置，Quarkus会自动使用一个合适的（并且不改变的）值。"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:872
#, fuzzy
msgid "It is highly discouraged to use the manifests generated by the Minikube extension when deploying to production as these manifests are intended for development purposes only. When deploying to production, consider using the vanilla Kubernetes manifests (or the OpenShift ones when targeting OpenShift)."
msgstr "在部署到生产中时，非常不建议使用Minikube扩展生成的清单，因为这些清单仅用于开发目的。在部署到生产中时，请考虑使用vanilla Kubernetes清单（或在针对OpenShift时使用OpenShift清单）。"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:875
#, fuzzy
msgid "If the assumptions the Minikube extension makes don't fit your workflow, nothing prevents you from using the regular Kubernetes extension to generate Kubernetes manifests and apply those to your Minikube cluster."
msgstr "如果Minikube扩展所做的假设不适合你的工作流程，没有什么能阻止你使用常规的Kubernetes扩展来生成Kubernetes清单，并将这些清单应用于你的Minikube集群。"

#. type: Title ===
#: upstream/_guides/deploying-to-kubernetes.adoc:876
#, fuzzy, no-wrap
msgid "Deploying to Kind"
msgstr "部署到金德"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:879
#, fuzzy
msgid "https://kind.sigs.k8s.io/[Kind] is another popular tool used as a Kubernetes cluster for development purposes. To make the deployment to Kind experience as frictionless as possible, Quarkus provides the `quarkus-kind` extension. This extension can be added to a project like so:"
msgstr "link:https://kind.sigs.k8s.io/[Kind] 是一个其他流行的工具，作为Kubernetes集群用于开发目的。为了使部署到Kind的体验尽可能的无摩擦，Quarkus提供了 `quarkus-kind` 扩展。这个扩展可以像这样添加到项目中。"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:886
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-kind</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:890
#, fuzzy
msgid "The purpose of this extension is to generate Kubernetes manifests (`kind.yaml` and `kind.json`) that are tailored to Kind and also to automate the process of loading images to the cluster when performing container image builds. The tailor made manifests will be pretty similar (they share the same rules) with Minikube (see above)."
msgstr "这个扩展的目的是生成为Kind量身定做的Kubernetes清单（ `kind.yaml` 和 `kind.json` ），同时在执行容器镜像构建时自动将镜像加载到集群中。定制的清单将与Minikube（见上文）相当相似（它们共享相同的规则）。"

#. type: Title ==
#: upstream/_guides/deploying-to-kubernetes.adoc:891
#, fuzzy, no-wrap
msgid "Tuning the generated resources using application.properties"
msgstr "使用application.properties调整生成的资源"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:895
#, fuzzy
msgid "The Kubernetes extension allows tuning the generated manifest, using the `application.properties` file.  Here are some examples:"
msgstr "Kubernetes扩展允许调整生成的清单，使用 `application.properties` 文件。下面是一些例子。"

#. type: Title ===
#: upstream/_guides/deploying-to-kubernetes.adoc:896
#, fuzzy, no-wrap
msgid "Configuration options"
msgstr "配置选项"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:899
#, fuzzy
msgid "The table below describe all the available configuration options."
msgstr "下表描述了所有可用的配置选项。"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:906
#, fuzzy
msgid "Properties that use non-standard types, can be referenced by expanding the property.  For example to define a `kubernetes-readiness-probe` which is of type `Probe`:"
msgstr "使用非标准类型的属性，可以通过扩展该属性来引用。例如，定义一个 `kubernetes-readiness-probe` ，它的类型是 `Probe` 。"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:915
#, fuzzy
msgid "In this example `initial-delay` and `period` are fields of the type `Probe`.  Below you will find tables describing all available types."
msgstr "在这个例子中 `initial-delay` 和 `period` 是类型 `Probe` 的字段。下面你会看到描述所有可用类型的表格。"

#. type: Title ====
#: upstream/_guides/deploying-to-kubernetes.adoc:916
#, fuzzy, no-wrap
msgid "Client Connection Configuration"
msgstr "客户端连接配置"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:919
#, fuzzy
msgid "You may need to configure the connection to your Kubernetes cluster.  By default, it automatically uses the active _context_ used by `kubectl`."
msgstr "你可能需要配置与你的Kubernetes集群的连接。默认情况下，它自动使用由 `kubectl` 使用的活动 _上下文_ 。"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:921
#, fuzzy
msgid "For instance, if your cluster API endpoint uses a self-signed SSL Certificate you need to explicitly configure the client to trust it. You can achieve this by defining the following property:"
msgstr "例如，如果你的集群API端点使用一个自签名的SSL证书，你需要明确地配置客户端来信任它。你可以通过定义以下属性来实现这一点。"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:925
#, no-wrap
msgid "quarkus.kubernetes-client.trust-certs=true\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:928
#, fuzzy
msgid "The full list of the Kubernetes client configuration properties is provided below."
msgstr "下面提供了Kuberneters客户端配置属性的完整列表。"

#. type: Block title
#: upstream/_guides/deploying-to-kubernetes.adoc:933
#: upstream/_guides/deploying-to-kubernetes.adoc:1023
#, fuzzy, no-wrap
msgid "OpenShift"
msgstr "淘宝网"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:936
#, fuzzy
msgid "One way to deploy an application to OpenShift is to use s2i (source to image) to create an image stream from the source and then deploy the image stream:"
msgstr "将应用程序部署到OpenShift的一个方法是使用s2i（source to image），从源码创建一个镜像流，然后部署镜像流。"

#. type: Block title
#: upstream/_guides/deploying-to-kubernetes.adoc:938
#, fuzzy, no-wrap
msgid "CLI"
msgstr "CLI"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:942
#, no-wrap
msgid ""
"quarkus extension remove kubernetes,jib\n"
"quarkus extension add openshift\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:945
#, no-wrap
msgid ""
"oc new-project quarkus-project\n"
"quarkus build -Dquarkus.container-image.build=true \n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:950
#: upstream/_guides/deploying-to-kubernetes.adoc:965
#: upstream/_guides/deploying-to-kubernetes.adoc:980
#, no-wrap
msgid ""
"oc new-app --name=greeting  quarkus-project/kubernetes-quickstart:1.0.0-SNAPSHOT\n"
"oc expose svc/greeting\n"
"oc get route\n"
"curl <route>/greeting\n"
msgstr ""

#. type: Block title
#: upstream/_guides/deploying-to-kubernetes.adoc:953
#, fuzzy, no-wrap
msgid "Maven"
msgstr "雯雯"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:957
#, no-wrap
msgid ""
"./mvnw quarkus:remove-extension -Dextensions=\"kubernetes, jib\"\n"
"./mvnw quarkus:add-extension -Dextensions=\"openshift\"\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:960
#, no-wrap
msgid ""
"oc new-project quarkus-project\n"
"./mvnw clean package -Dquarkus.container-image.build=true \n"
msgstr ""

#. type: Block title
#: upstream/_guides/deploying-to-kubernetes.adoc:968
#, fuzzy, no-wrap
msgid "Gradle"
msgstr "渐进式"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:972
#, no-wrap
msgid ""
"./gradlew removeExtension --extensions=\"kubernetes, jib\"\n"
"./gradlew addExtension --extensions=\"openshift\"\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:975
#, no-wrap
msgid ""
"oc new-project quarkus-project\n"
"./gradlew build -Dquarkus.container-image.build=true \n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:983
#, fuzzy
msgid "See further information in xref:deploying-to-openshift.adoc[Deploying to OpenShift]."
msgstr "见 link:deploying-to-openshift.html[部署到OpenShift] 中的进一步信息。"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:985
#, fuzzy, no-wrap
msgid "A description of OpenShift resources and customisable properties is given below alongside Kubernetes resources to show similarities where applicable.   This includes an alternative to  `oc new-app ...` above, i.e. `oc apply -f target/kubernetes/openshift.json` .\n"
msgstr "下面给出了OpenShift资源和可定制属性的描述，以及Kubernetes资源，以显示适用的相似性。这包括上述 `oc new-app …​` 的替代方案，即 `oc apply -f target/kubernetes/openshift.json` 。"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:987
#, fuzzy
msgid "To enable the generation of OpenShift resources, you need to include OpenShift in the target platforms:"
msgstr "要启用OpenShift资源的生成，你需要在目标平台中包含OpenShift。"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:991
#, no-wrap
msgid "quarkus.kubernetes.deployment-target=openshift\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:994
#, fuzzy
msgid "If you need to generate resources for both platforms (vanilla Kubernetes and OpenShift), then you need to include both (comma separated)."
msgstr "如果你需要为两个平台（vanilla Kubernetes和OpenShift）生成资源，那么你需要包括这两个平台（逗号分隔）。"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:998
#, no-wrap
msgid "quarkus.kubernetes.deployment-target=kubernetes,openshift\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1002
#, fuzzy
msgid "Following the execution of `./mvnw package -Dquarkus.container-image.build=true` you will notice amongst the other files that are created, two files named `openshift.json` and `openshift.yml` in the `target/kubernetes/` directory."
msgstr "在执行 `./mvnw package -Dquarkus.container-image.build=true` 之后，你会注意到在其他被创建的文件中，有两个名为 `openshift.json` 和 `openshift.yml` 的文件在 `target/kubernetes/` 目录中。"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1004
#, fuzzy
msgid "These manifests can be deployed as is to a running cluster, using `kubectl`:"
msgstr "这些清单可以按原样部署到正在运行的集群中，使用 `kubectl` 。"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:1008
#, no-wrap
msgid "kubectl apply -f target/kubernetes/openshift.json\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1011
#, fuzzy
msgid "OpenShift's users might want to use `oc` rather than `kubectl`:"
msgstr "OpenShift用户可能希望使用 `oc` ，而不是 `kubectl` 。"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:1015
#, no-wrap
msgid "oc apply -f target/kubernetes/openshift.json\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1020
#, fuzzy
msgid "Quarkus also provides the xref:deploying-to-openshift.adoc[OpenShift] extension. This extension is basically a wrapper around the Kubernetes extension and relieves OpenShift users of the necessity of setting the `deployment-target` property to `openshift`"
msgstr "Quarkus还提供了 link:deploying-to-openshift.html[OpenShift] 扩展。这个扩展基本上是对Kubernetes扩展的一个封装，使OpenShift用户不必将 `deployment-target` 属性设置为 `openshift` "

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1022
#, fuzzy
msgid "The OpenShift resources can be customized in a similar approach with Kubernetes."
msgstr "OpenShift的资源可以用与Kubernetes类似的方式进行定制。"

#. type: Block title
#: upstream/_guides/deploying-to-kubernetes.adoc:1028
#: upstream/_guides/deploying-to-kubernetes.adoc:1088
#, fuzzy, no-wrap
msgid "Knative"
msgstr "骑士"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1031
#, fuzzy
msgid "To enable the generation of Knative resources, you need to include Knative in the target platforms:"
msgstr "要启用Knative资源的生成，你需要在目标平台中包含Knative。"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:1035
#, no-wrap
msgid "quarkus.kubernetes.deployment-target=knative\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1039
#, fuzzy
msgid "Following the execution of `./mvnw package` you will notice amongst the other files that are created, two files named `knative.json` and `knative.yml` in the `target/kubernetes/` directory."
msgstr "在执行 `./mvnw package` 之后，你会注意到在其他被创建的文件中，有两个名为 `knative.json` 和 `knative.yml` 的文件在 `target/kubernetes/` 目录中。"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1041
#, fuzzy
msgid "If you look at either file you will see that it contains a Knative `Service`."
msgstr "如果你看一下这两个文件，你会发现它包含一个Knative `Service` 。"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1043
#, fuzzy
msgid "The full source of the `knative.json` file looks something like this:"
msgstr " `knative.json` 文件的完整来源看起来是这样的。"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:1077
#, no-wrap
msgid ""
"{\n"
"  {\n"
"    \"apiVersion\" : \"serving.quarkus.knative.dev/v1alpha1\",\n"
"    \"kind\" : \"Service\",\n"
"    \"metadata\" : {\n"
"      \"annotations\": {\n"
"       \"app.quarkus.io/vcs-url\" : \"<some url>\",\n"
"       \"app.quarkus.io/commit-id\" : \"<some git SHA>\"\n"
"      },\n"
"      \"labels\" : {\n"
"        \"app.kubernetes.io/name\" : \"test-quarkus-app\",\n"
"        \"app.kubernetes.io/version\" : \"1.0.0-SNAPSHOT\"\n"
"      },\n"
"      \"name\" : \"knative\"\n"
"    },\n"
"    \"spec\" : {\n"
"      \"runLatest\" : {\n"
"        \"configuration\" : {\n"
"          \"revisionTemplate\" : {\n"
"            \"spec\" : {\n"
"              \"container\" : {\n"
"                \"image\" : \"dev.local/yourDockerUsername/test-quarkus-app:1.0.0-SNAPSHOT\",\n"
"                \"imagePullPolicy\" : \"Always\"\n"
"              }\n"
"            }\n"
"          }\n"
"        }\n"
"      }\n"
"    }\n"
"  }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1080
#, fuzzy
msgid "The generated manifest can be deployed as is to a running cluster, using `kubectl`:"
msgstr "生成的清单可以按原样部署到正在运行的集群中，使用 `kubectl` 。"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:1084
#, no-wrap
msgid "kubectl apply -f target/kubernetes/knative.json\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1087
#, fuzzy
msgid "The generated service can be customized using the following properties:"
msgstr "生成的服务可以使用以下属性进行定制。"

#. type: Title ===
#: upstream/_guides/deploying-to-kubernetes.adoc:1092
#, fuzzy, no-wrap
msgid "Deployment targets"
msgstr "部署目标"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1096
#, fuzzy
msgid "Mentioned in the previous sections was the concept of `deployment-target`. This concept allows users to control which Kubernetes manifests will be generated and deployed to a cluster (if `quarkus.kubernetes.deploy` has been set to `true`)."
msgstr "前面几节提到了 `deployment-target` 。这个概念允许用户控制哪些Kubernetes清单将被生成并部署到集群中（如果 `quarkus.kubernetes.deploy` 已被设置为 `true` ）。"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1100
#, fuzzy
msgid "By default, when no `deployment-target` is set, then only vanilla Kubernetes resources are generated and deployed. When multiple values are set (for example `quarkus.kubernetes.deployment-target=kubernetes,openshift`) then the resources for all targets are generated, but only the resources that correspond to the *first* target are applied to the cluster (if deployment is enabled)."
msgstr "默认情况下，当没有设置 `deployment-target` ，那么只有vanilla Kubernetes资源被生成和部署。当设置了多个值（例如 `quarkus.kubernetes.deployment-target=kubernetes,openshift` ），那么所有目标的资源都会被生成，但只有对应于 *第一个* 目标的资源会被应用到集群中（如果部署被启用）。"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1105
#, fuzzy
msgid "In the case of wrapper extensions like OpenShift and Minikube, when these extensions have been explicitly added to the project, the default `deployment-target` is set by those extensions. For example if `quarkus-minikube` has been added to a project, then `minikube` becomes the default deployment target and its resources will be applied to the Kubernetes cluster when deployment via `quarkus.kubernetes.deploy` has been set.  Users can still override the deployment-targets manually using `quarkus.kubernetes.deployment-target`."
msgstr "在像OpenShift和Minikube这样的封装扩展的情况下，当这些扩展被明确地添加到项目中时，默认的 `deployment-target` ，由这些扩展设置。例如，如果 `quarkus-minikube` 被添加到项目中，那么 `minikube` 成为默认的部署目标，当通过 `quarkus.kubernetes.deploy` 进行部署时，其资源将被应用到Kubernetes集群中。用户仍然可以使用 `quarkus.kubernetes.deployment-target` ，手动覆盖部署目标。"

#. type: Title ===
#: upstream/_guides/deploying-to-kubernetes.adoc:1106
#, fuzzy, no-wrap
msgid "Deprecated configuration"
msgstr "废弃的配置"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1109
#, fuzzy
msgid "The following categories of configuration properties have been deprecated."
msgstr "以下类别的配置属性已被废弃。"

#. type: Title ====
#: upstream/_guides/deploying-to-kubernetes.adoc:1110
#, fuzzy, no-wrap
msgid "Properties without the quarkus prefix"
msgstr "不含夸克斯前缀的属性"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1113
#, fuzzy
msgid "In earlier versions of the extension, the `quarkus.` was missing from those properties. These properties are now deprecated."
msgstr "在早期版本的扩展中，这些属性中缺少 `quarkus.` 。这些属性现在已经废弃了。"

#. type: Title ====
#: upstream/_guides/deploying-to-kubernetes.adoc:1114
#, fuzzy, no-wrap
msgid "Docker and S2i properties"
msgstr "Docker和S2i属性"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1117
#, fuzzy
msgid "The properties for configuring `docker` and `s2i` are also deprecated in favor of the new container-image extensions."
msgstr "用于配置 `docker` 和 `s2i` 的属性也被弃用，转而使用新的容器-图像扩展。"

#. type: Title ====
#: upstream/_guides/deploying-to-kubernetes.adoc:1118
#, fuzzy, no-wrap
msgid "Config group arrays"
msgstr "配置群组阵列"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1121
#, fuzzy
msgid "Properties referring to config group arrays (e.g. `kubernetes.labels[0]`, `kubernetes.env-vars[0]` etc) have been converted to Maps to align with the rest of the Quarkus ecosystem."
msgstr "指向配置组阵列的属性（如 `kubernetes.labels[0]` , `kubernetes.env-vars[0]` 等）已被转换为地图，以便与Quarkus生态系统的其他部分保持一致。"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1123
#, fuzzy
msgid "The code below demonstrates the change in `labels` config:"
msgstr "下面的代码演示了 `labels` 配置中的变化。"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:1129
#, no-wrap
msgid ""
"# Old labels config:\n"
"kubernetes.labels[0].name=foo\n"
"kubernetes.labels[0].value=bar\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:1132
#, no-wrap
msgid ""
"# New labels\n"
"quarkus.kubernetes.labels.foo=bar\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1135
#, fuzzy
msgid "The code below demonstrates the change in `env-vars` config:"
msgstr "下面的代码演示了 `env-vars` 配置中的变化。"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:1141
#, no-wrap
msgid ""
"# Old env-vars config:\n"
"kubernetes.env-vars[0].name=foo\n"
"kubernetes.env-vars[0].configmap=my-configmap\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:1144
#, no-wrap
msgid ""
"# New env-vars\n"
"quarkus.kubernetes.env-vars.foo.configmap=myconfigmap\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/deploying-to-kubernetes.adoc:1146
#, fuzzy, no-wrap
msgid "`env-vars` properties"
msgstr " `env-vars` 财产"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1150
#, fuzzy
msgid "`quarkus.kubernetes.env-vars` are deprecated (though still currently supported as of this writing) and the new declaration style should be used instead.  See <<#env-vars>> and more specifically <<env-vars-backwards>> for more details."
msgstr " `quarkus.kubernetes.env-vars` 已被弃用（尽管目前仍被支持），应使用新的声明风格来代替。参见 link:#env-vars[[env-vars]] 和更具体的 link:#env-vars-backwards[[env-vars-backwards]] 以了解更多细节。"

#. type: Title ==
#: upstream/_guides/deploying-to-kubernetes.adoc:1151
#, fuzzy, no-wrap
msgid "Deployment"
msgstr "部署"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1155
#, fuzzy
msgid "To trigger building and deploying a container image you need to enable the `quarkus.kubernetes.deploy` flag (the flag is disabled by default - furthermore it has no effect during test runs or dev mode).  This can be easily done with the command line:"
msgstr "为了触发容器镜像的构建和部署，你需要启用 `quarkus.kubernetes.deploy` 标志（该标志在默认情况下是禁用的--此外，它在测试运行或开发模式下没有效果）。这可以通过命令行轻松完成。"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:1159
#, no-wrap
msgid "./mvnw clean package -Dquarkus.kubernetes.deploy=true\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/deploying-to-kubernetes.adoc:1161
#, fuzzy, no-wrap
msgid "Building a container image"
msgstr "构建一个容器镜像"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1164
#, fuzzy
msgid "Building a container image is possible, using any of the 3 available `container-image` extensions:"
msgstr "构建一个容器镜像是可能的，使用3个可用的 `container-image` 扩展中的任何一个。"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1166
#, fuzzy
msgid "xref:container-image.adoc#docker[Docker]"
msgstr "link:container-image.html#docker[码头]"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1167
#, fuzzy
msgid "xref:container-image.adoc#jib[Jib]"
msgstr "link:container-image.html#jib[Jib]"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1168
#, fuzzy
msgid "xref:container-image.adoc#s2i[s2i]"
msgstr "link:container-image.html#s2i[s2i]"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1170
#, fuzzy
msgid "Each time deployment is requested, a container image build will be implicitly triggered (no additional properties are required when the Kubernetes deployment has been enabled)."
msgstr "每次请求部署时，将隐含地触发容器镜像构建（当Kubernetes部署被启用时，不需要额外的属性）。"

#. type: Title ===
#: upstream/_guides/deploying-to-kubernetes.adoc:1171
#, fuzzy, no-wrap
msgid "Deploying"
msgstr "部署"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1176
#, fuzzy
msgid "When deployment is enabled, the Kubernetes extension will select the resources specified by `quarkus.kubernetes.deployment-target` and deploy them.  This assumes that a `.kube/config` is available in your user directory that points to the target Kubernetes cluster.  In other words the extension will use whatever cluster `kubectl` uses. The same applies to credentials."
msgstr "当部署被启用时，Kubernetes扩展将选择由 `quarkus.kubernetes.deployment-target` 指定的资源并进行部署。这假定你的用户目录中有一个 `.kube/config` ，指向目标Kubernetes集群。换句话说，该扩展将使用任何集群 `kubectl` 。这同样适用于凭证。"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1178
#, fuzzy
msgid "At the moment no additional options are provided for further customization."
msgstr "目前，没有提供进一步定制的额外选项。"

#. type: Title ===
#: upstream/_guides/deploying-to-kubernetes.adoc:1179
#, fuzzy, no-wrap
msgid "Remote Debugging"
msgstr "远程调试"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1182
#, fuzzy
msgid "To remotely debug applications that are running on a kubernetes environment, we need to deploy the application as described in the previous section and add as new property: `quarkus.kubernetes.remote-debug.enabled=true`. This property will automatically configure the Java application to append the java agent configuration (for example: `-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005`) and also the service resource to listen using the java agent port."
msgstr "为了远程调试运行在kubernetes环境中的应用程序，我们需要按照上一节所述部署应用程序并添加新的属性： `quarkus.kubernetes.remote-debug.enabled=true` 。这个属性将自动配置Java应用程序，以附加java代理配置（例如： `-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005` ），同时也配置服务资源，使用java代理端口进行监听。"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1184
#, fuzzy
msgid "After your application has been deployed with the debug enabled, next you need to tunnel the traffic from your local host machine to the specified port of the java agent:"
msgstr "在你的应用程序被部署并启用了调试功能后，接下来你需要将流量从你的本地主机隧道到java代理的指定端口。"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:1188
#, no-wrap
msgid "kubectl port-forward svc/<application name> 5005:5005\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1191
#, fuzzy
msgid "Using this command, you'll forward the traffic from the \"localhost:5005\" to the kubernetes service running the java agent using the port \"5005\" which is the one that the java agent uses by default for remote debugging. You can also configure another java agent port using the property `quarkus.kubernetes.remote-debug.address-port`."
msgstr "使用这个命令，你将把来自 \"localhost:5005 \"的流量转发到运行java代理的kubernetes服务，使用 \"5005 \"端口，这是java代理默认用于远程调试的端口。你也可以使用属性 `quarkus.kubernetes.remote-debug.address-port` ，配置另一个java代理端口。"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1193
#, fuzzy
msgid "Finally, all you need to do is to configure your favorite IDE to attach the java agent process that is forwarded to `localhost:5005` and start to debug your application. For example, in IntelliJ IDEA, you can follow https://www.jetbrains.com/help/idea/tutorial-remote-debug.html[this tutorial] to debug remote applications."
msgstr "最后，你需要做的就是配置你最喜欢的IDE，将转发的java代理进程附加到 `localhost:5005` ，并开始调试你的应用程序。例如，在IntelliJ IDEA中，你可以按照 link:https://www.jetbrains.com/help/idea/tutorial-remote-debug.html:[这个教程] 来调试远程应用程序。"

#. type: Title ==
#: upstream/_guides/deploying-to-kubernetes.adoc:1194
#, fuzzy, no-wrap
msgid "Using existing resources"
msgstr "利用现有资源"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1200
#, fuzzy
msgid "Sometimes it's desirable to either provide additional resources (e.g. a ConfigMap, a Secret, a Deployment for a database) or provide custom ones that will be used as a `base` for the generation process.  Those resources can be added under `src/main/kubernetes` directory and can be named after the target environment (e.g. kubernetes.json, openshift.json, knative.json, or the yml equivalents). The correlation between provided and generated files is done by file name.  So, a `kubernetes.json`/`kubernetes.yml` file added in `src/main/kubernetes` will only affect the generated `kubernetes.json`/`kubernetes.yml`. An `openshift.json`/`openshift.yml` file added in `src/main/kubernetes` will only affect the generated `openshift.json`/`openshift.yml`.  A `knative.json`/`knative.yml` file added in `src/main/kubernetes` will only affect the generated `knative.json`/`knative.yml` and so on. The provided file may be either in json or yaml format and may contain one or more resources. These resources will end up in both generated formats (json and yaml). For example, a secret added in `src/main/kubernetes/kubernetes.yml` will be added to both the generated `kubernetes.yml` and `kubernetes.json`."
msgstr "有时，最好能提供额外的资源（如ConfigMap、Secret、数据库的部署等），或者提供自定义的资源，作为生成过程的 `base` 。这些资源可以被添加到 `src/main/kubernetes` 目录下，并且可以以目标环境命名（例如，kubernetes.json、openshift.json、knative.json或yml等价物）。提供的文件和生成的文件之间的关联是通过文件名完成的。因此，在 `src/main/kubernetes` 中添加的 `kubernetes.json` / `kubernetes.yml` 文件只会影响生成的 `kubernetes.json` / `kubernetes.yml` 。在 `src/main/kubernetes` 中添加的 `openshift.json` / `openshift.yml` 文件只会影响生成的 `openshift.json` / `openshift.yml` 。在 `src/main/kubernetes` 中添加的 `knative.json` / `knative.yml` 文件只会影响生成的 `knative.json` / `knative.yml` ，以此类推。提供的文件可以是json或yaml格式，可以包含一个或多个资源。这些资源最终会出现在生成的两种格式（json和yaml）中。例如，在 `src/main/kubernetes/kubernetes.yml` 中添加的一个秘密将被添加到生成的 `kubernetes.yml` 和 `kubernetes.json` 中。"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1202
#, fuzzy
msgid "Note: At the time of writing there is no mechanism in place that allows a one-to-many relationship between provided and generated files. Minikube is not an exception to the rule above, so if you want to customize the generated minikube manifests, the file placed under `src/main/kubernetes` will have to be named `minikube.json` or `minikube.yml` (naming it `kubernetes.yml` or `kubernetes.json` will result in having only the generated `kubernetes.yml` and `kubernetes.json` affected)."
msgstr "注意：在撰写本文时，还没有任何机制允许在提供的文件和生成的文件之间建立一对多的关系。Minikube不是上述规则的例外，所以如果你想定制生成的minikube清单，放在 `src/main/kubernetes` 下的文件必须命名为 `minikube.json` 或 `minikube.yml` （命名为 `kubernetes.yml` 或 `kubernetes.json` 将导致只有生成的 `kubernetes.yml` 和 `kubernetes.json` 受到影响）。"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1205
#, fuzzy
msgid "Any resource found will be added in the generated manifests. Global modifications (e.g. labels, annotations) will also be applied to those resources.  If one of the provided resources has the same name as one of the generated ones, then the generated resource will be created on top of the provided resource, respecting existing content when possible (e.g. existing labels, annotations, environment variables, mounts, replicas etc)."
msgstr "任何发现的资源都将被添加到生成的清单中。全局修改（如标签、注释等）也将应用于这些资源。如果提供的资源之一与生成的资源之一具有相同的名称，那么生成的资源将在提供的资源之上创建，并尽可能尊重现有内容（例如现有的标签、注释、环境变量、挂载、复制等）。"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1207
#, fuzzy
msgid "The name of the resource is determined by the application name and may be overridden by `quarkus.kubernetes.name`, `quarkus.openshift.name` and `quarkus.knative.name`."
msgstr "资源的名称由应用名称决定，并可由 `quarkus.kubernetes.name` , `quarkus.openshift.name` 和 `quarkus.knative.name` 来覆盖。"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1209
#, fuzzy
msgid "For example, in the `kubernetes-quickstart` application, we can add a `kubernetes.yml` file in the `src/main/kubernetes` that looks like:"
msgstr "例如，在 `kubernetes-quickstart` 应用程序中，我们可以在 `src/main/kubernetes` 中添加一个 `kubernetes.yml` 文件，看起来像。"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:1236
#, no-wrap
msgid ""
"apiVersion: apps/v1\n"
"kind: Deployment\n"
"metadata:\n"
"  name: kubernetes-quickstart\n"
"  labels:\n"
"    app: quickstart\n"
"spec:\n"
"  replicas: 3\n"
"  selector:\n"
"    matchLabels:\n"
"      app: quickstart\n"
"  template:\n"
"    metadata:\n"
"      labels:\n"
"        app: quickstart\n"
"    spec:\n"
"      containers:\n"
"      - name: kubernetes-quickstart\n"
"        image: someimage:latest\n"
"        ports:\n"
"        - containerPort: 80\n"
"        env:\n"
"        - name: FOO\n"
"          value: BAR\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1239
#, fuzzy
msgid "The generated `kubernetes.yml` will look like:"
msgstr "生成的 `kubernetes.yml` ，将看起来像。"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:1275
#, no-wrap
msgid ""
"apiVersion: \"apps/v1\"\n"
"kind: \"Deployment\"\n"
"metadata:\n"
"  annotations:\n"
"    app.quarkus.io/build-timestamp: \"2020-04-10 - 12:54:37 +0000\"\n"
"  labels:\n"
"    app: \"quickstart\"\n"
"  name: \"kubernetes-quickstart\"\n"
"spec:\n"
"  replicas: 3 <1>\n"
"  selector:\n"
"    matchLabels:\n"
"      app.kubernetes.io/name: \"kubernetes-quickstart\"\n"
"      app.kubernetes.io/version: \"1.0.0-SNAPSHOT\"\n"
"  template:\n"
"    metadata:\n"
"      annotations:\n"
"        app.quarkus.io/build-timestamp: \"2020-04-10 - 12:54:37 +0000\"\n"
"      labels:\n"
"        app: \"quickstart\" <2>\n"
"    spec:\n"
"      containers:\n"
"      - env:\n"
"        - name: \"FOO\" <3>\n"
"          value: \"BAR\"\n"
"        image: \"<<yourDockerUsername>>/kubernetes-quickstart:1.0.0-SNAPSHOT\" <4>\n"
"        imagePullPolicy: \"Always\"\n"
"        name: \"kubernetes-quickstart\"\n"
"        ports:\n"
"        - containerPort: 8080 <5>\n"
"          name: \"http\"\n"
"          protocol: \"TCP\"\n"
"      serviceAccount: \"kubernetes-quickstart\"\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1278
#, fuzzy
msgid "The provided replicas <1>, labels <2> and environment variables <3> were retained. However, the image <4> and container port <5> were modified. Moreover, the default annotations have been added."
msgstr "提供的副本<1>、标签<2>和环境变量<3>被保留。然而，图像<4>和容器端口<5>被修改。此外，还添加了默认的注释。"

#. type: delimited block =
#: upstream/_guides/deploying-to-kubernetes.adoc:1282
#, fuzzy
msgid "When the resource name does not match the application name (or the overridden name) rather than reusing the resource a new one will be added. Same goes for the container."
msgstr "当资源名称与应用程序名称（或重写名称）不匹配时，不是重复使用该资源，而是添加一个新的资源。容器也是如此。"

#. type: delimited block =
#: upstream/_guides/deploying-to-kubernetes.adoc:1284
#, fuzzy
msgid "When the name of the container does not match the application name (or the overridden name), container specific configuration will be ignored."
msgstr "当容器的名称与应用程序的名称（或重写的名称）不一致时，容器的具体配置将被忽略。"

#. type: Title ===
#: upstream/_guides/deploying-to-kubernetes.adoc:1286
#, fuzzy, no-wrap
msgid "Using common resources"
msgstr "利用现有资源"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1289
msgid "When generating the manifests for multiple deployment targets like Kubernetes, OpenShift or Knative, we can place the common resources in `src/main/kubernetes/common.yml`, so these resources will be integrated into the generated `kubernetes.json`/`kubernetes.yml`, and `openshift.json`/`openshift.yml` files (if you configure the Kubernetes and Openshift extensions at the same time)."
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1291
msgid "For example, we can write a ConfigMap resource only once in the file `src/main/kubernetes/common.yml`:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:1300
#, no-wrap
msgid ""
"apiVersion: v1\n"
"kind: ConfigMap\n"
"metadata:\n"
"  name: common-configmap\n"
"data:\n"
"  hello: world\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1303
msgid "And this config map resource will be integrated into the generated `kubernetes.json`/`kubernetes.yml`, and `openshift.json`/`openshift.yml` files."
msgstr ""

#. type: Title ==
#: upstream/_guides/deploying-to-kubernetes.adoc:1304
#, fuzzy, no-wrap
msgid "Service Binding [[service_binding]]"
msgstr "服务绑定 link:[, id=\"service_binding\"]"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1307
#, fuzzy
msgid "Quarkus supports the link:https://github.com/servicebinding/spec[Service Binding Specification for Kubernetes] to bind services to applications."
msgstr "Quarkus支持 link:https://github.com/k8s-service-bindings/spec[Kubernetes的服务绑定规范] ，将服务绑定到应用程序。"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1309
#, fuzzy
msgid "Specifically, Quarkus implements the link:https://github.com/servicebinding/spec#workload-projection[Workload Projection] part of the specification, therefore allowing applications to bind to services, such as a Database or a Broker, without the need for user configuration."
msgstr "具体来说，Quarkus实现了规范中的 link:https://github.com/k8s-service-bindings/spec#workload-projection[工作负载预测] 部分，因此允许应用程序绑定到服务，如数据库或经纪人，而不需要用户配置。"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1311
#, fuzzy
msgid "To enable Service Binding for supported extensions, add the `quarkus-kubernetes-service-binding` extension to the application dependencies."
msgstr "要为支持的扩展启用服务绑定，请将 `quarkus-kubernetes-service-binding` 扩展添加到应用程序的依赖关系中。"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1313
#, fuzzy
msgid "The following extensions can be used with Service Binding and are supported for Workload Projection:"
msgstr "以下扩展可以与服务绑定一起使用，并被支持用于工作负载预测。"

#. type: delimited block =
#: upstream/_guides/deploying-to-kubernetes.adoc:1316
#, fuzzy
msgid "`quarkus-jdbc-mariadb`"
msgstr " `quarkus-jdbc-mariadb` "

#. type: delimited block =
#: upstream/_guides/deploying-to-kubernetes.adoc:1317
#, fuzzy
msgid "`quarkus-jdbc-mssql`"
msgstr " `quarkus-jdbc-mssql` "

#. type: delimited block =
#: upstream/_guides/deploying-to-kubernetes.adoc:1318
#, fuzzy
msgid "`quarkus-jdbc-mysql`"
msgstr " `quarkus-jdbc-mysql` "

#. type: delimited block =
#: upstream/_guides/deploying-to-kubernetes.adoc:1319
#, fuzzy
msgid "`quarkus-jdbc-postgresql`"
msgstr " `quarkus-jdbc-postgresql` "

#. type: delimited block =
#: upstream/_guides/deploying-to-kubernetes.adoc:1320
#, fuzzy
msgid "`quarkus-mongo-client`"
msgstr " `quarkus-mongo-client` "

#. type: delimited block =
#: upstream/_guides/deploying-to-kubernetes.adoc:1322
#, fuzzy
msgid "`quarkus-kafka-client`"
msgstr " `quarkus-kafka-client` "

#. type: delimited block =
#: upstream/_guides/deploying-to-kubernetes.adoc:1323
#, fuzzy
msgid "`quarkus-smallrye-reactive-messaging-kafka`"
msgstr " `quarkus-smallrye-reactive-messaging-kafka` "

#. type: delimited block =
#: upstream/_guides/deploying-to-kubernetes.adoc:1325
#, fuzzy
msgid "`quarkus-reactive-db2-client`"
msgstr " `quarkus-kafka-client` "

#. type: delimited block =
#: upstream/_guides/deploying-to-kubernetes.adoc:1326
#, fuzzy
msgid "`quarkus-reactive-mssql-client`"
msgstr " `quarkus-mongo-client` "

#. type: delimited block =
#: upstream/_guides/deploying-to-kubernetes.adoc:1327
#, fuzzy
msgid "`quarkus-reactive-mysql-client`"
msgstr " `quarkus-mongo-client` "

#. type: delimited block =
#: upstream/_guides/deploying-to-kubernetes.adoc:1328
#, fuzzy
msgid "`quarkus-reactive-oracle-client`"
msgstr " `quarkus-kafka-client` "

#. type: delimited block =
#: upstream/_guides/deploying-to-kubernetes.adoc:1329
#, fuzzy
msgid "`quarkus-reactive-pg-client`"
msgstr " `quarkus-mongo-client` "

#. type: Title ===
#: upstream/_guides/deploying-to-kubernetes.adoc:1332
#, fuzzy, no-wrap
msgid "Workload Projection"
msgstr "工作量预测"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1335
#, fuzzy
msgid "Workload Projection is a process of obtaining the configuration for services from the Kubernetes cluster. This configuration takes the form of directory structures that follow certain conventions and is attached to an application or to a service as a mounted volume. The `kubernetes-service-binding` extension uses this directory structure to create configuration sources, which allows you to configure additional modules, such as databases or message brokers."
msgstr "工作负载投影是一个从Kubernetes集群中获取服务配置的过程。这种配置采取遵循某些惯例的目录结构形式，并作为挂载卷附在应用程序或服务上。 `kubernetes-service-binding` 扩展使用该目录结构来创建配置源，这允许你配置额外的模块，如数据库或消息代理。"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1337
#, fuzzy
msgid "During application development, users can use workload projection to connect their application to a development database, or other locally-run services, without changing the actual application code or configuration."
msgstr "在应用程序开发过程中，用户可以使用工作量预测将他们的应用程序连接到开发数据库，或其他本地运行的服务，而不改变实际的应用程序代码或配置。"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1339
#, fuzzy
msgid "For an example of a workload projection where the directory structure is included in the test resources and passed to integration test, see the link:https://github.com/quarkusio/quarkus/tree/e7efe6b3efba91b9c4ae26f9318f8397e23e7505/integration-tests/kubernetes-service-binding-jdbc/src/test/resources/k8s-sb[Kubernetes Service Binding datasource] GitHub repository."
msgstr "关于目录结构包含在测试资源中并传递给集成测试的工作负载投影的例子，请看 link:https://github.com/quarkusio/quarkus/tree/e7efe6b3efba91b9c4ae26f9318f8397e23e7505/integration-tests/kubernetes-service-binding-jdbc/src/test/resources/k8s-sb[Kubernetes服务绑定数据源] GitHub仓库。"

#. type: delimited block =
#: upstream/_guides/deploying-to-kubernetes.adoc:1343
#, fuzzy
msgid "The `k8s-sb` directory is the root of all service bindings. In this example, only one database called `fruit-db` is intended to be bound. This binding database has the `type` file, that indicates `postgresql` as the database type, while the other files in the directory provide the necessary information to establish the connection."
msgstr " `k8s-sb` 目录是所有服务绑定的根。在这个例子中，只有一个名为 `fruit-db` 的数据库打算被绑定。这个绑定的数据库有 `type` 文件，该文件表明 `postgresql` 为数据库类型，而目录中的其他文件提供了建立连接的必要信息。"

#. type: delimited block =
#: upstream/_guides/deploying-to-kubernetes.adoc:1345
#, fuzzy
msgid "After your Quarkus project obtains information from `SERVICE_BINDING_ROOT` environment variables that are set by OpenShift, you can locate generated configuration files that are present in the file system and use them to map the configuration-file values to properties of certain extensions."
msgstr "在你的Quarkus项目从OpenShift设置的 `SERVICE_BINDING_ROOT` 环境变量中获取信息后，你可以找到存在于文件系统中的生成的配置文件，并使用它们将配置文件的值映射到某些扩展的属性。"

#. type: Title ==
#: upstream/_guides/deploying-to-kubernetes.adoc:1348
#, fuzzy, no-wrap
msgid "Introduction to the Service Binding Operator"
msgstr "服务绑定运营商介绍"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1351
#, fuzzy
msgid "The link:https://github.com/redhat-developer/service-binding-operator[Service Binding Operator] is an Operator that implements link:https://github.com/servicebinding/spec[Service Binding Specification for Kubernetes] and is meant to simplify the binding of services to an application. Containerized applications that support link:https://github.com/servicebinding/spec#workload-projection[Workload Projection] obtain service binding information in the form of volume mounts. The Service Binding Operator reads binding service information and mounts it to the application containers that need it."
msgstr "link:https://github.com/redhat-developer/service-binding-operator[服务绑定运营商] 是一个实现 link:https://github.com/k8s-service-bindings/spec[Kubernetes服务绑定规范的] 运营商，旨在简化服务与应用程序的绑定。支持 link:https://github.com/k8s-service-bindings/spec#workload-projection[工作负载预测] 的容器化应用程序以卷挂载的形式获得服务绑定信息。服务绑定操作员读取绑定的服务信息，并将其挂载到需要它的应用程序容器中。"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1353
#, fuzzy
msgid "The correlation between application and bound services is expressed through the `ServiceBinding` resources, which declares the intent of what services are meant to be bound to what application."
msgstr "应用程序和绑定的服务之间的相关性是通过 `ServiceBinding` 资源来表达的，它声明了什么服务要绑定到什么应用程序的意图。"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1355
#, fuzzy
msgid "The Service Binding Operator watches for `ServiceBinding` resources, which inform the Operator what applications are meant to be bound with what services. When a listed application is deployed, the Service Binding Operator collects all the binding information that must be passed to the application, then upgrades the application container by attaching a volume mount with the binding information."
msgstr "服务绑定操作者观察 `ServiceBinding` ，这些资源告知操作者哪些应用程序要与哪些服务绑定。当一个列出的应用程序被部署时，服务绑定操作者会收集所有必须传递给应用程序的绑定信息，然后通过附加一个带有绑定信息的卷装载来升级应用程序容器。"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1357
#, fuzzy
msgid "The Service Binding Operator completes the following actions:"
msgstr "服务绑定操作员完成以下操作。"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1359
#, fuzzy
msgid "Observes `ServiceBinding` resources for workloads intended to be bound to a particular service"
msgstr "观察 `ServiceBinding` ，为打算与特定服务绑定的工作负载提供资源。"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1360
#, fuzzy
msgid "Applies the binding information to the workload using volume mounts"
msgstr "使用卷挂载将绑定信息应用于工作负载"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1362
#, fuzzy
msgid "The following chapter describes the automatic and semi-automatic service binding approaches and their use cases. With either approach, the `kubernetes-service-binding` extension generates a `ServiceBinding` resource. With the semi-automatic approach, users must provide a configuration for target services manually. With the automatic approach, for a limited set of services generating the `ServiceBinding` resource, no additional configuration is needed."
msgstr "下一章描述了自动和半自动的服务绑定方法和它们的使用情况。使用这两种方法， `kubernetes-service-binding` 扩展会生成 `ServiceBinding` 资源。在半自动方法中，用户必须手动提供目标服务的配置。在自动方法中，对于生成 `ServiceBinding` 资源的一组有限的服务，不需要额外的配置。"

#. type: Title ===
#: upstream/_guides/deploying-to-kubernetes.adoc:1364
#, fuzzy, no-wrap
msgid "Semi-automatic service binding"
msgstr "半自动服务绑定"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1367
#, fuzzy
msgid "A service binding process starts with a user specification of required services that will be bound to a certain application. This expression is summarized in the `ServiceBinding` resource that is generated by the `kubernetes-service-binding` extension. The use of the `kubernetes-service-binding` extensions helps users to generate `ServiceBinding` resources with minimal configuration, therefore simplifying the process overall."
msgstr "服务绑定过程从用户对将被绑定到某个应用程序的所需服务的规范开始。这种表达方式被总结在由 `kubernetes-service-binding` 扩展生成的 `ServiceBinding` 资源中。使用 `kubernetes-service-binding` 扩展可以帮助用户以最小的配置生成 `ServiceBinding` 资源，因此从整体上简化了这个过程。"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1369
#, fuzzy
msgid "The Service Binding Operator responsible for the binding process then reads the information from the `ServiceBinding` resource and mounts the required files to a container accordingly."
msgstr "然后，负责绑定过程的服务绑定操作员从 `ServiceBinding` 资源中读取信息，并相应地将所需文件挂载到容器中。"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1372
#, fuzzy
msgid "An example of the `ServiceBinding` resource:"
msgstr " `ServiceBinding` 资源的一个例子。"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:1392
#, no-wrap
msgid ""
"apiVersion: binding.operators.coreos.com/v1beta1\n"
"kind: ServiceBinding\n"
"metadata:\n"
" name: binding-request\n"
" namespace: service-binding-demo\n"
"spec:\n"
" application:\n"
"   name: java-app\n"
"   group: apps\n"
"   version: v1\n"
"   resource: deployments\n"
" services:\n"
" - group: postgres-operator.crunchydata.com\n"
"   version: v1beta1\n"
"   kind: Database\n"
"   name: db-demo\n"
"   id: postgresDB\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/deploying-to-kubernetes.adoc:1397
#, fuzzy
msgid "The `quarkus-kubernetes-service-binding` extension provides a more compact way of expressing the same information. For example:"
msgstr " `quarkus-kubernetes-service-binding` 扩展提供了一种更紧凑的方式来表达相同的信息。比如说。"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:1402
#, no-wrap
msgid ""
"quarkus.kubernetes-service-binding.services.db-demo.api-version=postgres-operator.crunchydata.com/v1beta1\n"
"quarkus.kubernetes-service-binding.services.db-demo.kind=Database\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/deploying-to-kubernetes.adoc:1406
#, fuzzy
msgid "After adding the earlier configuration properties inside your `application.properties`, the `quarkus-kubernetes`, in combination with the `quarkus-kubernetes-service-binding` extension, automatically generates the `ServiceBinding` resource."
msgstr "在你的 `application.properties` 里面添加了前面的配置属性后， `quarkus-kubernetes` ，结合 `quarkus-kubernetes-service-binding` 扩展，自动生成 `ServiceBinding` 资源。"

#. type: delimited block =
#: upstream/_guides/deploying-to-kubernetes.adoc:1408
#, fuzzy
msgid "The earlier mentioned `db-demo` property-configuration identifier now has a double role and also completes the following actions:"
msgstr "先前提到的 `db-demo` 属性-配置标识符现在有了双重作用，也完成了以下动作。"

#. type: delimited block =
#: upstream/_guides/deploying-to-kubernetes.adoc:1410
#, fuzzy
msgid "Correlates and groups `api-version` and `kind` properties together"
msgstr "将 `api-version` 和 `kind` 属性联系起来，并将其分组。"

#. type: delimited block =
#: upstream/_guides/deploying-to-kubernetes.adoc:1411
#, fuzzy
msgid "Defines the `name` property for the custom resource with a possibility for a later edit. For example:"
msgstr "定义自定义资源的 `name` 属性，以后可以编辑。例如。"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:1417
#, no-wrap
msgid ""
"quarkus.kubernetes-service-binding.services.db-demo.api-version=postgres-operator.crunchydata.com/v1beta1\n"
"quarkus.kubernetes-service-binding.services.db-demo.kind=Database\n"
"quarkus.kubernetes-service-binding.services.db-demo.name=my-db\n"
msgstr ""

#. type: Block title
#: upstream/_guides/deploying-to-kubernetes.adoc:1419
#: upstream/_guides/deploying-to-kubernetes.adoc:1555
#, fuzzy, no-wrap
msgid "Additional resources"
msgstr "额外资源"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1422
#, fuzzy
msgid "For a semi-automatic service binding demonstration, see link:https://developers.redhat.com/articles/2021/12/22/how-use-quarkus-service-binding-operator#create_the_quarkus_application[How to use Quarkus with the Service Binding Operator]"
msgstr "关于半自动服务绑定的演示，请看 link:https://developers.redhat.com/articles/2021/12/22/how-use-quarkus-service-binding-operator#create_the_quarkus_application[如何使用Quarkus与服务绑定操作者] 的关系。"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1424
#, fuzzy
msgid "link:https://github.com/redhat-developer/service-binding-operator#known-bindable-operators[List of bindable Operators]"
msgstr "列表中的 link:https://github.com/redhat-developer/service-binding-operator#known-bindable-operators[可绑定操作符] 的列表"

#. type: Title ===
#: upstream/_guides/deploying-to-kubernetes.adoc:1426
#, fuzzy, no-wrap
msgid "Automatic service binding"
msgstr "自动服务绑定"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1429
#, fuzzy
msgid "The `quarkus-kubernetes-service-binding` extension can generate the `ServiceBinding` resource automatically after detecting that an application requires access to the external services that are provided by available bindable Operators."
msgstr " `quarkus-kubernetes-service-binding` 扩展可以在检测到一个应用程序需要访问由可用的可绑定操作符提供的外部服务后，自动生成 `ServiceBinding` 资源。"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1431
#, fuzzy
msgid "Automatic service binding can be generated for a limited number of service types. To be consistent with established terminology for Kubernetes and Quarkus services, this chapter refers to these service types as kinds."
msgstr "自动服务绑定可以为数量有限的服务类型生成。为了与Kubernetes和Quarkus服务的既定术语一致，本章将这些服务类型称为种类。"

#. type: Block title
#: upstream/_guides/deploying-to-kubernetes.adoc:1432
#, fuzzy, no-wrap
msgid "Operators that support the service auto-binding"
msgstr "支持服务自动绑定的操作者"

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1435
#, fuzzy, no-wrap
msgid "Operator"
msgstr "运营商"

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1435
#, fuzzy, no-wrap
msgid "API Version"
msgstr "API版本"

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1436
#, fuzzy, no-wrap
msgid "Kind"
msgstr "种类"

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1436
#, fuzzy, no-wrap
msgid "`postgresql`"
msgstr " `postgresql` "

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1436
#, fuzzy, no-wrap
msgid "link:https://operatorhub.io/operator/postgresql[CrunchyData Postgres]"
msgstr "link:https://operatorhub.io/operator/postgresql[CrunchyData Postgres]"

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1436
#, fuzzy, no-wrap
msgid "postgres-operator.crunchydata.com/v1beta1"
msgstr "postgres-operator.crunchydata.com/v1beta1"

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1437
#, fuzzy, no-wrap
msgid "PostgresCluster"
msgstr "簇拥而至的PostgresCluster"

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1437
#, fuzzy, no-wrap
msgid "`mysql`"
msgstr " `mysql` "

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1437
#, fuzzy, no-wrap
msgid "link:https://operatorhub.io/operator/percona-xtradb-cluster-operator[Percona XtraDB Cluster]"
msgstr "link:https://operatorhub.io/operator/percona-xtradb-cluster-operator[Percona XtraDB群集]"

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1437
#, fuzzy, no-wrap
msgid "pxc.percona.com/v1-9-0"
msgstr "pxc.percona.com/v1-9-0"

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1438
#, fuzzy, no-wrap
msgid "PerconaXtraDBCluster"
msgstr "霹雳火"

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1438
#, fuzzy, no-wrap
msgid "`mongo`"
msgstr " `mongo` "

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1438
#, fuzzy, no-wrap
msgid "link:https://operatorhub.io/operator/percona-server-mongodb-operator[Percona Mongo]"
msgstr "link:https://operatorhub.io/operator/percona-server-mongodb-operator[Percona Mongo]"

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1438
#, fuzzy, no-wrap
msgid "psmdb.percona.com/v1-9-0"
msgstr "psmdb.percona.com/v1-9-0"

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1439
#, fuzzy, no-wrap
msgid "PerconaServerMongoDB"
msgstr "淘宝网"

#. type: Title ===
#: upstream/_guides/deploying-to-kubernetes.adoc:1442
#, fuzzy, no-wrap
msgid "Automatic datasource binding"
msgstr "自动数据源绑定"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1445
#, fuzzy
msgid "For traditional databases, automatic binding is initiated whenever a datasource is configured as follows:"
msgstr "对于传统的数据库，每当数据源被配置成如下样子时，就会启动自动绑定。"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:1449
#, no-wrap
msgid "quarkus.datasource.db-kind=postgresql\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1452
#, fuzzy
msgid "The previous configuration, combined with the presence of `quarkus-datasource`, `quarkus-jdbc-postgresql`, `quarkus-kubernetes`, and `quarkus-kubernetes-service-binding` properties in the application, results in the generation of the `ServiceBinding` resource for the `postgresql` database type."
msgstr "前面的配置，结合应用程序中存在的 `quarkus-datasource` 、 `quarkus-jdbc-postgresql` 、 `quarkus-kubernetes` 和 `quarkus-kubernetes-service-binding` 属性，导致为 `postgresql` 数据库类型生成 `ServiceBinding` 资源。"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1454
#, fuzzy
msgid "By using the `apiVersion` and `kind` properties of the Operator resource, which matches the used `postgresql` Operator, the generated `ServiceBinding` resource binds the service or resource to the application."
msgstr "通过使用操作员资源的 `apiVersion` 和 `kind` 属性，与使用的 `postgresql` 操作员相匹配，生成的 `ServiceBinding` 资源将服务或资源绑定到应用程序。"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1456
#, fuzzy
msgid "When you do not specify a name for your database service, the the value of the `db-kind` property is used as the default name."
msgstr "当你没有为你的数据库服务指定一个名称时， `db-kind` 属性的值被用作默认名称。"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:1463
#, no-wrap
msgid ""
" services:\n"
" - apiVersion: postgres-operator.crunchydata.com/v1beta1\n"
"   kind: PostgresCluster\n"
"   name: postgresql\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1466
#, fuzzy
msgid "Specified the name of the datasource as follows:"
msgstr "指定数据源的名称，如下所示。"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:1470
#: upstream/_guides/deploying-to-kubernetes.adoc:1543
#, no-wrap
msgid "quarkus.datasource.fruits-db.db-kind=postgresql\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1473
#, fuzzy
msgid "The `service` in the generated `ServiceBinding` then displays as follows:"
msgstr "然后，在生成的 `ServiceBinding` ， `service` ，显示如下。"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:1480
#, no-wrap
msgid ""
" services:\n"
" - apiVersion: postgres-operator.crunchydata.com/v1beta1\n"
"   kind: PostgresCluster\n"
"   name: fruits-db\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1483
#, fuzzy
msgid "Similarly, if you use `mysql`, the name of the datasource can be specified as follows:"
msgstr "同样，如果你使用 `mysql` ，数据源的名称可以按如下方式指定。"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:1487
#, no-wrap
msgid "quarkus.datasource.fruits-db.db-kind=mysql\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1490
#, fuzzy
msgid "The generated `service` contains the following:"
msgstr "生成的 `service` ，包含以下内容。"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:1497
#, no-wrap
msgid ""
" services:\n"
" - apiVersion: pxc.percona.com/v1-9-0\n"
"   kind: PerconaXtraDBCluster\n"
"   name: fruits-db\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/deploying-to-kubernetes.adoc:1500
#, fuzzy, no-wrap
msgid "Customizing Automatic Service Binding"
msgstr "定制自动服务绑定"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1503
#, fuzzy
msgid "Even though automatic binding was developed to eliminate as much manual configuration as possible, there are cases where modifying the generated `ServiceBinding` resource might still be needed. The generation process exclusively relies on information extracted from the application and the knowledge of the supported Operators, which may not reflect what is deployed in the cluster. The generated resource is based purely on the knowledge of the supported bindable Operators for popular service kinds and a set of conventions that were developed to prevent possible mismatches, such as:"
msgstr "尽管自动绑定的开发是为了尽可能地消除手动配置，但在某些情况下，可能仍然需要修改生成的 `ServiceBinding` 。生成过程完全依赖于从应用程序中提取的信息和支持的操作符的知识，这可能不反映集群中部署的内容。生成的资源完全基于流行的服务种类所支持的可绑定操作符的知识，以及为防止可能的不匹配而开发的一组约定，例如。"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1505
#, fuzzy
msgid "The target resource name does not match the datasource name"
msgstr "目标资源名称与数据源名称不一致"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1506
#, fuzzy
msgid "A specific Operator needs to be used rather than the default Operator for that service kind"
msgstr "需要使用一个特定的操作员，而不是该服务种类的默认操作员。"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1507
#, fuzzy
msgid "Version conflicts that occur when a user needs to use any other version than default or latest"
msgstr "当用户需要使用默认或最新以外的任何其他版本时发生的版本冲突"

#. type: Block title
#: upstream/_guides/deploying-to-kubernetes.adoc:1508
#, fuzzy, no-wrap
msgid "Conventions"
msgstr "公约"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1511
#, fuzzy
msgid "The target resource coordinates are determined based on the type of Operator and the kind of service."
msgstr "目标资源坐标是根据运营商的类型和服务种类来确定的。"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1512
#, fuzzy
msgid "The target resource name is set by default to match the service kind, such as `postgresql`, `mysql`, `mongo`."
msgstr "目标资源名称默认设置为与服务种类相匹配，如： `postgresql` , `mysql` , `mongo` 。"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1513
#, fuzzy
msgid "For named datasources, the name of the datasource is used."
msgstr "对于命名的数据源，使用的是数据源的名称。"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1514
#, fuzzy
msgid "For named `mongo` clients, the name of the client is used."
msgstr "对于命名的 `mongo` 客户端，使用的是客户的名字。"

#. type: Block title
#: upstream/_guides/deploying-to-kubernetes.adoc:1516
#, fuzzy, no-wrap
msgid "Example 1 - Name mismatch"
msgstr "例1--名称不匹配"

#. type: delimited block =
#: upstream/_guides/deploying-to-kubernetes.adoc:1519
#, fuzzy
msgid "For cases in which you need to modify the generated `ServiceBinding` to fix a name mismatch, use the `quarkus.kubernetes-service-binding.services` properties and specify the service's name as the service key."
msgstr "对于需要修改生成的 `ServiceBinding` 以修复名称不匹配的情况，请使用 `quarkus.kubernetes-service-binding.services` 属性并指定服务的名称作为服务键。"

#. type: delimited block =
#: upstream/_guides/deploying-to-kubernetes.adoc:1521
#, fuzzy
msgid "The `service key` is usually the name of the service, for example the name of the datasource, or the name of the `mongo` client. When this value is not available, the datasource type, such as `postgresql`, `mysql`, `mongo`, is used instead."
msgstr " `service key` 通常是服务的名称，例如数据源的名称，或 `mongo` 客户端的名称。当这个值不可用时，就用数据源类型，如 `postgresql` , `mysql` , `mongo` ，来代替。"

#. type: delimited block =
#: upstream/_guides/deploying-to-kubernetes.adoc:1523
#, fuzzy
msgid "To avoid naming conflicts between different types of services, prefix the `service key` with a specific datasource type, such as `postgresql-__<person>__`."
msgstr "为了避免不同类型的服务之间的命名冲突，在 `service key` ，以特定的数据源类型作为前缀，例如 `postgresql- _<person>_` ."

#. type: delimited block =
#: upstream/_guides/deploying-to-kubernetes.adoc:1525
#, fuzzy
msgid "The following example shows how to customize the `apiVersion` property of the `PostgresCluster` resource:"
msgstr "下面的例子显示了如何定制 `PostgresCluster` 资源的 `apiVersion` 属性。"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:1530
#, no-wrap
msgid ""
"quarkus.datasource.db-kind=postgresql\n"
"quarkus.kubernetes-service-binding.services.postgresql.api-version=postgres-operator.crunchydata.com/v1beta2\n"
msgstr ""

#. type: Block title
#: upstream/_guides/deploying-to-kubernetes.adoc:1534
#, fuzzy, no-wrap
msgid "Example 2: Application of a custom name for a datasource"
msgstr "例2：数据源自定义名称的应用"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1537
#, fuzzy
msgid "In Example 1, the `db-kind`(`postgresql`) was used as a service key. In this example, because the datasource is named, according to convention, the datasource name (`fruits-db`) is used instead."
msgstr "在例1中， `db-kind` ( `postgresql` )被用来作为服务键。在这个例子中，由于数据源是被命名的，根据惯例，用数据源名称( `fruits-db` )代替。"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1539
#, fuzzy
msgid "The following example shows that for a named datasource, the datasource name is used as the name of the target resource:"
msgstr "下面的例子显示，对于一个命名的数据源，数据源名称被用作目标资源的名称。"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1546
#, fuzzy
msgid "This has the same effect as the following configuration:"
msgstr "这与下面的配置有相同的效果。"

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:1552
#, no-wrap
msgid ""
"quarkus.kubernetes-service-binding.services.fruits-db.api-version=postgres-operator.crunchydata.com/v1beta1\n"
"quarkus.kubernetes-service-binding.services.fruits-db.kind=PostgresCluster\n"
"quarkus.kubernetes-service-binding.services.fruits-db.name=fruits-db\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/deploying-to-kubernetes.adoc:1556
msgid "For more details about the available properties and how do they work, see the link:https://github.com/servicebinding/spec#workload-projection[Workload Projection] part of the Service Binding specification."
msgstr ""

#, fuzzy
#~ msgid "Property"
#~ msgstr "财产"

#, fuzzy
#~ msgid "Type"
#~ msgstr "类型"

#, fuzzy
#~ msgid "Description"
#~ msgstr "描述"

#, fuzzy
#~ msgid "Default Value"
#~ msgstr "默认值"

#, fuzzy
#~ msgid "quarkus.kubernetes.name"
#~ msgstr "quarkus.kubernetes.name"

#, fuzzy
#~ msgid "String"
#~ msgstr "字符串"

#, fuzzy
#~ msgid "${quarkus.container-image.name}"
#~ msgstr "${quarkus.container-image.name}。"

#, fuzzy
#~ msgid "quarkus.kubernetes.version"
#~ msgstr "quarkus.kubernetes.version"

#, fuzzy
#~ msgid "${quarkus.container-image.tag}"
#~ msgstr "${quarkus.container-image.tag}。"

#, fuzzy
#~ msgid "quarkus.kubernetes.part-of"
#~ msgstr "quarkus.kubernetes.part-of"

#, fuzzy
#~ msgid "quarkus.kubernetes.init-containers"
#~ msgstr "quarkus.kubernetes.init-containers"

#, fuzzy
#~ msgid "Map<String, Container>"
#~ msgstr "地图<字符串，容器>。"

#, fuzzy
#~ msgid "quarkus.kubernetes.namespace"
#~ msgstr "quarkus.kubernetes.namespace"

#, fuzzy
#~ msgid "quarkus.kubernetes.labels"
#~ msgstr "quarkus.kubernetes.labs"

#, fuzzy
#~ msgid "Map"
#~ msgstr "地图"

#, fuzzy
#~ msgid "quarkus.kubernetes.annotations"
#~ msgstr "quarkus.kubernetes.annotations"

#, fuzzy
#~ msgid "quarkus.kubernetes.app-secret"
#~ msgstr "quarkus.kubernetes.app-secret"

#, fuzzy
#~ msgid "quarkus.kubernetes.app-config-map"
#~ msgstr "quarkus.kubernetes.app-config-map"

#, fuzzy
#~ msgid "quarkus.kubernetes.env-vars"
#~ msgstr "quarkus.kubernetes.env-vars"

#, fuzzy
#~ msgid "Map<String, Env>"
#~ msgstr "地图<字符串，环境>。"

#, fuzzy
#~ msgid "quarkus.kubernetes.working-dir"
#~ msgstr "quarkus.kubernetes.working-dir"

#, fuzzy
#~ msgid "quarkus.kubernetes.command"
#~ msgstr "quarkus.kubernetes.command"

#, fuzzy
#~ msgid "String[]"
#~ msgstr "字符串[]"

#, fuzzy
#~ msgid "quarkus.kubernetes.arguments"
#~ msgstr "quarkus.kubernetes.arguments"

#, fuzzy
#~ msgid "quarkus.kubernetes.replicas"
#~ msgstr "quarkus.kubernetes.replicas"

#, fuzzy
#~ msgid "int"
#~ msgstr "䵮䵮"

#, fuzzy
#~ msgid "1"
#~ msgstr "1"

#, fuzzy
#~ msgid "quarkus.kubernetes.service-account"
#~ msgstr "quarkus.kubernetes.service-account"

#, fuzzy
#~ msgid "quarkus.kubernetes.ports"
#~ msgstr "quarkus.kubernetes.ports"

#, fuzzy
#~ msgid "Map<String, Port>"
#~ msgstr "Map<String, Port>（地图）。"

#, fuzzy
#~ msgid "quarkus.kubernetes.service-type"
#~ msgstr "quarkus.kubernetes.service-type"

#, fuzzy
#~ msgid "ServiceType"
#~ msgstr "服务类型"

#, fuzzy
#~ msgid "ClusterIP"
#~ msgstr "ClusterIP"

#, fuzzy
#~ msgid "quarkus.kubernetes.pvc-volumes"
#~ msgstr "quarkus.kubernetes.pvc-volumes"

#, fuzzy
#~ msgid "Map<String, PersistentVolumeClaimVolume>"
#~ msgstr "地图<String, PersistentVolumeClaimVolume>。"

#, fuzzy
#~ msgid "quarkus.kubernetes.secret-volumes"
#~ msgstr "quarkus.kubernetes.secret-volumes"

#, fuzzy
#~ msgid "Map<String, SecretVolume>"
#~ msgstr "地图[String, SecretVolume]。"

#, fuzzy
#~ msgid "quarkus.kubernetes.config-map-volumes"
#~ msgstr "quarkus.kubernetes.config-map-volumes"

#, fuzzy
#~ msgid "Map<String, ConfigMapVolume>"
#~ msgstr "地图[String, ConfigMapVolume]。"

#, fuzzy
#~ msgid "quarkus.kubernetes.git-repo-volumes"
#~ msgstr "quarkus.kubernetes.git-repo-volumes"

#, fuzzy
#~ msgid "Map<String, GitRepoVolume>"
#~ msgstr "地图<字符串，GitRepoVolume>。"

#, fuzzy
#~ msgid "quarkus.kubernetes.aws-elastic-block-store-volumes"
#~ msgstr "quarkus.kubernetes.aws-elastic-block-store-volumes"

#, fuzzy
#~ msgid "Map<String, AwsElasticBlockStoreVolume>"
#~ msgstr "地图<String, AwsElasticBlockStoreVolume>。"

#, fuzzy
#~ msgid "quarkus.kubernetes.azure-disk-volumes"
#~ msgstr "quarkus.kubernetes.azure-disk-volumes"

#, fuzzy
#~ msgid "Map<String, AzureDiskVolume>"
#~ msgstr "地图[String, AzureDiskVolume]。"

#, fuzzy
#~ msgid "quarkus.kubernetes.azure-file-volumes"
#~ msgstr "quarkus.kubernetes.azure-file-volumes"

#, fuzzy
#~ msgid "Map<String, AzureFileVolume>"
#~ msgstr "地图[String, AzureFileVolume]。"

#, fuzzy
#~ msgid "quarkus.kubernetes.mounts"
#~ msgstr "quarkus.kubernetes.mounts"

#, fuzzy
#~ msgid "Map<String, Mount>"
#~ msgstr "地图[String, Mount]"

#, fuzzy
#~ msgid "quarkus.kubernetes.image-pull-policy"
#~ msgstr "quarkus.kubernetes.image-pull-policy"

#, fuzzy
#~ msgid "ImagePullPolicy"
#~ msgstr "图片拉动政策"

#, fuzzy
#~ msgid "Always"
#~ msgstr "始终如一"

#, fuzzy
#~ msgid "quarkus.kubernetes.image-pull-secrets"
#~ msgstr "quarkus.kubernetes.image-pull-secrets"

#, fuzzy
#~ msgid "quarkus.kubernetes.liveness-probe"
#~ msgstr "quarkus.kubernetes.liveness-probe"

#, fuzzy
#~ msgid "Probe"
#~ msgstr "探针"

#, fuzzy
#~ msgid "( see Probe )"
#~ msgstr "( 见探针 )"

#, fuzzy
#~ msgid "quarkus.kubernetes.readiness-probe"
#~ msgstr "quarkus.kubernetes.readiness-probe"

#, fuzzy
#~ msgid "quarkus.kubernetes.sidecars"
#~ msgstr "quarkus.kubernetes.sidecars"

#, fuzzy
#~ msgid "boolean"
#~ msgstr "布尔型"

#, fuzzy
#~ msgid "false"
#~ msgstr "假的"

#, fuzzy
#~ msgid "quarkus.kubernetes.ingress.host"
#~ msgstr "quarkus.kubernetes.ingress.host"

#, fuzzy
#~ msgid "quarkus.kubernetes.ingress.annotations"
#~ msgstr "quarkus.kubernetes.ingress.annotations"

#, fuzzy
#~ msgid "Map<String, String>"
#~ msgstr "地图<字符串，字符串>。"

#, fuzzy
#~ msgid "quarkus.kubernetes.headless"
#~ msgstr "quarkus.kubernetes.headless"

#, fuzzy
#~ msgid "quarkus.kubernetes.hostaliases"
#~ msgstr "quarkus.kubernetes.hostaliases"

#, fuzzy
#~ msgid "Map<String, HostAlias>"
#~ msgstr "地图[String, HostAlias]。"

#, fuzzy
#~ msgid "quarkus.kubernetes.resources.requests.cpu"
#~ msgstr "quarkus.kubernetes.resources.requests.cpu"

#, fuzzy
#~ msgid "quarkus.kubernetes.resources.requests.memory"
#~ msgstr "quarkus.kubernetes.resources.requests.memory"

#, fuzzy
#~ msgid "quarkus.kubernetes.resources.limits.cpu"
#~ msgstr "quarkus.kubernetes.resources.limit.cpu"

#, fuzzy
#~ msgid "quarkus.kubernetes.resources.limits.memory"
#~ msgstr "quarkus.kubernetes.resources.limit.memory"

#, fuzzy
#~ msgid "quarkus.kubernetes.security-context"
#~ msgstr "quarkus.kubernetes.security-context"

#, fuzzy
#~ msgid "SecurityContext"
#~ msgstr "安全语境"

#, fuzzy
#~ msgid "( see SecurityContext )"
#~ msgstr "( 见SecurityContext )"

#, fuzzy
#~ msgid "quarkus.kubernetes.remote-debug.enabled"
#~ msgstr "quarkus.kubernetes.remote-debug.enabled"

#, fuzzy
#~ msgid "quarkus.kubernetes.remote-debug.transport"
#~ msgstr "quarkus.kubernetes.remote-debug.transport"

#, fuzzy
#~ msgid "dt_socket"
#~ msgstr "dt_socket"

#, fuzzy
#~ msgid "quarkus.kubernetes.remote-debug.address-port"
#~ msgstr "quarkus.kubernetes.remote-debug.address-port"

#, fuzzy
#~ msgid "5005"
#~ msgstr "5005"

#, fuzzy
#~ msgid "quarkus.kubernetes.remote-debug.suspend"
#~ msgstr "quarkus.kubernetes.remote-debug.suspend"

#, fuzzy
#~ msgid "n"
#~ msgstr "n"

#, fuzzy
#~ msgid "Basic Types"
#~ msgstr "基本类型"

#, fuzzy
#~ msgid "Allowed values: `cluster-ip`, `node-port`, `load-balancer`, `external-name`"
#~ msgstr "允许的值。 `cluster-ip` , `node-port` , `load-balancer` 。 `external-name` "

#, fuzzy
#~ msgid "Env"
#~ msgstr "环境"

#, fuzzy
#~ msgid "value"
#~ msgstr "价值"

#, fuzzy
#~ msgid "secret"
#~ msgstr "秘密"

#, fuzzy
#~ msgid "configmap"
#~ msgstr "配置图"

#, fuzzy
#~ msgid "field"
#~ msgstr "领域"

#, fuzzy
#~ msgid "http-action-path"
#~ msgstr "http-action-path"

#, fuzzy
#~ msgid "exec-action"
#~ msgstr "执行行动"

#, fuzzy
#~ msgid "tcp-socket-action"
#~ msgstr "tcp-socket-action"

#, fuzzy
#~ msgid "initial-delay"
#~ msgstr "初始-延迟"

#, fuzzy
#~ msgid "Duration"
#~ msgstr "时间"

#, fuzzy
#~ msgid "0"
#~ msgstr "0"

#, fuzzy
#~ msgid "period"
#~ msgstr "时间"

#, fuzzy
#~ msgid "30s"
#~ msgstr "30s"

#, fuzzy
#~ msgid "timeout"
#~ msgstr "超时"

#, fuzzy
#~ msgid "10s"
#~ msgstr "10s"

#, fuzzy
#~ msgid "Port"
#~ msgstr "港口"

#, fuzzy
#~ msgid "container-port"
#~ msgstr "集装箱港口"

#, fuzzy
#~ msgid "host-port"
#~ msgstr "主机-端口"

#, fuzzy
#~ msgid "path"
#~ msgstr "路"

#, fuzzy
#~ msgid "/"
#~ msgstr "/"

#, fuzzy
#~ msgid "protocol"
#~ msgstr "协议"

#, fuzzy
#~ msgid "Protocol"
#~ msgstr "议定书"

#, fuzzy
#~ msgid "TCP"
#~ msgstr "TCP"

#, fuzzy
#~ msgid "Container"
#~ msgstr "容器"

#, fuzzy
#~ msgid "image"
#~ msgstr "形象"

#, fuzzy
#~ msgid "env-vars"
#~ msgstr "环境-变量"

#, fuzzy
#~ msgid "Env[]"
#~ msgstr "环境[]"

#, fuzzy
#~ msgid "working-dir"
#~ msgstr "工作路径"

#, fuzzy
#~ msgid "command"
#~ msgstr "指挥部"

#, fuzzy
#~ msgid "arguments"
#~ msgstr "论点"

#, fuzzy
#~ msgid "ports"
#~ msgstr "港口"

#, fuzzy
#~ msgid "Port[]"
#~ msgstr "端口[]"

#, fuzzy
#~ msgid "mounts"
#~ msgstr "坐骑"

#, fuzzy
#~ msgid "Mount[]"
#~ msgstr "负载[]"

#, fuzzy
#~ msgid "image-pull-policy"
#~ msgstr "图像拉动政策"

#, fuzzy
#~ msgid "liveness-probe"
#~ msgstr "活性-探针"

#, fuzzy
#~ msgid "readiness-probe"
#~ msgstr "预备-探针"

#, fuzzy
#~ msgid "HostAlias"
#~ msgstr "锚文本"

#, fuzzy
#~ msgid "hostnames"
#~ msgstr "主机名"

#, fuzzy
#~ msgid "list of hostnames"
#~ msgstr "主机名列表"

#, fuzzy
#~ msgid "se-linux-options"
#~ msgstr "脚本-linux-options"

#, fuzzy
#~ msgid "SeLinuxOptions"
#~ msgstr "许可证"

#, fuzzy
#~ msgid "windows-options"
#~ msgstr "窗口-选项"

#, fuzzy
#~ msgid "WindowsOptions"
#~ msgstr "窗口选项"

#, fuzzy
#~ msgid "run-as-user"
#~ msgstr "以用户身份运行"

#, fuzzy
#~ msgid "long"
#~ msgstr "长"

#, fuzzy
#~ msgid "run-as-group"
#~ msgstr "以组为单位运行"

#, fuzzy
#~ msgid "run-as-non-root"
#~ msgstr "以非root身份运行"

#, fuzzy
#~ msgid "supplemental-groups"
#~ msgstr "补充组"

#, fuzzy
#~ msgid "long[]"
#~ msgstr "长[]"

#, fuzzy
#~ msgid "fs-group"
#~ msgstr "fs-group"

#, fuzzy
#~ msgid "sysctls"
#~ msgstr "体系结构"

#, fuzzy
#~ msgid "fs-group-change-policy"
#~ msgstr "fs-group-change-policy"

#, fuzzy
#~ msgid "level"
#~ msgstr "水平"

#, fuzzy
#~ msgid "role"
#~ msgstr "角色"

#, fuzzy
#~ msgid "user"
#~ msgstr "用户"

#, fuzzy
#~ msgid "type"
#~ msgstr "类型"

#, fuzzy
#~ msgid "gmsa-credential-spec-name"
#~ msgstr "gmsa-credential-spec-name"

#, fuzzy
#~ msgid "gmsa-credential-spec"
#~ msgstr "gmsa-credential-spec"

#, fuzzy
#~ msgid "run-as-user-name"
#~ msgstr "以用户名称运行"

#, fuzzy
#~ msgid "host-process"
#~ msgstr "主机进程"

#, fuzzy
#~ msgid "Mounts and Volumes"
#~ msgstr "坐骑和卷轴"

#, fuzzy
#~ msgid "Mount"
#~ msgstr "悬挂"

#, fuzzy
#~ msgid "sub-path"
#~ msgstr "子路径"

#, fuzzy
#~ msgid "read-only"
#~ msgstr "只读"

#, fuzzy
#~ msgid "ConfigMapVolume"
#~ msgstr "配置地图卷"

#, fuzzy
#~ msgid "config-map-name"
#~ msgstr "config-map-name"

#, fuzzy
#~ msgid "default-mode"
#~ msgstr "默认模式"

#, fuzzy
#~ msgid "0600"
#~ msgstr "0600"

#, fuzzy
#~ msgid "optional"
#~ msgstr "可选"

#, fuzzy
#~ msgid "SecretVolume"
#~ msgstr "秘密卷轴"

#, fuzzy
#~ msgid "secret-name"
#~ msgstr "秘密名称"

#, fuzzy
#~ msgid "AzureDiskVolume"
#~ msgstr "蔚蓝磁盘卷"

#, fuzzy
#~ msgid "disk-name"
#~ msgstr "磁盘名称"

#, fuzzy
#~ msgid "disk-uri"
#~ msgstr "磁盘"

#, fuzzy
#~ msgid "kind"
#~ msgstr "种类"

#, fuzzy
#~ msgid "Managed"
#~ msgstr "管理的"

#, fuzzy
#~ msgid "caching-mode"
#~ msgstr "缓存模式"

#, fuzzy
#~ msgid "ReadWrite"
#~ msgstr "读写"

#, fuzzy
#~ msgid "fs-type"
#~ msgstr "fs型"

#, fuzzy
#~ msgid "ext4"
#~ msgstr "ext4"

#, fuzzy
#~ msgid "AwsElasticBlockStoreVolume"
#~ msgstr "AwsElasticBlockStoreVolume"

#, fuzzy
#~ msgid "volume-id"
#~ msgstr "卷-ID"

#, fuzzy
#~ msgid "partition"
#~ msgstr "分区"

#, fuzzy
#~ msgid "GitRepoVolume"
#~ msgstr "GitRepoVolume"

#, fuzzy
#~ msgid "repository"
#~ msgstr "储存库"

#, fuzzy
#~ msgid "directory"
#~ msgstr "目录"

#, fuzzy
#~ msgid "revision"
#~ msgstr "修订"

#, fuzzy
#~ msgid "PersistentVolumeClaimVolume"
#~ msgstr "持久性卷轴索赔卷轴"

#, fuzzy
#~ msgid "claim-name"
#~ msgstr "声称-名称"

#, fuzzy
#~ msgid "AzureFileVolume"
#~ msgstr "淘宝网上的文件卷（AzureFileVolume"

#, fuzzy
#~ msgid "share-name"
#~ msgstr "共享名称"

#, fuzzy
#~ msgid "quarkus.openshift.name"
#~ msgstr "quarkus.openshift.name"

#, fuzzy
#~ msgid "quarkus.openshift.version"
#~ msgstr "quarkus.openshift.version"

#, fuzzy
#~ msgid "quarkus.openshift.deployment-kind"
#~ msgstr "quarkus.openshift.deployment-kind"

#, fuzzy
#~ msgid "DeploymentConfig"
#~ msgstr "部署配置(DeploymentConfig)"

#, fuzzy
#~ msgid "quarkus.openshift.part-of"
#~ msgstr "quarkus.openshift.part-of"

#, fuzzy
#~ msgid "quarkus.openshift.init-containers"
#~ msgstr "quarkus.openshift.init-containers"

#, fuzzy
#~ msgid "quarkus.openshift.labels"
#~ msgstr "quarkus.openshift.labels"

#, fuzzy
#~ msgid "quarkus.openshift.annotations"
#~ msgstr "quarkus.openshift.annotations"

#, fuzzy
#~ msgid "quarkus.openshift.app-secret"
#~ msgstr "quarkus.openshift.app-secret"

#, fuzzy
#~ msgid "quarkus.openshift.app-config-map"
#~ msgstr "quarkus.openshift.app-config-map"

#, fuzzy
#~ msgid "quarkus.openshift.env-vars"
#~ msgstr "quarkus.openshift.env-vars"

#, fuzzy
#~ msgid "quarkus.openshift.working-dir"
#~ msgstr "quarkus.openshift.working-dir"

#, fuzzy
#~ msgid "quarkus.openshift.command"
#~ msgstr "quarkus.openshift.command"

#, fuzzy
#~ msgid "quarkus.openshift.arguments"
#~ msgstr "quarkus.openshift.arguments"

#, fuzzy
#~ msgid "quarkus.openshift.jvm-arguments"
#~ msgstr "quarkus.openshift.jvm-arguments"

#, fuzzy
#~ msgid "The JVM arguments to pass to the JVM when starting the application"
#~ msgstr "启动应用程序时传递给JVM的JVM参数"

#, fuzzy
#~ msgid "-Dquarkus.http.host=0.0.0.0,-Djava.util.logging.manager=org.jboss.logmanager.LogManager"
#~ msgstr "-Dquarkus.http.host=0.0.0.0,-Djava.util.logging.manager=org.jboss.logmanager.LogManager"

#, fuzzy
#~ msgid "quarkus.openshift.jvm-additional-arguments"
#~ msgstr "quarkus.openshift.jvm-additional-arguments"

#, fuzzy
#~ msgid "Additional JVM arguments to pass to the JVM when starting the application"
#~ msgstr "启动应用程序时传递给JVM的额外JVM参数"

#, fuzzy
#~ msgid "quarkus.openshift.replicas"
#~ msgstr "quarkus.openshift.replicas"

#, fuzzy
#~ msgid "quarkus.openshift.service-account"
#~ msgstr "quarkus.openshift.service-account"

#, fuzzy
#~ msgid "quarkus.openshift.ports"
#~ msgstr "quarkus.openshift.port"

#, fuzzy
#~ msgid "quarkus.openshift.service-type"
#~ msgstr "quarkus.openshift.service-type"

#, fuzzy
#~ msgid "quarkus.openshift.pvc-volumes"
#~ msgstr "quarkus.openshift.pvc-volumes"

#, fuzzy
#~ msgid "quarkus.openshift.secret-volumes"
#~ msgstr "quarkus.openshift.secret-volumes"

#, fuzzy
#~ msgid "quarkus.openshift.config-map-volumes"
#~ msgstr "quarkus.openshift.config-map-volumes"

#, fuzzy
#~ msgid "quarkus.openshift.git-repo-volumes"
#~ msgstr "quarkus.openshift.git-repo-volumes"

#, fuzzy
#~ msgid "quarkus.openshift.aws-elastic-block-store-volumes"
#~ msgstr "quarkus.openshift.aws-elastic-block-store-volumes"

#, fuzzy
#~ msgid "quarkus.openshift.azure-disk-volumes"
#~ msgstr "quarkus.openshift.azure-disk-volumes"

#, fuzzy
#~ msgid "quarkus.openshift.azure-file-volumes"
#~ msgstr "quarkus.openshift.azure-file-volumes"

#, fuzzy
#~ msgid "quarkus.openshift.mounts"
#~ msgstr "quarkus.openshift.mounts"

#, fuzzy
#~ msgid "quarkus.openshift.image-pull-policy"
#~ msgstr "quarkus.openshift.image-pull-policy"

#, fuzzy
#~ msgid "quarkus.openshift.image-pull-secrets"
#~ msgstr "quarkus.openshift.image-pull-secrets"

#, fuzzy
#~ msgid "quarkus.openshift.liveness-probe"
#~ msgstr "quarkus.openshift.liveness-probe"

#, fuzzy
#~ msgid "quarkus.openshift.readiness-probe"
#~ msgstr "quarkus.openshift.readiness-probe"

#, fuzzy
#~ msgid "quarkus.openshift.sidecars"
#~ msgstr "quarkus.openshift.sidecars"

#, fuzzy
#~ msgid "quarkus.openshift.route.expose"
#~ msgstr "quarkus.openshift.route.expose"

#, fuzzy
#~ msgid "quarkus.openshift.route.host"
#~ msgstr "quarkus.openshift.route.host"

#, fuzzy
#~ msgid "quarkus.openshift.route.annotations"
#~ msgstr "quarkus.openshift.route.annotations"

#, fuzzy
#~ msgid "quarkus.openshift.headless"
#~ msgstr "quarkus.openshift.headless"

#, fuzzy
#~ msgid "quarkus.openshift.security-context"
#~ msgstr "quarkus.openshift.security-context"

#, fuzzy
#~ msgid "quarkus.openshift.remote-debug.enabled"
#~ msgstr "quarkus.openshift.remote-debug.enabled"

#, fuzzy
#~ msgid "quarkus.openshift.remote-debug.transport"
#~ msgstr "quarkus.openshift.remote-debug.transport"

#, fuzzy
#~ msgid "quarkus.openshift.remote-debug.address-port"
#~ msgstr "quarkus.openshift.remote-debug.address-port"

#, fuzzy
#~ msgid "quarkus.openshift.remote-debug.suspend"
#~ msgstr "quarkus.openshift.remote-debug.suspend"

#, fuzzy
#~ msgid "quarkus.knative.name"
#~ msgstr "quarkus.knative.name"

#, fuzzy
#~ msgid "quarkus.knative.version"
#~ msgstr "quarkus.knative.version"

#, fuzzy
#~ msgid "quarkus.knative.part-of"
#~ msgstr "quarkus.knative.part-of"

#, fuzzy
#~ msgid "quarkus.knative.init-containers"
#~ msgstr "quarkus.knative.init-containers"

#, fuzzy
#~ msgid "quarkus.knative.labels"
#~ msgstr "quarkus.knative.labels"

#, fuzzy
#~ msgid "quarkus.knative.annotations"
#~ msgstr "quarkus.knative.annotations"

#, fuzzy
#~ msgid "quarkus.knative.app-secret"
#~ msgstr "quarkus.knative.app-secret"

#, fuzzy
#~ msgid "quarkus.knative.app-config-map"
#~ msgstr "quarkus.knative.app-config-map"

#, fuzzy
#~ msgid "quarkus.knative.env-vars"
#~ msgstr "quarkus.knative.env-vars"

#, fuzzy
#~ msgid "quarkus.knative.working-dir"
#~ msgstr "quarkus.knative.working-dir"

#, fuzzy
#~ msgid "quarkus.knative.command"
#~ msgstr "quarkus.knative.command"

#, fuzzy
#~ msgid "quarkus.knative.arguments"
#~ msgstr "quarkus.knative.arguments"

#, fuzzy
#~ msgid "quarkus.knative.replicas"
#~ msgstr "quarkus.knative.replicas"

#, fuzzy
#~ msgid "quarkus.knative.service-account"
#~ msgstr "quarkus.knative.service-account"

#, fuzzy
#~ msgid "quarkus.knative.host"
#~ msgstr "quarkus.knative.host"

#, fuzzy
#~ msgid "quarkus.knative.ports"
#~ msgstr "quarkus.knative.port"

#, fuzzy
#~ msgid "quarkus.knative.service-type"
#~ msgstr "quarkus.knative.service-type"

#, fuzzy
#~ msgid "quarkus.knative.pvc-volumes"
#~ msgstr "quarkus.knative.pvc-volumes"

#, fuzzy
#~ msgid "quarkus.knative.secret-volumes"
#~ msgstr "quarkus.knative.secret-volumes"

#, fuzzy
#~ msgid "quarkus.knative.config-map-volumes"
#~ msgstr "quarkus.knative.config-map-volumes"

#, fuzzy
#~ msgid "quarkus.knative.git-repo-volumes"
#~ msgstr "quarkus.knative.git-repo-volumes"

#, fuzzy
#~ msgid "quarkus.knative.aws-elastic-block-store-volumes"
#~ msgstr "quarkus.knative.aws-elastic-block-store-volumes"

#, fuzzy
#~ msgid "quarkus.knative.azure-disk-volumes"
#~ msgstr "quarkus.knative.azure-disk-volumes"

#, fuzzy
#~ msgid "quarkus.knative.azure-file-volumes"
#~ msgstr "quarkus.knative.azure-file-volumes"

#, fuzzy
#~ msgid "quarkus.knative.mounts"
#~ msgstr "quarkus.knative.mounts"

#, fuzzy
#~ msgid "quarkus.knative.image-pull-policy"
#~ msgstr "quarkus.knative.image-pull-policy"

#, fuzzy
#~ msgid "quarkus.knative.image-pull-secrets"
#~ msgstr "quarkus.knative.image-pull-secrets"

#, fuzzy
#~ msgid "quarkus.knative.liveness-probe"
#~ msgstr "quarkus.knative.liveness-probe"

#, fuzzy
#~ msgid "quarkus.knative.readiness-probe"
#~ msgstr "quarkus.knative.readiness-probe"

#, fuzzy
#~ msgid "quarkus.knative.sidecars"
#~ msgstr "quarkus.knative.sidecars"

#, fuzzy
#~ msgid "quarkus.knative.revision-name"
#~ msgstr "quarkus.knative.revision-name"

#, fuzzy
#~ msgid "quarkus.knative.traffic"
#~ msgstr "quarkus.knative.traffic"

#, fuzzy
#~ msgid "Traffic[]"
#~ msgstr "交通[]"

#, fuzzy
#~ msgid "( see Traffic )"
#~ msgstr "( 见交通 )"

#, fuzzy
#~ msgid "quarkus.knative.min-scale"
#~ msgstr "quarkus.knative.min-scale"

#, fuzzy
#~ msgid "See link:https://knative.dev/docs/serving/autoscaling/scale-bounds/#lower-bound[link]"
#~ msgstr "见 link:https://knative.dev/docs/serving/autoscaling/scale-bounds/#lower-bound[链接]"

#, fuzzy
#~ msgid "quarkus.knative.max-scale"
#~ msgstr "quarkus.knative.max-scale"

#, fuzzy
#~ msgid "See link:https://knative.dev/docs/serving/autoscaling/scale-bounds/#upper-bound[link]"
#~ msgstr "见 link:https://knative.dev/docs/serving/autoscaling/scale-bounds/#upper-bound[链接]"

#, fuzzy
#~ msgid "quarkus.knative.scale-to-zero-enabled"
#~ msgstr "quarkus.knative.scale-to-zero-enabled"

#, fuzzy
#~ msgid "See link:https://knative.dev/docs/serving/autoscaling/scale-to-zero/#enable-scale-to-zero[link]"
#~ msgstr "见 link:https://knative.dev/docs/serving/autoscaling/scale-to-zero/#enable-scale-to-zero[链接]"

#, fuzzy
#~ msgid "true"
#~ msgstr "真"

#, fuzzy
#~ msgid "quarkus.knative.revision-auto-scaling"
#~ msgstr "quarkus.knative.revision-auto-scaling"

#, fuzzy
#~ msgid "AutoScalingConfig"
#~ msgstr "自动缩放配置(AutoScalingConfig)"

#, fuzzy
#~ msgid "( see AutoScalingConfig )"
#~ msgstr "( 见 AutoScalingConfig )"

#, fuzzy
#~ msgid "quarkus.knative.global-auto-scaling"
#~ msgstr "quarkus.knative.global-auto-scaling"

#, fuzzy
#~ msgid "GlobalAutoScalingConfig"
#~ msgstr "全球自动缩放配置（GlobalAutoScalingConfig"

#, fuzzy
#~ msgid "( see GlobalAutoScalingConfig )"
#~ msgstr "( 见GlobalAutoScalingConfig )"

#, fuzzy
#~ msgid "quarkus.knative.security-context"
#~ msgstr "quarkus.knative.security-context"

#, fuzzy
#~ msgid "Traffic"
#~ msgstr "交通状况"

#, fuzzy
#~ msgid "revision-name"
#~ msgstr "修订名"

#, fuzzy
#~ msgid "A specific revision to which to send this portion of traffic"
#~ msgstr "发送这部分流量的具体修订版"

#, fuzzy
#~ msgid "tag"
#~ msgstr "标签"

#, fuzzy
#~ msgid "Expose a dedicated url for referencing this target"
#~ msgstr "暴露一个专门的URL，用于引用这个目标"

#, fuzzy
#~ msgid "latest-revision"
#~ msgstr "最新修订版"

#, fuzzy
#~ msgid "Boolean"
#~ msgstr "布尔型"

#, fuzzy
#~ msgid "Optionally provided to indicate that the latest revision should be used for this traffic target"
#~ msgstr "可选择提供，以表明该流量目标应使用最新的修订版。"

#, fuzzy
#~ msgid "percent"
#~ msgstr "百分比"

#, fuzzy
#~ msgid "Logn"
#~ msgstr "ログン"

#, fuzzy
#~ msgid "Indicates the percent of traffic that is being routed to this revision"
#~ msgstr "表示将被路由到该修订版的流量的百分比。"

#, fuzzy
#~ msgid "100"
#~ msgstr "100"

#, fuzzy
#~ msgid "auto-scaler-class"
#~ msgstr "自动缩放器类"

#, fuzzy
#~ msgid "The auto-scaler class. Possible values: `kpa` for Knative Pod Autoscaler, `hpa` for Horizontal Pod Autoscaler"
#~ msgstr "自动缩放器类。可能的值： `kpa` 用于Knative Pod Autoscaler， `hpa` 用于Horizontal Pod Autoscaler。"

#, fuzzy
#~ msgid "kpa"
#~ msgstr "kpa"

#, fuzzy
#~ msgid "metric"
#~ msgstr "公制"

#, fuzzy
#~ msgid "The autoscaling metric to use. Possible values (concurrency, rps, cpu)"
#~ msgstr "要使用的自动缩放指标。可能的值（concurency, rps, cpu）。"

#, fuzzy
#~ msgid "target"
#~ msgstr "目标"

#, fuzzy
#~ msgid "This value specifies the autoscaling target"
#~ msgstr "这个值指定了自动缩放的目标"

#, fuzzy
#~ msgid "container-concurrency"
#~ msgstr "容器-货币"

#, fuzzy
#~ msgid "The exact amount of requests allowed to the replica at a time"
#~ msgstr "每次允许向复制体发出的请求的确切数量"

#, fuzzy
#~ msgid "target-utilization-percentage"
#~ msgstr "目标利用率--百分比"

#, fuzzy
#~ msgid "This value specifies a percentage of the target to actually be targeted by the autoscaler"
#~ msgstr "这个值指定了自动缩放器实际针对的目标的一个百分比。"

#, fuzzy
#~ msgid "requests-per-second"
#~ msgstr "每秒请求数"

#, fuzzy
#~ msgid "The requests per second per replica"
#~ msgstr "每个副本每秒的请求数"

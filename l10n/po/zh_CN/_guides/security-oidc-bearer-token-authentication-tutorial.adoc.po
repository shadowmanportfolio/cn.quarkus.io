# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-10-25 13:16+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:7
#, fuzzy, no-wrap
msgid "Protect a service application by using OpenID Connect (OIDC) Bearer token authentication"
msgstr "通过使用OpenID Connect（OIDC）承载认证来保护服务应用"

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:17
#, fuzzy
msgid "Use the Quarkus OpenID Connect (OIDC) extension to secure a Jakarta REST application with Bearer token authentication.  The bearer tokens are issued by OIDC and OAuth 2.0 compliant authorization servers, such as link:https://www.keycloak.org[Keycloak]."
msgstr "在这里，你使用Quarkus OpenID Connect (OIDC)扩展来确保Jakarta REST应用程序使用承载认证。不记名令牌是由OIDC和OAuth 2.0兼容的授权服务器（如 link:https://www.keycloak.org[Keycloak] ）发出。"

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:19
#, fuzzy
msgid "For more information about OIDC Bearer token authentication, see the Quarkus xref:security-oidc-bearer-token-authentication.adoc[OpenID Connect (OIDC) Bearer token authentication] guide."
msgstr "为了更好地理解OIDC承载器认证，请参阅 link:security-oidc-bearer-authentication-concept.html[OIDC承载器认证] 。"

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:21
#, fuzzy
msgid "If you want to protect web applications by using OIDC Authorization Code Flow authentication, see the xref:security-oidc-code-flow-authentication.adoc[OpenID Connect authorization code flow mechanism for protecting web applications] guide."
msgstr "为了更好地理解OIDC承载器认证，请参阅 link:security-oidc-bearer-authentication-concept.html[OIDC承载器认证] 。"

#. type: Title ==
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:22
#, fuzzy, no-wrap
msgid "Prerequisites"
msgstr "先决条件"

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:27
#, fuzzy
msgid "The https://stedolan.github.io/jq/[jq command-line processor tool]"
msgstr "link:https://stedolan.github.io/jq/[jq工具]"

#. type: Title ==
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:28
#, fuzzy, no-wrap
msgid "Architecture"
msgstr "建筑学"

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:31
#, fuzzy
msgid "This example shows how you can build a simple microservice that offers two endpoints:"
msgstr "在这个例子中，我们建立了一个简单的微服务，提供两个端点："

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:33
#, fuzzy
msgid "`/api/users/me`"
msgstr " `/api/users/me` "

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:34
#, fuzzy
msgid "`/api/admin`"
msgstr " `/api/admin` "

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:36
#, fuzzy
msgid "These endpoints are protected and can only be accessed if a client sends a bearer token along with the request, which must be valid (for example, signature, expiration, and audience) and trusted by the microservice."
msgstr "这些端点是受保护的，只有当客户端与请求一起发送一个不记名令牌时才能被访问，该令牌必须是有效的（例如：签名、过期和受众），并得到微服务的信任。"

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:39
#, fuzzy
msgid "The bearer token is issued by a Keycloak server and represents the subject for which the token was issued.  Because it is an OAuth 2.0 Authorization server, the token also references the client acting on the user's behalf."
msgstr "不记名令牌是由Keycloak服务器发出的，并代表令牌的发放对象。对于作为OAuth 2.0授权服务器，该令牌还引用了代表用户的客户端。"

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:42
#, fuzzy
msgid "Any user with a valid token can access the `/api/users/me` endpoint.  As a response, it returns a JSON document with user details obtained from the information in the token."
msgstr " `/api/users/me` 端点可由任何拥有有效令牌的用户访问。作为响应，它返回一个JSON文档，其中包含关于用户的细节，这些细节是从令牌上携带的信息获得的。"

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:45
#, fuzzy
msgid "The `/api/admin` endpoint is protected with RBAC (Role-Based Access Control), which only users with the `admin` role can access.  At this endpoint, the `@RolesAllowed` annotation is used to enforce the access constraint declaratively."
msgstr " `/api/admin` 端点受到RBAC（基于角色的访问控制）的保护，只有被授予 `admin` 角色的用户才能访问。在这个端点，我们使用 `@RolesAllowed` 注释来声明性地执行访问限制。"

#. type: Title ==
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:46
#, fuzzy, no-wrap
msgid "Solution"
msgstr "解决方案"

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:50
#, fuzzy
msgid "Follow the instructions in the next sections and create the application step by step.  You can also go straight to the completed example."
msgstr "我们建议你按照下面几节的说明，一步一步地创建应用程序。然而，你可以直接进入已完成的例子。"

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:52
#, fuzzy
msgid "You can clone the Git repository by running the command `git clone {quickstarts-clone-url}`, or you can download an {quickstarts-archive-url}[archive]."
msgstr "克隆 Git 仓库： `git clone {quickstarts-clone-url}` ，或者下载一个{quickstarts-archive-url}[存档]。"

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:54
#, fuzzy
msgid "The solution is located in the `security-openid-connect-quickstart` link:{quickstarts-tree-url}/security-openid-connect-quickstart[directory]."
msgstr "该解决方案位于 `security-openid-connect-quickstart` {quickstarts-treeurl}/security-openid-connect-quickstart[目录]中。"

#. type: Title ==
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:55
#, fuzzy, no-wrap
msgid "Procedure"
msgstr "程序"

#. type: Title ===
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:60
#, fuzzy, no-wrap
msgid "Create the Maven project"
msgstr "创建Maven项目"

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:64
msgid "You can either create a new Maven project with the `oidc` extension or you can add the extension to an existing Maven project.  Complete one of the following commands:"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:66
#, fuzzy
msgid "To create a new Maven project, use the following command:"
msgstr "首先，我们需要一个新的项目。用以下命令创建一个新项目："

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:74
#, fuzzy
msgid "This command generates a Maven project, importing the `oidc` extension which is an implementation of OIDC for Quarkus."
msgstr "该命令生成一个Maven项目，导入 `oidc` 扩展，这是Quarkus的OIDC实现。"

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:77
#, fuzzy
msgid "If you already have your Quarkus project configured, you can add the `oidc` extension to your project by running the following command in your project base directory:"
msgstr "如果你已经配置了你的Quarkus项目，你可以通过在你的项目基础目录下运行以下命令将 `oidc` 扩展到你的项目："

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:83
#, fuzzy
msgid "The following configuration gets added to your build file:"
msgstr "这将在你的构建文件中添加以下内容："

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:85
msgid "Using Maven (pom.xml):"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:94
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-oidc</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:99
#, fuzzy
msgid "Using Gradle (build.gradle):"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:105
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-oidc\")\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:109
#, fuzzy, no-wrap
msgid "Write the application"
msgstr "撰写申请书"

#. type: delimited block =
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:112
#, fuzzy
msgid "Implement the `/api/users/me` endpoint as shown in the following example, which is a regular Jakarta REST resource:"
msgstr "让我们从实现 `/api/users/me` 端点开始。正如你在下面的源代码中看到的，它只是一个普通的Jakarta REST资源："

#. type: delimited block -
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:117
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:161
#, no-wrap
msgid "package org.acme.security.openid.connect;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:122
#, no-wrap
msgid ""
"import jakarta.annotation.security.RolesAllowed;\n"
"import jakarta.inject.Inject;\n"
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.Path;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:125
#, no-wrap
msgid ""
"import org.jboss.resteasy.reactive.NoCache;\n"
"import io.quarkus.security.identity.SecurityIdentity;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:128
#, no-wrap
msgid ""
"@Path(\"/api/users\")\n"
"public class UsersResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:131
#, no-wrap
msgid ""
"    @Inject\n"
"    SecurityIdentity securityIdentity;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:139
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/me\")\n"
"    @RolesAllowed(\"user\")\n"
"    @NoCache\n"
"    public User me() {\n"
"        return new User(securityIdentity);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:141
#, no-wrap
msgid "    public static class User {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:143
#, no-wrap
msgid "        private final String userName;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:147
#, no-wrap
msgid ""
"        User(SecurityIdentity securityIdentity) {\n"
"            this.userName = securityIdentity.getPrincipal().getName();\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:153
#, no-wrap
msgid ""
"        public String getUserName() {\n"
"            return userName;\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:156
msgid "Implement the `/api/admin` endpoint as shown in the following simple example:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:167
#, no-wrap
msgid ""
"import jakarta.annotation.security.RolesAllowed;\n"
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.Path;\n"
"import jakarta.ws.rs.Produces;\n"
"import jakarta.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:170
#, no-wrap
msgid ""
"@Path(\"/api/admin\")\n"
"public class AdminResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:178
#, no-wrap
msgid ""
"    @GET\n"
"    @RolesAllowed(\"admin\")\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String admin() {\n"
"        return \"granted\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:184
#, fuzzy
msgid "The main difference in this example is that the `@RolesAllowed` annotation is used to verify that only users granted the `admin` role can access the endpoint."
msgstr " `/api/admin` 端点的源代码也非常简单。这里的主要区别是，我们使用 `@RolesAllowed` 注释来确保只有被授予 `admin` 角色的用户才能访问该端点："

#. type: delimited block =
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:187
#, fuzzy
msgid "Injection of the `SecurityIdentity` is supported in both `@RequestScoped` and `@ApplicationScoped` contexts."
msgstr "在 `@RequestScoped` 和 `@ApplicationScoped` 上下文中都支持注入 `SecurityIdentity` 。"

#. type: Title ===
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:188
#, fuzzy, no-wrap
msgid "Configure the application"
msgstr "配置应用程序"

#. type: delimited block =
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:191
#, fuzzy
msgid "Configure the Quarkus OpenID Connect (OIDC) extension by setting the following configuration properties in the `src/main/resources/application.properties` file."
msgstr "通过在 `src/main/resources/application.properties` 文件中设置以下配置属性来配置Quarkus OpenID Connect（OIDC）扩展。"

#. type: delimited block -
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:198
#, no-wrap
msgid ""
"%prod.quarkus.oidc.auth-server-url=http://localhost:8180/realms/quarkus\n"
"quarkus.oidc.client-id=backend-service\n"
"quarkus.oidc.credentials.secret=secret\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:201
#, no-wrap
msgid ""
"# Tell Dev Services for Keycloak to import the realm file\n"
"# This property is not effective when running the application in JVM or Native modes\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:203
#, no-wrap
msgid "quarkus.keycloak.devservices.realm-path=quarkus-realm.json\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:207
#, fuzzy
msgid "Where:"
msgstr "在哪里？"

#. type: delimited block =
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:211
#, fuzzy
msgid "`%prod.quarkus.oidc.auth-server-url` sets the base URL of the OpenID Connect (OIDC) server.  The `%prod.` profile prefix ensures that `Dev Services for Keycloak` launches a container when you run the application in development (dev) mode.  For more information, see the xref:keycloak-dev-mode[Run the application in dev mode] section."
msgstr " `%prod.quarkus.oidc.auth-server-url` 设置OpenID Connect（OIDC）服务器的基本URL。 配置文件前缀确保当你在开发模式下运行应用程序时， 会启动一个容器。更多信息请参见下面的 \" `%prod.` `Dev Services for Keycloak` link:#keycloak-dev-mode[在开发模式下运行应用程序] \"部分。"

#. type: delimited block =
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:213
#, fuzzy
msgid "`quarkus.oidc.client-id` sets a client-ID that identifies the application."
msgstr " `quarkus.oidc.client-id` 设置一个识别应用程序的客户端ID。"

#. type: delimited block =
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:214
#, fuzzy
msgid "`quarkus.oidc.credentials.secret` sets the client secret, which is used by the `client_secret_basic` authentication method."
msgstr " `quarkus.oidc.credentials.secret` 设置客户秘密，由 认证方法使用。 `client_secret_basic` "

#. type: delimited block =
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:216
#, fuzzy
msgid "For more information, see the Quarkus xref:security-oidc-configuration-properties-reference.adoc[OpenID Connect (OIDC) configuration properties] guide."
msgstr "更多信息，请参阅 link:security-openid-connect-oidc-configuration-properties-reference.html[OpenID Connect（OIDC）配置属性] 。"

#. type: Title ===
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:218
#, fuzzy, no-wrap
msgid "Start and configure the Keycloak server"
msgstr "启动和配置Keycloak服务器"

#. type: delimited block =
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:222
#, fuzzy
msgid "Put the link:{quickstarts-tree-url}/security-openid-connect-quickstart/config/quarkus-realm.json[realm configuration file] on the classpath (`target/classes` directory) so that it gets imported automatically when running in dev mode.  You do not need to do this if you have already built a link:{quickstarts-tree-url}/security-openid-connect-quickstart[complete solution], in which case, this realm file is added to the classpath during the build."
msgstr "在你开始配置之前，把{quickstarts-tree-url}/security-openid-connect-quickstart/config/quarkus-realm.json[境界配置文件]放在classpath（ `target/classes` 目录）中，以便在开发模式下运行时自动导入 - 除非你已经构建了{quickstarts-tree-url}/security-openid-connect-quickstart[完整解决方案]。在这种情况下，境界文件在构建过程中被添加到classpath。"

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:227
#, fuzzy
msgid "Do not start the Keycloak server when you run the application in dev mode; `Dev Services for Keycloak` will start a container.  For more information, see the xref:keycloak-dev-mode[Run the application in dev mode] section."
msgstr "当你以开发模式运行应用程序时，不要启动Keycloak服务器 - `Dev Services for Keycloak` 将启动一个容器。更多信息请参见下面的在 link:#keycloak-dev-mode[开发模式下运行应用程序] 部分。"

#. type: delimited block =
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:230
#, fuzzy
msgid "To start a Keycloak server, you can use Docker to run the following command:"
msgstr "要启动Keycloak服务器，你可以使用Docker，只需运行以下命令："

#. type: delimited block -
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:235
#, no-wrap
msgid "docker run --name keycloak -e KEYCLOAK_ADMIN=admin -e KEYCLOAK_ADMIN_PASSWORD=admin -p 8180:8080 quay.io/keycloak/keycloak:{keycloak.version} start-dev\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:238
#, fuzzy
msgid "Where the `keycloak.version` is set to version `17.0.0` or later."
msgstr "其中 `keycloak.version` ，应设置为 `17.0.0` 或更高。"

#. type: delimited block =
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:239
#, fuzzy
msgid "You can access your Keycloak Server at http://localhost:8180[localhost:8180]."
msgstr "你应该能够在 link:http://localhost:8180[localhost:8180] 访问你的Keycloak服务器。"

#. type: delimited block =
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:240
msgid "To access the Keycloak Administration Console, log in as the `admin` user by using the following login credentials:"
msgstr ""

#. type: delimited block =
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:242
msgid "Username: `admin`"
msgstr ""

#. type: delimited block =
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:243
msgid "Password: `admin`"
msgstr ""

#. type: delimited block =
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:245
#, fuzzy
msgid "Import the link:{quickstarts-tree-url}/security-openid-connect-quickstart/config/quarkus-realm.json[realm configuration file] from the upstream community repository to create a new realm."
msgstr "导入{quickstarts-treeurl}/security-openid-connect-quickstart/config/quarkus-realm.json[境界配置文件]来创建一个新境界。更多细节，请参阅Keycloak文档中关于如何 link:https://www.keycloak.org/docs/latest/server_admin/index.html#_create-realm[创建一个新的境界] 。"

#. type: delimited block =
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:247
#, fuzzy
msgid "For more information, see the Keycloak documentation about link:https://www.keycloak.org/docs/latest/server_admin/index.html#_create-realm[creating a new realm]."
msgstr "导入{quickstarts-treeurl}/security-openid-connect-quickstart/config/quarkus-realm.json[境界配置文件]来创建一个新境界。更多细节，请参阅Keycloak文档中关于如何 link:https://www.keycloak.org/docs/latest/server_admin/index.html#_create-realm[创建一个新的境界] 。"

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:253
#, fuzzy
msgid "If you want to use the Keycloak Admin Client to configure your server from your application, you need to include either the `quarkus-keycloak-admin-client` or the `quarkus-keycloak-admin-client-reactive` (if the application uses `quarkus-rest-client-reactive`) extension.  For more information, see the link:{url-quarkusio-guides}security-keycloak-admin-client[Quarkus Keycloak Admin Client] guide."
msgstr "如果你想使用Keycloak Admin Client从你的应用程序配置你的服务器，包括 `quarkus-keycloak-admin-client` 或 `quarkus-keycloak-admin-client-reactive` （如果应用程序使用 `quarkus-rest-client-reactive` ）扩展。更多信息请参见 link:security-keycloak-admin-client.html[Quarkus Keycloak Admin Client] 指南。"

#. type: Title ===
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:258
#, fuzzy, no-wrap
msgid "Run the application in dev mode"
msgstr "在开发模式下运行应用程序"

#. type: delimited block =
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:261
#, fuzzy
msgid "To run the application in dev mode, run the following commands:"
msgstr "要在开发模式下运行应用程序，请使用："

#. type: delimited block =
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:266
#, fuzzy
msgid "link:{quarkusio-guides}/security-openid-connect-dev-services[Dev Services for Keycloak] will start a Keycloak container and import a `quarkus-realm.json`."
msgstr "link:security-openid-connect-dev-services.html[Keycloak的开发服务] 将启动一个Keycloak容器并导入一个 `quarkus-realm.json` 。"

#. type: delimited block =
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:267
#, fuzzy
msgid "Open a link:{url-quarkusio-guides}dev-ui[Dev UI], which you can find at http://localhost:8080/q/dev-v1[/q/dev-v1], then click a `Provider: Keycloak` link in an `OpenID Connect` `Dev UI` card."
msgstr "打开在 link:http://localhost:8080/q/dev-v1[/q/dev-v1] 上提供的 link:dev-ui.html[开发用户界面] ，点击 `OpenID Connect` `Dev UI` 卡中的一个 `Provider: Keycloak` 链接。"

#. type: delimited block =
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:268
#, fuzzy
msgid "When prompted to log in to a `Single Page Application` provided by `OpenID Connect Dev UI`, do the following steps:"
msgstr " `Single Page Application` 你将被要求登录到一个由 `OpenID Connect Dev UI` ："

#. type: delimited block =
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:270
#, fuzzy
msgid "Log in as `alice` (password: `alice`), who has a `user` role."
msgstr "以 `alice` （密码： `alice` ）的身份登录，他的角色是 `user` 。"

#. type: delimited block =
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:271
#, fuzzy
msgid "Accessing `/api/admin` returns `403`."
msgstr "访问 `/api/admin` ，将返回 `403` "

#. type: delimited block =
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:272
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:275
#, fuzzy
msgid "Accessing `/api/users/me` returns `200`."
msgstr "访问 `/api/users/me` ，将返回 `200` "

#. type: delimited block =
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:273
#, fuzzy
msgid "Log out and log in as `admin` (password: `admin`), who has both `admin` and `user` roles."
msgstr "退出并以 `admin` （密码： `admin` ）的身份登录，他同时拥有 `admin` 和 `user` 的角色。"

#. type: delimited block =
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:274
#, fuzzy
msgid "Accessing `/api/admin` returns `200`."
msgstr "访问 `/api/admin` ，将返回 `200` "

#. type: Title ===
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:276
#, fuzzy, no-wrap
msgid "Run the Application in JVM mode"
msgstr "在JVM模式下运行应用程序"

#. type: delimited block =
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:279
#, fuzzy
msgid "When you are done with dev mode, you can run the application as a standard Java application."
msgstr "当你玩完了 `dev` 模式\"，你可以把它作为一个标准的Java应用程序运行。"

#. type: delimited block =
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:281
#, fuzzy
msgid "Compile the application:"
msgstr "配置应用程序"

#. type: delimited block =
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:286
#, fuzzy
msgid "Run the application:"
msgstr "测试应用程序"

#. type: delimited block -
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:291
#, no-wrap
msgid "java -jar target/quarkus-app/quarkus-run.jar\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:294
#, fuzzy, no-wrap
msgid "Run the application in native mode"
msgstr "在本地模式下运行应用程序"

#. type: delimited block =
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:299
#, fuzzy
msgid "You can compile this same demo as-is into native mode without needing any modifications.  This implies that you no longer need to install a JVM on your production environment.  The runtime technology is included in the produced binary and optimized to run with minimal resources required."
msgstr "这意味着你不再需要在你的生产环境中安装JVM，因为运行时技术包含在生产的二进制文件中，并以最小的资源开销优化运行。"

#. type: delimited block =
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:301
#, fuzzy
msgid "Compilation takes a bit longer, so this step is disabled by default."
msgstr "编译会花一点时间，所以这一步默认是禁用的；让我们通过启用 `native` profile来再次构建："

#. type: delimited block =
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:303
msgid "Build your application again by enabling the `native` profile:"
msgstr ""

#. type: delimited block =
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:309
#, fuzzy
msgid "After waiting a little while, you run the following binary directly:"
msgstr "喝完一杯咖啡后，你就可以直接运行这个二进制文件："

#. type: delimited block -
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:314
#, no-wrap
msgid "./target/security-openid-connect-quickstart-1.0.0-SNAPSHOT-runner\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:317
#, fuzzy, no-wrap
msgid "Test the application"
msgstr "测试应用程序"

#. type: delimited block =
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:320
#, fuzzy
msgid "For information about testing your application in dev mode, see the preceding xref:keycloak-dev-mode[Run the application in dev mode] section."
msgstr "当你以开发模式运行应用程序时，不要启动Keycloak服务器 - `Dev Services for Keycloak` 将启动一个容器。更多信息请参见下面的在 link:#keycloak-dev-mode[开发模式下运行应用程序] 部分。"

#. type: delimited block =
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:322
#, fuzzy
msgid "You can test the application launched in JVM or Native modes with `curl`."
msgstr "你可以用 `curl` ，测试在JVM或Native模式下启动的应用程序。"

#. type: delimited block =
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:324
#, fuzzy
msgid "Because the application uses Bearer token authentication, you first need to obtain an access token from the Keycloak server to access the application resources:"
msgstr "该应用程序正在使用承载认证，首先要做的是从Keycloak服务器获得一个访问令牌，以便访问应用程序资源："

#. type: delimited block -
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:334
#, no-wrap
msgid ""
"export access_token=$(\\\n"
"    curl --insecure -X POST http://localhost:8180/realms/quarkus/protocol/openid-connect/token \\\n"
"    --user backend-service:secret \\\n"
"    -H 'content-type: application/x-www-form-urlencoded' \\\n"
"    -d 'username=alice&password=alice&grant_type=password' | jq --raw-output '.access_token' \\\n"
" )\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:338
#, fuzzy
msgid "The preceding example obtains an access token for the user `alice`."
msgstr "上面的例子为用户 `alice` ，获得了一个访问令牌。"

#. type: delimited block =
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:340
#, fuzzy
msgid "Any user can access the `http://localhost:8080/api/users/me` endpoint, which returns a JSON payload with details about the user."
msgstr "任何用户都被允许访问这个 `<a href=\"http://localhost:8080/api/users/me\" class=\"bare\">http://localhost:8080/api/users/me</a>` 端点，它基本上会返回一个包含用户详细信息的JSON有效载荷。"

#. type: delimited block -
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:346
#, no-wrap
msgid ""
"curl -v -X GET \\\n"
"  http://localhost:8080/api/users/me \\\n"
"  -H \"Authorization: Bearer \"$access_token\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:350
#, fuzzy
msgid "Only users with the `admin` role can access the `http://localhost:8080/api/admin` endpoint.  If you try to access this endpoint with the previously-issued access token, you get a `403` response from the server."
msgstr "该 `<a href=\"http://localhost:8080/api/admin\" class=\"bare\">http://localhost:8080/api/admin</a>` 端点只能由具有 `admin` 角色的用户访问。如果你试图用之前发布的访问令牌访问这个端点，你应该从服务器上得到一个 `403` 响应。"

#. type: delimited block -
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:356
#, no-wrap
msgid ""
"curl -v -X GET \\\n"
"   http://localhost:8080/api/admin \\\n"
"   -H \"Authorization: Bearer \"$access_token\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:359
#, fuzzy
msgid "To access the admin endpoint, obtain a token for the `admin` user:"
msgstr "为了访问管理端点，你应该为 `admin` 用户获得一个令牌："

#. type: delimited block -
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:368
#, no-wrap
msgid ""
"export access_token=$(\\\n"
"    curl --insecure -X POST http://localhost:8180/realms/quarkus/protocol/openid-connect/token \\\n"
"    --user backend-service:secret \\\n"
"    -H 'content-type: application/x-www-form-urlencoded' \\\n"
"    -d 'username=admin&password=admin&grant_type=password' | jq --raw-output '.access_token' \\\n"
" )\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:371
#, fuzzy
msgid "For information about writing integration tests that depend on `Dev Services for Keycloak`, see the xref:security-oidc-bearer-token-authentication.adoc#integration-testing-keycloak-devservices[Dev Services for Keycloak] section of the \"OpenID Connect (OIDC) Bearer token authentication\" guide."
msgstr "也请参见 link:security-oidc-bearer-authentication-concept.html#integration-testing-keycloak-devservices[OIDC承载认证，Keycloak的开发服务] 部分，关于编写依赖于 `Dev Services for Keycloak` 的集成测试。"

#. type: Title ==
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:374
#, fuzzy, no-wrap
msgid "References"
msgstr "参考文献"

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:377
#, fuzzy
msgid "xref:security-oidc-configuration-properties-reference.adoc[OIDC configuration properties]"
msgstr "link:security-oidc-configuration-properties-reference.html[OIDC配置属性]"

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:378
#, fuzzy
msgid "xref:security-oidc-bearer-token-authentication.adoc[OpenID Connect (OIDC) Bearer token authentication]"
msgstr "link:security-oidc-bearer-authentication-concept.html[OIDC承载认证]"

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:379
#, fuzzy
msgid "link:https://www.keycloak.org/documentation.html[Keycloak Documentation]"
msgstr "link:https://www.keycloak.org/documentation.html[Keycloak文档]"

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:380
msgid "link:https://openid.net/connect/[OpenID Connect]"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:381
msgid "link:https://tools.ietf.org/html/rfc7519[JSON Web Token]"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:382
msgid "xref:security-openid-connect-client-reference.adoc[OpenID Connect and OAuth2 Client and Filters Reference Guide]"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:383
msgid "xref:security-openid-connect-dev-services.adoc[Dev Services for Keycloak]"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:384
msgid "xref:security-jwt-build.adoc[Sign and encrypt JWT tokens with SmallRye JWT Build]"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:385
msgid "xref:security-authentication-mechanisms.adoc#combining-authentication-mechanisms[Combining authentication mechanisms]"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:386
msgid "xref:security-overview.adoc[Quarkus Security overview]"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:386
msgid "xref:security-keycloak-admin-client.adoc[Quarkus Keycloak Admin Client]"
msgstr ""

#, fuzzy
#~ msgid "pom.xml"
#~ msgstr "pom.xml"

#, fuzzy
#~ msgid "Log in as the `admin` user to access the Keycloak Administration Console. Username should be `admin` and password `admin`."
#~ msgstr "以 `admin` 用户身份登录，访问Keycloak管理控制台。用户名应该是 `admin` ，密码是 `admin` 。"

#, fuzzy
#~ msgid "First compile it:"
#~ msgstr "首先编译它："

#, fuzzy
#~ msgid "Then run it:"
#~ msgstr "然后运行它："

#, fuzzy
#~ msgid "This same demo can be compiled into native code: no modifications required."
#~ msgstr "这个同样的演示可以被编译成本地代码：不需要修改。"

#, fuzzy
#~ msgid "See the xref:keycloak-dev-mode[Running the Application in Dev mode] section above about testing your application in a dev mode."
#~ msgstr "关于在开发模式下测试你的应用程序，请参见上面的在开发模式下 link:#keycloak-dev-mode[运行] 应用程序一节。"

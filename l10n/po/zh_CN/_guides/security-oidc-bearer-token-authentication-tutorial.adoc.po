# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-04-26 15:09+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:7
#, fuzzy, no-wrap
msgid "Protect a service application by using OpenID Connect (OIDC) bearer authentication"
msgstr "通过使用OpenID Connect（OIDC）承载认证来保护服务应用"

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:13
#, fuzzy
msgid "Here, you use the Quarkus OpenID Connect (OIDC) extension to secure a Jakarta REST application using Bearer authentication.  The bearer tokens are issued by OIDC and OAuth 2.0 compliant authorization servers, such as link:https://www.keycloak.org[Keycloak]."
msgstr "在这里，你使用Quarkus OpenID Connect (OIDC)扩展来确保Jakarta REST应用程序使用承载认证。不记名令牌是由OIDC和OAuth 2.0兼容的授权服务器（如 link:https://www.keycloak.org[Keycloak] ）发出。"

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:15
#, fuzzy
msgid "To better understand OIDC Bearer authentication, see xref:security-oidc-bearer-authentication-concept.adoc[OIDC Bearer authentication]."
msgstr "为了更好地理解OIDC承载器认证，请参阅 link:security-oidc-bearer-authentication-concept.html[OIDC承载器认证] 。"

#. type: Title ==
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:16
#, fuzzy, no-wrap
msgid "Prerequisites"
msgstr "先决条件"

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:21
#, fuzzy
msgid "https://stedolan.github.io/jq/[jq tool]"
msgstr "link:https://stedolan.github.io/jq/[jq工具]"

#. type: Title ==
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:22
#, fuzzy, no-wrap
msgid "Architecture"
msgstr "建筑学"

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:25
#, fuzzy
msgid "In this example, we build a simple microservice which offers two endpoints:"
msgstr "在这个例子中，我们建立了一个简单的微服务，提供两个端点："

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:27
#, fuzzy
msgid "`/api/users/me`"
msgstr " `/api/users/me` "

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:28
#, fuzzy
msgid "`/api/admin`"
msgstr " `/api/admin` "

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:30
#, fuzzy
msgid "These endpoints are protected and can only be accessed if a client is sending a bearer token along with the request, which must be valid (e.g.: signature, expiration and audience) and trusted by the microservice."
msgstr "这些端点是受保护的，只有当客户端与请求一起发送一个不记名令牌时才能被访问，该令牌必须是有效的（例如：签名、过期和受众），并得到微服务的信任。"

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:32
#, fuzzy
msgid "The bearer token is issued by a Keycloak Server and represents the subject to which the token was issued for. For being an OAuth 2.0 Authorization Server, the token also references the client acting on behalf of the user."
msgstr "不记名令牌是由Keycloak服务器发出的，并代表令牌的发放对象。对于作为OAuth 2.0授权服务器，该令牌还引用了代表用户的客户端。"

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:34
#, fuzzy
msgid "The `/api/users/me` endpoint can be accessed by any user with a valid token. As a response, it returns a JSON document with details about the user where these details are obtained from the information carried on the token."
msgstr " `/api/users/me` 端点可由任何拥有有效令牌的用户访问。作为响应，它返回一个JSON文档，其中包含关于用户的细节，这些细节是从令牌上携带的信息获得的。"

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:36
#, fuzzy
msgid "The `/api/admin` endpoint is protected with RBAC (Role-Based Access Control) where only users granted with the `admin` role can access. At this endpoint, we use the `@RolesAllowed` annotation to declaratively enforce the access constraint."
msgstr " `/api/admin` 端点受到RBAC（基于角色的访问控制）的保护，只有被授予 `admin` 角色的用户才能访问。在这个端点，我们使用 `@RolesAllowed` 注释来声明性地执行访问限制。"

#. type: Title ==
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:37
#, fuzzy, no-wrap
msgid "Solution"
msgstr "解决方案"

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:41
#, fuzzy
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the completed example."
msgstr "我们建议你按照下面几节的说明，一步一步地创建应用程序。然而，你可以直接进入已完成的例子。"

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:43
#, fuzzy
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "克隆 Git 仓库： `git clone {quickstarts-clone-url}` ，或者下载一个{quickstarts-archive-url}[存档]。"

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:45
#, fuzzy
msgid "The solution is located in the `security-openid-connect-quickstart` {quickstarts-tree-url}/security-openid-connect-quickstart[directory]."
msgstr "该解决方案位于 `security-openid-connect-quickstart` {quickstarts-treeurl}/security-openid-connect-quickstart[目录]中。"

#. type: Title ==
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:46
#, fuzzy, no-wrap
msgid "Procedure"
msgstr "程序"

#. type: Title ===
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:49
#, fuzzy, no-wrap
msgid "Create the Maven project"
msgstr "创建Maven项目"

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:52
#, fuzzy
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "首先，我们需要一个新的项目。用以下命令创建一个新项目："

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:59
#, fuzzy
msgid "This command generates a Maven project, importing the `oidc` extension which is an implementation of OIDC for Quarkus."
msgstr "该命令生成一个Maven项目，导入 `oidc` 扩展，这是Quarkus的OIDC实现。"

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:62
#, fuzzy
msgid "If you already have your Quarkus project configured, you can add the `oidc` extension to your project by running the following command in your project base directory:"
msgstr "如果你已经配置了你的Quarkus项目，你可以通过在你的项目基础目录下运行以下命令将 `oidc` 扩展到你的项目："

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:67
#, fuzzy
msgid "This will add the following to your build file:"
msgstr "这将在你的构建文件中添加以下内容："

#. type: Block title
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:69
#, fuzzy, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:75
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-oidc</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:78
#, fuzzy, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:81
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-oidc\")\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:83
#, fuzzy, no-wrap
msgid "Write the application"
msgstr "撰写申请书"

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:86
#, fuzzy
msgid "Let's start by implementing the `/api/users/me` endpoint. As you can see from the source code below it is just a regular Jakarta REST resource:"
msgstr "让我们从实现 `/api/users/me` 端点开始。正如你在下面的源代码中看到的，它只是一个普通的Jakarta REST资源："

#. type: delimited block -
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:90
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:133
#, no-wrap
msgid "package org.acme.security.openid.connect;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:95
#, no-wrap
msgid ""
"import jakarta.annotation.security.RolesAllowed;\n"
"import jakarta.inject.Inject;\n"
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.Path;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:98
#, no-wrap
msgid ""
"import org.jboss.resteasy.reactive.NoCache;\n"
"import io.quarkus.security.identity.SecurityIdentity;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:101
#, no-wrap
msgid ""
"@Path(\"/api/users\")\n"
"public class UsersResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:104
#, no-wrap
msgid ""
"    @Inject\n"
"    SecurityIdentity securityIdentity;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:112
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/me\")\n"
"    @RolesAllowed(\"user\")\n"
"    @NoCache\n"
"    public User me() {\n"
"        return new User(securityIdentity);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:114
#, no-wrap
msgid "    public static class User {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:116
#, no-wrap
msgid "        private final String userName;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:120
#, no-wrap
msgid ""
"        User(SecurityIdentity securityIdentity) {\n"
"            this.userName = securityIdentity.getPrincipal().getName();\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:126
#, no-wrap
msgid ""
"        public String getUserName() {\n"
"            return userName;\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:129
#, fuzzy
msgid "The source code for the `/api/admin` endpoint is also very simple. The main difference here is that we are using a `@RolesAllowed` annotation to make sure that only users granted with the `admin` role can access the endpoint:"
msgstr " `/api/admin` 端点的源代码也非常简单。这里的主要区别是，我们使用 `@RolesAllowed` 注释来确保只有被授予 `admin` 角色的用户才能访问该端点："

#. type: delimited block -
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:139
#, no-wrap
msgid ""
"import jakarta.annotation.security.RolesAllowed;\n"
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.Path;\n"
"import jakarta.ws.rs.Produces;\n"
"import jakarta.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:142
#, no-wrap
msgid ""
"@Path(\"/api/admin\")\n"
"public class AdminResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:150
#, no-wrap
msgid ""
"    @GET\n"
"    @RolesAllowed(\"admin\")\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String admin() {\n"
"        return \"granted\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:153
#, fuzzy
msgid "Injection of the `SecurityIdentity` is supported in both `@RequestScoped` and `@ApplicationScoped` contexts."
msgstr "在 `@RequestScoped` 和 `@ApplicationScoped` 上下文中都支持注入 `SecurityIdentity` 。"

#. type: Title ===
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:154
#, fuzzy, no-wrap
msgid "Configure the application"
msgstr "配置应用程序"

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:157
#, fuzzy
msgid "Configure the Quarkus OpenID Connect (OIDC) extension by setting the following configuration properties in the `src/main/resources/application.properties` file."
msgstr "通过在 `src/main/resources/application.properties` 文件中设置以下配置属性来配置Quarkus OpenID Connect（OIDC）扩展。"

#. type: delimited block -
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:163
#, no-wrap
msgid ""
"%prod.quarkus.oidc.auth-server-url=http://localhost:8180/realms/quarkus\n"
"quarkus.oidc.client-id=backend-service\n"
"quarkus.oidc.credentials.secret=secret\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:166
#, no-wrap
msgid ""
"# Tell Dev Services for Keycloak to import the realm file\n"
"# This property is not effective when running the application in JVM or Native modes\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:168
#, no-wrap
msgid "quarkus.keycloak.devservices.realm-path=quarkus-realm.json\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:171
#, fuzzy
msgid "Where:"
msgstr "在哪里？"

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:174
#, fuzzy
msgid "`%prod.quarkus.oidc.auth-server-url` sets the base URL of the OpenID Connect (OIDC) server. The `%prod.` profile prefix ensures that `Dev Services for Keycloak` launches a container when you run the application in dev mode.  See xref:keycloak-dev-mode[Running the Application in Dev mode] section below for more information."
msgstr " `%prod.quarkus.oidc.auth-server-url` 设置OpenID Connect（OIDC）服务器的基本URL。 配置文件前缀确保当你在开发模式下运行应用程序时， 会启动一个容器。更多信息请参见下面的 \" `%prod.` `Dev Services for Keycloak` link:#keycloak-dev-mode[在开发模式下运行应用程序] \"部分。"

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:175
#, fuzzy
msgid "`quarkus.oidc.client-id` sets a client-id that identifies the application."
msgstr " `quarkus.oidc.client-id` 设置一个识别应用程序的客户端ID。"

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:176
#, fuzzy
msgid "`quarkus.oidc.credentials.secret` sets the client secret, which is used by the `client_secret_basic` authentication method."
msgstr " `quarkus.oidc.credentials.secret` 设置客户秘密，由 认证方法使用。 `client_secret_basic` "

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:178
#, fuzzy
msgid "For more information, see xref:security-openid-connect-oidc-configuration-properties-reference.adoc[OpenID Connect (OIDC) configuration properties]."
msgstr "更多信息，请参阅 link:security-openid-connect-oidc-configuration-properties-reference.html[OpenID Connect（OIDC）配置属性] 。"

#. type: Title ===
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:179
#, fuzzy, no-wrap
msgid "Start and configure the Keycloak server"
msgstr "启动和配置Keycloak服务器"

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:183
#, fuzzy
msgid "Before you start with configuration, put the {quickstarts-tree-url}/security-openid-connect-quickstart/config/quarkus-realm.json[realm configuration file] on the classpath (`target/classes` directory) to import it automatically when running in dev mode - unless you have already built a {quickstarts-tree-url}/security-openid-connect-quickstart[complete solution].  In this case, the realm file is added to the classpath during the build."
msgstr "在你开始配置之前，把{quickstarts-tree-url}/security-openid-connect-quickstart/config/quarkus-realm.json[境界配置文件]放在classpath（ `target/classes` 目录）中，以便在开发模式下运行时自动导入 - 除非你已经构建了{quickstarts-tree-url}/security-openid-connect-quickstart[完整解决方案]。在这种情况下，境界文件在构建过程中被添加到classpath。"

#. type: delimited block =
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:188
#, fuzzy
msgid "Do not start the Keycloak server when you run the application in a dev mode - `Dev Services for Keycloak` will launch a container.  See the xref:keycloak-dev-mode[Running the Application in Dev mode] section below for more information."
msgstr "当你以开发模式运行应用程序时，不要启动Keycloak服务器 - `Dev Services for Keycloak` 将启动一个容器。更多信息请参见下面的在 link:#keycloak-dev-mode[开发模式下运行应用程序] 部分。"

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:191
#, fuzzy
msgid "To start a Keycloak Server, you can use Docker and just run the following command:"
msgstr "要启动Keycloak服务器，你可以使用Docker，只需运行以下命令："

#. type: delimited block -
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:195
#, no-wrap
msgid "docker run --name keycloak -e KEYCLOAK_ADMIN=admin -e KEYCLOAK_ADMIN_PASSWORD=admin -p 8180:8080 quay.io/keycloak/keycloak:{keycloak.version} start-dev\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:198
#, fuzzy
msgid "where `keycloak.version` should be set to `17.0.0` or higher."
msgstr "其中 `keycloak.version` ，应设置为 `17.0.0` 或更高。"

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:200
#, fuzzy
msgid "You should be able to access your Keycloak Server at http://localhost:8180[localhost:8180]."
msgstr "你应该能够在 link:http://localhost:8180[localhost:8180] 访问你的Keycloak服务器。"

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:202
#, fuzzy
msgid "Log in as the `admin` user to access the Keycloak Administration Console. Username should be `admin` and password `admin`."
msgstr "以 `admin` 用户身份登录，访问Keycloak管理控制台。用户名应该是 `admin` ，密码是 `admin` 。"

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:205
#, fuzzy
msgid "Import the {quickstarts-tree-url}/security-openid-connect-quickstart/config/quarkus-realm.json[realm configuration file] to create a new realm.  For more details, see the Keycloak documentation about how to link:https://www.keycloak.org/docs/latest/server_admin/index.html#_create-realm[create a new realm]."
msgstr "导入{quickstarts-treeurl}/security-openid-connect-quickstart/config/quarkus-realm.json[境界配置文件]来创建一个新境界。更多细节，请参阅Keycloak文档中关于如何 link:https://www.keycloak.org/docs/latest/server_admin/index.html#_create-realm[创建一个新的境界] 。"

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:209
#, fuzzy
msgid "If you want to use the Keycloak Admin Client to configure your server from your application, include the either `quarkus-keycloak-admin-client` or the `quarkus-keycloak-admin-client-reactive` (if the application uses `quarkus-rest-client-reactive`) extension.  See the xref:security-keycloak-admin-client.adoc[Quarkus Keycloak Admin Client] guide for more information."
msgstr "如果你想使用Keycloak Admin Client从你的应用程序配置你的服务器，包括 `quarkus-keycloak-admin-client` 或 `quarkus-keycloak-admin-client-reactive` （如果应用程序使用 `quarkus-rest-client-reactive` ）扩展。更多信息请参见 link:security-keycloak-admin-client.html[Quarkus Keycloak Admin Client] 指南。"

#. type: Title ===
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:211
#, fuzzy, no-wrap
msgid "Run the application in Dev mode"
msgstr "在开发模式下运行应用程序"

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:214
#, fuzzy
msgid "To run the application in a dev mode, use:"
msgstr "要在开发模式下运行应用程序，请使用："

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:218
#, fuzzy
msgid "xref:security-openid-connect-dev-services.adoc[Dev Services for Keycloak] will launch a Keycloak container and import a `quarkus-realm.json`."
msgstr "link:security-openid-connect-dev-services.html[Keycloak的开发服务] 将启动一个Keycloak容器并导入一个 `quarkus-realm.json` 。"

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:220
#, fuzzy
msgid "Open a xref:dev-ui.adoc[Dev UI] available at http://localhost:8080/q/dev-v1[/q/dev-v1] and click on a `Provider: Keycloak` link in an `OpenID Connect` `Dev UI` card."
msgstr "打开在 link:http://localhost:8080/q/dev-v1[/q/dev-v1] 上提供的 link:dev-ui.html[开发用户界面] ，点击 `OpenID Connect` `Dev UI` 卡中的一个 `Provider: Keycloak` 链接。"

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:222
#, fuzzy
msgid "You will be asked to log in into a `Single Page Application` provided by `OpenID Connect Dev UI`:"
msgstr " `Single Page Application` 你将被要求登录到一个由 `OpenID Connect Dev UI` ："

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:224
#, fuzzy
msgid "Login as `alice` (password: `alice`) who has a `user` role"
msgstr "以 `alice` （密码： `alice` ）的身份登录，他的角色是 `user` 。"

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:225
#, fuzzy
msgid "accessing `/api/admin` will return `403`"
msgstr "访问 `/api/admin` ，将返回 `403` "

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:226
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:229
#, fuzzy
msgid "accessing `/api/users/me` will return `200`"
msgstr "访问 `/api/users/me` ，将返回 `200` "

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:227
#, fuzzy
msgid "Logout and login as `admin` (password: `admin`) who has both `admin` and `user` roles"
msgstr "退出并以 `admin` （密码： `admin` ）的身份登录，他同时拥有 `admin` 和 `user` 的角色。"

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:228
#, fuzzy
msgid "accessing `/api/admin` will return `200`"
msgstr "访问 `/api/admin` ，将返回 `200` "

#. type: Title ===
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:230
#, fuzzy, no-wrap
msgid "Run the Application in JVM mode"
msgstr "在JVM模式下运行应用程序"

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:233
#, fuzzy
msgid "When you're done playing with the `dev` mode\" you can run it as a standard Java application."
msgstr "当你玩完了 `dev` 模式\"，你可以把它作为一个标准的Java应用程序运行。"

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:235
#, fuzzy
msgid "First compile it:"
msgstr "首先编译它："

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:239
#, fuzzy
msgid "Then run it:"
msgstr "然后运行它："

#. type: delimited block -
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:243
#, no-wrap
msgid "java -jar target/quarkus-app/quarkus-run.jar\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:245
#, fuzzy, no-wrap
msgid "Run the application in Native mode"
msgstr "在本地模式下运行应用程序"

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:248
#, fuzzy
msgid "This same demo can be compiled into native code: no modifications required."
msgstr "这个同样的演示可以被编译成本地代码：不需要修改。"

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:250
#, fuzzy
msgid "This implies that you no longer need to install a JVM on your production environment, as the runtime technology is included in the produced binary, and optimized to run with minimal resource overhead."
msgstr "这意味着你不再需要在你的生产环境中安装JVM，因为运行时技术包含在生产的二进制文件中，并以最小的资源开销优化运行。"

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:253
#, fuzzy
msgid "Compilation will take a bit longer, so this step is disabled by default; let's build again by enabling the `native` profile:"
msgstr "编译会花一点时间，所以这一步默认是禁用的；让我们通过启用 `native` profile来再次构建："

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:257
#, fuzzy
msgid "After getting a cup of coffee, you'll be able to run this binary directly:"
msgstr "喝完一杯咖啡后，你就可以直接运行这个二进制文件："

#. type: delimited block -
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:261
#, no-wrap
msgid "./target/security-openid-connect-quickstart-1.0.0-SNAPSHOT-runner\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:263
#, fuzzy, no-wrap
msgid "Test the application"
msgstr "测试应用程序"

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:266
#, fuzzy
msgid "See the xref:keycloak-dev-mode[Running the Application in Dev mode] section above about testing your application in a dev mode."
msgstr "关于在开发模式下测试你的应用程序，请参见上面的在开发模式下 link:#keycloak-dev-mode[运行] 应用程序一节。"

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:268
#, fuzzy
msgid "You can test the application launched in JVM or Native modes with `curl`."
msgstr "你可以用 `curl` ，测试在JVM或Native模式下启动的应用程序。"

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:270
#, fuzzy
msgid "The application is using Bearer authentication and the first thing to do is obtain an access token from the Keycloak Server in order to access the application resources:"
msgstr "该应用程序正在使用承载认证，首先要做的是从Keycloak服务器获得一个访问令牌，以便访问应用程序资源："

#. type: delimited block -
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:279
#, no-wrap
msgid ""
"export access_token=$(\\\n"
"    curl --insecure -X POST http://localhost:8180/realms/quarkus/protocol/openid-connect/token \\\n"
"    --user backend-service:secret \\\n"
"    -H 'content-type: application/x-www-form-urlencoded' \\\n"
"    -d 'username=alice&password=alice&grant_type=password' | jq --raw-output '.access_token' \\\n"
" )\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:282
#, fuzzy
msgid "The example above obtains an access token for user `alice`."
msgstr "上面的例子为用户 `alice` ，获得了一个访问令牌。"

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:284
#, fuzzy
msgid "Any user is allowed to access the `http://localhost:8080/api/users/me` endpoint, which basically returns a JSON payload with details about the user."
msgstr "任何用户都被允许访问这个 `<a href=\"http://localhost:8080/api/users/me\" class=\"bare\">http://localhost:8080/api/users/me</a>` 端点，它基本上会返回一个包含用户详细信息的JSON有效载荷。"

#. type: delimited block -
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:290
#, no-wrap
msgid ""
"curl -v -X GET \\\n"
"  http://localhost:8080/api/users/me \\\n"
"  -H \"Authorization: Bearer \"$access_token\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:294
#, fuzzy
msgid "The `http://localhost:8080/api/admin` endpoint can only be accessed by users with the `admin` role.  If you try to access this endpoint with the previously issued access token, you should get a `403` response from the server."
msgstr "该 `<a href=\"http://localhost:8080/api/admin\" class=\"bare\">http://localhost:8080/api/admin</a>` 端点只能由具有 `admin` 角色的用户访问。如果你试图用之前发布的访问令牌访问这个端点，你应该从服务器上得到一个 `403` 响应。"

#. type: delimited block -
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:300
#, no-wrap
msgid ""
"curl -v -X GET \\\n"
"   http://localhost:8080/api/admin \\\n"
"   -H \"Authorization: Bearer \"$access_token\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:303
#, fuzzy
msgid "In order to access the admin endpoint, you should obtain a token for the `admin` user:"
msgstr "为了访问管理端点，你应该为 `admin` 用户获得一个令牌："

#. type: delimited block -
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:312
#, no-wrap
msgid ""
"export access_token=$(\\\n"
"    curl --insecure -X POST http://localhost:8180/realms/quarkus/protocol/openid-connect/token \\\n"
"    --user backend-service:secret \\\n"
"    -H 'content-type: application/x-www-form-urlencoded' \\\n"
"    -d 'username=admin&password=admin&grant_type=password' | jq --raw-output '.access_token' \\\n"
" )\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:315
#, fuzzy
msgid "Please also see the xref:security-oidc-bearer-authentication-concept.adoc#integration-testing-keycloak-devservices[OIDC Bearer authentication, Dev Services for Keycloak] section, about writing the integration tests which depend on `Dev Services for Keycloak`."
msgstr "也请参见 link:security-oidc-bearer-authentication-concept.html#integration-testing-keycloak-devservices[OIDC承载认证，Keycloak的开发服务] 部分，关于编写依赖于 `Dev Services for Keycloak` 的集成测试。"

#. type: Title ==
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:316
#, fuzzy, no-wrap
msgid "References"
msgstr "参考文献"

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:319
#, fuzzy
msgid "xref:security-oidc-configuration-properties-reference.adoc[OIDC configuration properties]"
msgstr "link:security-oidc-configuration-properties-reference.html[OIDC配置属性]"

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:320
#, fuzzy
msgid "xref:security-oidc-bearer-authentication-concept.adoc[OIDC Bearer authentication]"
msgstr "link:security-oidc-bearer-authentication-concept.html[OIDC承载认证]"

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:321
#, fuzzy
msgid "link:https://www.keycloak.org/documentation.html[Keycloak Documentation]"
msgstr "link:https://www.keycloak.org/documentation.html[Keycloak文档]"

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:322
msgid "link:https://openid.net/connect/[OpenID Connect]"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:323
msgid "link:https://tools.ietf.org/html/rfc7519[JSON Web Token]"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:324
msgid "xref:security-openid-connect-client-reference.adoc[OpenID Connect and OAuth2 Client and Filters Reference Guide]"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:325
msgid "xref:security-openid-connect-dev-services.adoc[Dev Services for Keycloak]"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:326
msgid "xref:security-jwt-build.adoc[Sign and encrypt JWT tokens with SmallRye JWT Build]"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:327
msgid "xref:security-authentication-mechanisms-concept.adoc#combining-authentication-mechanisms[Combining authentication mechanisms]"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:328
msgid "xref:security-overview-concept.adoc[Quarkus Security]"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-bearer-token-authentication-tutorial.adoc:328
msgid "xref:security-keycloak-admin-client.adoc[Quarkus Keycloak Admin Client]"
msgstr ""

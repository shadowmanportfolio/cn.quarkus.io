# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-11-16 16:21+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/dev-ui.adoc:6
#, fuzzy, no-wrap
msgid "Dev UI"
msgstr "开发用户界面"

#. type: Block title
#: upstream/_guides/dev-ui.adoc:13
#, fuzzy, no-wrap
msgid "Dev UI v2"
msgstr "开发用户界面"

#. type: delimited block =
#: upstream/_guides/dev-ui.adoc:16
msgid "This guide covers the Dev UI v2, which is the default from Quarkus 3 onwards."
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:19
#, fuzzy
msgid "This guide covers the Quarkus Dev UI for xref:building-my-first-extension.adoc[extension authors]."
msgstr "本指南涵盖了 link:building-my-first-extension.html[扩展作者] 的Quarkus Dev UI。"

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:23
#, fuzzy
msgid "Quarkus ships with a Developer UI, which is available in dev mode (when you start quarkus with `mvn quarkus:dev`) at http://localhost:8080/q/dev-ui[/q/dev-ui] by default. It will show you something like this:"
msgstr "Quarkus现在带有一个新的实验性的开发界面，在开发模式下（当你用 `mvn quarkus:dev` 启动quarkus时），它默认在 link:http://localhost:8080/q/dev[/q/dev] 中可用。它将向你显示类似这样的东西。"

#. type: Named 'alt' AttributeList argument for macro 'image'
#: upstream/_guides/dev-ui.adoc:24 upstream/_guides/dev-ui.adoc:38
#: upstream/_guides/dev-ui.adoc:62 upstream/_guides/dev-ui.adoc:107
#: upstream/_guides/dev-ui.adoc:125 upstream/_guides/dev-ui.adoc:168
#: upstream/_guides/dev-ui.adoc:189 upstream/_guides/dev-ui.adoc:498
#: upstream/_guides/dev-ui.adoc:611 upstream/_guides/dev-ui.adoc:683
#: upstream/_guides/dev-ui.adoc:753 upstream/_guides/dev-ui.adoc:807
#: upstream/_guides/dev-ui.adoc:1020
#, fuzzy, no-wrap
msgid "Dev"
msgstr "拓展"

#. type: Target for macro image
#: upstream/_guides/dev-ui.adoc:24
#, no-wrap
msgid "dev-ui-overview-v2.png"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:27
msgid "It allows you to:"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:29
msgid "quickly visualize all the extensions currently loaded"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:30
msgid "view extension statuses and go directly to extension documentation"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:31
msgid "view and change `Configuration`"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:32
msgid "manage and visualize `Continuous Testing`"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:33
msgid "view `Dev Services` information"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:34
#, fuzzy
msgid "view the Build information"
msgstr "传递构建时信息"

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:35
msgid "view and stream various logs"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:37
msgid "Each extension used in the application will be listed and you can navigate to the guide for each extension, see some more information on the extension, and view configuration applicable for that extension:"
msgstr ""

#. type: Target for macro image
#: upstream/_guides/dev-ui.adoc:38
#, no-wrap
msgid "dev-ui-extension-card-v2.png"
msgstr ""

#. type: Title ==
#: upstream/_guides/dev-ui.adoc:40
#, fuzzy, no-wrap
msgid "Make my extension extend the Dev UI"
msgstr "如何使我的扩展支持Dev UI？"

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:43
#, fuzzy
msgid "In order to make your extension listed in the Dev UI you don't need to do anything!"
msgstr "为了使你的扩展被列在Dev UI中，你不需要做任何事情!"

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:45
#, fuzzy
msgid "So you can always start with that :)"
msgstr "所以你总是可以从这个开始 :)"

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:47
msgid "Extensions can:"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:49
msgid "xref:add-links-to-an-extension-card[Add links to an extension card]"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:50
#, fuzzy
msgid "xref:add-full-pages[Add full custom pages]"
msgstr "link:#adding-full-pages[完整的定制页面]"

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:51
msgid "xref:add-a-log-file[Add a log stream]"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:52
msgid "xref:add-a-section-menu[Add a section menu]"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:53
msgid "xref:custom-cards[Create a custom card]"
msgstr ""

#. type: Title ==
#: upstream/_guides/dev-ui.adoc:54
#, no-wrap
msgid "Add links to an extension card"
msgstr ""

#. type: Title ===
#: upstream/_guides/dev-ui.adoc:56
#, no-wrap
msgid "External Links"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:59
msgid "These are links that reference other (external from Dev UI) data. This data can be HTML pages, text or other data."
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:61
msgid "A good example of this is the SmallRye OpenAPI extension that contains links to the generated openapi schema in both json and yaml format, and a link to Swagger UI:"
msgstr ""

#. type: Target for macro image
#: upstream/_guides/dev-ui.adoc:62
#, no-wrap
msgid "dev-ui-extension-openapi-v2.png"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:65
msgid "The links to these external references is known at build time, so to get links like this on your card, all you need to do is add the following Build Step in your extension:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:70
#, no-wrap
msgid ""
"@BuildStep(onlyIf = IsDevelopment.class)// <1>\n"
"public CardPageBuildItem pages(NonApplicationRootPathBuildItem nonApplicationRootPathBuildItem) {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:72
#, no-wrap
msgid "    CardPageBuildItem cardPageBuildItem = new CardPageBuildItem(); // <2>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:77
#, no-wrap
msgid ""
"    cardPageBuildItem.addPage(Page.externalPageBuilder(\"Schema yaml\") // <3>\n"
"            .url(nonApplicationRootPathBuildItem.resolvePath(\"openapi\")) // <4>\n"
"            .isYamlContent() // <5>\n"
"            .icon(\"font-awesome-solid:file-lines\")); // <6>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:82
#, no-wrap
msgid ""
"    cardPageBuildItem.addPage(Page.externalPageBuilder(\"Schema json\")\n"
"            .url(nonApplicationRootPathBuildItem.resolvePath(\"openapi\") + \"?format=json\")\n"
"            .isJsonContent()\n"
"            .icon(\"font-awesome-solid:file-code\"));\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:87
#, no-wrap
msgid ""
"    cardPageBuildItem.addPage(Page.externalPageBuilder(\"Swagger UI\")\n"
"            .url(nonApplicationRootPathBuildItem.resolvePath(\"swagger-ui\"))\n"
"            .isHtmlContent()\n"
"            .icon(\"font-awesome-solid:signs-post\"));\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:90
#, no-wrap
msgid ""
"    return cardPageBuildItem;\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:92
msgid "Always make sure that this build step is only run when in dev mode"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:93
msgid "To add anything on the card, you need to return/produce a `CardPageBuildItem`."
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:94
msgid "To add a link, you can use the `addPage` method, as all links go to a \"page\". `Page` has some builders to assist with building a page. For `external` links, use the `externalPageBuilder`"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:95
msgid "Adding the url of the external link (in this case we use `NonApplicationRootPathBuildItem` to create this link, as this link is under the configurable non application path, default `/q`). Always use `NonApplicationRootPathBuildItem` if your link is available under `/q`."
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:96
msgid "You can (optionally) hint the content type of the content you are navigating to. If there is no hint, a header call will be made to determine the `MediaType`;"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:97
msgid "You can add an icon. All free font-awesome icons are available."
msgstr ""

#. type: Block title
#: upstream/_guides/dev-ui.adoc:99
#, no-wrap
msgid "Note about icons"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:102
msgid "If you find your icon at https://fontawesome.com/search?o=r&m=free[Font awesome], you can map as follow: Example `<i class=\"fa-solid fa-house\"></i>` will map to `font-awesome-solid:house`, so `fa` becomes `font-awesome` and for the icon name, remove the `fa-`;"
msgstr ""

#. type: Title ====
#: upstream/_guides/dev-ui.adoc:103
#, no-wrap
msgid "Embedding external content"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:106
msgid "By default, even external links will render inside (embedded) in Dev UI. In the case of HTML, the page will be rendered and any other content will be shown using https://codemirror.net/[code-mirror] to markup the media type. For example the open api schema document in `yaml` format:"
msgstr ""

#. type: Target for macro image
#: upstream/_guides/dev-ui.adoc:107
#, no-wrap
msgid "dev-ui-extension-openapi-embed-v2.png"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:110
msgid "If you do not want to embed the content, you can use the `.doNotEmbed()` on the Page Builder, this will then open the link in a new tab."
msgstr ""

#. type: Title ====
#: upstream/_guides/dev-ui.adoc:111
#, no-wrap
msgid "Runtime external links "
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:114
msgid "The example above assumes you know the link to use at build time. There might be cases where you only know this at runtime. In that case you can use a xref:JsonRPC[JsonRPC] Method that returns the link to add, and use that when creating the link. Rather than using the `.url` method on the page builder, use the `.dynamicUrlJsonRPCMethodName(\"yourJsonRPCMethodName\")`."
msgstr ""

#. type: Title ====
#: upstream/_guides/dev-ui.adoc:115
#, fuzzy, no-wrap
msgid "Adding labels"
msgstr "添加完整的页面"

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:118
msgid "You can add an option label to the link in the card using one of the builder methods on the page builder. These labels can be"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:120
msgid "static (known at build time) `.staticLabel(\"staticLabelValue\")`"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:121
msgid "dynamic (loaded at runtime) `.dynamicLabelJsonRPCMethodName(\"yourJsonRPCMethodName\")`"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:122
msgid "streaming (continuously streaming updated values at runtime) `.streamingLabelJsonRPCMethodName(\"yourJsonRPCMethodName\")`"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:124
msgid "For dynamic and streaming labels, see the xref:JsonRPC[JsonRPC] Section."
msgstr ""

#. type: Target for macro image
#: upstream/_guides/dev-ui.adoc:125
#, no-wrap
msgid "dev-ui-extension-card-label-v2.png"
msgstr ""

#. type: Title ==
#: upstream/_guides/dev-ui.adoc:127
#, fuzzy, no-wrap
msgid "Add full pages"
msgstr "添加完整的页面"

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:130
msgid "You can also link to an \"internal\" page (as opposed to the above \"external\" page). This means that you can build the page and add data and actions for rendering in Dev UI."
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:131 upstream/_guides/dev-ui.adoc:1154
#, no-wrap
msgid "Build time data"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:134
msgid "To make build time data available in your full page, you can add any data to your `CardPageBuildItem` with a key and a value:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:139
#, no-wrap
msgid ""
"CardPageBuildItem pageBuildItem = new CardPageBuildItem();\n"
"pageBuildItem.addBuildTimeData(\"someKey\", getSomeValueObject());\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:142
msgid "You can add multiple of these key-value pairs for all the data you know at build time that you need on the page."
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:144
msgid "There are a few options to add full page content in Dev UI. Starting from the most basic (good start) to a full blown web-component (preferred)."
msgstr ""

#. type: Title ===
#: upstream/_guides/dev-ui.adoc:145
#, no-wrap
msgid "Display some build time data on a screen (without having to do frontend coding):"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:148
msgid "If you have some data that is known at build time that you want to display you can use one of the following builders in `Page`:"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:150
msgid "xref:raw-data[Raw data]"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:151
msgid "xref:table-data[Table data]"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:152
msgid "xref:qute-data[Qute data]"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:153
msgid "xref:web-component-page[Web Component page]"
msgstr ""

#. type: Title ====
#: upstream/_guides/dev-ui.adoc:154
#, no-wrap
msgid "Raw data"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:156
msgid "This will display your data in it's raw (serialised) json value:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:162
#, no-wrap
msgid ""
"cardPageBuildItem.addPage(Page.rawDataPageBuilder(\"Raw data\") // <1>\n"
"                .icon(\"font-awesome-brands:js\")\n"
"                .buildTimeDataKey(\"someKey\")); // <2>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:164
msgid "Use the `rawDataPageBuilder`."
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:165 upstream/_guides/dev-ui.adoc:186
msgid "Link back to the key used when you added the build time data in `addBuildTimeData` on the Page BuildItem."
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:167
msgid "That will create a link to a page that renders the raw data in json:"
msgstr ""

#. type: Target for macro image
#: upstream/_guides/dev-ui.adoc:168
#, no-wrap
msgid "dev-ui-raw-page-v2.png"
msgstr ""

#. type: Title ====
#: upstream/_guides/dev-ui.adoc:170
#, no-wrap
msgid "Table data"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:173
msgid "You can also display your Build time data in a table if the structure allows it:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:182
#, no-wrap
msgid ""
"cardPageBuildItem.addPage(Page.tableDataPageBuilder(\"Table data\") // <1>\n"
"                .icon(\"font-awesome-solid:table\")\n"
"                .showColumn(\"timestamp\") // <2>\n"
"                .showColumn(\"user\") // <2>\n"
"                .showColumn(\"fullJoke\") // <2>\n"
"                .buildTimeDataKey(\"someKey\")); // <3>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:184
msgid "Use the `tableDataPageBuilder`."
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:185
msgid "Optionally only show certain fields."
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:188
msgid "That will create a link to a page that renders the data in a table:"
msgstr ""

#. type: Target for macro image
#: upstream/_guides/dev-ui.adoc:189
#, no-wrap
msgid "dev-ui-table-page-v2.png"
msgstr ""

#. type: Title ====
#: upstream/_guides/dev-ui.adoc:191
#, no-wrap
msgid "Qute data"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:194
msgid "You can also display your build time data using a qute template. All build time data keys are available to use in the template:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:200
#, no-wrap
msgid ""
"cardPageBuildItem.addPage(Page.quteDataPageBuilder(\"Qute data\") // <1>\n"
"                .icon(\"font-awesome-solid:q\")\n"
"                .templateLink(\"qute-jokes-template.html\")); // <2>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:202
msgid "Use the `quteDataPageBuilder`."
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:203
msgid "Link to the Qute template in `/deployment/src/main/resources/dev-ui/`."
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:205
msgid "Using any Qute template to display the data, for example `qute-jokes-template.html`:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:226
#, no-wrap
msgid ""
"<table>\n"
"    <thead>\n"
"        <tr>\n"
"            <th>Timestamp</th>\n"
"            <th>User</th>\n"
"            <th>Joke</th>\n"
"        </tr>\n"
"    </thead>\n"
"    <tbody>\n"
"        {#for joke in jokes} // <1>\n"
"        <tr>\n"
"            <td>{joke.timestamp}</td>\n"
"            <td><span><img src=\"{joke.profilePic}\" height=\"30px\"></img> {joke.user}</span></td>\n"
"            <td>{joke.fullJoke}</td>\n"
"        </tr>\n"
"        {/for}\n"
"    </tbody>\n"
"</table>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:228
msgid "`jokes` added as a build time data key on the Page Build Item."
msgstr ""

#. type: Title ====
#: upstream/_guides/dev-ui.adoc:229
#, no-wrap
msgid "Web Component page"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:232
msgid "To build an interactive page with actions and runtime (or build time) data, you need to use the web component page:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:239
#, no-wrap
msgid ""
"cardPageBuildItem.addPage(Page.webComponentPageBuilder() // <1>\n"
"                    .icon(\"font-awesome-solid:egg\")\n"
"                    .componentLink(\"qwc-arc-beans.js\") // <2>\n"
"                    .staticLabel(String.valueOf(beans.size())));\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:241
msgid "Use the `webComponentPageBuilder`."
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:242
msgid "Link to the Web Component in `/deployment/src/main/resources/dev-ui/`. The title can also be defined (using `.title(\"My title\")` in the builder), but if not the title will be assumed from the componentLink, which should always have the format `qwc` (stands for Quarkus Web Component) dash `extensionName` (example, `arc` in this case ) dash `page title` (\"Beans\" in this case)"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:244
msgid "Dev UI uses https://lit.dev/[Lit] to make building these web components easier. You can read more about Web Components and Lit:"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:246
msgid "https://www.webcomponents.org/introduction[Web components Getting started]"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:247
msgid "https://lit.dev/docs/[Lit documentation]"
msgstr ""

#. type: Title =====
#: upstream/_guides/dev-ui.adoc:248
#, no-wrap
msgid "Basic structure of a Web component page"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:251
msgid "A Web component page is just a JavaScript Class that creates a new HTML Element:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:256
#, no-wrap
msgid ""
"import { LitElement, html, css} from 'lit'; // <1>\n"
"import { beans } from 'build-time-data'; // <2>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:261
#, no-wrap
msgid ""
"/**\n"
" * This component shows the Arc Beans\n"
" */\n"
"export class QwcArcBeans extends LitElement { // <3>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:266
#, no-wrap
msgid ""
"    static styles = css` // <4>\n"
"        .annotation {\n"
"          color: var(--lumo-contrast-50pct); // <5>\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:271 upstream/_guides/dev-ui.adoc:345
#, no-wrap
msgid ""
"        .producer {\n"
"          color: var(--lumo-primary-text-color);\n"
"        }\n"
"        `;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:275
#, no-wrap
msgid ""
"    static properties = {\n"
"        _beans: {state: true}, // <6>\n"
"    };\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:280
#, no-wrap
msgid ""
"    constructor() { // <7>\n"
"        super();\n"
"        this._beans = beans;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:293
#, no-wrap
msgid ""
"    render() { // <8>\n"
"        if (this._beans) {\n"
"            return html`<ul>\n"
"                ${this._beans.map((bean) => // <9>\n"
"                    html`<li>${bean.providerType.name}</li>`\n"
"                )}</ul>`;\n"
"        } else {\n"
"            return html`No beans found`;\n"
"        }\n"
"    }\n"
"}\n"
"customElements.define('qwc-arc-beans', QwcArcBeans); // <10>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:297
msgid "You can import Classes and/or functions from other libraries.  In this case we use the `LitElement` class and `html` & `css` functions from `Lit`"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:298
msgid "Build time data as defined in the Build step and can be imported using the key and always from `build-time-data`. All keys added in your Build step will be available."
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:299
msgid "The component should be named in the following format: Qwc (stands for Quarkus Web Component) then Extension Name then Page Title, all concatenated with Camel Case. This will also match the file name format as described earlier. The component should also extend `LitComponent`."
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:300
msgid "CSS styles can be added using the `css` function, and these styles only apply to your component."
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:301
msgid "Styles can reference globally defined CSS variables to make sure your page renders correctly, especially when switching between light and dark mode. You can find all CSS variables in the Vaadin documentation (https://vaadin.com/docs/latest/styling/lumo/lumo-style-properties/color[Color], https://vaadin.com/docs/latest/styling/lumo/lumo-style-properties/size-space[Sizing and Spacing], etc)"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:302
msgid "Properties can be added. Use `_` in front of a property if that property is private. Properties are usually injected in the HTML template, and can be defined as having state, meaning that if that property changes, the component should re-render. In this case, the beans are Build time data and only change on hot-reload, which will be covered later."
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:303
msgid "Constructors (optional) should always call `super` first, and then set the default values for the properties."
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:304
msgid "The render method (from `LitElement`) will be called to render the page. In this method you return the markup of the page you want. You can use the `html` function from `Lit`, that gives you a template language to output the HTML you want. Once the template is created, you only need to set/change the properties to re-render the page content. Read more about https://lit.dev/docs/components/rendering/[Lit html]"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:305
msgid "You can use the built-in template functions to do conditional, list, etc. Read more about https://lit.dev/docs/templates/overview/[Lit Templates]"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:306
msgid "You always need to register your Web component as a custom element, with a unique tag. Here the tag will follow the same format as the filename (`qwc` dash `extension name` dash `page title` );"
msgstr ""

#. type: Title =====
#: upstream/_guides/dev-ui.adoc:307
#, no-wrap
msgid "Using Vaadin UI components for rendering"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:310
msgid "Dev UI makes extensive usage of https://vaadin.com/docs/latest/components[Vaadin web components] as UI Building blocks."
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:312
msgid "As an example, the Arc Beans are rendered using a https://vaadin.com/docs/latest/components/grid[Vaadin Grid]:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:321
#, no-wrap
msgid ""
"import { LitElement, html, css} from 'lit';\n"
"import { beans } from 'build-time-data';\n"
"import '@vaadin/grid'; // <1>\n"
"import { columnBodyRenderer } from '@vaadin/grid/lit.js'; // <2>\n"
"import '@vaadin/vertical-layout';\n"
"import 'qui-badge'; // <3>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:326
#, no-wrap
msgid ""
"/**\n"
" * This component shows the Arc Beans\n"
" */\n"
"export class QwcArcBeans extends LitElement {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:332
#, no-wrap
msgid ""
"    static styles = css`\n"
"        .arctable {\n"
"          height: 100%;\n"
"          padding-bottom: 10px;\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:336
#, no-wrap
msgid ""
"        code {\n"
"          font-size: 85%;\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:340
#, no-wrap
msgid ""
"        .annotation {\n"
"          color: var(--lumo-contrast-50pct);\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:349
#, no-wrap
msgid ""
"    static properties = {\n"
"        _beans: {state: true},\n"
"    };\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:354
#, no-wrap
msgid ""
"    constructor() {\n"
"        super();\n"
"        this._beans = beans;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:357
#, no-wrap
msgid ""
"    render() {\n"
"        if (this._beans) {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:365
#, no-wrap
msgid ""
"            return html`\n"
"                <vaadin-grid .items=\"${this._beans}\" class=\"arctable\" theme=\"no-border\">\n"
"                    <vaadin-grid-column auto-width\n"
"                        header=\"Bean\"\n"
"                        ${columnBodyRenderer(this._beanRenderer, [])}\n"
"                        resizable>\n"
"                    </vaadin-grid-column>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:371
#, no-wrap
msgid ""
"                    <vaadin-grid-column auto-width\n"
"                        header=\"Kind\"\n"
"                        ${columnBodyRenderer(this._kindRenderer, [])}\n"
"                        resizable>\n"
"                    </vaadin-grid-column>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:378
#, no-wrap
msgid ""
"                    <vaadin-grid-column auto-width\n"
"                        header=\"Associated Interceptors\"\n"
"                        ${columnBodyRenderer(this._interceptorsRenderer, [])}\n"
"                        resizable>\n"
"                    </vaadin-grid-column>\n"
"                </vaadin-grid>`;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:383
#, no-wrap
msgid ""
"        } else {\n"
"            return html`No beans found`;\n"
"        }\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:393
#, no-wrap
msgid ""
"    _beanRenderer(bean) {\n"
"        return html`<vaadin-vertical-layout>\n"
"      <code class=\"annotation\">@${bean.scope.simpleName}</code>\n"
"      ${bean.nonDefaultQualifiers.map(qualifier =>\n"
"            html`${this._qualifierRenderer(qualifier)}`\n"
"        )}\n"
"      <code>${bean.providerType.name}</code>\n"
"      </vaadin-vertical-layout>`;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:402
#, no-wrap
msgid ""
"    _kindRenderer(bean) {\n"
"      return html`\n"
"        <vaadin-vertical-layout>\n"
"          ${this._kindBadgeRenderer(bean)}\n"
"          ${this._kindClassRenderer(bean)}\n"
"        </vaadin-vertical-layout>\n"
"    `;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:406
#, no-wrap
msgid ""
"    _kindBadgeRenderer(bean){\n"
"      let kind = this._camelize(bean.kind);\n"
"      let level = null;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:416
#, no-wrap
msgid ""
"      if(bean.kind.toLowerCase() === \"field\"){\n"
"        kind = \"Producer field\";\n"
"        level = \"success\";\n"
"      }else if(bean.kind.toLowerCase() === \"method\"){\n"
"          kind = \"Producer method\";\n"
"          level = \"success\";\n"
"      }else if(bean.kind.toLowerCase() === \"synthetic\"){\n"
"        level = \"contrast\";\n"
"      }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:423
#, no-wrap
msgid ""
"      return html`\n"
"        ${level\n"
"          ? html`<qui-badge level='${level}' small><span>${kind}</span></qui-badge>` \n"
"          : html`<qui-badge small><span>${kind}</span></qui-badge>`\n"
"        }`;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:432
#, no-wrap
msgid ""
"    _kindClassRenderer(bean){\n"
"      return html`\n"
"          ${bean.declaringClass\n"
"            ? html`<code class=\"producer\">${bean.declaringClass.simpleName}.${bean.memberName}()</code>`\n"
"            : html`<code class=\"producer\">${bean.memberName}</code>`\n"
"          }\n"
"      `;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:445
#, no-wrap
msgid ""
"    _interceptorsRenderer(bean) {\n"
"        if (bean.interceptors && bean.interceptors.length > 0) {\n"
"            return html`<vaadin-vertical-layout>\n"
"                          ${bean.interceptorInfos.map(interceptor =>\n"
"                              html`<div>\n"
"                                    <code>${interceptor.interceptorClass.name}</code> \n"
"                                    <qui-badge class=\"${bean.kind.toLowerCase()}\" small pill><span>${interceptor.priority}</span></qui-badge>\n"
"                                  </div>`\n"
"                          )}\n"
"                        </vaadin-vertical-layout>`;\n"
"        }\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:449
#, no-wrap
msgid ""
"    _qualifierRenderer(qualifier) {\n"
"        return html`<code class=\"annotation\">${qualifier.simpleName}</code>`;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:459
#, no-wrap
msgid ""
"    _camelize(str) {\n"
"        return str.replace(/(?:^\\w|[A-Z]|\\b\\w|\\s+)/g, function (match, index) {\n"
"            if (+match === 0)\n"
"                return \"\";\n"
"            return index === 0 ? match.toUpperCase() : match.toLowerCase();\n"
"        });\n"
"    }\n"
"}\n"
"customElements.define('qwc-arc-beans', QwcArcBeans);\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:461
msgid "Import the Vaadin component you want to use"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:462
msgid "You can also import other functions if needed"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:463
msgid "There are some internal UI components that you can use, described below"
msgstr ""

#. type: Title =====
#: upstream/_guides/dev-ui.adoc:464
#, no-wrap
msgid "Using internal UI components"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:467
msgid "Some https://github.com/quarkusio/quarkus/tree/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/qui[internal UI components] (under the `qui` namespace) are available to make certain things easier:"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:469
msgid "Card"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:470
msgid "Badge"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:471
msgid "Alert"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:472
msgid "Code block"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:473
msgid "IDE Link"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:475
msgid "====== Card"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:477
msgid "Card component to display contents in a card"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:481
#, no-wrap
msgid "import 'qui-card';\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:490
#, no-wrap
msgid ""
"<qui-card title=\"My title\">\n"
"    <div slot=\"content\">\n"
"        My contents\n"
"    </div>\n"
"</qui-card>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:493
msgid "https://github.com/phillip-kruger/quarkus-jokes/blob/f572ed6f949de0c0b8cbfa99d7389ab5168fea65/deployment/src/main/resources/dev-ui/qwc-jokes-vaadin.js#L110[Example code]"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:495
msgid "====== Badge"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:497
msgid "Badge UI Component based on the https://vaadin.com/docs/latest/components/badge[vaadin themed] badge"
msgstr ""

#. type: Target for macro image
#: upstream/_guides/dev-ui.adoc:498
#, no-wrap
msgid "dev-ui-qui-badge-v2.png"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:503
#, no-wrap
msgid "import 'qui-badge';\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:506
msgid "You can use any combination of small, primary, pill, with icon and clickable with any level of `default`, `success`, `warning`, `error`, `contrast` or set your own colors."
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:601
#, no-wrap
msgid ""
"<div class=\"badges\">\n"
"    <h3>Badges</h3>\n"
"    <p>Badges wrap the Vaadin theme in a component.\n"
"        See <a href=\"https://vaadin.com/docs/latest/components/badge\">https://vaadin.com/docs/latest/components/badge</a> for more info.\n"
"    </p>\n"
"    <div class=\"cards\">\n"
"        <qui-card title=\"Small\">\n"
"            <div slot=\"content\">\n"
"                <div class=\"cardcontents\">\n"
"                    <qui-badge small><span>Default</span></qui-badge>\n"
"                    <qui-badge level=\"success\" small><span>Success</span></qui-badge>\n"
"                    <qui-badge level=\"warning\" small><span>Warning</span></qui-badge>\n"
"                    <qui-badge level=\"error\" small><span>Error</span></qui-badge>\n"
"                    <qui-badge level=\"contrast\" small><span>Contrast</span></qui-badge>\n"
"                    <qui-badge background=\"pink\" color=\"purple\" small><span>Custom colours</span></qui-badge>\n"
"                </div>\n"
"            </div>\n"
"        </qui-card> \n"
"        <qui-card title=\"Primary\">\n"
"            <div slot=\"content\">\n"
"                <div class=\"cardcontents\">\n"
"                    <qui-badge primary><span>Default primary</span></qui-badge>\n"
"                    <qui-badge level=\"success\" primary><span>Success primary</span></qui-badge>\n"
"                    <qui-badge level=\"warning\" primary><span>Warning primary</span></qui-badge>\n"
"                    <qui-badge level=\"error\" primary><span>Error primary</span></qui-badge>\n"
"                    <qui-badge level=\"contrast\" primary><span>Contrast primary</span></qui-badge>\n"
"                    <qui-badge background=\"pink\" color=\"purple\" primary><span>Custom colours</span></qui-badge>\n"
"                </div>\n"
"            </div>\n"
"        </qui-card>\n"
"        <qui-card title=\"Pill\">\n"
"            <div slot=\"content\">\n"
"                <div class=\"cardcontents\">\n"
"                    <qui-badge pill><span>Default pill</span></qui-badge>\n"
"                    <qui-badge level=\"success\" pill><span>Success pill</span></qui-badge>\n"
"                    <qui-badge level=\"warning\" pill><span>Warning pill</span></qui-badge>\n"
"                    <qui-badge level=\"error\" pill><span>Error pill</span></qui-badge>\n"
"                    <qui-badge level=\"contrast\" pill><span>Contrast pill</span></qui-badge>\n"
"                    <qui-badge background=\"pink\" color=\"purple\" pill><span>Custom colours</span></qui-badge>\n"
"                </div>\n"
"            </div>\n"
"        </qui-card>\n"
"        <qui-card title=\"With icon\">\n"
"            <div slot=\"content\">            \n"
"                <div class=\"cardcontents\">\n"
"                    <qui-badge text=\"Default\" icon=\"font-awesome-solid:circle-info\">\n"
"                        <span>Default icon</span>\n"
"                    </qui-badge>\n"
"                    <qui-badge text=\"Success\" level=\"success\" icon=\"font-awesome-solid:check\">\n"
"                        <span>Success icon</span>\n"
"                    </qui-badge>\n"
"                    <qui-badge text=\"Warning\" level=\"warning\" icon=\"font-awesome-solid:triangle-exclamation\">\n"
"                        <span>Warning icon</span>\n"
"                    </qui-badge>\n"
"                    <qui-badge text=\"Error\" level=\"error\" icon=\"font-awesome-solid:circle-exclamation\">\n"
"                        <span>Error icon</span>\n"
"                    </qui-badge>\n"
"                    <qui-badge text=\"Contrast\" level=\"contrast\" icon=\"font-awesome-solid:hand\">\n"
"                        <span>Contrast icon</span>\n"
"                    </qui-badge>\n"
"                    <qui-badge text=\"Custom\" background=\"pink\" color=\"purple\" icon=\"font-awesome-brands:redhat\">\n"
"                        <span>Custom colours</span>\n"
"                    </qui-badge>\n"
"                </div>\n"
"            </div>\n"
"        </qui-card>\n"
"        <qui-card title=\"Icon only\">\n"
"            <div slot=\"content\">\n"
"                <div class=\"cardcontents\">\n"
"                    <qui-badge icon=\"font-awesome-solid:clock\"></qui-badge>\n"
"                    <qui-badge level=\"success\" icon=\"font-awesome-solid:check\"></qui-badge>\n"
"                    <qui-badge level=\"warning\" icon=\"font-awesome-solid:triangle-exclamation\"></qui-badge>\n"
"                    <qui-badge level=\"error\" icon=\"font-awesome-solid:circle-exclamation\"></qui-badge>\n"
"                    <qui-badge level=\"contrast\" icon=\"font-awesome-solid:hand\"></qui-badge>\n"
"                    <qui-badge level=\"contrast\" background=\"pink\" color=\"purple\" icon=\"font-awesome-brands:redhat\"></qui-badge>\n"
"                </div>\n"
"            </div>\n"
"        </qui-card>\n"
"        <qui-card title=\"Clickable\">\n"
"            <div slot=\"content\">\n"
"                <div class=\"cardcontents\">\n"
"                    <qui-badge clickable @click=${() => this._info()}><span>Default</span></qui-badge>\n"
"                    <qui-badge clickable level=\"success\" @click=${() => this._success()}><span>Success</span></qui-badge>\n"
"                    <qui-badge clickable level=\"warning\" @click=${() => this._warning()}><span>Warning</span></qui-badge>\n"
"                    <qui-badge clickable level=\"error\" @click=${() => this._error()}><span>Error</span></qui-badge>\n"
"                    <qui-badge clickable level=\"contrast\" @click=${() => this._contrast()}><span>Contrast</span></qui-badge>\n"
"                    <qui-badge clickable background=\"pink\" color=\"purple\" @click=${() => this._info()}><span>Custom colours</span></qui-badge>\n"
"                </div>\n"
"            </div>\n"
"        </qui-card>\n"
"    </div>\n"
"</div>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:604
msgid "https://github.com/phillip-kruger/quarkus-jokes/blob/f572ed6f949de0c0b8cbfa99d7389ab5168fea65/deployment/src/main/resources/dev-ui/qwc-jokes-vaadin.js#L214[Example code]"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:606
msgid "====== Alert"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:608
msgid "Alerts are modeled around the Bootstrap alerts. Click https://getbootstrap.com/docs/4.0/components/alerts[here] for more info."
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:610
msgid "Also see Notification controller below as an alternative."
msgstr ""

#. type: Target for macro image
#: upstream/_guides/dev-ui.adoc:611
#, no-wrap
msgid "dev-ui-qui-alert-v2.png"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:616
#, no-wrap
msgid "import 'qui-alert';\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:673
#, no-wrap
msgid ""
"<div class=\"cards\">\n"
"    <div class=\"cardcontents\">\n"
"        <qui-alert><span>Info alert</span></qui-alert>\n"
"        <qui-alert level=\"success\"><span>Success alert</span></qui-alert>\n"
"        <qui-alert level=\"warning\"><span>Warning alert</span></qui-alert>\n"
"        <qui-alert level=\"error\"><span>Error alert</span></qui-alert>\n"
"        <hr class=\"line\">\n"
"        <qui-alert permanent><span>Permanent Info alert</span></qui-alert>\n"
"        <qui-alert level=\"success\" permanent><span>Permanent Success alert</span></qui-alert>\n"
"        <qui-alert level=\"warning\" permanent><span>Permanent Warning alert</span></qui-alert>\n"
"        <qui-alert level=\"error\" permanent><span>Permanent Error alert</span></qui-alert>\n"
"        <hr class=\"line\">\n"
"        <qui-alert center><span>Center Info alert</span></qui-alert>\n"
"        <qui-alert level=\"success\" center><span>Center Success alert</span></qui-alert>\n"
"        <qui-alert level=\"warning\" center><span>Center Warning alert</span></qui-alert>\n"
"        <qui-alert level=\"error\" center><span>Center Error alert</span></qui-alert>\n"
"        <hr class=\"line\">\n"
"        <qui-alert showIcon><span>Info alert with icon</span></qui-alert>\n"
"        <qui-alert level=\"success\" showIcon><span>Success alert with icon</span></qui-alert>\n"
"        <qui-alert level=\"warning\" showIcon><span>Warning alert with icon</span></qui-alert>\n"
"        <qui-alert level=\"error\" showIcon><span>Error alert with icon</span></qui-alert>\n"
"        <hr class=\"line\">\n"
"        <qui-alert icon=\"font-awesome-brands:redhat\"><span>Info alert with custom icon</span></qui-alert>\n"
"        <qui-alert level=\"success\" icon=\"font-awesome-brands:redhat\"><span>Success alert with custom icon</span></qui-alert>\n"
"        <qui-alert level=\"warning\" icon=\"font-awesome-brands:redhat\"><span>Warning alert with custom icon</span></qui-alert>\n"
"        <qui-alert level=\"error\" icon=\"font-awesome-brands:redhat\"><span>Error alert with custom icon</span></qui-alert>\n"
"        <hr class=\"line\">\n"
"        <qui-alert size=\"small\" showIcon><span>Small Info alert with icon</span></qui-alert>\n"
"        <qui-alert level=\"success\" size=\"small\" showIcon><span>Small Success alert with icon</span></qui-alert>\n"
"        <qui-alert level=\"warning\" size=\"small\" showIcon><span>Small Warning alert with icon</span></qui-alert>\n"
"        <qui-alert level=\"error\" size=\"small\" showIcon><span>Small Error alert with icon</span></qui-alert>\n"
"        <hr class=\"line\">\n"
"        <qui-alert showIcon><span>Info <code>alert</code> with markup <br><a href=\"https://quarkus.io/\" target=\"_blank\">quarkus.io</a></span></qui-alert>\n"
"        <qui-alert level=\"success\" showIcon><span>Success <code>alert</code> with markup <br><a href=\"https://quarkus.io/\" target=\"_blank\">quarkus.io</a></span></qui-alert>\n"
"        <qui-alert level=\"warning\" showIcon><span>Warning <code>alert</code> with markup <br><a href=\"https://quarkus.io/\" target=\"_blank\">quarkus.io</a></span></qui-alert>\n"
"        <qui-alert level=\"error\" showIcon><span>Error <code>alert</code> with markup <br><a href=\"https://quarkus.io/\" target=\"_blank\">quarkus.io</a></span></qui-alert>\n"
"        <hr class=\"line\">\n"
"        <qui-alert showIcon primary><span>Primary Info alert with icon</span></qui-alert>\n"
"        <qui-alert level=\"success\" showIcon primary><span>Primary Success alert with icon</span></qui-alert>\n"
"        <qui-alert level=\"warning\" showIcon primary><span>Primary Warning alert with icon</span></qui-alert>\n"
"        <qui-alert level=\"error\" showIcon primary><span>Primary Error alert with icon</span></qui-alert>\n"
"        <hr class=\"line\">\n"
"        <qui-alert title=\"Information\"><span>Info alert with title</span></qui-alert>\n"
"        <qui-alert title=\"Well done\" level=\"success\"><span>Success alert with title</span></qui-alert>\n"
"        <qui-alert title=\"Beware\" level=\"warning\"><span>Warning alert with title</span></qui-alert>\n"
"        <qui-alert title=\"Ka-boom\" level=\"error\"><span>Error alert with title</span></qui-alert>\n"
"        <hr class=\"line\">\n"
"        <qui-alert title=\"Information\" showIcon><span>Info alert with title and icon</span></qui-alert>\n"
"        <qui-alert title=\"Well done\" level=\"success\" showIcon><span>Success alert with title and icon</span></qui-alert>\n"
"        <qui-alert title=\"Beware\" level=\"warning\" showIcon><span>Warning alert with title and icon</span></qui-alert>\n"
"        <qui-alert title=\"Ka-boom\" level=\"error\" showIcon><span>Error alert with title and icon</span></qui-alert>\n"
"    </div>\n"
"</div>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:676
msgid "https://github.com/phillip-kruger/quarkus-jokes/blob/f572ed6f949de0c0b8cbfa99d7389ab5168fea65/deployment/src/main/resources/dev-ui/qwc-jokes-vaadin.js#L316[Example code]"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:679
msgid "====== Code block"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:681
msgid "Display a code block. This component is aware of the theme and will use the correct codemirror theme to match the light/dark mode."
msgstr ""

#. type: Target for macro image
#: upstream/_guides/dev-ui.adoc:683
#, no-wrap
msgid "dev-ui-qui-code-block-v2.png"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:688
#, no-wrap
msgid "import 'qui-code-block';\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:698
#, no-wrap
msgid ""
"<div class=\"codeBlock\">\n"
"    <qui-code-block \n"
"        mode='yaml'\n"
"        content='${yaml}'>\n"
"    </qui-code-block>\n"
"</div>;\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:701
msgid "https://github.com/quarkusio/quarkus/blob/e03a97845738436c69443a591ec4ce88ed04ac91/extensions/kubernetes/vanilla/deployment/src/main/resources/dev-ui/qwc-kubernetes-manifest.js#L99[Example code]"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:703
msgid "or fetching the contents from a URL:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:712
#, no-wrap
msgid ""
"<div class=\"codeBlock\">\n"
"    <qui-code-block \n"
"        mode='${this._mode}'\n"
"        src='${this._externalUrl}'>\n"
"    </qui-code-block>\n"
"</div>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:715
msgid "https://github.com/quarkusio/quarkus/blob/95c54fa46a6b6f31d69477234486d9359a2a3a4a/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/qwc/qwc-external-page.js#L116[Example code]"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:717
msgid "====== IDE link"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:719
msgid "Creates a link to a resource (like a Java source file) that can be opened in the user's IDE (if we could detect the IDE)."
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:723
#, no-wrap
msgid "import 'qui-ide-link';\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:731
#, no-wrap
msgid ""
"<qui-ide-link title='Source full class name' \n"
"                        class='text-source'\n"
"                        fileName='${sourceClassNameFull}'\n"
"                        lineNumber=${sourceLineNumber}>[${sourceClassNameFull}]</qui-ide-link>;\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:734
msgid "https://github.com/quarkusio/quarkus/blob/582f1f78806d2268885faea7aa8f5a4d2b3f5b98/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/qwc/qwc-server-log.js#L315[Example code]"
msgstr ""

#. type: Title =====
#: upstream/_guides/dev-ui.adoc:735
#, no-wrap
msgid "Using internal controllers"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:738
msgid "Some https://github.com/quarkusio/quarkus/tree/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/controller[internal controllers] are available to make certain things easier:"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:740
msgid "Notifier"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:741
msgid "Storage"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:742
msgid "Log"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:743
msgid "Router"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:744
msgid "JsonRPC"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:746
msgid "====== Notifier"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:748
msgid "This is an easy way to show a toast message. The toast can be placed on the screen (default left bottom) and can have a level (Info, Success, Warning, Error). Any of the levels can also be primary, that will create a more prominent toast message."
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:750
msgid "See the source of this controller https://github.com/quarkusio/quarkus/blob/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/controller/notifier.js[here]."
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:752
msgid "Example usage:"
msgstr ""

#. type: Target for macro image
#: upstream/_guides/dev-ui.adoc:753
#, no-wrap
msgid "dev-ui-controller-notifier.gif"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:758
#, no-wrap
msgid "import { notifier } from 'notifier';\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:763
#, no-wrap
msgid "<a @click=${() => this._info()}>Info</a>;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:770
#, no-wrap
msgid ""
"_info(position = null){\n"
"    notifier.showInfoMessage(\"This is an information message\", position);\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:773
msgid "You can find all the valid positions https://vaadin.com/docs/latest/components/notification/#position[here]."
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:775
msgid "https://github.com/phillip-kruger/quarkus-jokes/blob/f572ed6f949de0c0b8cbfa99d7389ab5168fea65/deployment/src/main/resources/dev-ui/qwc-jokes-vaadin.js#L374[Example code]"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:777
msgid "====== Storage"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:779
msgid "An easy way to access the local storage in a safe way. This will store values in the local storage, scoped to your extension. This way you do not have to worry that you might clash with another extension."
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:781
msgid "Local storage is useful to remember user preferences or state. For example, the footer remembers the state (open/close) and the size when open of the bottom drawer."
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:785
#, no-wrap
msgid "import { StorageController } from 'storage-controller';\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:787 upstream/_guides/dev-ui.adoc:791
#: upstream/_guides/dev-ui.adoc:795 upstream/_guides/dev-ui.adoc:814
#: upstream/_guides/dev-ui.adoc:914 upstream/_guides/dev-ui.adoc:918
#: upstream/_guides/dev-ui.adoc:1008 upstream/_guides/dev-ui.adoc:1035
#, no-wrap
msgid "// ...\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:789
#, no-wrap
msgid "storageControl = new StorageController(this); // Passing in this will scope the storage to your extension\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:793
#, no-wrap
msgid "const storedHeight = this.storageControl.get(\"height\"); // Get some value\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:797
#, no-wrap
msgid "this.storageControl.set('height', 123); // Set some val\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:800
msgid "https://github.com/quarkusio/quarkus/blob/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/qwc/qwc-footer.js[Example code]"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:803
msgid "====== Log"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:806
msgid "The log controller is used to add control buttons to a (footer) log.  See <<Add a log file>>."
msgstr ""

#. type: Target for macro image
#: upstream/_guides/dev-ui.adoc:807
#, no-wrap
msgid "dev-ui-log-control-v2.png"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:812
#, no-wrap
msgid "import { LogController } from 'log-controller';\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:816
#, no-wrap
msgid "logControl = new LogController(this); // Passing in this will scope the control to your extension\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:834
#, no-wrap
msgid ""
"// ...\n"
"this.logControl\n"
"                .addToggle(\"On/off switch\", true, (e) => {\n"
"                    this._toggleOnOffClicked(e);\n"
"                }).addItem(\"Log levels\", \"font-awesome-solid:layer-group\", \"var(--lumo-tertiary-text-color)\", (e) => {\n"
"                    this._logLevels();\n"
"                }).addItem(\"Columns\", \"font-awesome-solid:table-columns\", \"var(--lumo-tertiary-text-color)\", (e) => {\n"
"                    this._columns();\n"
"                }).addItem(\"Zoom out\", \"font-awesome-solid:magnifying-glass-minus\", \"var(--lumo-tertiary-text-color)\", (e) => {\n"
"                    this._zoomOut();\n"
"                }).addItem(\"Zoom in\", \"font-awesome-solid:magnifying-glass-plus\", \"var(--lumo-tertiary-text-color)\", (e) => {\n"
"                    this._zoomIn();\n"
"                }).addItem(\"Clear\", \"font-awesome-solid:trash-can\", \"var(--lumo-error-color)\", (e) => {\n"
"                    this._clearLog();\n"
"                }).addFollow(\"Follow log\", true , (e) => {\n"
"                    this._toggleFollowLog(e);\n"
"                }).done();\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:837
msgid "https://github.com/quarkusio/quarkus/blob/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/qwc/qwc-server-log.js[Example code]"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:839
msgid "====== Router"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:841
msgid "The router is mostly used internally. This uses https://github.com/vaadin/router[Vaadin Router] under the covers to route URLs to the correct page/section within the SPA. It will update the navigation and allow history (back button). This also creates the sub-menu available on extensions that have multiple pages."
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:843
msgid "See the https://github.com/quarkusio/quarkus/blob/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/controller/router-controller.js[controller] for some methods that might be useful."
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:846
msgid "====== JsonRPC"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:848
msgid "This controller allows you to fetch or stream runtime data. (vs. <<Build time data>> discussed earlier). There are two parts to getting data during runtime. The Java side in the runtime module, and then the usage in the web component."
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:850
#, no-wrap
msgid "*Java part*\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:852
msgid "This code is responsible for making data available to display on the UI."
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:854
msgid "You need to register the JsonPRCService in your processor in the deployment module:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:861
#, no-wrap
msgid ""
"@BuildStep(onlyIf = IsDevelopment.class)// <1>\n"
"JsonRPCProvidersBuildItem createJsonRPCServiceForCache() {// <2>\n"
"    return new JsonRPCProvidersBuildItem(CacheJsonRPCService.class);// <3>\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:863
msgid "Always only do this in Dev Mode"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:864
msgid "Produce / return a `JsonRPCProvidersBuildItem`"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:865
msgid "Define the class in your runtime module that will contain methods that make data available in the UI"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:867
msgid "https://github.com/quarkusio/quarkus/blob/main/extensions/cache/deployment/src/main/java/io/quarkus/cache/deployment/devui/CacheDevUiProcessor.java[Example code]"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:869
msgid "Now, in your Runtime module create the JsonRPC Service. This class will default to an application scoped bean, except if you explicitly scope the bean. All public methods that return something will be made available to call from the Web component Javascript."
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:871
msgid "The return object in these methods can be:"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:873
msgid "primitives or `String`,"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:874
msgid "`io.vertx.core.json.JsonArray`"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:875
msgid "`io.vertx.core.json.JsonObject`"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:876
msgid "any other POJO that can be serializable to Json"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:878
msgid "All of the above can be blocking (POJO) or non-blocking (`@NonBlocking` or `Uni`). Or alternatively data can be streamed using `Multi`."
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:892
#, no-wrap
msgid ""
"@NonBlocking // <1>\n"
"public JsonArray getAll() { // <2>\n"
"    Collection<String> names = manager.getCacheNames();\n"
"    List<CaffeineCache> allCaches = new ArrayList<>(names.size());\n"
"    for (String name : names) {\n"
"        Optional<Cache> cache = manager.getCache(name);\n"
"        if (cache.isPresent() && cache.get() instanceof CaffeineCache) {\n"
"            allCaches.add((CaffeineCache) cache.get());\n"
"        }\n"
"    }\n"
"    allCaches.sort(Comparator.comparing(CaffeineCache::getName));\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:899
#, no-wrap
msgid ""
"    var array = new JsonArray();\n"
"    for (CaffeineCache cc : allCaches) {\n"
"        array.add(getJsonRepresentationForCache(cc));\n"
"    }\n"
"    return array;\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:901
msgid "This example runs non blocking. We could also return `Uni<JsonArray>`"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:902
msgid "The method name `getAll` will be available in the Javascript"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:904
msgid "https://github.com/quarkusio/quarkus/blob/main/extensions/cache/runtime/src/main/java/io/quarkus/cache/runtime/devconsole/CacheJsonRPCService.java[Example code]"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:906
#, no-wrap
msgid "*Webcomponent (Javascript) part*\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:908
msgid "Now you can use the JsonRPC controller to access the `getAll` method (and any other methods in you JsonRPC Service)"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:912
#, no-wrap
msgid "import { JsonRpc } from 'jsonrpc';\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:916
#, no-wrap
msgid "jsonRpc = new JsonRpc(this); // Passing in this will scope the rpc calls to your extension\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:931
#, no-wrap
msgid ""
"/**\n"
"  * Called when displayed\n"
"  */\n"
"connectedCallback() {\n"
"    super.connectedCallback();\n"
"    this.jsonRpc.getAll().then(jsonRpcResponse => { // <1>\n"
"        this._caches = new Map();\n"
"        jsonRpcResponse.result.forEach(c => { //<2>\n"
"            this._caches.set(c.name, c);\n"
"        });\n"
"    });\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:934
msgid "Note the method `getAll` corresponds to the method in your Java Service. This method returns a https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise[Promise] with the JsonRPC result."
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:935
msgid "In this case the result is an array, so we can loop over it."
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:937
msgid "JsonArray (or any Java collection) in either blocking or non-blocking will return an array, else a JsonObject will be returned."
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:939
msgid "https://github.com/quarkusio/quarkus/blob/main/extensions/cache/deployment/src/main/resources/dev-ui/qwc-cache-caches.js[Example code]"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:942
msgid "You can also pass in parameters in the method being called, for example: (In the Runtime Java code)"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:953
#, no-wrap
msgid ""
"public Uni<JsonObject> clear(String name) { //<1>\n"
"    Optional<Cache> cache = manager.getCache(name);\n"
"    if (cache.isPresent()) {\n"
"        return cache.get().invalidateAll().map((t) -> getJsonRepresentationForCache(cache.get()));\n"
"    } else {\n"
"        return Uni.createFrom().item(new JsonObject().put(\"name\", name).put(\"size\", -1));\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:955
msgid "the clear method takes one parameter called `name`"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:957
msgid "In the Webcomponent (Javascript):"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:965
#, no-wrap
msgid ""
"_clear(name) {\n"
"    this.jsonRpc.clear({name: name}).then(jsonRpcResponse => { //<1>\n"
"        this._updateCache(jsonRpcResponse.result)\n"
"    });\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:967
msgid "the `name` parameter is passed in."
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:969
msgid "====== Streaming data"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:971
msgid "You can keep a UI screen updated with the latest data by continuously streaming data to the screen. This can be done with `Multi` (Java side) and `Observer` (Javascript side)"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:973
msgid "Java side of streaming data:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:977
#, no-wrap
msgid "public class JokesJsonRPCService {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:979
#, no-wrap
msgid "    private final BroadcastProcessor<Joke> jokeStream = BroadcastProcessor.create();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:986
#, no-wrap
msgid ""
"    @PostConstruct\n"
"    void init() {\n"
"        Multi.createFrom().ticks().every(Duration.ofHours(4)).subscribe().with((item) -> {\n"
"            jokeStream.onNext(getJoke());\n"
"        });\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:990
#, no-wrap
msgid ""
"    public Multi<Joke> streamJokes() { // <1>\n"
"        return jokeStream;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:993
#, no-wrap
msgid ""
"    // ...\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:995
msgid "Return the Multi that will stream jokes"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:997
msgid "https://github.com/phillip-kruger/quarkus-jokes/blob/f572ed6f949de0c0b8cbfa99d7389ab5168fea65/runtime/src/main/java/io/quarkus/jokes/runtime/JokesJsonRPCService.java#L37[Example code]"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:999
msgid "Javascript side of streaming data:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:1006
#, no-wrap
msgid ""
"this._observer = this.jsonRpc.streamJokes().onNext(jsonRpcResponse => { //<1>\n"
"    this._addToJokes(jsonRpcResponse.result);\n"
"    this._numberOfJokes = this._numberOfJokes++;\n"
"});\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:1010
#, no-wrap
msgid "this._observer.cancel(); //<2>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:1012
msgid "You can call the method (optionally passing in parameters) and then provide the code that will be called on the next event."
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:1013
msgid "Make sure to keep an instance of the observer to cancel later if needed."
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:1015
msgid "https://github.com/phillip-kruger/quarkus-jokes/blob/main/deployment/src/main/resources/dev-ui/qwc-jokes-web-components.js[Example code]"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:1017
msgid "====== Dev UI Log"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:1019
msgid "When running a local application using the `999-SNAPSHOT` version, the Dev UI will show a `Dev UI` Log in the footer. This is useful to debug all JSON RPC messages flowing between the browser and the Quarkus app."
msgstr ""

#. type: Target for macro image
#: upstream/_guides/dev-ui.adoc:1020
#, no-wrap
msgid "dev-ui-jsonrpc-log-v2.png"
msgstr ""

#. type: Title ==
#: upstream/_guides/dev-ui.adoc:1022
#, no-wrap
msgid "Hot reload"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:1025
msgid "You can update a screen automatically when a Hot reload has happened. To do this replace the `LitElement` that your Webcomponent extends with `QwcHotReloadElement`."
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:1027
msgid "`QwcHotReloadElement` extends `LitElement` so your component is still a Lit Element."
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:1029
msgid "When extending a `QwcHotReloadElement` you have to provide the `hotReload` method. (You also still need to provide the `render` method from Lit)"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:1033
#, no-wrap
msgid "import { QwcHotReloadElement, html, css} from 'qwc-hot-reload-element';\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:1037
#, no-wrap
msgid "export class QwcMyExtensionPage extends QwcHotReloadElement {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:1041
#, no-wrap
msgid ""
"    render(){\n"
"        // ...\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:1045
#, no-wrap
msgid ""
"    hotReload(){\n"
"        // ..\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:1047 upstream/_guides/dev-ui.adoc:1200
#, no-wrap
msgid "}\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/dev-ui.adoc:1049
#, no-wrap
msgid "Custom cards"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:1052
msgid "You can customize the card that is being displayed on the extension page if you do not want to use the default built-in card."
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:1054
msgid "To do this, you need to provide a Webcomponent that will be loaded in the place of the provided card and register this in the Java Processor:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:1058
#, no-wrap
msgid "cardPageBuildItem.setCustomCard(\"qwc-mycustom-card.js\");\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:1061
msgid "On the Javascript side, you have access to all the pages (in case you want to create links)"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:1065
#, no-wrap
msgid "import { pages } from 'build-time-data';\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:1068
msgid "And the following properties will be passed in:"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:1070
msgid "extensionName"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:1071
msgid "description"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:1072
msgid "guide"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:1073
msgid "namespace"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:1082
#, no-wrap
msgid ""
"static properties = {\n"
"    extensionName: {type: String},\n"
"    description: {type: String},\n"
"    guide: {type: String},\n"
"    namespace: {type: String}    \n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/dev-ui.adoc:1084
#, no-wrap
msgid "State (Advance)"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:1087
msgid "State allows properties to contain state and can be reused globally. An example of state properties are the theme, the connection state (if we are connected to the backend), etc."
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:1089
msgid "See the https://github.com/quarkusio/quarkus/tree/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/state[current built-in] state objects."
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:1091
msgid "The state in Dev UI uses https://github.com/gitaarik/lit-state[LitState] and you can read more about it in their https://gitaarik.github.io/lit-state/build/[documentation]."
msgstr ""

#. type: Title ==
#: upstream/_guides/dev-ui.adoc:1093
#, no-wrap
msgid "Add a log file"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:1096
msgid "Apart from adding a card and a page, extensions can add a log to the footer. This is useful to log things happening continuously. A page will lose connection to the backend when navigating away from that page, a log in the footer is permanently connected."
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:1098
msgid "Adding something to the footer works exactly like adding a Card, except you use a `FooterPageBuildItem` rather than a `CardPageBuildItem`."
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:1102
#, no-wrap
msgid "FooterPageBuildItem footerPageBuildItem = new FooterPageBuildItem();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:1107
#, no-wrap
msgid ""
"footerPageBuildItem.addPage(Page.webComponentPageBuilder()\n"
"        .icon(\"font-awesome-regular:face-grin-tongue-wink\")\n"
"        .title(\"Joke Log\")\n"
"        .componentLink(\"qwc-jokes-log.js\"));\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:1109
#, no-wrap
msgid "footerProducer.produce(footerPageBuildItem);\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:1112
msgid "https://github.com/phillip-kruger/quarkus-jokes/blob/f572ed6f949de0c0b8cbfa99d7389ab5168fea65/deployment/src/main/java/io/quarkus/jokes/deployment/devui/JokesDevUIProcessor.java#L87[Example code]"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:1114
msgid "In your Webcomponent you can then stream the log to the UI:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:1120
#, no-wrap
msgid ""
"export class QwcJokesLog extends LitElement {\n"
"    jsonRpc = new JsonRpc(this);\n"
"    logControl = new LogController(this);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:1123
#, no-wrap
msgid ""
"    // ....\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:1126
msgid "https://github.com/phillip-kruger/quarkus-jokes/blob/main/deployment/src/main/resources/dev-ui/qwc-jokes-log.js[Example code]"
msgstr ""

#. type: Title ==
#: upstream/_guides/dev-ui.adoc:1127
#, no-wrap
msgid "Add a section menu"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:1130
msgid "This allows an extension to link a page directly in the section Menu."
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:1132
msgid "Adding something to the section menu works exactly like adding a Card, except you use a `MenuPageBuildItem` rather than a `CardPageBuildItem`."
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:1136
#, no-wrap
msgid "MenuPageBuildItem menuPageBuildItem = new MenuPageBuildItem();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:1141
#, no-wrap
msgid ""
"menuPageBuildItem.addPage(Page.webComponentPageBuilder()\n"
"        .icon(\"font-awesome-regular:face-grin-tongue-wink\")\n"
"        .title(\"One Joke\")\n"
"        .componentLink(\"qwc-jokes-menu.js\"));\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:1143
#, no-wrap
msgid "menuProducer.produce(menuPageBuildItem);\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:1146
msgid "https://github.com/phillip-kruger/quarkus-jokes/blob/f572ed6f949de0c0b8cbfa99d7389ab5168fea65/deployment/src/main/java/io/quarkus/jokes/deployment/devui/JokesDevUIProcessor.java#LL71C16-L71C16[Example code]"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:1148
msgid "Your page can be any Page similar to Cards."
msgstr ""

#. type: Title ==
#: upstream/_guides/dev-ui.adoc:1149
#, no-wrap
msgid "Testing"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:1152
#, fuzzy
msgid "You can add tests to your extension that test:"
msgstr "你也可以向你的Dev UI模板添加动作。"

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:1155
msgid "Runtime data via JsonRPC"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:1157
#, fuzzy
msgid "You need to add this to your pom:"
msgstr "你也可以向你的Dev UI模板添加动作。"

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:1165
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-vertx-http-dev-ui-tests</artifactId>\n"
"    <scope>test</scope>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:1168
msgid "This will give you access to two base classes for creating these tests."
msgstr ""

#. type: Title ===
#: upstream/_guides/dev-ui.adoc:1169
#, fuzzy, no-wrap
msgid "Testing Build time data"
msgstr "传递构建时信息"

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:1172
msgid "If you added Build time data, for example:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:1176
#, no-wrap
msgid "cardPageBuildItem.addBuildTimeData(\"somekey\", somevalue);\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:1179
msgid "To test that your build time data is generated correctly you can add a test that extends `DevUIBuildTimeDataTest`."
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:1183
#, no-wrap
msgid "public class SomeTest extends DevUIBuildTimeDataTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:1186 upstream/_guides/dev-ui.adoc:1221
#, no-wrap
msgid ""
"    @RegisterExtension\n"
"    static final QuarkusDevModeTest config = new QuarkusDevModeTest().withEmptyApplication();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:1190 upstream/_guides/dev-ui.adoc:1225
#, no-wrap
msgid ""
"    public SomeTest() {\n"
"        super(\"io.quarkus.my-extension\");\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:1195
#, no-wrap
msgid ""
"    @Test\n"
"    public void testSomekey() throws Exception {\n"
"        JsonNode somekeyResponse = super.getBuildTimeData(\"somekey\");\n"
"        Assertions.assertNotNull(somekeyResponse);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:1198
#, no-wrap
msgid ""
"        // Check more values on somekeyResponse\n"
"    }\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/dev-ui.adoc:1202
#, no-wrap
msgid "Testing Runtime data"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:1205
msgid "If you added a JsonRPC Service with runtime data responses, for example:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:1211
#, no-wrap
msgid ""
"public boolean updateProperties(String content, String type) {\n"
"    // ...\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui.adoc:1214
msgid "To test that `updateProperties` execute correctly via JsonRPC you can add a test that extends `DevUIJsonRPCTest`."
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:1218
#, no-wrap
msgid "public class SomeTest extends DevUIJsonRPCTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:1228
#, no-wrap
msgid ""
"    @Test\n"
"    public void testUpdateProperties() throws Exception {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:1234
#, no-wrap
msgid ""
"        JsonNode updatePropertyResponse = super.executeJsonRPCMethod(\"updateProperty\",\n"
"                Map.of(\n"
"                        \"name\", \"quarkus.application.name\",\n"
"                        \"value\", \"changedByTest\"));\n"
"        Assertions.assertTrue(updatePropertyResponse.asBoolean());\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui.adoc:1241
#, no-wrap
msgid ""
"        // Get the properties to make sure it is changed\n"
"        JsonNode allPropertiesResponse = super.executeJsonRPCMethod(\"getAllValues\");\n"
"        String applicationName = allPropertiesResponse.get(\"quarkus.application.name\").asText();\n"
"        Assertions.assertEquals(\"changedByTest\", applicationName);\n"
"    }\n"
"}\n"
msgstr ""

#, fuzzy
#~ msgid "It allows you to quickly visualize all the extensions currently loaded, see their status and go directly to their documentation."
#~ msgstr "它可以让你快速可视化当前加载的所有扩展，看到它们的状态并直接进入它们的文档。"

#, fuzzy
#~ msgid "On top of that, each extension can add:"
#~ msgstr "在此基础上，每个扩展都可以添加。"

#, fuzzy
#~ msgid "xref:how-can-i-make-my-extension-support-the-dev-ui[Custom useful bits of runtime information in the overview]"
#~ msgstr "link:#how-can-i-make-my-extension-support-the-dev-ui[在概览中自定义有用的运行时信息位]"

#, fuzzy
#~ msgid "xref:advanced-usage-adding-actions[Interactive pages with actions]"
#~ msgstr "link:#advanced-usage-adding-actions[带动作的互动页面]"

#, fuzzy
#~ msgid "If you want to contribute badges or links in your extension card on the Dev UI overview page, like this:"
#~ msgstr "如果你想在Dev UI概览页面的扩展卡中贡献徽章或链接，像这样。"

#, fuzzy
#~ msgid "image:dev-ui-embedded.png[alt=Dev UI embedded,role=\"center\"]"
#~ msgstr "image:dev-ui-embedded.png[alt=\"Dev UI embedded\"]"

#, fuzzy
#~ msgid "You have to add a file named `dev-templates/embedded.html` in your xref:building-my-first-extension.adoc#description-of-a-quarkus-extension[`deployment`] extension module's resources:"
#~ msgstr "你必须在你的扩展模块资源中添加一个名为 `dev-templates/embedded.html` 的文件。 link:building-my-first-extension.html#description-of-a-quarkus-extension[`deployment`] 扩展模块的资源中添加一个名为 的文件。"

#, fuzzy
#~ msgid "The contents of this file will be included in your extension card, so for example we can place two links with some styling and icons:"
#~ msgstr "这个文件的内容将包括在你的扩展卡中，因此，例如我们可以放置两个带有一些样式和图标的链接。"

#, fuzzy
#~ msgid "We use the Font Awesome Free icon set."
#~ msgstr "我们使用Font Awesome免费图标集。"

#, fuzzy
#~ msgid "Note how the paths are specified: `{config:http-path('quarkus.smallrye-openapi.path')}`. This is a special directive that the quarkus dev console understands: it will replace that value with the resolved route named 'quarkus.smallrye-openapi.path'."
#~ msgstr "请注意路径的指定方式。 `{config:http-path('quarkus.smallrye-openapi.path')}` .这是quarkus开发控制台理解的一个特殊指令：它将用名为'quarkus.smallrye-openapi.path'的解析路由替换该值。"

#, fuzzy
#~ msgid "The corresponding non-application endpoint is declared using `.routeConfigKey` to associate the route with a name:"
#~ msgstr "相应的非应用端点使用 `.routeConfigKey` ，将路由与一个名称联系起来。"

#, fuzzy
#~ msgid "The configured path is resolved into a valid route."
#~ msgstr "配置的路径被解析成一个有效的路由。"

#, fuzzy
#~ msgid "The resolved route path is then associated with the key `quarkus.smallrye-openapi.path`."
#~ msgstr "然后，已解决的路由路径与键 `quarkus.smallrye-openapi.path` 。"

#, fuzzy
#~ msgid "Path considerations"
#~ msgstr "路径考虑"

#, fuzzy
#~ msgid "Paths are tricky business. Keep the following in mind:"
#~ msgstr "路径是很棘手的事情。请牢记以下几点。"

#, fuzzy
#~ msgid "Assume your UI will be nested under the dev endpoint. Do not provide a way to customize this without a strong reason."
#~ msgstr "假设你的用户界面将被嵌套在开发端点之下。在没有充分理由的情况下，不要提供自定义的方法。"

#, fuzzy
#~ msgid "Never construct your own absolute paths. Adding a suffix to a known, normalized and resolved path is fine."
#~ msgstr "永远不要构建你自己的绝对路径。在一个已知的、规范化的、已解决的路径上添加一个后缀就可以了。"

#, fuzzy
#~ msgid "Configured paths, like the `dev` endpoint used by the console or the SmallRye OpenAPI path shown in the example above, need to be properly resolved against both `quarkus.http.root-path` and `quarkus.http.non-application-root-path`.  Use `NonApplicationRootPathBuildItem` or `HttpRootPathBuildItem` to construct endpoint routes and identify resolved path values that can then be used in templates."
#~ msgstr "配置的路径，如控制台使用的 `dev` 端点或上面例子中显示的SmallRye OpenAPI路径，需要针对 `quarkus.http.root-path` 和 `quarkus.http.non-application-root-path` 进行正确的解析。使用 `NonApplicationRootPathBuildItem` 或 `HttpRootPathBuildItem` 来构建端点路由，并确定可在模板中使用的解析路径值。"

#, fuzzy
#~ msgid "The `{devRootAppend}` variable can also be used in templates to construct URLs for static dev console resources, for example:"
#~ msgstr " `{devRootAppend}` 变量也可以在模板中使用，以构建静态开发控制台资源的URL，例如。"

#, fuzzy
#~ msgid "Refer to the xref:all-config.adoc#quarkus-vertx-http_quarkus.http.non-application-root-path[Quarkus Vertx HTTP configuration reference] for details on how the non-application root path is configured."
#~ msgstr "请参考 link:all-config.html#quarkus-vertx-http_quarkus.http.non-application-root-path[Quarkus Vertx HTTP配置参考] ，了解如何配置非应用根路径的细节。"

#, fuzzy
#~ msgid "Template and styling support"
#~ msgstr "模板和造型支持"

#, fuzzy
#~ msgid "Both the `embedded.html` files and any full page you add in `/dev-templates` will be interpreted by xref:qute.adoc[the Qute template engine]."
#~ msgstr " `embedded.html` 文件和你在 `/dev-templates` 中添加的任何完整页面都将被 link:qute.html[Qute模板引擎] 解释。"

#, fuzzy
#~ msgid "This also means that you can xref:qute-reference.adoc#user_tags[add custom Qute tags] in `/dev-templates/tags` for your templates to use."
#~ msgstr "这也意味着你可以在 `/dev-templates/tags` ， link:qute-reference.html#user_tags[添加自定义的Qute标签] 供你的模板使用。"

#, fuzzy
#~ msgid "The style system currently in use is https://getbootstrap.com/docs/4.6/getting-started/introduction/[Bootstrap V4 (4.6.0)] but note that this might change in the future."
#~ msgstr "目前使用的风格系统是 link:https://getbootstrap.com/docs/4.6/getting-started/introduction/[Bootstrap V4（4.6.0）] ，但请注意，这在将来可能会改变。"

#, fuzzy
#~ msgid "The main template also includes https://jquery.com/[jQuery 3.5.1], but here again this might change."
#~ msgstr "主模板还包括 link:https://jquery.com/[jQuery 3.5.1] ，但这里也可能会改变。"

#, fuzzy
#~ msgid "Accessing Config Properties"
#~ msgstr "访问配置属性"

#, fuzzy
#~ msgid "A `config:property(name)` expression can be used to output the config value for the given property name.  The property name can be either a string literal or obtained dynamically by another expression.  For example `{config:property('quarkus.lambda.handler')}` and `{config:property(foo.propertyName)}`."
#~ msgstr " `config:property(name)` 表达式可以用来输出给定属性名称的配置值。属性名可以是一个字符串字面，也可以通过另一个表达式动态获得。例如， `{config:property('quarkus.lambda.handler')}` 和 `{config:property(foo.propertyName)}` 。"

#, fuzzy
#~ msgid "Reminder: do not use this to retrieve raw configured path values. As shown above, use `{config:http-path(...)}` with a known route configuration key when working with resource paths."
#~ msgstr "提醒：不要用它来检索原始配置的路径值。如上所示，在处理资源路径时，使用 `{config:http-path(…​)}` ，并使用已知的路径配置键。"

#, fuzzy
#~ msgid "To add full pages for your Dev UI extension such as this one:"
#~ msgstr "要为你的Dev UI扩展添加完整的页面，比如这个。"

#, fuzzy
#~ msgid "You need to place them in your extension's xref:building-my-first-extension.adoc#description-of-a-quarkus-extension[`deployment`] module's `/dev-templates` resource folder, like this page for the xref:cache.adoc[`quarkus-cache` extension]:"
#~ msgstr "你需要把它们放在你的扩展的 link:building-my-first-extension.html#description-of-a-quarkus-extension[`deployment`] 模块的 `/dev-templates` 资源文件夹中，就像这个 link:cache.html[`quarkus-cache`] 扩展的页面。"

#, fuzzy
#~ msgid "In order to benefit from the same style as other Dev UI pages, extend the `main` template"
#~ msgstr "为了从与其他Dev UI页面相同的风格中获益，扩展 `main` 模板"

#, fuzzy
#~ msgid "You can pass extra CSS for your page in the `style` template parameter"
#~ msgstr "你可以在 `style` 模板参数中为你的页面传递额外的CSS。"

#, fuzzy
#~ msgid "You can pass extra JavaScript for your page in the `script` template parameter. This will be added inline after the JQuery script, so you can safely use JQuery in your script."
#~ msgstr "你可以在 `script` 模板参数中为你的页面传递额外的JavaScript。这将被添加到JQuery脚本之后的内联，所以你可以在你的脚本中安全地使用JQuery。"

#, fuzzy
#~ msgid "Don't forget to set your page title in the `title` template parameter"
#~ msgstr "不要忘记在 `title` 模板参数中设置你的页面标题"

#, fuzzy
#~ msgid "The `body` template parameter will contain your content"
#~ msgstr " `body` 模板参数将包含你的内容"

#, fuzzy
#~ msgid "In order for your template to read custom information from your Quarkus extension, you can use the `info` xref:qute-reference.adoc#namespace_extension_methods[namespace]."
#~ msgstr "为了让你的模板能够从你的Quarkus扩展中读取自定义信息，你可以使用 `info` link:qute-reference.html#namespace_extension_methods[命名空间] 。"

#, fuzzy
#~ msgid "This shows an xref:advanced-usage-adding-actions[interactive page]"
#~ msgstr "这显示了一个 link:#advanced-usage-adding-actions[互动页面]"

#, fuzzy
#~ msgid "Linking to your full-page templates"
#~ msgstr "链接到你的全页模板"

#, fuzzy
#~ msgid "Full-page templates for extensions live under a pre-defined `{devRootAppend}/{groupId}.{artifactId}/` directory that is referenced using the `urlbase` template parameter. Using configuration defaults, that would resolve to `/q/dev-v1/io.quarkus.quarkus-cache/`, as an example."
#~ msgstr "扩展的整页模板在一个预定义的 `{devRootAppend}/{groupId}.{artifactId}/` 目录下，该目录使用 `urlbase` 模板参数来引用。使用配置默认值，这将解决 `/q/dev/io.quarkus.quarkus-cache/` ，作为一个例子。"

#, fuzzy
#~ msgid "Use the `{urlbase}` template parameter to reference this folder in `embedded.html`:"
#~ msgstr "使用 `{urlbase}` 模板参数，在 `embedded.html` 中引用这个文件夹。"

#, fuzzy
#~ msgid "Use the `urlbase` template parameter to reference full-page templates for your extension"
#~ msgstr "使用 `urlbase` 模板参数，为你的扩展引用全页面模板"

#, fuzzy
#~ msgid "Passing information to your templates"
#~ msgstr "将信息传递给你的模板"

#, fuzzy
#~ msgid "In `embedded.html` or in full-page templates, you will likely want to display information that is available from your extension."
#~ msgstr "在 `embedded.html` 或全页模板中，你很可能想显示你的扩展程序所提供的信息。"

#, fuzzy
#~ msgid "There are two ways to make that information available, depending on whether it is available at build time or at run time."
#~ msgstr "有两种方法使该信息可用，取决于它是在构建时还是在运行时可用。"

#, fuzzy
#~ msgid "In both cases we advise that you add support for the Dev UI in your `{pkg}.deployment.devconsole` package in a `DevConsoleProcessor` class (in your extension's xref:building-my-first-extension.adoc#description-of-a-quarkus-extension[`deployment`] module)."
#~ msgstr "在这两种情况下，我们建议你在你的 `{pkg}.deployment.devconsole` 包中的一个 `DevConsoleProcessor` 类中添加对Dev UI的支持（在你的扩展的 link:building-my-first-extension.html#description-of-a-quarkus-extension[`deployment`] 模块）。"

#, fuzzy
#~ msgid "Passing run-time information"
#~ msgstr "传递运行时信息"

#, fuzzy
#~ msgid "Don't forget to make this xref:building-my-first-extension.adoc#deploying-the-greeting-feature[build step] conditional on being in dev mode"
#~ msgstr "不要忘记让这个 link:building-my-first-extension.html#deploying-the-greeting-feature[构建步骤] 以处于开发模式为条件"

#, fuzzy
#~ msgid "Declare a run-time dev `info:cacheInfos` template value"
#~ msgstr "声明一个运行时 dev `info:cacheInfos` 模板值"

#, fuzzy
#~ msgid "This will map the `info:cacheInfos` value to this supplier in your extension's xref:building-my-first-extension.adoc#description-of-a-quarkus-extension[`runtime module`]:"
#~ msgstr "这将把 `info:cacheInfos` 值映射到你的扩展中的这个供应商。 link:building-my-first-extension.html#description-of-a-quarkus-extension[`runtime module`] :"

#, fuzzy
#~ msgid "Sometimes you only need build-time information to be passed to your template, so you can do it like this:"
#~ msgstr "有时你只需要将构建时的信息传递给你的模板，所以你可以这样做。"

#, fuzzy
#~ msgid "Use whatever dependencies you need as input"
#~ msgstr "使用你需要的任何依赖性作为输入"

#, fuzzy
#~ msgid "Declare a build-time `info:devQuteInfos` DEV template value"
#~ msgstr "声明一个构建时 `info:devQuteInfos` DEV模板值"

#, fuzzy
#~ msgid "Advanced usage: adding actions"
#~ msgstr "高级用法：添加行动"

#, fuzzy
#~ msgid "This can be done by adding another xref:building-my-first-extension.adoc#deploying-the-greeting-feature[build step] to declare the action in your extension's xref:building-my-first-extension.adoc#description-of-a-quarkus-extension[`deployment`] module:"
#~ msgstr "这可以通过添加另一个 link:building-my-first-extension.html#deploying-the-greeting-feature[构建步骤] 来完成，在你的扩展的 link:building-my-first-extension.html#description-of-a-quarkus-extension[`deployment`] 模块中的动作。"

#, fuzzy
#~ msgid "Mark the recorder as optional, so it will only be invoked when in dev mode"
#~ msgstr "将记录器标记为可选的，所以它只在开发模式下被调用。"

#, fuzzy
#~ msgid "Declare a `POST {urlbase}/caches` route handled by the given handler"
#~ msgstr "声明一个由给定的处理程序处理的 `POST {urlbase}/caches` 途径。"

#, fuzzy
#~ msgid "Note: you can see xref:action-example[how to invoke this action from your full page]."
#~ msgstr "注意：你可以看到 link:#action-example[如何从你的完整页面调用这个动作] 。"

#, fuzzy
#~ msgid "Now all you have to do is implement the recorder in your extension's xref:building-my-first-extension.adoc#description-of-a-quarkus-extension[`runtime module`]:"
#~ msgstr "现在你所要做的就是在你的扩展的 link:building-my-first-extension.html#description-of-a-quarkus-extension[`runtime module`] :"

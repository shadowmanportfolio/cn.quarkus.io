# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-10-25 13:16+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: upstream/_guides/telemetry-micrometer.adoc:7
#, fuzzy, no-wrap
msgid "Micrometer Metrics"
msgstr "测微计指标"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:19
#, fuzzy
msgid "Micrometer provides an abstraction layer for metrics collection.  It defines an API for basic meter types, like counters, gauges, timers, and distribution summaries, along with a `MeterRegistry` API that generalizes metrics collection and propagation for different backend monitoring systems."
msgstr "Micrometer为度量衡的收集提供了一个抽象层。它为基本的仪表类型定义了一个API，如计数器、仪表、计时器和分布式总结，同时还定义了一个 `MeterRegistry` API，为不同的后端监控系统提供通用的指标收集和传播。"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:21
#, fuzzy
msgid "Micrometer is the recommended approach to metrics for Quarkus."
msgstr "Micrometer是Quarkus推荐的度量方法。"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:24
#, fuzzy
msgid "By default, the metrics are exposed on the main HTTP server.  If you would like to surface metrics from a separate management port, see the xref:management-interface[Managed interface] section."
msgstr "默认情况下，指标是在主HTTP服务器上公开的。如果你想从一个单独的管理端口显示指标，请看 link:#management-interface[管理接口] 部分。"

#. type: Title ==
#: upstream/_guides/telemetry-micrometer.adoc:25
#, fuzzy, no-wrap
msgid "Micrometer and monitoring system extensions"
msgstr "测微计和监测系统的扩展"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:30
#, fuzzy
msgid "Quarkus Micrometer extensions are structured in the same way as the Micrometer project.  The `quarkus-micrometer` extension provides core Micrometer support and runtime integration.  Other Quarkus and Quarkiverse extensions use the Quarkus Micrometer extension to provide support for other monitoring systems."
msgstr "Quarkus Micrometer扩展的结构与Micrometer项目相同。 `quarkus-micrometer` 扩展提供核心Micrometer支持和运行时集成。其他Quarkus和Quarkiverse扩展使用Quarkus Micrometer扩展来提供对其他监控系统的支持。"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:32
#, fuzzy
msgid "Quarkus extensions:"
msgstr "夸库斯扩展："

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:34
#, fuzzy
msgid "micrometer"
msgstr "千分尺"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:35
#, fuzzy
msgid "micrometer-registry-prometheus"
msgstr "微米-注册-普罗米修斯"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:37
#, fuzzy
msgid "link:https://github.com/quarkiverse/quarkus-micrometer-registry[Quarkiverse extensions] (may be incomplete):"
msgstr "link:https://github.com/quarkiverse/quarkus-micrometer-registry[夸克宇宙的扩展] （可能不完整）："

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:39
#, fuzzy
msgid "micrometer-registry-azure-monitor"
msgstr "微量表-注册表-氮气-监测器"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:40
#, fuzzy
msgid "micrometer-registry-datadog"
msgstr "微米-注册表-数据狗"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:41
#, fuzzy
msgid "micrometer-registry-graphite"
msgstr "微米-注册-石墨"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:42
#, fuzzy
msgid "micrometer-registry-influx"
msgstr "微量表-注册-流量"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:43
#, fuzzy
msgid "micrometer-registry-jmx"
msgstr "微米-注册表-jmx"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:44
#, fuzzy
msgid "micrometer-registry-newrelic-telemetry"
msgstr "微量表-注册-新遗迹-遥测技术"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:45
#, fuzzy
msgid "micrometer-registry-otlp"
msgstr "微米-注册表-otlp"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:46
#, fuzzy
msgid "micrometer-registry-signalfx"
msgstr "微米-注册表-signalfx"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:47
#, fuzzy
msgid "micrometer-registry-stackdriver"
msgstr "千分尺-注册表-stackdriver"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:48
#, fuzzy
msgid "micrometer-registry-statsd"
msgstr "微量表-注册表-统计表"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:51
#, fuzzy
msgid "To add support for Prometheus metrics to your application, for example, use the `micrometer-registry-prometheus` extension.  It will bring in the Quarkus Micrometer extension and Micrometer core libraries as dependencies."
msgstr "例如，要在你的应用程序中添加对Prometheus度量的支持，请使用 `micrometer-registry-prometheus` 扩展。它将把Quarkus Micrometer扩展和Micrometer核心库作为依赖项引入。"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:53
#, fuzzy
msgid "Add the extension to your project using following command (from your project directory):"
msgstr "使用以下命令将扩展名添加到你的项目中（从你的项目目录中）："

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:58
#, fuzzy
msgid "This will add the following to your build file:"
msgstr "这将在你的构建文件中添加以下内容："

#. type: Block title
#: upstream/_guides/telemetry-micrometer.adoc:60
#: upstream/_guides/telemetry-micrometer.adoc:84
#: upstream/_guides/telemetry-micrometer.adoc:104
#: upstream/_guides/telemetry-micrometer.adoc:643
#, fuzzy, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:66
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-micrometer-registry-prometheus</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_guides/telemetry-micrometer.adoc:69
#: upstream/_guides/telemetry-micrometer.adoc:93
#: upstream/_guides/telemetry-micrometer.adoc:118
#: upstream/_guides/telemetry-micrometer.adoc:652
#, fuzzy, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:72
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-micrometer-registry-prometheus\")\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:75
#, fuzzy
msgid "And you're all set!"
msgstr "而你已经准备好了!"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:79
#, fuzzy
msgid "A similar process applies for other meter registry extensions.  To use the Micrometer StackDriver MeterRegistry, for example, you would use the `quarkus-micrometer-registry-stackdriver` extension from the Quarkiverse:"
msgstr "类似的过程也适用于其他仪表注册表扩展。例如，要使用Micrometer StackDriver MeterRegistry，你可以使用Quarkiverse中的 `quarkus-micrometer-registry-stackdriver` 扩展："

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:90
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkiverse.micrometer.registry</groupId>\n"
"    <artifactId>quarkus-micrometer-registry-stackdriver</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:96
#, no-wrap
msgid "implementation(\"io.quarkiverse.micrometer.registry:quarkus-micrometer-registry-stackdriver\")\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/telemetry-micrometer.adoc:98
#, fuzzy, no-wrap
msgid "Other registry implementations"
msgstr "其他登记册的实施"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:102
#, fuzzy
msgid "If the Micrometer registry you would like to use does not yet have an associated extension, use the `quarkus-micrometer` extension and bring in the Micrometer meter registry dependency directly:"
msgstr "如果你想使用的Micrometer注册表还没有相关的扩展，请使用 `quarkus-micrometer` ，并直接带入Micrometer表注册表的依赖关系："

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:115
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-micrometer</artifactId>\n"
"</dependency>\n"
"<dependency>\n"
"    <groupId>com.acme</groupId>\n"
"    <artifactId>custom-micrometer-registry</artifactId>\n"
"    <version>...</version>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:122
#, no-wrap
msgid ""
"implementation(\"io.quarkus:quarkus-micrometer\")\n"
"implementation(\"com.acme:custom-micrometer-registry\")\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:126
#, fuzzy
msgid "You will then need to specify your own provider to configure and initialize the MeterRegistry, as discussed in the next section."
msgstr "然后，你将需要指定你自己的提供者来配置和初始化MeterRegistry，这将在下一节讨论。"

#. type: Title ===
#: upstream/_guides/telemetry-micrometer.adoc:127
#, fuzzy, no-wrap
msgid "Create a customized MeterRegistry"
msgstr "创建一个自定义的MeterRegistry"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:130
#, fuzzy
msgid "Use a custom `@Produces` method to create and configure a your own `MeterRegistry` if you need to."
msgstr "如果你需要的话，使用自定义的 `@Produces` 方法来创建和配置你自己的 `MeterRegistry` 。"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:132
#, fuzzy
msgid "The following example customizes the line format used for StatsD:"
msgstr "下面的例子自定义了用于StatsD的行格式："

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:140
#, no-wrap
msgid ""
"@Produces\n"
"@Singleton // <1>\n"
"public StatsdMeterRegistry createStatsdMeterRegistry(StatsdConfig statsdConfig, Clock clock) { // <2>\n"
"    // define what to do with lines\n"
"    Consumer<String> lineLogger = line -> logger.info(line);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:147
#, no-wrap
msgid ""
"    // inject a configuration object, and then customize the line builder\n"
"    return StatsdMeterRegistry.builder(statsdConfig)\n"
"          .clock(clock)\n"
"          .lineSink(lineLogger)\n"
"          .build();\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:150
#, fuzzy
msgid "The method returns a `@Singleton`."
msgstr "该方法返回一个 `@Singleton` 。"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:151
#, fuzzy
msgid "The method returns the specific type of `MeterRegistry`"
msgstr "该方法返回的具体类型是 `MeterRegistry` "

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:153
#, fuzzy
msgid "This example corresponds to the following instructions in the Micrometer documentation: link:https://micrometer.io/docs/registry/statsD#_customizing_the_metrics_sink[Micrometer StatsD: Customizing the Metrics Sink]"
msgstr "这个例子对应于Micrometer文档中的以下说明： link:https://micrometer.io/docs/registry/statsD#_customizing_the_metrics_sink[Micrometer StatsD：定制度量衡水槽]"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:157
#, fuzzy
msgid "Use MicroProfile Config to inject any configuration attributes you need to configure the registry.  Most Micrometer registry extensions, like `quarkus-micrometer-registry-statsd`, provide registry-specific configuration objects that are integrated with the Quarkus configuration model.  The link:https://github.com/quarkiverse/quarkus-micrometer-registry[Quarkiverse GitHub Repository] can be a useful implementation reference."
msgstr "使用MicroProfile Config来注入你需要的任何配置属性，以配置注册表。大多数Micrometer注册表扩展，如 `quarkus-micrometer-registry-statsd` ，提供注册表特定的配置对象，与Quarkus配置模型集成。 link:https://github.com/quarkiverse/quarkus-micrometer-registry[Quarkiverse GitHub存储库] 可以作为有用的实现参考。"

#. type: Title ==
#: upstream/_guides/telemetry-micrometer.adoc:158
#, fuzzy, no-wrap
msgid "Create your own metrics"
msgstr "创建你自己的衡量标准"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:163
#, fuzzy
msgid "Metrics data is used in the aggregate to observe how data changes over time.  This data is used for trend analysis, anomaly detection, and alerting.  Data is stored by backend monitoring systems in time series databases, with new values appended to the end of the series."
msgstr "指标数据被用来观察数据如何随时间变化。这些数据被用于趋势分析、异常检测和警报。数据被后端监测系统存储在时间序列数据库中，新的数值被附加到序列的末端。"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:165
#, fuzzy
msgid "Metrics are constructed lazily. You may not see any data for the metric you're looking for until you've performed an action that will create it, like visiting an endpoint."
msgstr "指标的构建是懒散的。你可能不会看到你要找的指标的任何数据，直到你执行了一个会创建它的动作，比如访问一个端点。"

#. type: Title ===
#: upstream/_guides/telemetry-micrometer.adoc:166
#, fuzzy, no-wrap
msgid "Naming conventions"
msgstr "命名惯例"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:170
#, fuzzy
msgid "Meter names should use dots to separate segments, `a.name.like.this`.  Micrometer applies naming conventions to convert registered meter names to match the expectations of backend monitoring systems."
msgstr "仪表名称应使用点来分隔段， `a.name.like.this` 。Micrometer应用命名规则来转换注册的仪表名称，以符合后端监测系统的期望。"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:172
#, fuzzy
msgid "Given the following declaration of a timer: `registry.timer(\"http.server.requests\")`, applied naming conventions will emit the following metrics for different monitoring systems:"
msgstr "给出一个定时器的如下声明： `registry.timer(\"http.server.requests\")` ，应用命名惯例将为不同的监测系统发出以下指标："

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:174
#, fuzzy
msgid "Prometheus: `http_server_requests_duration_seconds`"
msgstr "普罗米修斯： `http_server_requests_duration_seconds` "

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:175
#, fuzzy
msgid "Atlas: `httpServerRequests`"
msgstr "阿特拉斯： `httpServerRequests` "

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:176
#, fuzzy
msgid "Graphite: `http.server.requests`"
msgstr "石墨： `http.server.requests` "

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:177
#, fuzzy
msgid "InfluxDB: `http_server_requests`"
msgstr "InfluxDB： `http_server_requests` "

#. type: Title ===
#: upstream/_guides/telemetry-micrometer.adoc:179
#, fuzzy, no-wrap
msgid "Define dimensions for aggregation"
msgstr "定义用于聚合的维度"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:183
#, fuzzy
msgid "Metrics, single numerical measurements, often have additional data captured with them. This ancillary data is used to group or aggregate metrics for analysis.  The Micrometer API refers to this dimensional data as tags, but you may it referred to as \"labels\" or \"attributes\" in other documentation sources."
msgstr "衡量标准，单一的数字测量，往往有额外的数据被捕获。这些辅助数据被用来分组或聚合度量，以便进行分析。Micrometer API将这种维度数据称为标签，但在其他文档来源中可能被称为 \"标签 \"或 \"属性\"。"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:186
#, fuzzy
msgid "Micrometer is built primariliy for backend monitoring systems that support dimensional data (metric names that are enchriched with key/value pairs).  For heirarchical systems that only support a flat metric name, Micrometer will flatten the set of key/value pairs (sorted by key) and add them to the name."
msgstr "Micrometer主要是为支持维度数据（用键/值对充实公制名称）的后台监控系统而建立的。对于只支持平面度量名称的分层系统，Micrometer会将键/值对的集合扁平化（按键排序）并将它们添加到名称中。"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:188
#, fuzzy
msgid "Tags can be specified when a meter is registered with a `MeterRegistry` or using a xref:meter-filter[Meter Filter]."
msgstr "当电表在 `MeterRegistry` ，或使用 link:#meter-filter[电表过滤器] 注册时，可以指定标签。"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:190
#, fuzzy
msgid "See the Micrometer documentation for additional advice on link:{concepts}#_tag_naming[tag naming]."
msgstr "关于 link:{concepts}#_tag_naming[标签命名] 的其他建议，请参见Micrometer文档。"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:193
#, fuzzy
msgid "Each unique combination of metric name and dimension produces a unique time series.  Using an unbounded set of dimensional data can lead to a \"cardinality explosion\", an exponential increase in the creation of new time series."
msgstr "每个独特的度量名称和维度的组合产生一个独特的时间序列。使用无限制的维度数据集会导致 \"cardinality爆炸\"，即新时间序列的创建呈指数级增长。"

#. type: Title ===
#: upstream/_guides/telemetry-micrometer.adoc:194
#, fuzzy, no-wrap
msgid "Obtain a reference to a MeterRegistry"
msgstr "获取一个对电表注册表的引用"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:197
#, fuzzy
msgid "To register meters, you need a reference to a `MeterRegistry`, which is configured and maintained by the Micrometer extension."
msgstr "要注册仪表，你需要一个对 `MeterRegistry` 的参考，这个参考是由测微仪扩展配置和维护的。"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:199
#, fuzzy
msgid "Use one of the following methods to obtain a reference to a `MeterRegistry`:"
msgstr "使用以下方法之一来获得对一个 `MeterRegistry` ："

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:201
#, fuzzy
msgid "Use CDI Constructor injection:"
msgstr "使用CDI构造器注入："

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:205
#, no-wrap
msgid "package org.acme.micrometer;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:207
#, no-wrap
msgid "import io.micrometer.core.instrument.MeterRegistry;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:211
#, no-wrap
msgid ""
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.Path;\n"
"import jakarta.ws.rs.Produces;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:215
#, no-wrap
msgid ""
"@Path(\"/example\")\n"
"@Produces(\"text/plain\")\n"
"public class ExampleResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:217
#, no-wrap
msgid "    private final MeterRegistry registry;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:222
#, no-wrap
msgid ""
"    ExampleResource(MeterRegistry registry) {\n"
"        this.registry = registry;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:225
#, fuzzy
msgid "Use a `MeterRegistry` member variable and use `@Inject`:"
msgstr "使用一个 `MeterRegistry` 成员变量，并使用 `@Inject` ："

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:230
#, no-wrap
msgid ""
"    @Inject\n"
"    MeterRegistry registry;\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:233
#, fuzzy
msgid "Use the global `MeterRegistry`:"
msgstr "使用全局 `MeterRegistry` ："

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:237
#, no-wrap
msgid "    MeterRegistry registry = Metrics.globalRegistry;\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/telemetry-micrometer.adoc:239
#, fuzzy, no-wrap
msgid "Gauges"
msgstr "计量器"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:243
#, fuzzy
msgid "Gauges measure a value that can increase or decrease over time, like the speedometer on a car.  Gauges can be useful when monitoring the statistics for a cache or collection."
msgstr "仪表测量的是一个可以随时间增加或减少的数值，就像汽车上的速度表。计量器在监测一个藏品或收藏品的统计数据时很有用。"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:246
#, fuzzy
msgid "Gauge values are sampled rather than set; there is no record of how the value associated with a gauge may have changed between measurements."
msgstr "测量值是取样的，而不是设定的；没有记录与一个测量值相关的数值在两次测量之间可能发生的变化。"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:248
#, fuzzy
msgid "Micrometer provides a few mechanisms for creating gauges:"
msgstr "千分表提供了一些创建量具的机制："

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:250
#, fuzzy
msgid "Wrap construction of a collection to monitor its size:"
msgstr "包裹构建一个集合，以监测其规模："

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:256
#, no-wrap
msgid ""
"List<String> list = registry.gaugeCollectionSize(\"fantastic.list\", // <1>\n"
"        Tags.of(\"key\", \"value\") // optional <2>\n"
"        new ArrayList<>());  // <3>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:259
#, fuzzy
msgid "Create a new gauge, `list.size`, using the dot-separated convention."
msgstr "创建一个新的仪表， `list.size` ，使用点分隔的惯例。"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:261
#, fuzzy
msgid "Associate xref:define-tags[tags] with the gauge.  Gauge tag values are constant, and must be assigned at construction time."
msgstr "将 link:#define-tags[标签] 与仪表相关联。仪表盘的标签值是恒定的，必须在构造时分配。"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:262
#, fuzzy
msgid "Construct the array list whose size should be observed."
msgstr "构建数组列表，其大小应被观察。"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:264
#, fuzzy
msgid "Use a builder to create a Gauge that will call a function:"
msgstr "使用一个构建器来创建一个Gauge，它将调用一个函数："

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:272
#, no-wrap
msgid ""
"Gauge.builder(\"jvm.threads.peak\", threadBean, ThreadMXBean::getPeakThreadCount) // <1>\n"
"    .baseUnit(BaseUnits.THREADS) // optional <2>\n"
"    .description(\"The peak live thread count...\") // optional <3>\n"
"    .tags(\"key\", \"value\") // optional <4>\n"
"    .register(registry); // <5>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:275
#, fuzzy
msgid "Create a new gauge called `jvm.threads.peak` that will call `getPeakThreadCount` on `threadBean`, an instance of `ThreadMXBean`"
msgstr "创建一个名为 `jvm.threads.peak` 的新仪表，它将在 `threadBean` 上调用 `getPeakThreadCount` ，一个 `ThreadMXBean` "

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:276
#, fuzzy
msgid "Define the base unit, see link:{base-units}[BaseUnits.java] for predefined values."
msgstr "定义基本单位，见 link:{base-units}[BaseUnits.java] 的预定义值。"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:277
#, fuzzy
msgid "Provide a description of the Gauge"
msgstr "提供测量仪的描述"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:278
#, fuzzy
msgid "Associate xref:define-tags[tags] with the gauge"
msgstr "将 link:#define-tags[标签] 与仪表相关联"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:279
#, fuzzy
msgid "Register the Gauge with the MeterRegistry"
msgstr "在仪表注册处注册仪表"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:282
#, fuzzy
msgid "See link:{concepts}#_gauges[Gauges] in the Micrometer documentation for more information and examples.  Of note are two special cases: `TimeGauge` for measuring time, and a `MultiGauge` for reporting several criteria together."
msgstr "更多信息和例子请见千分尺文档中的 link:{concepts}#_gauges[量具] 。值得注意的是两个特殊情况：用于测量时间的 `TimeGauge` ，以及用于一起报告几个标准的 `MultiGauge` 。"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:286
#, fuzzy
msgid "Micrometer does not create strong references to the objects it observes by default.  Depending on the registry, Micrometer either omits gauges that observe objects that have been garbage-collected entirely or uses `NaN` (not a number) as the observed value."
msgstr "Micrometer默认不会对其观察的对象创建强引用。根据注册表，Micrometer或者完全省略观察已经被垃圾收集的对象的量具，或者使用 `NaN` （不是数字）作为观察值。"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:291
#, fuzzy
msgid "When should you use a gauge? Only use a gauge when you can't use something else.  Gauges can be less straight-forward to use than other meters.  If what you are measuring can be counted (because the value always increments), use a counter instead."
msgstr "什么时候应该使用量具？只有在你不能使用其他东西时才使用仪表。仪表的使用可能不如其他仪表那么直接。如果你要测量的东西可以计算（因为数值总是递增的），就用计数器代替。"

#. type: Title ===
#: upstream/_guides/telemetry-micrometer.adoc:292
#, fuzzy, no-wrap
msgid "Counters"
msgstr "计数器"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:296
#, fuzzy
msgid "Counters measure values that only increase.  Use one of the methods below to create a counter."
msgstr "计数器测量的是只增加的数值。使用下面的方法之一来创建一个计数器。"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:298
#: upstream/_guides/telemetry-micrometer.adoc:361
#: upstream/_guides/telemetry-micrometer.adoc:394
#, fuzzy
msgid "Use a convenience method on the `MeterRegistry`:"
msgstr "在 `MeterRegistry` ，使用一种方便的方法："

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:302
#, no-wrap
msgid "registry.counter(\"example.prime.number\", \"type\", \"prime\"); // <1> <2>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:305
#, fuzzy
msgid "`example.prime.number` is the counter name."
msgstr " `example.prime.number` 是计数器的名称。"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:306
#, fuzzy
msgid "`type` is a dimensional tag with value `prime`."
msgstr " `type` 是一个维度标签，值为 。 `prime` "

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:309
#, fuzzy
msgid "Use `Counter.builder` to provide a description and units:"
msgstr "使用 `Counter.builder` ，提供描述和单位："

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:317
#, no-wrap
msgid ""
"Counter.builder(\"count.me\") // <1>\n"
"    .baseUnit(\"beans\")            // optional <2>\n"
"    .description(\"a description\") // optional <3>\n"
"    .tags(\"region\", \"test\")       // optional <4>\n"
"    .register(registry);\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:320
#, fuzzy
msgid "Create a new counter called `count.me`"
msgstr "创建一个新的计数器，名为 `count.me` "

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:321
#, fuzzy
msgid "Define a custom base unit. See link:{base-units}[BaseUnits.java] for predefined values."
msgstr "定义一个自定义的基本单位。参见 link:{base-units}[BaseUnits.java] 中的预定义值。"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:322
#, fuzzy
msgid "Provide a description for the counter"
msgstr "提供计数器的描述"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:323
#, fuzzy
msgid "Associate xref:define-tags[tags] with the counter"
msgstr "将 link:#define-tags[标签] 与计数器联系起来"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:325
#: upstream/_guides/telemetry-micrometer.adoc:420
#, fuzzy
msgid "xref:annotations[Annotate] a method"
msgstr "link:#annotations[注释] 一个方法"

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:332
#, no-wrap
msgid ""
"@Counted(value = \"counted.method\", extraTags = { \"extra\", \"annotated\" }) // <1> <2>\n"
"void countThisMethod(){\n"
"    ...\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:335
#, fuzzy
msgid "A CDI interceptor will create and register a counter called `counted.method`"
msgstr "一个CDI拦截器将创建并注册一个叫做 `counted.method` "

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:336
#, fuzzy
msgid "The interceptor-created counter will have the \"extra\" dimension tag with value \"annotated\""
msgstr "拦截器创建的计数器将有 \"额外 \"维度标签，其值为 \"注释\"。"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:338
#, fuzzy
msgid "See link:{concepts}#_counters[Counters] in the Micrometer documentation for more information and examples, including the less common `FunctionCounter` that can be used to measure the result returned by an always increasing function."
msgstr "更多信息和例子请参见千分尺文档中的 link:{concepts}#_counters[计数器] ，包括不太常见的 `FunctionCounter` ，它可以用来测量一个总是增加的函数所返回的结果。"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:344
#, fuzzy
msgid "When should you use a counter? Use a counter if you are doing something that can not be either timed or summarized.  If you want to understand more about how a value is changing, a timer (when the base unit of measurement is time) or a distribution summary might be more appropriate."
msgstr "什么时候应该使用计数器？如果你正在做一些既不能计时也不能总结的事情，就使用计数器。如果你想更多地了解一个值是如何变化的，计时器（当基本测量单位是时间时）或分布汇总可能更合适。"

#. type: Title ===
#: upstream/_guides/telemetry-micrometer.adoc:345
#, fuzzy, no-wrap
msgid "Summaries and Timers"
msgstr "总结和定时器"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:348
#, fuzzy
msgid "Timers and distribution summaries in Micrometer are very similar. Both meters record data, and can capture additional histogram or percentile data. While distribution summaries can be use for arbitrary types of data, timers are optimized for measuring time and durations."
msgstr "Micrometer中的计时器和分布汇总表非常相似。两种仪表都能记录数据，并能捕获额外的直方图或百分位数数据。虽然分布汇总表可以用于任意类型的数据，但计时器是为测量时间和持续时间而优化的。"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:350
#, fuzzy
msgid "Timers and distribution summaries store at least three values internally:"
msgstr "计时器和分配汇总表在内部至少存储三个值："

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:352
#, fuzzy
msgid "the aggregation of all recorded values as a sum"
msgstr "将所有记录的数值汇总为一个总和"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:353
#, fuzzy
msgid "the number of values that have been recorded (a counter)"
msgstr "已经记录的数值的数量（一个计数器）。"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:354
#, fuzzy
msgid "the highest value seen within a decaying time window (a gauge)."
msgstr "在一个衰减的时间窗口内看到的最高值（一个仪表）。"

#. type: Title ====
#: upstream/_guides/telemetry-micrometer.adoc:355
#, fuzzy, no-wrap
msgid "Create a distribution summary"
msgstr "创建一个分发摘要"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:359
#, fuzzy
msgid "Use a distribution summary to record a value, not time.  Use one of the following methods to create a distribution summary."
msgstr "使用分配摘要来记录一个值，而不是时间。使用下列方法之一来创建一个分布摘要。"

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:365
#, no-wrap
msgid "registry.summary(\"bytes.written\", \"protocol\", \"http\"); // <1> <2>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:368
#, fuzzy
msgid "`bytes.written` is the summary name"
msgstr " `bytes.written` 是摘要名称"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:369
#, fuzzy
msgid "`protocol` is a dimensional tag with value `http`."
msgstr " `protocol` 是一个维度标签，值为 。 `http` "

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:372
#, fuzzy
msgid "Use `DistributionSummary.builder` to provide a description and units:"
msgstr "使用 `DistributionSummary.builder` ，提供描述和单位："

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:380
#, fuzzy, no-wrap
msgid ""
"DistributionSummary.builder(\"response.size\") // <1>\n"
"    .baseUnit(\"bytes\")            // optional <2>\n"
"    .description(\"a description\") // optional <3>\n"
"    .tags(\"protocol\", \"http\")     // optional <4>\n"
"    .register(registry);\n"
msgstr ""
".baseUnit(\"bytes\")            // optional <2>\n"
".description(\"a description\") // optional <3>\n"
".tags(\"protocol\", \"http\")     // optional <4>\n"
".register(registry);\n"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:383
#, fuzzy
msgid "Create a new distribution summary called `response.size`"
msgstr "创建一个分发摘要"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:384
#, fuzzy
msgid "Use `bytes` as a base unit. See link:{base-units}[BaseUnits.java] for predefined values."
msgstr "定义一个自定义的基本单位。参见 link:{base-units}[BaseUnits.java] 中的预定义值。"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:385
#: upstream/_guides/telemetry-micrometer.adoc:417
#, fuzzy
msgid "Provide a description for the distribution summary"
msgstr "提供计数器的描述"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:386
#, fuzzy
msgid "Associate xref:define-tags[tags] with the distribution summary"
msgstr "将 link:#define-tags[标签] 与计数器联系起来"

#. type: Title ====
#: upstream/_guides/telemetry-micrometer.adoc:387
#, fuzzy, no-wrap
msgid "Create a timer"
msgstr "创建一个定时器"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:390
msgid "Timers measure short-duration latencies and how often they occur. Negative values are not supported, and longer durations could cause an overflow of the total time (Long.MAX_VALUE nanoseconds (292.3 years))."
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:392
msgid "Use one of the following methods to construct a timer."
msgstr ""

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:398
#, fuzzy, no-wrap
msgid "registry.timer(\"fabric.selection\", \"primary\", \"blue\"); // <1> <2>\n"
msgstr "registry.timer(\"fabric.selection\", \"primary\", \"blue\"); // <一> <二>"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:401
#, fuzzy
msgid "`fabric.selection` is the summary name"
msgstr " `bytes.written` 是摘要名称"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:402
#, fuzzy
msgid "`primary` is a dimensional tag with value `blue`."
msgstr " `type` 是一个维度标签，值为 。 `prime` "

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:405
#, fuzzy
msgid "Use `Timer.builder` to provide a description and units:"
msgstr "使用 `Counter.builder` ，提供描述和单位："

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:412
#, fuzzy, no-wrap
msgid ""
"Timer.builder(\"my.timer\")        // <1> <2>\n"
"    .description(\"description \") // optional <3>\n"
"    .tags(\"region\", \"test\")      // optional <4>\n"
"    .register(registry);\n"
msgstr "Timer.builder(\"my.timer\") // <1> <2> .description(\"描述\") // optional <3> .tags(\"region\", \"test\") // optional <4> .register(registry) ；"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:415
#, fuzzy
msgid "Create a new timer called `my.timer`"
msgstr "创建一个新的计数器，名为 `count.me` "

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:416
msgid "Timers measure time, and will convert it into the units required by the monitoring backend"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:418
#, fuzzy
msgid "Associate xref:define-tags[tags] with the timer"
msgstr "将 link:#define-tags[标签] 与计数器联系起来"

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:424
#, fuzzy, no-wrap
msgid "@Timed(value = \"call\", extraTags = {\"region\", \"test\"}) // <1> <2>\n"
msgstr "@Timed(value = \"call\", extraTags = {\"regional\", \"test\"}) // <1> <2>"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:427
#, fuzzy
msgid "A CDI interceptor will create and register a timer called `call`"
msgstr "一个CDI拦截器将创建并注册一个叫做 `counted.method` "

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:428
#, fuzzy
msgid "The interceptor-created timer will have the \"region\" dimension tag with value \"test\""
msgstr "拦截器创建的计数器将有 \"额外 \"维度标签，其值为 \"注释\"。"

#. type: Title ====
#: upstream/_guides/telemetry-micrometer.adoc:429
#, fuzzy, no-wrap
msgid "Measure durations with Timers"
msgstr "用定时器测量持续时间"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:432
msgid "Micrometer provides the following convenience mechanisms for recording durations."
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:434
msgid "Wrap the invocation of a `Runnable`:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:438
#, fuzzy, no-wrap
msgid "timer.record(() -> noReturnValue());\n"
msgstr "timer.record）→ noReturnValue（；"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:441
msgid "Wrap the invocation of a `Callable`:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:445
#, fuzzy, no-wrap
msgid "timer.recordCallable(() -> returnValue());\n"
msgstr "timer.recordCallable) → returnValue(；"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:448
msgid "Create a wrapped `Runnable` for repeated invocation:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:452
#, fuzzy, no-wrap
msgid "Runnable r = timer.wrap(() -> noReturnValue());\n"
msgstr "Runnable r = timer.wrap) → noReturnValue(；"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:455
msgid "Create a wrapped `Callable` for repeated invocation:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:459
#, fuzzy, no-wrap
msgid "Callable c = timer.wrap(() -> returnValue());\n"
msgstr "Callable c = timer.wrap) → returnValue(；"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:462
msgid "Use a `Sample` for more complex code paths:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:466
#, fuzzy, no-wrap
msgid "Sample sample = Timer.start(registry); // <1>\n"
msgstr "Sample sample = Timer.start(registry); // <1>"

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:468
#, fuzzy, no-wrap
msgid "doStuff; // <2>\n"
msgstr "doStuff; // <2>"

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:470
#, fuzzy, no-wrap
msgid "sample.stop(registry.timer(\"my.timer\", \"response\", response.status())); // <3>\n"
msgstr "sample.stop(registry.timer(\"my.timer\", \"response\", response.status())); // <3>"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:473
msgid "We create a sample, which records the start of the timer."
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:474
msgid "The sample can be passed along as context"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:475
msgid "We can choose the timer when the sample is stopped. This example uses a response status as a tag identifying the timer, which won't be known until processing is complete."
msgstr ""

#. type: Title ====
#: upstream/_guides/telemetry-micrometer.adoc:476
#, fuzzy, no-wrap
msgid "Histograms and percentiles"
msgstr "柱状图和百分位数"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:480
msgid "Both timers and distribution summaries can be configured to emit additional statistics, like histogram data, precomputed percentiles, or service level objective (SLO) boundaries.  See link:{concepts}#_timers[Timers] and link:{concepts}#_distribution_summaries[Distribution Summaries] in the Micrometer documentation for more information and examples, including memory footprint estimation for both types."
msgstr ""

#. type: delimited block =
#: upstream/_guides/telemetry-micrometer.adoc:484
msgid "The count, sum, and histogram data associated with timers and distribution summaries can be re-aggregated across dimensions (or across a series of instances)."
msgstr ""

#. type: delimited block =
#: upstream/_guides/telemetry-micrometer.adoc:486
msgid "Precomputed percentile values can not. Percentiles are unique to each dataset (the 90th percentile of this collection of measurements)."
msgstr ""

#. type: Title ==
#: upstream/_guides/telemetry-micrometer.adoc:488
#, fuzzy, no-wrap
msgid "Automatically generated metrics"
msgstr "自动生成的指标"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:494
msgid "The Micrometer extension automatically times HTTP server requests. Following Prometheus naming conventions for timers, look for `http_server_requests_seconds_count`, `http_server_requests_seconds_sum`, and `http_server_requests_seconds_max`. Dimensional labels have been added for the requested uri, the HTTP method (GET, POST, etc.), the status code (200, 302, 404, etc.), and a more general outcome field."
msgstr ""

#. type: Block title
#: upstream/_guides/telemetry-micrometer.adoc:495
#, no-wrap
msgid "Ignoring endpoints"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:505
msgid "You can disable measurement of HTTP endpoints using the `quarkus.micrometer.binder.http-server.ignore-patterns` property.  This property accepts a comma-separated list of simple regex match patterns identifying URI paths that should be ignored.  For example, setting `quarkus.micrometer.binder.http-server.ignore-patterns=/example/prime/[0-9]+` will ignore a request to `http://localhost:8080/example/prime/7919`.  A request to `http://localhost:8080/example/gauge/7919` would still be measured."
msgstr ""

#. type: Block title
#: upstream/_guides/telemetry-micrometer.adoc:506
#, no-wrap
msgid "URI templates"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:511
msgid "The micrometer extension will make a best effort at representing URIs containing path parameters in templated form.  Using examples from above, a request to `http://localhost:8080/example/prime/7919` should appear as an attribute of `http_server_requests_seconds_*` metrics with a value of `uri=/example/prime/{number}`."
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:518
msgid "Use the `quarkus.micrometer.binder.http-server.match-patterns` property if the correct URL can not be determined.  This property accepts a comma-separated list defining an association between a simple regex match pattern and a replacement string.  For example, setting `quarkus.micrometer.binder.http-server.match-patterns=/example/prime/[0-9]+=/example/{jellybeans}` would use the value `/example/{jellybeans}` for the uri attribute any time the requested uri matches `/example/prime/[0-9]+`."
msgstr ""

#. type: Block title
#: upstream/_guides/telemetry-micrometer.adoc:519
#, no-wrap
msgid "Exported metrics format"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:523
msgid "By default, the metrics are exported using the Prometheus format `application/openmetrics-text`, you can revert to the former format by specifying the `Accept` request header to `text/plain` (`curl -H \"Accept: text/plain\" localhost:8080/q/metrics/`)."
msgstr ""

#. type: Title ==
#: upstream/_guides/telemetry-micrometer.adoc:524
#, fuzzy, no-wrap
msgid "Customizing Micrometer"
msgstr "千分尺"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:527
msgid "Quarkus provides a variety of way to customize Micrometer."
msgstr ""

#. type: Title ===
#: upstream/_guides/telemetry-micrometer.adoc:529
#, fuzzy, no-wrap
msgid "Use `MeterFilter` to customize emitted tags and metrics"
msgstr "使用 `MeterFilter` 来定制发射的标签和指标"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:534
msgid "Micrometer uses `MeterFilter` instances to customize the metrics emitted by `MeterRegistry` instances.  The Micrometer extension will detect `MeterFilter` CDI beans and use them when initializing `MeterRegistry` instances."
msgstr ""

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:539
#, fuzzy, no-wrap
msgid ""
"@Singleton\n"
"public class CustomConfiguration {\n"
msgstr "@Singleton public class CustomConfiguration {"

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:542
#, fuzzy, no-wrap
msgid ""
"    @ConfigProperty(name = \"deployment.env\")\n"
"    String deploymentEnv;\n"
msgstr ""
"@ConfigProperty(name = \"deployment.env\")\n"
"String deploymentEnv；"

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:551
#, fuzzy, no-wrap
msgid ""
"    /** Define common tags that apply only to a Prometheus Registry */\n"
"    @Produces\n"
"    @Singleton\n"
"    @MeterFilterConstraint(applyTo = PrometheusMeterRegistry.class)\n"
"    public MeterFilter configurePrometheusRegistries() {\n"
"        return MeterFilter.commonTags(Arrays.asList(\n"
"                Tag.of(\"registry\", \"prometheus\")));\n"
"    }\n"
msgstr ""
"/**定义只适用于普罗米修斯注册中心的普通标签 */*。\n"
"@生产\n"
"@Singleton\n"
"@MeterFilterConstraint(applyTo = PrometheusMeterRegistry.class)\n"
"public MeterFilter configurePrometheusRegistries() {\n"
"    返回MeterFilter.commonTags(Arrays.asList(\n"
"            Tag.of(\"registry\", \"prometheus\"))；\n"
"}"

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:559
#, fuzzy, no-wrap
msgid ""
"    /** Define common tags that apply globally */\n"
"    @Produces\n"
"    @Singleton\n"
"    public MeterFilter configureAllRegistries() {\n"
"        return MeterFilter.commonTags(Arrays.asList(\n"
"                Tag.of(\"env\", deploymentEnv)));\n"
"    }\n"
msgstr ""
"/**定义适用于全局的通用标签 */**\n"
"@生产\n"
"@Singleton\n"
"public MeterFilter configureAllRegistries() {\n"
"    返回MeterFilter.commonTags(Arrays.asList(\n"
"            Tag.of(\"env\", deploymentEnv)))；\n"
"}"

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:579
#, fuzzy, no-wrap
msgid ""
"    /** Enable histogram buckets for a specific timer */\n"
"    @Produces\n"
"    @Singleton\n"
"    public MeterFilter enableHistogram() {\n"
"        return new MeterFilter() {\n"
"            @Override\n"
"            public DistributionStatisticConfig configure(Meter.Id id, DistributionStatisticConfig config) {\n"
"                if(id.getName().startsWith(\"myservice\")) {\n"
"                    return DistributionStatisticConfig.builder()\n"
"                        .percentiles(0.5, 0.95)     // median and 95th percentile, not aggregable\n"
"                        .percentilesHistogram(true) // histogram buckets (e.g. prometheus histogram_quantile)\n"
"                        .build()\n"
"                        .merge(config);\n"
"                }\n"
"                return config;\n"
"            }\n"
"        };\n"
"    }\n"
"}\n"
msgstr ""
"    /**为一个特定的计时器启用直方图桶 */*\n"
"    @产生\n"
"    @Singleton\n"
"    public MeterFilter enableHistogram() {\n"
"        返回新的MeterFilter() {\n"
"            @Override\n"
"            public DistributionStatisticConfig configure(Meter.Id Id, DistributionStatisticConfig config) {\n"
"                if(id.getName().startsWith(\"myservice\")) {\n"
"                    返回 DistributionStatisticConfig.builder()\n"
"                        .percentiles(0.5, 0.95) // 中位数和第95百分位数，不可聚合\n"
"                        .percentilesHistogram(true) // 直方图桶（例如，Prometheus histogram_quantile）。\n"
"                        .build()\n"
"                        .merge(config)；\n"
"                }\n"
"                返回config；\n"
"            }\n"
"        };\n"
"    }\n"
"}"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:588
msgid "In this example, a singleton CDI bean will produce two different `MeterFilter` beans.  One will be applied only to Prometheus `MeterRegistry` instances (using the `@MeterFilterConstraint` qualifier), and another will be applied to all `MeterRegistry` instances.  An application configuration property is also injected and used as a tag value.  Additional examples of MeterFilters can be found in the link:https://micrometer.io/docs/concepts[official documentation]."
msgstr ""

#. type: Title ===
#: upstream/_guides/telemetry-micrometer.adoc:589
#, no-wrap
msgid "Use `HttpServerMetricsTagsContributor` for server HTTP requests"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:592
msgid "By providing CDI beans that implement `io.quarkus.micrometer.runtime.HttpServerMetricsTagsContributor`, user code can contribute arbitrary tags based on the details of HTTP request"
msgstr ""

#. type: Title ===
#: upstream/_guides/telemetry-micrometer.adoc:593
#, no-wrap
msgid "Use `MeterRegistryCustomizer` for arbitrary customizations to meter registries"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:597
msgid "By providing CDI beans that implement `io.quarkus.micrometer.runtime.MeterRegistryCustomizer` user code has the change to change the configuration of any `MeterRegistry` that has been activated.  Unless an implementation is annotated with `@io.quarkus.micrometer.runtime.MeterRegistryCustomizerConstraint`, the customization applies to all `MeterRegistry` instances."
msgstr ""

#. type: Title ==
#: upstream/_guides/telemetry-micrometer.adoc:599
#, fuzzy, no-wrap
msgid "Does Micrometer support annotations?"
msgstr "Micrometer支持注释吗？"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:605
msgid "Micrometer does define two annotations, `@Counted` and `@Timed`, that can be added to methods.  The `@Timed` annotation will wrap the execution of a method and will emit the following tags in addition to any tags defined on the annotation itself: class, method, and exception (either \"none\" or the simple class name of a detected exception)."
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:608
msgid "Using annotations is limited, as you can't dynamically assign meaningful tag values.  Also note that many methods, e.g. REST endpoint methods or Vert.x Routes, are counted and timed by the micrometer extension out of the box."
msgstr ""

#. type: Title ==
#: upstream/_guides/telemetry-micrometer.adoc:609
#, fuzzy, no-wrap
msgid "Support for the MicroProfile Metrics API"
msgstr "支持MicroProfile Metrics API"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:614
msgid "If you use the MicroProfile Metrics API in your application, the Micrometer extension will create an adaptive layer to map those metrics into the Micrometer registry.  Note that naming conventions between the two systems is different, so the metrics that are emitted when using MP Metrics with Micrometer will change."
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:616
msgid "Use a `MeterFilter` to remap names or tags according to your conventions."
msgstr ""

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:623
#, fuzzy, no-wrap
msgid ""
"@Produces\n"
"@Singleton\n"
"public MeterFilter renameApplicationMeters() {\n"
"    final String targetMetric = MPResourceClass.class.getName() + \".mpAnnotatedMethodName\";\n"
msgstr "@Produces @Singleton public MeterFilter renameApplicationMeters() { final String targetMetric = MPResourceClass.class.getName() + \" .mpAnnotatedMethodName\"；"

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:638
#, fuzzy, no-wrap
msgid ""
"    return MeterFilter() {\n"
"        @Override\n"
"        public Meter.Id map(Meter.Id id) {\n"
"            if (id.getName().equals(targetMetric)) {\n"
"                // Drop the scope tag (MP Registry type: application, vendor, base)\n"
"                List<Tag> tags = id.getTags().stream().filter(x -> !\"scope\".equals(x.getKey()))\n"
"                        .collect(Collectors.toList());\n"
"                // rename the metric\n"
"                return id.withName(\"my.metric.name\").replaceTags(tags);\n"
"            }\n"
"            return id;\n"
"        }\n"
"    };\n"
"}\n"
msgstr ""
"    返回MeterFilter() {\n"
"        @Override\n"
"        public Meter.Id map(Meter.Id id) {\n"
"            如果（id.getName().equals(targetMetric)） {\n"
"                // 删除范围标签（MP注册表类型：应用、供应商、基础）。\n"
"                List<Tag> tags = id.getTags().stream().filter(x -> !\"scope\".equals(x.getKey() ))\n"
"                        .collect(Collectors.toList())；\n"
"                //重命名度量衡\n"
"                return id.withName(\"my.metric.name\").replaceTags(tags)；\n"
"            }\n"
"            返回id；\n"
"        }\n"
"    };\n"
"}"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:641
msgid "Ensure the following dependency is present if you require the MicroProfile Metrics API:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:649
#, fuzzy, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>org.eclipse.microprofile.metrics</groupId>\n"
"    <artifactId>microprofile-metrics-api</artifactId>\n"
"</dependency>\n"
msgstr "<dependency> <groupId>org.eclipse.microprofile.metrics</groupId> <artifactId>microprofile-metrics-api</artifactId> </dependency>"

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:655
#, fuzzy, no-wrap
msgid "implementation(\"org.eclipse.microprofile.metrics:microprofile-metrics-api\")\n"
msgstr "implementation(\"org.eclipse.microprofile.metrics:microprofile-metrics-api\")"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:658
msgid "The MP Metrics API compatibility layer may be moved to a different extension in the future."
msgstr ""

#. type: Title ==
#: upstream/_guides/telemetry-micrometer.adoc:660
#, fuzzy, no-wrap
msgid "Management interface"
msgstr "管理界面"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:663
msgid "By default, the metrics are exposed on the main HTTP server."
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:667
msgid "You can expose them on a separate network interface and port by setting `quarkus.management.enabled=true` in your application configuration.  Note that this property is a build-time property.  The value cannot be overridden at runtime."
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:669
msgid "If you enable the management interface without customizing the management network interface and port, the metrics are exposed under: `http://0.0.0.0:9000/q/metrics`."
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:671
msgid "You can configure the path of each exposed format using:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:676
#, no-wrap
msgid ""
"quarkus.micrometer.export.json.enabled=true # Enable json metrics\n"
"quarkus.micrometer.export.json.path=metrics/json\n"
"quarkus.micrometer.export.prometheus.path=metrics/prometheus\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:680
msgid "With such a configuration, the json metrics will be available from `http://0.0.0.0:9000/q/metrics/json`.  The prometheus metrics will be available from `http://0.0.0.0:9000/q/metrics/prometheus`."
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:682
msgid "Refer to the xref:./management-interface-reference.adoc[management interface reference] for more information."
msgstr ""

#. type: Title ==
#: upstream/_guides/telemetry-micrometer.adoc:684
#, no-wrap
msgid "Quarkus core extensions instrumented with Micrometer"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:687
msgid "https://quarkus.io/extensions/io.quarkus/quarkus-agroal[`quarkus-agroal`]"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:688
msgid "https://quarkus.io/guides/cache[`quarkus-cache`]"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:689
msgid "https://quarkus.io/extensions/io.quarkus/quarkus-caffeine[`quarkus-caffeine`]"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:690
msgid "https://quarkus.io/guides/smallrye-fault-tolerance[`quarkus-smallrye-fault-tolerance`]"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:691
msgid "https://quarkus.io/guides/grpc-getting-started[`quarkus-grpc`]"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:692
msgid "https://quarkus.io/guides/hibernate-orm[`quarkus-hibernate-orm`]"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:693
msgid "https://quarkus.io/extensions/io.quarkus/quarkus-jaxrs-client-reactive[`quarkus-jaxrs-client-reactive`]"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:694
msgid "https://quarkus.io/guides/deploying-to-kubernetes[`quarkus-kubernetes`]"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:695
msgid "https://quarkus.io/guides/logging[`jboss-logging`] (logging API in Quarkus)"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:696
msgid "https://quarkus.io/guides/mongodb[`quarkus-mongodb-client`]"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:697
msgid "https://quarkus.io/extensions/io.quarkus/quarkus-netty[`quarkus-netty`]"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:698
msgid "https://quarkus.io/guides/redis[`quarkus-redis-client`]"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:699
msgid "https://quarkus.io/guides/rest-client[`quarkus-rest-client`]"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:700
msgid "https://quarkus.io/guides/resteasy[`quarkus-resteasy-jackson`]"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:701
msgid "https://quarkus.io/guides/resteasy-reactive[`quarkus-resteasy-reactive`]"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:702
msgid "https://quarkus.io/guides/scheduler[`quarkus-scheduler`]"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:703
msgid "https://quarkus.io/guides/smallrye-graphql[`quarkus-smallrye-graphql`]"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:704
msgid "https://quarkus.io/extensions/io.quarkus/quarkus-smallrye-reactive-messaging[`quarkus-smallrye-reactive-messaging`]"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:705
msgid "AMQP 1.0"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:706
msgid "RabbitMQ"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:707
msgid "Kafka"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:708
msgid "Pulsar"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:709
msgid "JMS"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:710
msgid "MQTT"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:711
msgid "Camel Messaging"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:712
msgid "https://quarkus.io/guides/vertx[`quarkus-vertx`] (http requests)"
msgstr ""

#. type: Title ==
#: upstream/_guides/telemetry-micrometer.adoc:713
#, no-wrap
msgid "Configuration Reference"
msgstr ""

#, fuzzy
#~ msgid "  DistributionSummary.builder(\"response.size\") // <1>"
#~ msgstr "DistributionSummary.builder(\"response.size\") //(1)"

# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-08-02 18:19+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:2
#, fuzzy, no-wrap
msgid "Protect a web application by using OpenID Connect (OIDC) authorization code flow"
msgstr "通过使用OIDC授权代码流来保护一个网络应用程序"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:8
#, fuzzy
msgid "With the Quarkus OpenID Connect (OIDC) extension, you can protect application HTTP endpoints by using the OIDC Authorization Code Flow mechanism."
msgstr "通过Quarkus OpenID Connect（OIDC）扩展，你可以通过使用OIDC授权代码流机制来保护应用程序的HTTP端点。"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:10
#, fuzzy
msgid "To learn more about the OIDC authorization code flow mechanism, see xref:security-oidc-code-flow-authentication.adoc[OIDC code flow mechanism for protecting web applications]."
msgstr "link:security-oidc-code-flow-authentication-concept.html[用于保护网络应用的OIDC代码流机制]"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:13
#, fuzzy
msgid "To learn about how well-known social providers such as Google, GitHub, Microsoft, Twitter, Apple, Facebook, and Spotify can be used with Quarkus OIDC, see xref:security-openid-connect-providers.adoc[Configuring Well-Known OpenID Connect Providers].  See also, xref:security-authentication-mechanisms.adoc#other-supported-authentication-mechanisms[Authentication mechanisms in Quarkus]."
msgstr "要了解知名的社交供应商如Google、GitHub、Microsoft、Twitter、Apple、Facebook和Spotify如何与Quarkus OIDC一起使用，请参阅 link:security-openid-connect-providers.html[配置知名的OpenID Connect供应商] 。另请参见， link:security-authentication-mechanisms.html#other-supported-authentication-mechanisms[Quarkus中的认证机制] 。"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:15
#, fuzzy
msgid "If you want to protect your service applications by using OIDC Bearer token authentication, see xref:security-oidc-bearer-token-authentication-concept.adoc[OIDC Bearer token authentication]."
msgstr "如果你想通过使用OIDC承载令牌认证来保护你的服务应用，请参阅 link:security-oidc-bearer-token-authentication-concept.html[OIDC承载令牌认证] 。"

#. type: Title ==
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:16
#, fuzzy, no-wrap
msgid "Prerequisites"
msgstr "先决条件"

#. type: Title ==
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:21
#, fuzzy, no-wrap
msgid "Architecture"
msgstr "建筑学"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:24
#, fuzzy
msgid "In this example, we build a very simple web application with a single page:"
msgstr "在这个例子中，我们建立了一个非常简单的网络应用，只有一个页面。"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:26
#, fuzzy
msgid "`/index.html`"
msgstr " `/index.html` "

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:28
#, fuzzy
msgid "This page is protected and can only be accessed by authenticated users."
msgstr "这个页面是受保护的，只有通过认证的用户才能访问。"

#. type: Title ==
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:29
#, fuzzy, no-wrap
msgid "Solution"
msgstr "解决方案"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:33
#, fuzzy
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the completed example."
msgstr "我们建议你按照下面几节的说明，一步一步地创建应用程序。然而，你可以直接进入已完成的例子。"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:35
#, fuzzy
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "克隆 Git 仓库。 `git clone {quickstarts-clone-url}` ，或者下载一个{quickstarts-archive-url}[存档]。"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:37
#, fuzzy
msgid "The solution is located in the `security-openid-connect-web-authentication-quickstart` link:{quickstarts-tree-url}/security-openid-connect-web-authentication-quickstart[directory]."
msgstr "该解决方案位于 `security-openid-connect-web-authentication-quickstart` {quickstarts-treeurl}/security-openid-connect-web-authentication-quickstart[目录]中。"

#. type: Title ==
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:38
#, fuzzy, no-wrap
msgid "Procedure"
msgstr "程序"

#. type: Title ===
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:40
#, fuzzy, no-wrap
msgid "Create the Maven project"
msgstr "创建Maven项目"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:44
#, fuzzy
msgid "First, we need a new project.  Create a new project with the following command:"
msgstr "首先，我们需要一个新的项目。用以下命令创建一个新项目。"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:50
#, fuzzy
msgid "If you already have your Quarkus project configured, you can add the `oidc` extension to your project by running the following command in your project base directory:"
msgstr "如果你已经配置了你的Quarkus项目，你可以通过在你的项目基础目录下运行以下命令，将 `oidc` 扩展到你的项目。"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:55
#, fuzzy
msgid "This will add the following to your build file:"
msgstr "这将在你的构建文件中添加以下内容。"

#. type: Block title
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:57
#, fuzzy, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:63
#, no-wrap
msgid ""
"<dependency>\n"
"   <groupId>io.quarkus</groupId>\n"
"   <artifactId>quarkus-oidc</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:66
#, fuzzy, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:69
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-oidc\")\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:71
#, fuzzy, no-wrap
msgid "Write the application"
msgstr "撰写申请书"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:74
#, fuzzy
msgid "Let's write a simple Jakarta REST resource which has all the tokens returned in the authorization code grant response injected:"
msgstr "让我们写一个简单的JAX-RS资源，其中注入了授权码授予响应中返回的所有令牌。"

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:78
#, no-wrap
msgid "package org.acme.security.openid.connect.web.authentication;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:83
#, no-wrap
msgid ""
"import jakarta.inject.Inject;\n"
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.Path;\n"
"import jakarta.ws.rs.Produces;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:85
#, no-wrap
msgid "import org.eclipse.microprofile.jwt.JsonWebToken;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:88
#, no-wrap
msgid ""
"import io.quarkus.oidc.IdToken;\n"
"import io.quarkus.oidc.RefreshToken;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:91
#, no-wrap
msgid ""
"@Path(\"/tokens\")\n"
"public class TokenResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:98
#, no-wrap
msgid ""
"   /**\n"
"    * Injection point for the ID Token issued by the OpenID Connect Provider\n"
"    */\n"
"   @Inject\n"
"   @IdToken\n"
"   JsonWebToken idToken;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:104
#, no-wrap
msgid ""
"   /**\n"
"    * Injection point for the Access Token issued by the OpenID Connect Provider\n"
"    */\n"
"   @Inject\n"
"   JsonWebToken accessToken;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:110
#, no-wrap
msgid ""
"   /**\n"
"    * Injection point for the Refresh Token issued by the OpenID Connect Provider\n"
"    */\n"
"   @Inject\n"
"   RefreshToken refreshToken;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:123
#, no-wrap
msgid ""
"   /**\n"
"    * Returns the tokens available to the application. This endpoint exists only for demonstration purposes, you should not\n"
"    * expose these tokens in a real application.\n"
"    *\n"
"    * @return a HTML page containing the tokens available to the application\n"
"    */\n"
"   @GET\n"
"   @Produces(\"text/html\")\n"
"   public String getTokens() {\n"
"       StringBuilder response = new StringBuilder().append(\"<html>\")\n"
"               .append(\"<body>\")\n"
"               .append(\"<ul>\");\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:126
#, no-wrap
msgid "       Object userName = this.idToken.getClaim(\"preferred_username\");\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:130
#, no-wrap
msgid ""
"       if (userName != null) {\n"
"           response.append(\"<li>username: \").append(userName.toString()).append(\"</li>\");\n"
"       }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:132
#, no-wrap
msgid "       Object scopes = this.accessToken.getClaim(\"scope\");\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:136
#, no-wrap
msgid ""
"       if (scopes != null) {\n"
"           response.append(\"<li>scopes: \").append(scopes.toString()).append(\"</li>\");\n"
"       }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:138
#, no-wrap
msgid "       response.append(\"<li>refresh_token: \").append(refreshToken.getToken() != null).append(\"</li>\");\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:142
#, no-wrap
msgid ""
"       return response.append(\"</ul>\").append(\"</body>\").append(\"</html>\").toString();\n"
"   }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:146
#, fuzzy
msgid "This endpoint has ID, access, and refresh tokens injected.  It returns a `preferred_username` claim from the ID token, a `scope` claim from the access token, and also a refresh token availability status."
msgstr "这个端点注入了ID、访问和刷新令牌。它从ID令牌返回一个 `preferred_username` ，从访问令牌返回一个 `scope` ，还有一个刷新令牌可用性状态。"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:148
#, fuzzy
msgid "Note that you do not have to inject the tokens - it is only required if the endpoint needs to use the ID token to interact with the currently authenticated user or use the access token to access a downstream service on behalf of this user."
msgstr "请注意，你不必注入令牌--只有当端点需要使用ID令牌与当前认证的用户进行交互或使用访问令牌代表该用户访问下游服务时才需要。"

#.  SJ: TO DO - update link to point to new reference guide. For more information, see xref:access_id_and_access_tokens[Access ID and Access Tokens] section.
#. type: Title ===
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:151
#, fuzzy, no-wrap
msgid "Configure the application"
msgstr "配置应用程序"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:154
#, fuzzy
msgid "The OIDC extension allows you to define the configuration using the `application.properties` file which should be located at the `src/main/resources` directory."
msgstr "OIDC扩展允许你使用 `application.properties` 文件来定义配置，该文件应位于 `src/main/resources` 目录中。"

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:163
#, no-wrap
msgid ""
"quarkus.oidc.auth-server-url=http://localhost:8180/realms/quarkus\n"
"quarkus.oidc.client-id=frontend\n"
"quarkus.oidc.credentials.secret=secret\n"
"quarkus.oidc.application-type=web-app\n"
"quarkus.http.auth.permission.authenticated.paths=/*\n"
"quarkus.http.auth.permission.authenticated.policy=authenticated\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:166
#, fuzzy
msgid "This is the simplest configuration you can have when enabling authentication to your application."
msgstr "这是你在启用你的应用程序的认证时可以拥有的最简单的配置。"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:168
#, fuzzy
msgid "The `quarkus.oidc.client-id` property references the `client_id` issued by the OIDC provider and the `quarkus.oidc.credentials.secret` property sets the client secret."
msgstr " `quarkus.oidc.client-id` 属性引用了 OIDC 提供者发布的 `client_id` ， `quarkus.oidc.credentials.secret` 属性设置了客户秘密。"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:170
#, fuzzy
msgid "The `quarkus.oidc.application-type` property is set to `web-app` in order to tell Quarkus that you want to enable the OIDC authorization code flow, so that your users are redirected to the OIDC provider to authenticate."
msgstr " `quarkus.oidc.application-type` 属性设置为 `web-app` ，是为了告诉Quarkus你想启用OIDC授权代码流，这样你的用户就会被重定向到OIDC提供商处进行认证。"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:174
#, fuzzy
msgid "Finally, the `quarkus.http.auth.permission.authenticated` permission is set to tell Quarkus about the paths you want to protect.  In this case, all paths are being protected by a policy that ensures that only `authenticated` users are allowed to access.  For more information, see xref:security-authorization-of-web-endpoints-reference.adoc[Security Authorization Guide]."
msgstr "最后， `quarkus.http.auth.permission.authenticated` 权限的设置是为了告诉Quarkus你要保护的路径。在这种情况下，所有的路径都被一个策略所保护，确保只有 `authenticated` 的用户可以访问。更多信息，请参见 link:security-authorization-of-web-endpoints-reference.html[安全授权指南] 。"

#. type: Title ===
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:175
#, fuzzy, no-wrap
msgid "Start and configure the Keycloak server"
msgstr "启动和配置Keycloak服务器"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:178
#, fuzzy
msgid "To start a Keycloak server, use Docker and run the following command:"
msgstr "要启动一个Keycloak服务器，使用Docker并运行以下命令。"

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:182
#, no-wrap
msgid "docker run --name keycloak -e KEYCLOAK_ADMIN=admin -e KEYCLOAK_ADMIN_PASSWORD=admin -p 8180:8080 quay.io/keycloak/keycloak:{keycloak.version} start-dev\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:185
#, fuzzy
msgid "where `keycloak.version` should be set to `17.0.0` or higher."
msgstr "其中 `keycloak.version` ，应设置为 `17.0.0` 或更高。"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:187
#, fuzzy
msgid "You should be able to access your Keycloak Server at http://localhost:8180[localhost:8180]."
msgstr "你应该能够在 link:http://localhost:8180[localhost:8180] 访问你的Keycloak服务器。"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:190
#, fuzzy
msgid "To access the Keycloak Administration Console, log in as the `admin` user.  Username should be `admin` and password `admin`."
msgstr "要访问Keycloak管理控制台，请作为 `admin` 用户登录。用户名应该是 `admin` ，密码是 `admin` 。"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:193
#, fuzzy
msgid "Import the link:{quickstarts-tree-url}/security-openid-connect-web-authentication-quickstart/config/quarkus-realm.json[realm configuration file] to create a new realm.  For more information, see the Keycloak documentation about how to https://www.keycloak.org/docs/latest/server_admin/index.html#_create-realm[create a new realm]."
msgstr "导入{quickstarts-treeurl}/security-openid-connect-web-authentication-quickstart/config/quarkus-realm.json[境界配置文件]来创建一个新境界。欲了解更多信息，请参阅Keycloak文档中关于如何 link:https://www.keycloak.org/docs/latest/server_admin/index.html#_create-realm[创建一个新的境界] 。"

#. type: Title ===
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:194
#, fuzzy, no-wrap
msgid "Run the application in dev and JVM modes"
msgstr "在开发和JVM模式下运行应用程序"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:197
#, fuzzy
msgid "To run the application in a dev mode, use:"
msgstr "要在开发模式下运行应用程序，请使用。"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:201
#, fuzzy
msgid "When you're done playing with dev mode, you can run it as a standard Java application."
msgstr "当你玩完开发模式后，你可以把它作为一个标准的Java应用程序运行。"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:203
#, fuzzy
msgid "First, compile it:"
msgstr "首先，编译它。"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:207
#, fuzzy
msgid "Then, run it:"
msgstr "然后，运行它。"

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:211
#, no-wrap
msgid "java -jar target/quarkus-app/quarkus-run.jar\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:213
#, fuzzy, no-wrap
msgid "Run the application in Native mode"
msgstr "在本地模式下运行应用程序"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:217
#, fuzzy
msgid "This same demo can be compiled into native code.  No modifications are required."
msgstr "这个同样的演示可以被编译成本地代码。不需要进行任何修改。"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:220
#, fuzzy
msgid "This implies that you no longer need to install a JVM on your production environment, as the runtime technology is included in the produced binary, and optimized to run with minimal resource overhead."
msgstr "这意味着你不再需要在你的生产环境中安装JVM，因为运行时技术包含在生产的二进制文件中，并以最小的资源开销优化运行。"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:223
#, fuzzy
msgid "Compilation will take a bit longer, so this step is disabled by default.  You can build again by enabling the native build:"
msgstr "编译会花一点时间，所以这一步默认是禁用的。你可以通过启用本地构建来重新构建。"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:227
#, fuzzy
msgid "After getting a cup of coffee, you can run this binary directly:"
msgstr "在得到一杯咖啡后，你可以直接运行这个二进制。"

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:231
#, no-wrap
msgid "./target/security-openid-connect-web-authentication-quickstart-runner\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:233
#, fuzzy, no-wrap
msgid "Test the application"
msgstr "测试应用程序"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:236
#, fuzzy
msgid "To test the application, open your browser and access the following URL:"
msgstr "要测试应用程序，请打开你的浏览器并访问以下网址。"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:239
#, fuzzy
msgid "http://localhost:8080/tokens[http://localhost:8080/tokens]"
msgstr "link:http://localhost:8080/tokens[http://localhost:8080/tokens]"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:241
#, fuzzy
msgid "If everything is working as expected, you are redirected to the Keycloak server to authenticate."
msgstr "如果一切按预期进行，你会被重定向到Keycloak服务器进行认证。"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:243
#, fuzzy
msgid "To authenticate to the application, type the following credentials when at the Keycloak login page:"
msgstr "为了验证应用程序，在Keycloak登录页面上键入以下凭证。"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:245
#, fuzzy
msgid "Username: *alice*"
msgstr "用户名: *alice* "

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:246
#, fuzzy
msgid "Password: *alice*"
msgstr "密码： *alice* "

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:248
#, fuzzy
msgid "After clicking the `Login` button, you are redirected back to the application."
msgstr "点击 `Login` 按钮后，你会被重新引导到应用程序。"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:250
#, fuzzy
msgid "For more information about writing the integration tests that depend on `Dev Services for Keycloak`, see the xref:security-oidc-code-flow-authentication.adoc#integration-testing-keycloak-devservices[Dev Services for Keycloak] section."
msgstr "关于编写依赖于 `Dev Services for Keycloak` 的集成测试的更多信息，请参阅 link:#integration-testing-keycloak-devservices[Keycloak的开发服务] 部分。"

#. type: Title ==
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:251
#, fuzzy, no-wrap
msgid "Summary"
msgstr "摘要"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:256
#, fuzzy
msgid "Congratulations! You have learned how to set up and use the OIDC authorization code flow mechanism to protect and test application HTTP endpoints.  After you have completed this tutorial, explore xref:security-oidc-bearer-token-authentication.adoc[OIDC Bearer token authentication] and xref:security-authentication-mechanisms.adoc[other authentication mechanisms]."
msgstr "恭喜你！你已经学会了如何设置和使用OIDC授权代码流机制来保护应用程序的HTTP端点。你已经学会了如何设置和使用OIDC授权代码流机制来保护和测试应用程序的HTTP端点。在你完成本教程后，请探索Quarkus中的其他一些安全机制。"

#. type: Title ==
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:257
#, fuzzy, no-wrap
msgid "References"
msgstr "参考文献"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:259
#, fuzzy
msgid "xref:security-overview.adoc[Quarkus Security overview]"
msgstr "link:security-overview-concept.html[Quarkus安全概述]"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:260
#, fuzzy
msgid "xref:security-oidc-code-flow-authentication.adoc[OIDC code flow mechanism for protecting web applications]"
msgstr "link:security-oidc-code-flow-authentication-concept.html[用于保护网络应用的OIDC代码流机制]"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:261
#, fuzzy
msgid "xref:security-openid-connect-providers.adoc[Configuring well-known OpenID Connect Providers]"
msgstr "link:security-openid-connect-providers.html[配置知名的OpenID连接供应商]"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:262
#, fuzzy
msgid "xref:security-openid-connect-client-reference.adoc[OpenID Connect and OAuth2 Client and Filters Reference Guide]"
msgstr "link:security-openid-connect-client-reference.html[OpenID连接和OAuth2客户端和过滤器参考指南]"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:263
#, fuzzy
msgid "xref:security-openid-connect-dev-services.adoc[Dev Services for Keycloak]"
msgstr "link:security-openid-connect-dev-services.html[为Keycloak提供的开发服务]"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:264
#, fuzzy
msgid "xref:security-jwt-build.adoc[Sign and encrypt JWT tokens with SmallRye JWT Build]"
msgstr "link:security-jwt-build.html[用SmallRye JWT Build签署和加密JWT令牌]"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:265
msgid "xref:security-authentication-mechanisms.adoc#oidc-jwt-oauth2-comparison[Choosing between OpenID Connect, SmallRye JWT, and OAuth2 authentication mechanisms]"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:266
msgid "xref:security-keycloak-admin-client.adoc[Quarkus Keycloak Admin Client]"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:267
#, fuzzy
msgid "https://www.keycloak.org/documentation.html[Keycloak Documentation]"
msgstr "link:https://www.keycloak.org/documentation.html[Keycloak文档]"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:268
#, fuzzy
msgid "https://openid.net/connect/[OpenID Connect]"
msgstr "link:https://openid.net/connect/[OpenID连接]"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:269
#, fuzzy
msgid "https://tools.ietf.org/html/rfc7519[JSON Web Token]"
msgstr "link:https://tools.ietf.org/html/rfc7519[JSON网络令牌]"

#, fuzzy
#~ msgid "To learn more about the OIDC authorization code flow mechanism, see xref:security-oidc-code-flow-authentication-concept.adoc[OIDC code flow mechanism for protecting web applications] or to learn about other authentication mechanisms, see xref:security-authentication-mechanisms-concept.adoc#other-supported-authentication-mechanisms[authentication mechanisms]."
#~ msgstr "要了解更多关于OIDC授权代码流机制的信息，请参见 link:security-oidc-code-flow-authentication-concept.html[保护Web应用程序的OIDC代码流机制] ，或了解其他认证机制，请参见 link:security-authentication-mechanisms-concept.html#other-supported-authentication-mechanisms[认证机制] 。"

#, fuzzy
#~ msgid "xref:security-oidc-bearer-authentication-concept.adoc[OIDC Bearer authentication]"
#~ msgstr "link:security-oidc-bearer-authentication-concept.html[OIDC承载认证]"

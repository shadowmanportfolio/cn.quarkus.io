# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-02-10 15:19+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: upstream/_guides/security-basic-authentication-tutorial.adoc:2
#, fuzzy, no-wrap
msgid "Secure a Quarkus application with Basic authentication"
msgstr "用基本认证保护Quarkus应用程序"

#. type: Plain text
#: upstream/_guides/security-basic-authentication-tutorial.adoc:8
#, fuzzy
msgid "Secure your Quarkus application endpoints by combining xref:security-built-in-authentication-support-concept.adoc#basic-auth[Quarkus built-in basic HTTP authentication] with the JPA identity provider to enable role-based access control (RBAC).  The JPA `IdentityProvider` creates a `SecurityIdentity` instance, which is used during user authentication to verify and authorize access requests making your Quarkus application secure."
msgstr "通过将 link:security-built-in-authentication-support-concept.html#basic-auth[Quarkus内置的基本HTTP认证] 与JPA身份提供者结合起来，以实现基于角色的访问控制（RBAC），从而保护你的Quarkus应用端点。JPA `IdentityProvider` 创建了一个 `SecurityIdentity` 实例，在用户认证过程中，它被用来验证和授权访问请求，使你的Quarkus应用程序安全。"

#. type: Plain text
#: upstream/_guides/security-basic-authentication-tutorial.adoc:10
#, fuzzy
msgid "This tutorial prepares you for implementing more advanced security mechanisms in Quarkus, for example, how to use the OpenID Connect (OIDC) authentication mechanism."
msgstr "本教程为你在Quarkus中实现更高级的安全机制做准备，例如，如何使用OpenID Connect（OIDC）认证机制。"

#. type: Title ==
#: upstream/_guides/security-basic-authentication-tutorial.adoc:11
#, fuzzy, no-wrap
msgid "Prerequisites"
msgstr "先决条件"

#. type: Title ==
#: upstream/_guides/security-basic-authentication-tutorial.adoc:15
#, fuzzy, no-wrap
msgid "What you will build"
msgstr "你将建立什么"

#. type: Plain text
#: upstream/_guides/security-basic-authentication-tutorial.adoc:18
#, fuzzy
msgid "The steps in this tutorial guide you through building an application that provides the following endpoints:"
msgstr "本教程中的步骤指导你建立一个提供以下端点的应用程序。"

#. type: Table
#: upstream/_guides/security-basic-authentication-tutorial.adoc:21
#, fuzzy, no-wrap
msgid "Endpoint"
msgstr "端点"

#. type: Table
#: upstream/_guides/security-basic-authentication-tutorial.adoc:22
#, fuzzy, no-wrap
msgid "Description"
msgstr "描述"

#. type: Table
#: upstream/_guides/security-basic-authentication-tutorial.adoc:22
#, fuzzy, no-wrap
msgid "`/api/public`"
msgstr " `/api/public` "

#. type: Table
#: upstream/_guides/security-basic-authentication-tutorial.adoc:23
#, fuzzy, no-wrap
msgid "The `/api/public` endpoint can be accessed anonymously."
msgstr " `/api/public` 端点可以被匿名访问。"

#. type: Table
#: upstream/_guides/security-basic-authentication-tutorial.adoc:23
#, fuzzy, no-wrap
msgid "`/api/admin`"
msgstr " `/api/admin` "

#. type: Table
#: upstream/_guides/security-basic-authentication-tutorial.adoc:25
#, fuzzy, no-wrap
msgid ""
"The `/api/admin` endpoint is protected with role-based access control (RBAC), and only users who have been granted the `admin` role can access it.\n"
"At this endpoint, the `@RolesAllowed` annotation is used to declaratively enforce the access constraint."
msgstr " `/api/admin` 端点受到基于角色的访问控制（RBAC）的保护，只有被授予 `admin` 角色的用户才能访问它。在这个端点， `@RolesAllowed` 注释被用来声明性地执行访问限制。"

#. type: Table
#: upstream/_guides/security-basic-authentication-tutorial.adoc:25
#, fuzzy, no-wrap
msgid "`/api/users/me`"
msgstr " `/api/users/me` "

#. type: Table
#: upstream/_guides/security-basic-authentication-tutorial.adoc:26
#, fuzzy, no-wrap
msgid "The `/api/users/me` endpoint is protected with RBAC and only users that have been granted the `user` role can access it. A JSON document with details about the user is returned as a response."
msgstr " `/api/users/me` 端点受到RBAC的保护，只有被授予 `user` 角色的用户才能访问它。一个包含用户详细信息的JSON文档将作为响应返回。"

#. type: delimited block =
#: upstream/_guides/security-basic-authentication-tutorial.adoc:31
#, fuzzy
msgid "If you just want to examine the code, you can fast-forward to the completed example by using one of the following ways:"
msgstr "如果你只想检查代码，你可以通过以下方式之一快进到完成的例子。"

#. type: delimited block =
#: upstream/_guides/security-basic-authentication-tutorial.adoc:33
#, fuzzy
msgid "Download the {quickstarts-archive-url}[archive]"
msgstr "下载{quickstarts-archive-url}[档案]。"

#. type: delimited block =
#: upstream/_guides/security-basic-authentication-tutorial.adoc:34
#, fuzzy
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`"
msgstr "克隆 Git 仓库。 `git clone {quickstarts-clone-url}` "

#. type: delimited block =
#: upstream/_guides/security-basic-authentication-tutorial.adoc:36
#, fuzzy
msgid "You can find the solution in the `security-jpa-quickstart` {quickstarts-tree-url}/security-jpa-quickstart[directory]."
msgstr "你可以在 `security-jpa-quickstart` {quickstarts-treeurl}/security-jpa-quickstart[目录]中找到解决方案。"

#. type: Title ==
#: upstream/_guides/security-basic-authentication-tutorial.adoc:41
#, fuzzy, no-wrap
msgid "Create a Maven project"
msgstr "创建一个Maven项目"

#. type: Plain text
#: upstream/_guides/security-basic-authentication-tutorial.adoc:45
#, fuzzy
msgid "For Quarkus security to be able to map your security source to JPA entities, ensure that the Maven project that is used in this tutorial includes the `security-jpa` extension.  You can either create a new Maven project with the `security-jpa` extension or you can add the extension to an existing Maven project."
msgstr "为使Quarkus security能够将安全源映射到JPA实体，请确保本教程中使用的Maven项目包含 `security-jpa` 扩展。您可以用 `security-jpa` 扩展创建一个新的Maven项目，也可以将该扩展添加到现有的Maven项目中。"

#. type: Plain text
#: upstream/_guides/security-basic-authentication-tutorial.adoc:47
#, fuzzy
msgid "To create the Maven project, use the following command:"
msgstr "要创建Maven项目，请使用以下命令。"

#. type: delimited block =
#: upstream/_guides/security-basic-authentication-tutorial.adoc:56
#, fuzzy
msgid "xref:hibernate-orm-panache.adoc[Hibernate ORM with Panache] is used to store your user identities but you can also use xref:hibernate-orm.adoc[Hibernate ORM].  You must also add your preferred database connector library.  The instructions in this example tutorial use a PostgreSQL database for the identity store."
msgstr "link:hibernate-orm-panache.html[Hibernate ORM与Panache] 被用来存储你的用户身份，但你也可以使用 link:hibernate-orm.html[Hibernate ORM] 。你还必须添加你喜欢的数据库连接器库。本例教程中的说明使用PostgreSQL数据库作为身份存储。"

#. type: Plain text
#: upstream/_guides/security-basic-authentication-tutorial.adoc:58
#, fuzzy
msgid "To add the `security-jpa` extension to an existing Maven project, run the following command from your project base directory:"
msgstr "要在现有Maven项目中添加 `security-jpa` 扩展，请在项目基本目录下运行以下命令。"

#. type: Title ===
#: upstream/_guides/security-basic-authentication-tutorial.adoc:62
#, fuzzy, no-wrap
msgid "Verification"
msgstr "验证"

#. type: Plain text
#: upstream/_guides/security-basic-authentication-tutorial.adoc:65
#, fuzzy
msgid "When you run either command, the following XML is added to your build file:"
msgstr "当你运行这两条命令时，下面的XML会被添加到你的构建文件中。"

#. type: Block title
#: upstream/_guides/security-basic-authentication-tutorial.adoc:67
#, fuzzy, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_guides/security-basic-authentication-tutorial.adoc:73
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-security-jpa</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_guides/security-basic-authentication-tutorial.adoc:76
#, fuzzy, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_guides/security-basic-authentication-tutorial.adoc:79
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-security-jpa\")\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/security-basic-authentication-tutorial.adoc:81
#, fuzzy, no-wrap
msgid "Write the application"
msgstr "撰写申请书"

#. type: Plain text
#: upstream/_guides/security-basic-authentication-tutorial.adoc:85
#, fuzzy
msgid "Let's start by implementing the `/api/public` endpoint to allow all users access to access the application.  Add a regular JAX-RS resource to your Java source code, as outlined in the following code snippet:"
msgstr "让我们首先实现 `/api/public` 端点，以允许所有用户访问该应用程序。在你的Java源代码中添加一个常规的JAX-RS资源，如下面的代码片断所述。"

#. type: delimited block -
#: upstream/_guides/security-basic-authentication-tutorial.adoc:89
#: upstream/_guides/security-basic-authentication-tutorial.adoc:113
#: upstream/_guides/security-basic-authentication-tutorial.adoc:137
#: upstream/_guides/security-basic-authentication-tutorial.adoc:164
#: upstream/_guides/security-basic-authentication-tutorial.adoc:247
#, no-wrap
msgid "package org.acme.security.jpa;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-basic-authentication-tutorial.adoc:95
#, no-wrap
msgid ""
"import javax.annotation.security.PermitAll;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-basic-authentication-tutorial.adoc:98
#, no-wrap
msgid ""
"@Path(\"/api/public\")\n"
"public class PublicResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-basic-authentication-tutorial.adoc:106
#, no-wrap
msgid ""
"    @GET\n"
"    @PermitAll\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String publicResource() {\n"
"        return \"public\";\n"
"   }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-basic-authentication-tutorial.adoc:109
#, fuzzy
msgid "The source code for the `/api/admin` endpoint is similar but instead you use a `@RolesAllowed` annotation to make sure that only users granted the `admin` role can access the endpoint.  Add a JAX-RS resource with the following `@RolesAllowed` annotation:"
msgstr " `/api/admin` 端点的源代码与此类似，但你使用了一个 `@RolesAllowed` 注解来确保只有被授予 `admin` 角色的用户才能访问该端点。添加一个JAX-RS资源，其注释如下： `@RolesAllowed` 。"

#. type: delimited block -
#: upstream/_guides/security-basic-authentication-tutorial.adoc:119
#, no-wrap
msgid ""
"import javax.annotation.security.RolesAllowed;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-basic-authentication-tutorial.adoc:122
#, no-wrap
msgid ""
"@Path(\"/api/admin\")\n"
"public class AdminResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-basic-authentication-tutorial.adoc:130
#, no-wrap
msgid ""
"    @GET\n"
"    @RolesAllowed(\"admin\")\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String adminResource() {\n"
"         return \"admin\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-basic-authentication-tutorial.adoc:133
#, fuzzy
msgid "Finally, implement the `/api/users/me` endpoint. As you can see from the source code example below, we are trusting only users with the `user` role.  We are also using `SecurityContext` to get access to the currently authenticated `Principal`, and we return the user name, all of which is loaded from the database."
msgstr "最后，实现 `/api/users/me` 端点。从下面的源代码例子可以看出，我们只信任具有 `user` 角色的用户。我们还使用 `SecurityContext` ，以获得对当前认证的 `Principal` 的访问，并且我们返回用户名，所有这些都是从数据库中加载。"

#. type: delimited block -
#: upstream/_guides/security-basic-authentication-tutorial.adoc:144
#, no-wrap
msgid ""
"import javax.annotation.security.RolesAllowed;\n"
"import javax.inject.Inject;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.core.Context;\n"
"import javax.ws.rs.core.SecurityContext;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-basic-authentication-tutorial.adoc:147
#, no-wrap
msgid ""
"@Path(\"/api/users\")\n"
"public class UserResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-basic-authentication-tutorial.adoc:155
#, no-wrap
msgid ""
"    @GET\n"
"    @RolesAllowed(\"user\")\n"
"    @Path(\"/me\")\n"
"    public String me(@Context SecurityContext securityContext) {\n"
"        return securityContext.getUserPrincipal().getName();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/security-basic-authentication-tutorial.adoc:157
#, fuzzy, no-wrap
msgid "Define the user entity"
msgstr "定义用户实体"

#. type: Plain text
#: upstream/_guides/security-basic-authentication-tutorial.adoc:160
#, fuzzy
msgid "You can now describe how you want security information to be stored in the model by adding annotations to the `user` entity, as outlined in the following code snippet:"
msgstr "现在你可以通过向 `user` 实体添加注解来描述你希望安全信息如何被存储在模型中，如下面的代码片断所述。"

#. type: delimited block -
#: upstream/_guides/security-basic-authentication-tutorial.adoc:167
#, no-wrap
msgid ""
"import javax.persistence.Entity;\n"
"import javax.persistence.Table;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-basic-authentication-tutorial.adoc:174
#, no-wrap
msgid ""
"import io.quarkus.hibernate.orm.panache.PanacheEntity;\n"
"import io.quarkus.elytron.security.common.BcryptUtil;\n"
"import io.quarkus.security.jpa.Password;\n"
"import io.quarkus.security.jpa.Roles;\n"
"import io.quarkus.security.jpa.UserDefinition;\n"
"import io.quarkus.security.jpa.Username;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-basic-authentication-tutorial.adoc:185
#, no-wrap
msgid ""
"@Entity\n"
"@Table(name = \"test_user\")\n"
"@UserDefinition <1>\n"
"public class User extends PanacheEntity {\n"
"    @Username <2>\n"
"    public String username;\n"
"    @Password <3>\n"
"    public String password;\n"
"    @Roles <4>\n"
"    public String role;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-basic-authentication-tutorial.adoc:200
#, no-wrap
msgid ""
"    /**\n"
"     * Adds a new user to the database\n"
"     * @param username the username\n"
"     * @param password the unencrypted password (it will be encrypted with bcrypt)\n"
"     * @param role the comma-separated roles\n"
"     */\n"
"    public static void add(String username, String password, String role) { <5>\n"
"        User user = new User();\n"
"        user.username = username;\n"
"        user.password = BcryptUtil.bcryptHash(password);\n"
"        user.role = role;\n"
"        user.persist();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-basic-authentication-tutorial.adoc:204
#, fuzzy
msgid "The `security-jpa` extension initializes only if there is a single entity annotated with `@UserDefinition`."
msgstr " `security-jpa` 扩展只在有一个实体被注解为 `@UserDefinition` 的情况下才会初始化。"

#. type: Plain text
#: upstream/_guides/security-basic-authentication-tutorial.adoc:206
#, fuzzy
msgid "The `@UserDefinition` annotation must be present on a single entity and can be either a regular Hibernate ORM entity or a Hibernate ORM with Panache entity."
msgstr " `@UserDefinition` 注解必须出现在一个实体上，可以是普通的Hibernate ORM实体，也可以是带有Panache的Hibernate ORM实体。"

#. type: Plain text
#: upstream/_guides/security-basic-authentication-tutorial.adoc:207
#, fuzzy
msgid "Indicates the field used for the user name."
msgstr "表示用于用户名的字段。"

#. type: Plain text
#: upstream/_guides/security-basic-authentication-tutorial.adoc:208
#, fuzzy
msgid "Indicates the field used for the password, which defaults to using bcrypt hashed passwords but you can also configure it for plain text or custom passwords."
msgstr "表示用于密码的字段，默认使用bcrypt散列密码，但你也可以将其配置为纯文本或自定义密码。"

#. type: Plain text
#: upstream/_guides/security-basic-authentication-tutorial.adoc:209
#, fuzzy
msgid "This indicates the comma-separated list of roles added to the target principal representation attributes."
msgstr "这表示以逗号分隔的添加到目标委托人表述属性中的角色列表。"

#. type: Plain text
#: upstream/_guides/security-basic-authentication-tutorial.adoc:210
#, fuzzy
msgid "This method allows us to add users while hashing the password with the proper bcrypt hash."
msgstr "这种方法允许我们在添加用户的同时，用适当的bcrypt哈希值对密码进行加密。"

#. type: Title ===
#: upstream/_guides/security-basic-authentication-tutorial.adoc:211
#, fuzzy, no-wrap
msgid "Configure the application"
msgstr "配置应用程序"

#. type: Plain text
#: upstream/_guides/security-basic-authentication-tutorial.adoc:214
#, fuzzy
msgid "Enable xref:security-built-in-authentication-support-concept.adoc#basic-auth[Quarkus built-in basic HTTP authentication] by setting the `quarkus.http.auth.basic` property to `true`:"
msgstr "通过将 `quarkus.http.auth.basic` 属性设置为 `true` ，启用 link:security-built-in-authentication-support-concept.html#basic-auth[Quarkus内置的基本HTTP认证] 。"

#. type: Plain text
#: upstream/_guides/security-basic-authentication-tutorial.adoc:216
#, fuzzy
msgid "`quarkus.http.auth.basic`=true`"
msgstr " `quarkus.http.auth.basic` =true`。"

#. type: delimited block =
#: upstream/_guides/security-basic-authentication-tutorial.adoc:221
#, fuzzy
msgid "When secure access is required and no other authentication mechanisms are enabled, xref:security-built-in-authentication-support-concept.adoc#basic-auth[Quarkus built-in basic HTTP authentication] is the fallback authentication mechanism.  Therefore, in this tutorial, you do not need to set the property `quarkus.http.auth.basic=true`."
msgstr "当需要安全访问并且没有启用其他认证机制时， link:security-built-in-authentication-support-concept.html#basic-auth[Quarkus内置的基本HTTP认证] 是后备认证机制。因此，在本教程中，你不需要设置属性 `quarkus.http.auth.basic=true` 。"

#. type: Plain text
#: upstream/_guides/security-basic-authentication-tutorial.adoc:224
#, fuzzy
msgid "Configure at least one data source so that the `security-jpa` extension can access your database."
msgstr "配置至少一个数据源，以便 `security-jpa` 扩展可以访问你的数据库。"

#. type: delimited block -
#: upstream/_guides/security-basic-authentication-tutorial.adoc:228
#, no-wrap
msgid "quarkus.http.auth.basic=true\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-basic-authentication-tutorial.adoc:233
#, no-wrap
msgid ""
"quarkus.datasource.db-kind=postgresql\n"
"quarkus.datasource.username=quarkus\n"
"quarkus.datasource.password=quarkus\n"
"quarkus.datasource.jdbc.url=jdbc:postgresql:security_jpa\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-basic-authentication-tutorial.adoc:235
#: upstream/_guides/security-basic-authentication-tutorial.adoc:297
#, no-wrap
msgid "quarkus.hibernate-orm.database.generation=drop-and-create\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-basic-authentication-tutorial.adoc:238
#, fuzzy
msgid "To initialize the database with users and roles, implement the `Startup` class, as outlined in the following code snippet:"
msgstr "为了用用户和角色来初始化数据库，请实现 `Startup` 类，如下面的代码片段中所述。"

#. type: delimited block =
#: upstream/_guides/security-basic-authentication-tutorial.adoc:242
#, fuzzy
msgid "In this tutorial, a PostgreSQL database is used for the identity store. Hibernate ORM automatically creates the database schema on startup (change this in production)."
msgstr "在本教程中，身份存储使用的是PostgreSQL数据库。Hibernate ORM在启动时自动创建数据库模式（在生产中改变这一点）。"

#. type: delimited block -
#: upstream/_guides/security-basic-authentication-tutorial.adoc:251
#, no-wrap
msgid ""
"import javax.enterprise.event.Observes;\n"
"import javax.inject.Singleton;\n"
"import javax.transaction.Transactional;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-basic-authentication-tutorial.adoc:253
#, no-wrap
msgid "import io.quarkus.runtime.StartupEvent;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-basic-authentication-tutorial.adoc:265
#, no-wrap
msgid ""
"@Singleton\n"
"public class Startup {\n"
"    @Transactional\n"
"    public void loadUsers(@Observes StartupEvent evt) {\n"
"        // reset and load all test users\n"
"        User.deleteAll();\n"
"        User.add(\"admin\", \"admin\", \"admin\");\n"
"        User.add(\"user\", \"user\", \"user\");\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-basic-authentication-tutorial.adoc:268
#, fuzzy
msgid "The application is now protected and the user identities are provided by the specified database."
msgstr "现在应用程序受到保护，用户身份由指定的数据库提供。"

#. type: delimited block =
#: upstream/_guides/security-basic-authentication-tutorial.adoc:273
#, fuzzy
msgid "In a production environment, do not store plain text passwords.  As a result, the `security-jpa` defaults to using bcrypt-hashed passwords."
msgstr "在生产环境中，不要存储纯文本密码。因此， `security-jpa` 默认为使用bcrypt-hashed密码。"

#. type: Title ==
#: upstream/_guides/security-basic-authentication-tutorial.adoc:275
#, fuzzy, no-wrap
msgid "Test your application"
msgstr "测试你的应用程序"

#. type: Title ===
#: upstream/_guides/security-basic-authentication-tutorial.adoc:277
#, fuzzy, no-wrap
msgid "Use Dev Services for PostgreSQL to test your application"
msgstr "使用PostgreSQL的开发服务来测试你的应用程序"

#. type: Plain text
#: upstream/_guides/security-basic-authentication-tutorial.adoc:282
#, fuzzy
msgid "Add the integration tests before you run your application in production mode."
msgstr "在你以生产模式运行你的应用程序之前，添加集成测试。"

#. type: Plain text
#: upstream/_guides/security-basic-authentication-tutorial.adoc:285
#, fuzzy
msgid "Use xref:https://quarkus.io/guides/dev-services#databases[Dev Services for PostgreSQL] for the integration testing of your application in JVM and native modes."
msgstr "使用 link:https://quarkus.io/guides/dev-services.html#databases[Dev Services for PostgreSQL] 在JVM和本地模式下对你的应用程序进行集成测试。"

#. type: Plain text
#: upstream/_guides/security-basic-authentication-tutorial.adoc:288
#, fuzzy
msgid "The following properties configuration demonstrates how you can enable PostgreSQL testing to run in production (`prod`) mode only.  In this scenario, `Dev Services for PostgreSQL` launches and configures a `PostgreSQL` test container."
msgstr "下面的属性配置演示了如何使PostgreSQL测试只在生产 ( `prod` ) 模式下运行。在这种情况下， `Dev Services for PostgreSQL` 启动并配置一个 `PostgreSQL` 测试容器。"

#. type: delimited block -
#: upstream/_guides/security-basic-authentication-tutorial.adoc:295
#, no-wrap
msgid ""
"%prod.quarkus.datasource.db-kind=postgresql\n"
"%prod.quarkus.datasource.username=quarkus\n"
"%prod.quarkus.datasource.password=quarkus\n"
"%prod.quarkus.datasource.jdbc.url=jdbc:postgresql:elytron_security_jpa\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-basic-authentication-tutorial.adoc:300
#, fuzzy
msgid "If you add the `%prod.` profile prefix, data source properties are not visible to `Dev Services for PostgreSQL` and are only observed by an application running in production mode."
msgstr "如果你添加 `%prod.` profile前缀，数据源属性对 `Dev Services for PostgreSQL` 不可见，只有在生产模式下运行的应用程序才能观察到。"

#. type: Plain text
#: upstream/_guides/security-basic-authentication-tutorial.adoc:302
#, fuzzy
msgid "To write the integration test, use the following code sample:"
msgstr "要编写集成测试，请使用以下代码示例。"

#. type: delimited block -
#: upstream/_guides/security-basic-authentication-tutorial.adoc:306
#, no-wrap
msgid "package org.acme.elytron.security.jpa;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-basic-authentication-tutorial.adoc:310
#, no-wrap
msgid ""
"import static io.restassured.RestAssured.get;\n"
"import static io.restassured.RestAssured.given;\n"
"import static org.hamcrest.core.Is.is;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-basic-authentication-tutorial.adoc:313
#, no-wrap
msgid ""
"import org.apache.http.HttpStatus;\n"
"import org.junit.jupiter.api.Test;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-basic-authentication-tutorial.adoc:315
#, no-wrap
msgid "import io.quarkus.test.junit.QuarkusTest;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-basic-authentication-tutorial.adoc:318
#, no-wrap
msgid ""
"@QuarkusTest\n"
"public class JpaSecurityRealmTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-basic-authentication-tutorial.adoc:324
#, no-wrap
msgid ""
"    @Test\n"
"    void shouldAccessPublicWhenAnonymous() {\n"
"        get(\"/api/public\")\n"
"                .then()\n"
"                .statusCode(HttpStatus.SC_OK);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-basic-authentication-tutorial.adoc:326
#: upstream/_guides/security-basic-authentication-tutorial.adoc:334
#: upstream/_guides/security-basic-authentication-tutorial.adoc:345
#, no-wrap
msgid "    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-basic-authentication-tutorial.adoc:332
#, no-wrap
msgid ""
"    @Test\n"
"    void shouldNotAccessAdminWhenAnonymous() {\n"
"        get(\"/api/admin\")\n"
"                .then()\n"
"                .statusCode(HttpStatus.SC_UNAUTHORIZED);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-basic-authentication-tutorial.adoc:343
#, no-wrap
msgid ""
"    @Test\n"
"    void shouldAccessAdminWhenAdminAuthenticated() {\n"
"        given()\n"
"                .auth().preemptive().basic(\"admin\", \"admin\")\n"
"                .when()\n"
"                .get(\"/api/admin\")\n"
"                .then()\n"
"                .statusCode(HttpStatus.SC_OK);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-basic-authentication-tutorial.adoc:355
#, no-wrap
msgid ""
"    @Test\n"
"    void shouldNotAccessUserWhenAdminAuthenticated() {\n"
"        given()\n"
"                .auth().preemptive().basic(\"admin\", \"admin\")\n"
"                .when()\n"
"                .get(\"/api/users/me\")\n"
"                .then()\n"
"                .statusCode(HttpStatus.SC_FORBIDDEN);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-basic-authentication-tutorial.adoc:367
#, no-wrap
msgid ""
"    @Test\n"
"    void shouldAccessUserAndGetIdentityWhenUserAuthenticated() {\n"
"        given()\n"
"                .auth().preemptive().basic(\"user\", \"user\")\n"
"                .when()\n"
"                .get(\"/api/users/me\")\n"
"                .then()\n"
"                .statusCode(HttpStatus.SC_OK)\n"
"                .body(is(\"user\"));\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-basic-authentication-tutorial.adoc:370
#, fuzzy
msgid "As you can see in this code sample, you do not need to start the test container from the test code."
msgstr "正如你在这个代码示例中看到的，你不需要从测试代码中启动测试容器。"

#. type: delimited block =
#: upstream/_guides/security-basic-authentication-tutorial.adoc:376
#, fuzzy
msgid "If you start your application in dev mode, `Dev Services for PostgreSQL` launches a `PostgreSQL` `devmode` container so that you can start developing your application.  While developing your application, you can also start to add tests one by one and run them by using the xref:continuous-testing.adoc[Continuous Testing] feature.  `Dev Services for PostgreSQL` supports testing while you develop by providing a separate `PostgreSQL` test container that does not conflict with the `devmode` container."
msgstr "如果你在开发模式下启动你的应用程序， `Dev Services for PostgreSQL` 会启动一个 `PostgreSQL` `devmode` 容器，这样你就可以开始开发你的应用程序。在开发你的应用程序时，你也可以开始一个一个地添加测试，并通过使用 link:continuous-testing.html[持续测试] 功能来运行它们。 `Dev Services for PostgreSQL` ，通过提供一个单独的 `PostgreSQL` 测试容器，与 `devmode` 容器不冲突，从而支持在你开发时进行测试。"

#. type: Title ===
#: upstream/_guides/security-basic-authentication-tutorial.adoc:378
#, fuzzy, no-wrap
msgid "Use `curl` or a browser to test your application"
msgstr "使用 `curl` 或浏览器来测试你的应用程序"

#. type: Plain text
#: upstream/_guides/security-basic-authentication-tutorial.adoc:381
#, fuzzy
msgid "Use the following example to start the PostgreSQL server:"
msgstr "使用下面的例子来启动PostgreSQL服务器。"

#. type: delimited block -
#: upstream/_guides/security-basic-authentication-tutorial.adoc:386
#, no-wrap
msgid ""
"docker run --rm=true --name security-getting-started -e POSTGRES_USER=quarkus \\\n"
"           -e POSTGRES_PASSWORD=quarkus -e POSTGRES_DB=elytron_security_jpa \\\n"
"           -p 5432:5432 postgres:14.1\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/security-basic-authentication-tutorial.adoc:387
#, fuzzy, no-wrap
msgid "Compile and run the application"
msgstr "编译和运行应用程序"

#. type: Plain text
#: upstream/_guides/security-basic-authentication-tutorial.adoc:390
#, fuzzy
msgid "Compile and run your Quarkus application by using one of the following methods:"
msgstr "通过使用以下方法之一编译并运行你的Quarkus应用程序。"

#. type: Title ====
#: upstream/_guides/security-basic-authentication-tutorial.adoc:391
#, fuzzy, no-wrap
msgid "JVM mode"
msgstr "JVM模式"

#. type: Plain text
#: upstream/_guides/security-basic-authentication-tutorial.adoc:396
#, fuzzy
msgid "Compile the application: Run the application:"
msgstr "编译该应用程序。运行该应用程序。"

#. type: delimited block -
#: upstream/_guides/security-basic-authentication-tutorial.adoc:400
#, no-wrap
msgid "java -jar target/quarkus-app/quarkus-run.jar\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/security-basic-authentication-tutorial.adoc:402
#, fuzzy, no-wrap
msgid "Native mode"
msgstr "本地模式"

#. type: Plain text
#: upstream/_guides/security-basic-authentication-tutorial.adoc:405
#, fuzzy
msgid "Compile the application:"
msgstr "编译应用程序。"

#. type: Plain text
#: upstream/_guides/security-basic-authentication-tutorial.adoc:409
#, fuzzy
msgid "Run the application:"
msgstr "运行该应用程序。"

#. type: delimited block -
#: upstream/_guides/security-basic-authentication-tutorial.adoc:412
#, no-wrap
msgid "./target/security-jpa-quickstart-runner\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/security-basic-authentication-tutorial.adoc:414
#, fuzzy, no-wrap
msgid "Access and test the application security"
msgstr "访问和测试应用程序的安全性"

#. type: Plain text
#: upstream/_guides/security-basic-authentication-tutorial.adoc:418
#, fuzzy
msgid "When your application is running, you can access your application by using one of the following `curl` commands.  You can also access the same endpoint URLs by using a browser."
msgstr "当你的应用程序正在运行时，你可以通过使用以下 `curl` 命令来访问你的应用程序。你也可以通过使用浏览器来访问相同的端点URL。"

#. type: Plain text
#: upstream/_guides/security-basic-authentication-tutorial.adoc:420
#: upstream/_guides/security-basic-authentication-tutorial.adoc:431
#, fuzzy
msgid "Connect to a protected endpoint anonymously:"
msgstr "匿名连接到受保护的端点。"

#. type: delimited block -
#: upstream/_guides/security-basic-authentication-tutorial.adoc:426
#, no-wrap
msgid ""
"$ curl -i -X GET http://localhost:8080/api/public\n"
"HTTP/1.1 200 OK\n"
"Content-Length: 6\n"
"Content-Type: text/plain;charset=UTF-8\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-basic-authentication-tutorial.adoc:428
#, fuzzy, no-wrap
msgid "public%\n"
msgstr " `/api/public` "

#. type: delimited block -
#: upstream/_guides/security-basic-authentication-tutorial.adoc:438
#, no-wrap
msgid ""
"$ curl -i -X GET http://localhost:8080/api/admin\n"
"HTTP/1.1 401 Unauthorized\n"
"Content-Length: 14\n"
"Content-Type: text/html;charset=UTF-8\n"
"WWW-Authenticate: Basic\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-basic-authentication-tutorial.adoc:440
#, no-wrap
msgid "Not authorized%\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/security-basic-authentication-tutorial.adoc:445
#, fuzzy
msgid "When you use a browser to anonymously connect to a protected resource, a basic authentication form displays prompting you to enter credentials."
msgstr "当您使用浏览器匿名连接到受保护的资源时，会显示一个基本认证表格，提示您输入凭证。"

#. type: Plain text
#: upstream/_guides/security-basic-authentication-tutorial.adoc:448
#, fuzzy
msgid "Connect to a protected endpoint as an authorized user:"
msgstr "作为授权用户连接到受保护的端点。"

#. type: delimited block -
#: upstream/_guides/security-basic-authentication-tutorial.adoc:455
#, no-wrap
msgid ""
"$ curl -i -X GET -u admin:admin http://localhost:8080/api/admin\n"
"HTTP/1.1 200 OK\n"
"Content-Length: 5\n"
"Content-Type: text/plain;charset=UTF-8\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-basic-authentication-tutorial.adoc:457
#, no-wrap
msgid "admin%\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/security-basic-authentication-tutorial.adoc:459
#, fuzzy, no-wrap
msgid "Results"
msgstr "结果"

#. type: Plain text
#: upstream/_guides/security-basic-authentication-tutorial.adoc:463
#, fuzzy
msgid "When you provide the credentials of an authorized user, for example, `admin:admin`, the JPA security extension authenticates and loads the roles of the user.  The `admin` user is authorized to access the protected resources."
msgstr "当你提供一个授权用户的凭证，例如： `admin:admin` ，JPA安全扩展会认证并加载该用户的角色。 `admin` 的用户被授权访问受保护的资源。"

#. type: Plain text
#: upstream/_guides/security-basic-authentication-tutorial.adoc:465
#, fuzzy
msgid "If a resource is protected with `@RolesAllowed(\"user\")`, the user `admin` is not authorized to access the resource because it is not assigned to the \"user\" role, as outlined in the following shell example:"
msgstr "如果一个资源是用 `@RolesAllowed(\"user\")` 保护的，用户 `admin` 没有被授权访问该资源，因为它没有被分配到 \"用户 \"角色，正如下面的shell例子中所概述的。"

#. type: delimited block -
#: upstream/_guides/security-basic-authentication-tutorial.adoc:472
#, no-wrap
msgid ""
"$ curl -i -X GET -u admin:admin http://localhost:8080/api/users/me\n"
"HTTP/1.1 403 Forbidden\n"
"Content-Length: 34\n"
"Content-Type: text/html;charset=UTF-8\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-basic-authentication-tutorial.adoc:474
#, no-wrap
msgid "Forbidden%\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-basic-authentication-tutorial.adoc:477
#, fuzzy
msgid "Finally, the user name `user` is authorized and the security context contains the principal details, for example, the user name."
msgstr "最后，用户名 `user` 被授权，安全上下文包含了主要细节，例如，用户名。"

#. type: delimited block -
#: upstream/_guides/security-basic-authentication-tutorial.adoc:484
#, no-wrap
msgid ""
"$ curl -i -X GET -u user:user http://localhost:8080/api/users/me\n"
"HTTP/1.1 200 OK\n"
"Content-Length: 4\n"
"Content-Type: text/plain;charset=UTF-8\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-basic-authentication-tutorial.adoc:486
#, no-wrap
msgid "user%\n"
msgstr ""

#.  The following section needs to be moved as SMEs confirmed that it does not really fit in the new content here. In the next phase of refactoring, consider moving this section into a dedicated concept/reference topic.
#. type: Title ==
#: upstream/_guides/security-basic-authentication-tutorial.adoc:492
#, fuzzy, no-wrap
msgid "Quarkus Security JPA information"
msgstr "Quarkus安全JPA信息"

#. type: Plain text
#: upstream/_guides/security-basic-authentication-tutorial.adoc:495
#, fuzzy
msgid "Now that you have successfully run and tested the security quick start project, you are ready to explore more security features of Quarkus Security and the JPA identity store."
msgstr "现在你已经成功运行并测试了安全快速启动项目，你已经准备好探索Quarkus Security和JPA身份存储的更多安全功能。"

#. type: Title ===
#: upstream/_guides/security-basic-authentication-tutorial.adoc:496
#, fuzzy, no-wrap
msgid "Supported model types"
msgstr "支持的模型类型"

#. type: Plain text
#: upstream/_guides/security-basic-authentication-tutorial.adoc:499
#, fuzzy
msgid "The `@UserDefinition` class must be a JPA entity (with Panache or not)."
msgstr " `@UserDefinition` 类必须是一个JPA实体（有无Panache）。"

#. type: Plain text
#: upstream/_guides/security-basic-authentication-tutorial.adoc:500
#, fuzzy
msgid "The `@Username` and `@Password` field types must be of type `String`."
msgstr " `@Username` 和 `@Password` 字段类型必须是 `String` 类型。"

#. type: Plain text
#: upstream/_guides/security-basic-authentication-tutorial.adoc:501
#, fuzzy
msgid "The `@Roles` field must either be of type `String` or `Collection<String>` or alternately a `Collection<X>` where `X` is an entity class with one `String` field annotated with the `@RolesValue` annotation."
msgstr " `@Roles` 字段必须是 `String` 或 `Collection<String>` 类型，或者是一个 `Collection<X>` ，其中 `X` 是一个实体类，有一个 `String` 字段，并带有 `@RolesValue` 注解。"

#. type: Plain text
#: upstream/_guides/security-basic-authentication-tutorial.adoc:502
#, fuzzy
msgid "Each `String` role element type will be parsed as a comma-separated list of roles."
msgstr "每个 `String` 角色元素类型将被解析为一个以逗号分隔的角色列表。"

#. type: Title ===
#: upstream/_guides/security-basic-authentication-tutorial.adoc:503
#, fuzzy, no-wrap
msgid "Storing roles in another entity"
msgstr "在另一个实体中存储角色"

#. type: Plain text
#: upstream/_guides/security-basic-authentication-tutorial.adoc:506
#, fuzzy
msgid "Use the following sample to store roles inside another entity:"
msgstr "使用下面的例子来在另一个实体内存储角色。"

#. type: delimited block -
#: upstream/_guides/security-basic-authentication-tutorial.adoc:515
#, no-wrap
msgid ""
"@UserDefinition\n"
"@Table(name = \"test_user\")\n"
"@Entity\n"
"public class User extends PanacheEntity {\n"
"    @Username\n"
"    public String name;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-basic-authentication-tutorial.adoc:518
#, no-wrap
msgid ""
"    @Password\n"
"    public String pass;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-basic-authentication-tutorial.adoc:523
#, no-wrap
msgid ""
"    @ManyToMany\n"
"    @Roles\n"
"    public List<Role> roles = new ArrayList<>();\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-basic-authentication-tutorial.adoc:526
#, no-wrap
msgid ""
"@Entity\n"
"public class Role extends PanacheEntity {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-basic-authentication-tutorial.adoc:529
#, no-wrap
msgid ""
"    @ManyToMany(mappedBy = \"roles\")\n"
"    public List<ExternalRolesUserEntity> users;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-basic-authentication-tutorial.adoc:533
#, no-wrap
msgid ""
"    @RolesValue\n"
"    public String role;\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/security-basic-authentication-tutorial.adoc:535
#, fuzzy, no-wrap
msgid "Password storage and hashing"
msgstr "密码存储和散列"

#. type: Plain text
#: upstream/_guides/security-basic-authentication-tutorial.adoc:539
#, fuzzy
msgid "By default, passwords are stored and hashed by using https://en.wikipedia.org/wiki/Bcrypt[bcrypt] under the https://en.wikipedia.org/wiki/Crypt_(C)[Modular Crypt Format] (MCF)."
msgstr "默认情况下，密码是通过使用 link:https://en.wikipedia.org/wiki/Crypt_©[模块化加密格式] （MCF）下的 link:https://en.wikipedia.org/wiki/Bcrypt[bcrypt] 进行存储和散列。"

#. type: Plain text
#: upstream/_guides/security-basic-authentication-tutorial.adoc:543
#, fuzzy
msgid "When you need to create a hashed password we provide the convenient `String BcryptUtil.bcryptHash(String password)` function, which defaults to creating a random salt and hashing in 10 iterations.  You can also specify the number of iterations and the salt."
msgstr "当你需要创建一个散列的密码时，我们提供了方便的 `String BcryptUtil.bcryptHash(String password)` 功能，它默认为创建一个随机的盐和10次迭代的散列。你也可以指定迭代的数量和盐。"

#. type: Plain text
#: upstream/_guides/security-basic-authentication-tutorial.adoc:545
#, fuzzy
msgid "When you use MCF, you don't need dedicated columns to store the hashing algorithm, the iterations count, or the salt because they are all stored in the hashed value."
msgstr "当你使用MCF时，你不需要专门的列来存储散列算法、迭代次数或盐，因为它们都被存储在散列值中。"

#. type: Plain text
#: upstream/_guides/security-basic-authentication-tutorial.adoc:547
#, fuzzy
msgid "You can also store passwords by using a different hashing algorithm, for example, `@Password(value = PasswordType.CUSTOM, provider = CustomPasswordProvider.class)`, as outlined in the following code snippet:"
msgstr "你也可以通过使用不同的散列算法来存储密码，例如， `@Password(value = PasswordType.CUSTOM, provider = CustomPasswordProvider.class)` ，如下面的代码片断所述。"

#. type: delimited block -
#: upstream/_guides/security-basic-authentication-tutorial.adoc:557
#, no-wrap
msgid ""
"@UserDefinition\n"
"@Table(name = \"test_user\")\n"
"@Entity\n"
"public class CustomPasswordUserEntity {\n"
"    @Id\n"
"    @GeneratedValue\n"
"    public Long id;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-basic-authentication-tutorial.adoc:561
#, no-wrap
msgid ""
"    @Column(name = \"username\")\n"
"    @Username\n"
"    public String name;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-basic-authentication-tutorial.adoc:565
#, no-wrap
msgid ""
"    @Column(name = \"password\")\n"
"    @Password(value = PasswordType.CUSTOM, provider = CustomPasswordProvider.class)\n"
"    public String pass;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-basic-authentication-tutorial.adoc:569
#, no-wrap
msgid ""
"    @Roles\n"
"    public String role;\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-basic-authentication-tutorial.adoc:577
#, no-wrap
msgid ""
"public class CustomPasswordProvider implements PasswordProvider {\n"
"    @Override\n"
"    public Password getPassword(String pass) {\n"
"        byte[] digest = DatatypeConverter.parseHexBinary(pass);\n"
"        return SimpleDigestPassword.createRaw(SimpleDigestPassword.ALGORITHM_SIMPLE_DIGEST_SHA_256, digest);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-basic-authentication-tutorial.adoc:581
#, fuzzy
msgid "In a test environment, you can also store passwords in plain text by using `@Password(PasswordType.CLEAR)`.  For applications running in production, do not store passwords in plain text."
msgstr "在测试环境中，你也可以通过使用 `@Password(PasswordType.CLEAR)` ，以纯文本方式存储密码。对于在生产中运行的应用程序，不要以纯文本方式存储密码。"

#. type: Title ==
#: upstream/_guides/security-basic-authentication-tutorial.adoc:582
#, fuzzy, no-wrap
msgid "What's next"
msgstr "下一步是什么"

#. type: Plain text
#: upstream/_guides/security-basic-authentication-tutorial.adoc:586
#, fuzzy
msgid "Congratulations! You have learned how to create and test a secure Quarkus application by combining the xref:security-built-in-authentication-support-concept.adoc#basic-auth[Quarkus built-in basic HTTP authentication] with the JPA identity provider."
msgstr "恭喜你！你已经学会了如何通过结合Quarkus内置的基本HTTP认证和JPA身份提供者来创建和测试一个安全的Quarkus应用程序。你已经学会了如何通过结合 link:security-built-in-authentication-support-concept.html#basic-auth[Quarkus内置的基本HTTP认证] 和JPA身份提供者来创建和测试一个安全的Quarkus应用程序。"

#. type: Plain text
#: upstream/_guides/security-basic-authentication-tutorial.adoc:589
#, fuzzy
msgid "After you have completed this tutorial, explore some of the more advanced security mechanisms in Quarkus.  Use the following information to learn how you can securely use `OpenID Connect` to provide secure single sign-on access to your Quarkus endpoints:"
msgstr "在你完成本教程后，探索Quarkus中一些更高级的安全机制。使用下面的信息来学习如何安全地使用 `OpenID Connect` ，为你的Quarkus终端提供安全的单点登录访问。"

#. type: Plain text
#: upstream/_guides/security-basic-authentication-tutorial.adoc:591
#: upstream/_guides/security-basic-authentication-tutorial.adoc:598
#, fuzzy
msgid "xref:security-openid-connect.adoc[Using OpenID Connect (OIDC) to Protect Service Applications using Bearer Token Authorization]"
msgstr "link:security-openid-connect.html[使用OpenID连接（OIDC）来保护使用承载令牌授权的服务应用]"

#. type: Plain text
#: upstream/_guides/security-basic-authentication-tutorial.adoc:593
#: upstream/_guides/security-basic-authentication-tutorial.adoc:600
#, fuzzy
msgid "xref:security-openid-connect-web-authentication.adoc[Using OpenID Connect (OIDC) to Protect Web Applications using Authorization Code Flow ]"
msgstr "link:security-openid-connect.html[使用OpenID连接（OIDC）来保护使用承载令牌授权的服务应用]"

#. type: Title ==
#: upstream/_guides/security-basic-authentication-tutorial.adoc:594
#, no-wrap
msgid "References"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-basic-authentication-tutorial.adoc:597
msgid "xref:security-overview-concept.adoc[Quarkus Security overview]"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-basic-authentication-tutorial.adoc:601
msgid "xref:hibernate-orm-panache.adoc[Simplified Hibernate ORM with Panache]"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-basic-authentication-tutorial.adoc:601
msgid "xref:hibernate-orm.adoc[Using Hibernate ORM and JPA]"
msgstr ""

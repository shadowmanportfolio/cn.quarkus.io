# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-02-10 14:15+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: upstream/_guides/security-architecture-concept.adoc:7
#, fuzzy, no-wrap
msgid "Quarkus Security architecture"
msgstr "Quarkus安全架构"

#. type: Plain text
#: upstream/_guides/security-architecture-concept.adoc:12
#, fuzzy
msgid "The Quarkus Security architecture provides several built-in authentication mechanisms. The `HttpAuthenticationMechanism` interface is the main entry mechanism for securing HTTP applications in Quarkus. Quarkus Security is also highly customizable."
msgstr "Quarkus安全架构提供了几种内置的认证机制。 `HttpAuthenticationMechanism` 接口是Quarkus中保证HTTP应用安全的主要入口机制。Quarkus Security也是高度可定制的。"

#. type: Title ==
#: upstream/_guides/security-architecture-concept.adoc:13
#, fuzzy, no-wrap
msgid "Core components of Quarkus Security"
msgstr "Quarkus Security的核心组件"

#. type: Plain text
#: upstream/_guides/security-architecture-concept.adoc:17
#, fuzzy
msgid "Quarkus Security uses `HttpAuthenticationMechanism` to extract the authentication credentials from the HTTP request and delegates them to `IdentityProvider` to convert the credentials to `SecurityIdentity`.  For example, the credentials can come from the `Authorization` header, client HTTPS certificates, or cookies."
msgstr "Quarkus Security使用 `HttpAuthenticationMechanism` ，从HTTP请求中提取认证凭证，并将其委托给 `IdentityProvider` ，将凭证转换为 `SecurityIdentity` 。例如，凭证可以来自 `Authorization` 头，客户端HTTPS证书，或cookies。"

#. type: Plain text
#: upstream/_guides/security-architecture-concept.adoc:19
#, fuzzy
msgid "`IdentityProvider` verifies the authentication credentials and maps them to `SecurityIdentity`, which has the username, roles, original authentication credentials, and other attributes."
msgstr " `IdentityProvider` 验证认证凭证并将其映射到 ，该网站有用户名、角色、原始认证凭证和其他属性。 `SecurityIdentity` "

#. type: Plain text
#: upstream/_guides/security-architecture-concept.adoc:21
#, fuzzy
msgid "You can inject a `SecurityIdentity` instance for every authenticated resource to get the authenticated identity information."
msgstr "你可以为每个认证的资源注入一个 `SecurityIdentity` 实例，以获得认证的身份信息。"

#. type: Plain text
#: upstream/_guides/security-architecture-concept.adoc:23
#, fuzzy
msgid "In other contexts, it is possible to have other parallel representations of the same information or parts of it, for example, `SecurityContext` for JAX-RS or `JsonWebToken` for JSON Web Tokens (JWT)."
msgstr "在其他情况下，有可能对相同的信息或部分信息进行其他并行表示，例如，JAX-RS的 `SecurityContext` ，或JSON Web Tokens（JWT）的 `JsonWebToken` 。"

#. type: Plain text
#: upstream/_guides/security-architecture-concept.adoc:25
#, fuzzy
msgid "For more information, see xref:security-identity-providers-concept.adoc[Identity providers]."
msgstr "欲了解更多信息，请参见 link:security-identity-providers-concept.html[身份提供者] 。"

#. type: Title ==
#: upstream/_guides/security-architecture-concept.adoc:26
#, fuzzy, no-wrap
msgid "Supported authentication mechanisms"
msgstr "支持的认证机制"

#. type: Plain text
#: upstream/_guides/security-architecture-concept.adoc:29
#, fuzzy
msgid "To learn more about security authentication in Quarkus and the supported mechanisms and protocols, see xref:security-authentication-mechanisms-concept.adoc[Authentication mechanisms in Quarkus]."
msgstr "要了解更多关于Quarkus的安全认证以及支持的机制和协议，请看 link:security-authentication-mechanisms-concept.html[Quarkus的认证机制] 。"

#. type: Title ==
#: upstream/_guides/security-architecture-concept.adoc:30
#, fuzzy, no-wrap
msgid "Proactive authentication"
msgstr "主动认证"

#. type: Plain text
#: upstream/_guides/security-architecture-concept.adoc:34
msgid "Proactive authentication is enabled in Quarkus by default. The request is always authenticated if an incoming request has a credential, even if the target page does not require authentication For more information, see xref:security-proactive-authentication-concept.adoc[Proactive authentication]."
msgstr ""

#. type: Title ==
#: upstream/_guides/security-architecture-concept.adoc:35
#, no-wrap
msgid "Quarkus Security customization"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-architecture-concept.adoc:38
msgid "Quarkus Security is also highly customizable. You can customize the following core security components of Quarkus:"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-architecture-concept.adoc:40
msgid "`HttpAuthenticationMechanism`"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-architecture-concept.adoc:41
msgid "`IdentityProvider`"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-architecture-concept.adoc:42
msgid "`SecurityidentityAugmentor`"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-architecture-concept.adoc:44
msgid "For more information about customizing Quarkus Security, including reactive security and how to register a security provider, see xref:security-customization.adoc[Security customization]."
msgstr ""

#. type: Title ==
#: upstream/_guides/security-architecture-concept.adoc:45
#, no-wrap
msgid "References"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-architecture-concept.adoc:47
msgid "xref:security-authorize-web-endpoints-reference.adoc[Authorization of web endpoints]"
msgstr ""

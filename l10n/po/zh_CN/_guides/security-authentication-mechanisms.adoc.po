# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-08-29 15:27+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: upstream/_guides/security-authentication-mechanisms.adoc:2
#, fuzzy, no-wrap
msgid "Authentication mechanisms in Quarkus"
msgstr "Quarkus的认证机制"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms.adoc:9
#, fuzzy
msgid "The Quarkus Security framework supports multiple authentication mechanisms, which you can use to secure your applications.  You can also combine authentication mechanisms."
msgstr "Quarkus安全框架支持多种认证机制，你可以用它们来保护你的应用程序。你也可以结合认证机制。"

#. type: delimited block =
#: upstream/_guides/security-authentication-mechanisms.adoc:13
#, fuzzy
msgid "Before you choose an authentication mechanism for securing your Quarkus applications, review the information provided."
msgstr "在你选择一个认证机制来保护你的Quarkus应用程序之前，请查看所提供的信息。"

#. type: Title ==
#: upstream/_guides/security-authentication-mechanisms.adoc:15
#, fuzzy, no-wrap
msgid "Overview of supported authentication mechanisms"
msgstr "支持的认证机制概述"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms.adoc:19
#, fuzzy
msgid "Some supported authentication mechanisms are built into Quarkus, while others require you to add an extension.  All of these mechanisms are detailed in the following sections:"
msgstr "有些支持的认证机制是内置在Quarkus中的，而有些则需要你添加一个扩展。所有这些机制都在下面的章节中详细介绍："

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms.adoc:21
#, fuzzy
msgid "xref:built-in-authentication-mechanisms[Built-in authentication mechanisms]"
msgstr "link:#built-in-authentication-mechanisms[内置认证机制]"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms.adoc:22
#, fuzzy
msgid "xref:other-supported-authentication-mechanisms[Other supported authentication mechanisms]"
msgstr "link:#other-supported-authentication-mechanisms[其他支持的认证机制]"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms.adoc:24
#, fuzzy
msgid "The following table maps specific authentication requirements to a supported mechanism that you can use in Quarkus:"
msgstr "下表将具体的认证要求映射到你可以在Quarkus中使用的支持机制："

#. type: Block title
#: upstream/_guides/security-authentication-mechanisms.adoc:25
#, fuzzy, no-wrap
msgid "Authentication requirements and mechanisms"
msgstr "认证要求和机制"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:28
#, fuzzy, no-wrap
msgid "Authentication requirement"
msgstr "认证要求"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:30
#: upstream/_guides/security-authentication-mechanisms.adoc:307
#, fuzzy, no-wrap
msgid "Authentication mechanism"
msgstr "认证机制"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:30
#, fuzzy, no-wrap
msgid "Username and password"
msgstr "用户名和密码"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:32
#, fuzzy, no-wrap
msgid "xref:security-basic-authentication.adoc[Basic], xref:form-auth[Form-based authentication]"
msgstr "link:security-basic-authentication.html[基本] 的、 link:#form-auth[基于表格的认证]"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:32
#, fuzzy, no-wrap
msgid "Bearer access token"
msgstr "承载访问令牌"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:34
#, fuzzy, no-wrap
msgid "xref:security-oidc-bearer-token-authentication.adoc[OIDC Bearer token authentication], xref:security-jwt.adoc[JWT], xref:security-oauth2.adoc[OAuth2]"
msgstr "link:security-oidc-bearer-token-authentication.html[OIDC承载令牌认证] 、 link:security-jwt.html[JWT] 、 link:security-oauth2.html[OAuth2]"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:34
#, fuzzy, no-wrap
msgid "Single sign-on (SSO)"
msgstr "单点登录（SSO）"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:36
#, fuzzy, no-wrap
msgid "xref:security-oidc-code-flow-authentication.adoc[OIDC Code Flow], xref:form-auth[Form-based authentication]"
msgstr "link:security-oidc-code-flow-authentication.html[OIDC代码流] ， link:#form-auth[基于表格的认证]"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:36
#, fuzzy, no-wrap
msgid "Client certificate"
msgstr "客户证书"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms.adoc:38
#: upstream/_guides/security-authentication-mechanisms.adoc:53
#, fuzzy, no-wrap
msgid "xref:mutual-tls[Mutual TLS authentication]"
msgstr "link:#mutual-tls[相互的TLS认证]"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:38
#, fuzzy, no-wrap
msgid "WebAuthn"
msgstr "网络版"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:40
#, fuzzy, no-wrap
msgid "xref:security-webauthn.adoc[WebAuthn]"
msgstr "link:security-webauthn.html[网络版]"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:40
#, fuzzy, no-wrap
msgid "Kerberos ticket"
msgstr "Kerberos票据"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:41
#, fuzzy, no-wrap
msgid "link:https://quarkiverse.github.io/quarkiverse-docs/quarkus-kerberos/dev/index.html[Kerberos]"
msgstr "link:https://quarkiverse.github.io/quarkiverse-docs/quarkus-kerberos/dev/index.html[Kerberos]"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms.adoc:44
#, fuzzy
msgid "For more information, see the following xref:table[Token authentication mechanism comparison] table."
msgstr "欲了解更多信息，请参见下面的 link:#table[令牌认证机制比较] 表。"

#. type: Title ==
#: upstream/_guides/security-authentication-mechanisms.adoc:46
#, fuzzy, no-wrap
msgid "Built-in authentication mechanisms"
msgstr "内置认证机制"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms.adoc:49
#, fuzzy
msgid "Quarkus Security provides the following built-in authentication support:"
msgstr "Quarkus Security提供以下内置的认证支持："

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms.adoc:51
#: upstream/_guides/security-authentication-mechanisms.adoc:60
#, fuzzy
msgid "xref:security-basic-authentication.adoc[Basic authentication]"
msgstr "link:security-basic-authentication.html[基本认证]"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms.adoc:52
#, fuzzy
msgid "xref:form-auth[Form-based authentication]"
msgstr "link:#form-auth[基于表格的认证]"

#. type: Title ===
#: upstream/_guides/security-authentication-mechanisms.adoc:54
#, fuzzy, no-wrap
msgid "Basic authentication"
msgstr "基本认证"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms.adoc:58
#, fuzzy
msgid "You can secure your Quarkus application endpoints with the built-in HTTP Basic authentication mechanism.  For more information, see the following documentation:"
msgstr "你可以用内置的HTTP Basic认证机制来保护你的Quarkus应用程序端点。欲了解更多信息，请参见以下文档："

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms.adoc:61
#, fuzzy
msgid "xref:security-basic-authentication-howto.adoc[Enable Basic authentication]"
msgstr "link:security-basic-authentication-howto.html[启用基本认证]"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms.adoc:62
#, fuzzy
msgid "xref:security-jpa.adoc[Quarkus Security with Jakarta Persistence]"
msgstr "link:security-jpa.html[使用Jakarta Persistence的Quarkus安全]"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms.adoc:63
#, fuzzy
msgid "xref:security-basic-authentication-tutorial.adoc[Secure a Quarkus application with Basic authentication and Jakarta Persistence]"
msgstr "link:security-basic-authentication-tutorial.html[用基本认证和Jakarta持久性保护Quarkus应用程序]"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms.adoc:64
#: upstream/_guides/security-authentication-mechanisms.adoc:369
#, fuzzy
msgid "xref:security-identity-providers.adoc[Identity providers]"
msgstr "link:security-identity-providers.html[身份提供者]"

#. type: Title ===
#: upstream/_guides/security-authentication-mechanisms.adoc:66
#, fuzzy, no-wrap
msgid "Form-based authentication"
msgstr "基于表格的认证"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms.adoc:71
#, fuzzy
msgid "Quarkus provides form-based authentication that works similarly to traditional Servlet form-based auth.  Unlike traditional form authentication, the authenticated user is not stored in an HTTP session because Quarkus does not support clustered HTTP sessions.  Instead, the authentication information is stored in an encrypted cookie, which can be read by all cluster members who share the same encryption key."
msgstr "Quarkus提供基于表单的认证，其工作方式与传统的Servlet基于表单的认证类似。与传统的表单认证不同的是，由于Quarkus不支持集群的HTTP会话，所以被认证的用户不存储在HTTP会话中。相反，认证信息被存储在一个加密的cookie中，所有共享相同加密密钥的集群成员都可以读取。"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms.adoc:77
#, fuzzy
msgid "To apply encryption, add the `quarkus.http.auth.session.encryption-key` property, and ensure the value you set is at least 16 characters long.  The encryption key is hashed by using SHA-256.  The resulting digest is used as a key for AES-256 encryption of the cookie value.  The cookie contains an expiry time as part of the encrypted value, so all nodes in the cluster must have their clocks synchronized.  At one-minute intervals, a new cookie gets generated with an updated expiry time if the session is in use."
msgstr "要应用加密，请添加 `quarkus.http.auth.session.encryption-key` 属性，并确保你设置的值至少有16个字符长。加密密钥通过使用SHA-256进行散列。由此产生的摘要被用作对cookie值进行AES-256加密的一个密钥。Cookie包含一个过期时间，作为加密值的一部分，因此集群中的所有节点都必须同步其时钟。每隔一分钟，如果会话在使用中，就会生成一个新的cookie，并更新到期时间。"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms.adoc:79
#, fuzzy
msgid "With single-page applications (SPA), you typically want to avoid redirects by removing default page paths, as shown in the following example:"
msgstr "对于单页应用程序（SPA），你通常希望通过删除默认的页面路径来避免重定向，如下例所示："

#. type: delimited block -
#: upstream/_guides/security-authentication-mechanisms.adoc:84
#, no-wrap
msgid ""
"# do not redirect, respond with HTTP 200 OK\n"
"quarkus.http.auth.form.landing-page=\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-authentication-mechanisms.adoc:88
#, no-wrap
msgid ""
"# do not redirect, respond with HTTP 401 Unauthorized\n"
"quarkus.http.auth.form.login-page=\n"
"quarkus.http.auth.form.error-page=\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms.adoc:91
#, fuzzy
msgid "The following properties can be used to configure form-based authentication:"
msgstr "以下属性可用于配置基于表单的认证："

#. type: Title ===
#: upstream/_guides/security-authentication-mechanisms.adoc:95
#, fuzzy, no-wrap
msgid "Mutual TLS authentication"
msgstr "相互的TLS认证"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms.adoc:98
#, fuzzy
msgid "Quarkus provides mutual TLS (mTLS) authentication so that you can authenticate users based on their X.509 certificates."
msgstr "Quarkus提供了相互TLS(mTLS)认证，这样你就可以根据用户的X.509证书进行认证。"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms.adoc:101
#, fuzzy
msgid "To use this authentication method, you must first enable SSL/TLS for your application.  For more information, see the xref:http-reference.adoc#ssl[Supporting secure connections with SSL] section of the Quarkus \"HTTP reference\" guide."
msgstr "要使用这种认证方法，你必须首先为你的应用程序启用SSL/TLS。欲了解更多信息，请参阅Quarkus \"HTTP参考 \"指南中的 link:http-reference.html#ssl[支持SSL安全连接] 部分。"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms.adoc:103
#, fuzzy
msgid "After your application accepts secure connections, the next step is to configure the `quarkus.http.ssl.certificate.trust-store-file` property with the name of that file that holds all the certificates your application trusts. The specified file also includes information about how your application asks for certificates when a client, such as a browser or other service, tries to access one of its protected resources."
msgstr "在你的应用程序接受安全连接后，下一步是用那个保存着你的应用程序信任的所有证书的文件的名称来配置 `quarkus.http.ssl.certificate.trust-store-file` 属性。指定的文件还包括当客户端（如浏览器或其他服务）试图访问其受保护的资源之一时，你的应用程序如何要求获得证书的信息。"

#. type: delimited block -
#: upstream/_guides/security-authentication-mechanisms.adoc:113
#, no-wrap
msgid ""
"quarkus.http.ssl.certificate.key-store-file=server-keystore.jks            <1>\n"
"quarkus.http.ssl.certificate.key-store-password=the_key_store_secret\n"
"quarkus.http.ssl.certificate.trust-store-file=server-truststore.jks        <2>\n"
"quarkus.http.ssl.certificate.trust-store-password=the_trust_store_secret\n"
"quarkus.http.ssl.client-auth=required                                      <3>\n"
"quarkus.http.auth.permission.default.paths=/*                              <4>\n"
"quarkus.http.auth.permission.default.policy=authenticated\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms.adoc:115
#, fuzzy
msgid "The keystore where the server's private key is located."
msgstr "服务器的私钥所在的钥匙库。"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms.adoc:116
#, fuzzy
msgid "The truststore from which the trusted certificates are loaded."
msgstr "加载信任证书的信任库。"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms.adoc:119
#, fuzzy
msgid "With this value set to `required`, the server requires certificates from clients.  To relax this requirement so that the server accepts requests without a certificate, set the value to `REQUEST`.  This option is useful when you are also supporting authentication methods other than mTLS."
msgstr "当这个值设置为 `required` ，服务器需要客户的证书。要放松这一要求，使服务器接受没有证书的请求，请将该值设置为 `REQUEST` 。当你还支持mTLS以外的认证方法时，该选项很有用。"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms.adoc:120
#, fuzzy
msgid "Defines a policy where only authenticated users should have access to resources from your application."
msgstr "定义了一个策略，只有经过认证的用户才能访问你的应用程序的资源。"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms.adoc:122
#, fuzzy
msgid "When the incoming request matches a valid certificate in the truststore, your application can obtain the subject by injecting a `SecurityIdentity` as follows:"
msgstr "当传入的请求与truststore中的有效证书相匹配时，你的应用程序可以通过注入一个 `SecurityIdentity` ，获得主题，如下所示："

#. type: Block title
#: upstream/_guides/security-authentication-mechanisms.adoc:124
#, fuzzy, no-wrap
msgid "Obtaining the subject"
msgstr "获取主题"

#. type: delimited block -
#: upstream/_guides/security-authentication-mechanisms.adoc:129
#, no-wrap
msgid ""
"@Inject\n"
"SecurityIdentity identity;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-authentication-mechanisms.adoc:135
#, no-wrap
msgid ""
"@GET\n"
"@Produces(MediaType.TEXT_PLAIN)\n"
"public String hello() {\n"
"    return String.format(\"Hello, %s\", identity.getPrincipal().getName());\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms.adoc:138
#, fuzzy
msgid "You can also get the certificate by using the code outlined in the following example:"
msgstr "你也可以通过使用下面例子中概述的代码获得证书："

#. type: Block title
#: upstream/_guides/security-authentication-mechanisms.adoc:139
#, fuzzy, no-wrap
msgid "Obtaining the certificate"
msgstr "获得证书"

#. type: delimited block -
#: upstream/_guides/security-authentication-mechanisms.adoc:144
#, no-wrap
msgid ""
"import java.security.cert.X509Certificate;\n"
"import io.quarkus.security.credential.CertificateCredential;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-authentication-mechanisms.adoc:147
#, no-wrap
msgid ""
"CertificateCredential credential = identity.getCredential(CertificateCredential.class);\n"
"X509Certificate certificate = credential.getCertificate();\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/security-authentication-mechanisms.adoc:149
#, fuzzy, no-wrap
msgid "Authorization"
msgstr "授权书"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms.adoc:154
#, fuzzy
msgid "The information from the client certificate can be used to enhance Quarkus `SecurityIdentity`.  For example, you can add new roles after checking a client certificate subject name, and so on.  For more information about customizing `SecurityIdentity`, see the link:{url-quarkusio-guides}security-customization#security-identity-customization[Security identity customization] section in the Quarkus \"Security tips and tricks\" guide."
msgstr "来自客户证书的信息可以用来增强Quarkus `SecurityIdentity` 。例如，你可以在检查客户证书主题名称后添加新角色，等等。关于定制 `SecurityIdentity` ，请参阅Quarkus \"安全技巧和窍门 \"指南中的 link:{url-quarkusio-guides}security-customization#security-identity-customization[安全身份定制] 部分。"

#. type: Title ==
#: upstream/_guides/security-authentication-mechanisms.adoc:156
#, fuzzy, no-wrap
msgid "Other supported authentication mechanisms"
msgstr "其他支持的认证机制"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms.adoc:159
#, fuzzy
msgid "Quarkus Security also supports the following authentication mechanisms through extensions:"
msgstr "Quarkus Security还通过扩展支持以下认证机制："

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms.adoc:161
#, fuzzy
msgid "xref:webauthn-authentication[WebAuthn authentication]"
msgstr "link:#webauthn-authentication[WebAuthn认证]"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms.adoc:162
#, fuzzy
msgid "xref:openid-connect-authentication[OpenID Connect authentication]"
msgstr "link:#openid-connect-authentication[OpenID连接认证]"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms.adoc:163
#, fuzzy
msgid "xref:smallrye-jwt-authentication[SmallRye JWT authentication]"
msgstr "link:#smallrye-jwt-authentication[SmallRye JWT认证]"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms.adoc:164
#, fuzzy
msgid "xref:oauth2-authentication[OAuth2 authentication]"
msgstr "link:#oauth2-authentication[OAuth2认证]"

#. type: Title ===
#: upstream/_guides/security-authentication-mechanisms.adoc:166
#, fuzzy, no-wrap
msgid "WebAuthn authentication"
msgstr "WebAuthn认证"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms.adoc:171
#, fuzzy
msgid "https://webauthn.guide/[WebAuthn] is an authentication mechanism that replaces passwords.  When you write a service for registering new users, or logging them in, instead of asking for a password, you can use WebAuthn, which replaces the password.  For more information, see the xref:security-webauthn.adoc[Secure a Quarkus application by using the WebAuthn authentication mechanism] guide."
msgstr "link:https://webauthn.guide/[WebAuthn] 是一种取代密码的认证机制。当你写一个注册新用户或登录用户的服务时，你可以使用WebAuthn来代替密码，它可以代替密码。更多信息，请参见《 link:security-webauthn.html[使用WebAuthn认证机制保护Quarkus应用程序] 》指南。"

#. type: Title ===
#: upstream/_guides/security-authentication-mechanisms.adoc:173
#, fuzzy, no-wrap
msgid "OpenID Connect authentication"
msgstr "OpenID连接认证"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms.adoc:177
#, fuzzy
msgid "OpenID Connect (OIDC) is an identity layer that works on top of the OAuth 2.0 protocol.  OIDC enables client applications to verify the identity of a user based on the authentication performed by the OIDC provider and retrieve basic information about that user."
msgstr "OpenID Connect（OIDC）是一个身份层，在OAuth 2.0协议之上工作。OIDC使客户端应用程序能够根据OIDC提供者进行的认证来验证用户的身份，并检索该用户的基本信息。"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms.adoc:182
#, fuzzy
msgid "The Quarkus `quarkus-oidc` extension provides a reactive, interoperable, multitenant-enabled OIDC adapter that supports Bearer token and Authorization Code Flow authentication mechanisms.  The Bearer token authentication mechanism extracts the token from the HTTP Authorization header.  The Authorization Code Flow mechanism redirects the user to an OIDC provider to authenticate the user's identity.  After the user is redirected back to Quarkus, the mechanism completes the authentication process by exchanging the provided code that was granted for the ID, access, and refresh tokens."
msgstr "Quarkus `quarkus-oidc` 扩展提供了一个反应式的、可互操作的、支持多租户的OIDC适配器，支持Bearer令牌和授权代码流认证机制。Bearer令牌认证机制从HTTP授权头中提取令牌。授权代码流机制将用户重定向到一个OIDC提供者，以验证用户的身份。在用户被重定向回Quarkus后，该机制通过交换被授予ID、访问和刷新令牌的所提供的代码来完成认证过程。"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms.adoc:185
#, fuzzy
msgid "You can verify ID and access JSON Web Token (JWT) tokens by using the refreshable JSON Web Key (JWK) set or introspect them remotely.  However, opaque, also known as binary tokens, can only be introspected remotely."
msgstr "你可以通过使用可刷新的JSON网络密钥（JWK）集验证ID和访问JSON网络令牌（JWT），或远程反省它们。然而，不透明的，也被称为二进制令牌，只能远程反省。"

#. type: delimited block =
#: upstream/_guides/security-authentication-mechanisms.adoc:189
#, fuzzy
msgid "Using the Quarkus OIDC extension, both the Bearer token and Authorization Code Flow authentication mechanisms use xref:smallrye-jwt-authentication[SmallRye JWT authentication] to represent JWT tokens as MicroProfile JWT `org.eclipse.microprofile.jwt.JsonWebToken`."
msgstr "使用Quarkus OIDC扩展，承载令牌和授权码流认证机制都使用 link:#smallrye-jwt-authentication[SmallRye JWT认证] 来表示JWT令牌为MicroProfile JWT `org.eclipse.microprofile.jwt.JsonWebToken` 。"

#. type: Title ====
#: upstream/_guides/security-authentication-mechanisms.adoc:191
#, fuzzy, no-wrap
msgid "Additional Quarkus resources for OIDC authentication"
msgstr "用于OIDC认证的其他Quarkus资源"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms.adoc:194
#, fuzzy
msgid "For more information about OIDC authentication and authorization methods that you can use to secure your Quarkus applications, see the following resources:"
msgstr "更多关于OIDC认证和授权方法的信息，你可以用它来保护你的Quarkus应用程序，请参阅以下资源："

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:197
#, fuzzy, no-wrap
msgid "OIDC topic"
msgstr "OIDC专题"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:198
#, fuzzy, no-wrap
msgid "Quarkus information resource"
msgstr "Quarkus信息资源"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:198
#, fuzzy, no-wrap
msgid "Bearer token authentication mechanis"
msgstr "持卡人令牌认证机制"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:199
#, fuzzy, no-wrap
msgid "xref:security-oidc-bearer-token-authentication.adoc[OIDC Bearer token authentication]"
msgstr "link:security-oidc-bearer-token-authentication.html[OIDC承载令牌认证]"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:199
#, fuzzy, no-wrap
msgid "Authorization Code Flow authentication mechanis"
msgstr "授权代码流认证机制"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:200
#, fuzzy, no-wrap
msgid "xref:security-oidc-code-flow-authentication.adoc[OpenID Connect (OIDC) Authorization Code Flow mechanism]"
msgstr "link:security-oidc-code-flow-authentication.html[OpenID连接（OIDC）授权代码流机制]"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:200
#, no-wrap
msgid "OIDC and SAML Identity broker"
msgstr ""

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:201
#, fuzzy, no-wrap
msgid "xref:security-oidc-code-flow-authentication.adoc#oidc-saml-broker[OpenID Connect (OIDC) Authorization Code Flow and SAML Identity broker]"
msgstr "link:security-oidc-code-flow-authentication.html[OpenID连接（OIDC）授权代码流机制]"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:201
#, fuzzy, no-wrap
msgid "Multiple tenants that can support the Bearer token authentication or Authorization Code Flow mechanism"
msgstr "多个租户可以支持承载令牌认证或授权码流机制"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:202
#, fuzzy, no-wrap
msgid "xref:security-openid-connect-multitenancy.adoc[Using OpenID Connect (OIDC) multi-tenancy]"
msgstr "link:security-openid-connect-multitenancy.html[使用OpenID连接（OIDC）多租户]"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:202
#, fuzzy, no-wrap
msgid "Securing Quarkus with commonly-used OpenID Connect provider"
msgstr "用常用的OpenID连接提供者来保护Quarkus的安全"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:203
#, fuzzy, no-wrap
msgid "xref:security-openid-connect-providers.adoc[Configuring well-known OpenID Connect providers]"
msgstr "link:security-openid-connect-providers.html[配置知名的OpenID连接提供者]"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:203
#, fuzzy, no-wrap
msgid "Using Keycloak to centralize authorization"
msgstr "使用Keycloak来集中授权"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:204
#, fuzzy, no-wrap
msgid "xref:security-keycloak-authorization.adoc[Using OpenID Connect (OIDC) and Keycloak to centralize authorization]"
msgstr "link:security-keycloak-authorization.html[使用OpenID连接（OIDC）和Keycloak来集中授权]"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:204
#, fuzzy, no-wrap
msgid "Configuring Keycloak programmatically"
msgstr "以编程方式配置Keycloak"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:205
#, fuzzy, no-wrap
msgid "xref:security-keycloak-admin-client.adoc[Using the Keycloak admin client]"
msgstr "link:security-keycloak-admin-client.html[使用Keycloak管理客户端]"

#. type: delimited block =
#: upstream/_guides/security-authentication-mechanisms.adoc:211
#, fuzzy
msgid "To enable the Quarkus OIDC extension at runtime, set `quarkus.oidc.tenant-enabled=false` at build time.  Then re-enable it at runtime by using a system property."
msgstr "要在运行时启用Quarkus OIDC扩展，在构建时设置 `quarkus.oidc.tenant-enabled=false` 。然后在运行时通过使用系统属性重新启用它。"

#. type: delimited block =
#: upstream/_guides/security-authentication-mechanisms.adoc:213
#, fuzzy
msgid "For more information about managing the individual tenant configurations in multitenant OIDC deployments, see the link:{url-quarkusio-guides}security-openid-connect-multitenancy#disable-tenant[Disabling tenant configurations] section in the \"Using OpenID Connect (OIDC) multi-tenancy\" guide."
msgstr "关于在多租户OIDC部署中管理单个租户配置的更多信息，请参阅 \"使用OpenID Connect（OIDC）多租户 \"指南中的 link:{url-quarkusio-guides}security-openid-connect-multitenancy#disable-tenant[禁用租户配置] 部分。"

#. type: Title ====
#: upstream/_guides/security-authentication-mechanisms.adoc:215
#, fuzzy, no-wrap
msgid "OpenID Connect client and filters"
msgstr "OpenID连接客户端和过滤器"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms.adoc:218
#, fuzzy
msgid "The `quarkus-oidc-client` extension provides `OidcClient` for acquiring and refreshing access tokens from OpenID Connect and OAuth2 providers that support the following token grants:"
msgstr " `quarkus-oidc-client` 扩展提供了 `OidcClient` ，用于从支持以下令牌授予的OpenID Connect和OAuth2提供商那里获取和刷新访问令牌："

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms.adoc:220
#, fuzzy
msgid "`client-credentials`"
msgstr " `client-credentials` "

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms.adoc:221
#, fuzzy
msgid "`password`"
msgstr " `password` "

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms.adoc:222
#, fuzzy
msgid "`refresh_token`"
msgstr " `refresh_token` "

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms.adoc:227
#, fuzzy
msgid "The `quarkus-oidc-client-filter` extension requires the `quarkus-oidc-client` extension.  It provides JAX-RS RESTful Web Services `OidcClientRequestFilter`, which sets the access token acquired by `OidcClient` as the `Bearer` scheme value of the HTTP `Authorization` header.  This filter can be registered with MicroProfile REST client implementations injected into the current Quarkus endpoint, but it is not related to the authentication requirements of this service endpoint.  For example, it can be a public endpoint or be protected with mTLS."
msgstr " `quarkus-oidc-client-filter` 扩展需要 `quarkus-oidc-client` 扩展。它提供了JAX-RS RESTful Web服务 `OidcClientRequestFilter` ，它将由 `OidcClient` 获得的访问令牌设置为HTTP `Authorization` 头的 `Bearer` 方案值。这个过滤器可以用MicroProfile REST客户端实现注册，注入到当前的Quarkus端点，但它与这个服务端点的认证要求无关。例如，它可以是一个公共端点，或者用mTLS保护。"

#. type: delimited block =
#: upstream/_guides/security-authentication-mechanisms.adoc:231
#, fuzzy
msgid "In this scenario, you do not need to protect your Quarkus endpoint by using the Quarkus OpenID Connect adapter."
msgstr "在这种情况下，你不需要通过使用Quarkus OpenID Connect适配器来保护你的Quarkus端点。"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms.adoc:237
#, fuzzy
msgid "The `quarkus-oidc-token-propagation` extension requires the `quarkus-oidc` extension.  It provides Jakarta REST `TokenCredentialRequestFilter`, which sets the OpenID Connect Bearer token or Authorization Code Flow access token as the `Bearer` scheme value of the HTTP `Authorization` header.  This filter can be registered with MicroProfile REST client implementations injected into the current Quarkus endpoint, which must be protected by using the Quarkus OIDC adapter.  This filter can propagate the access token to the downstream services."
msgstr " `quarkus-oidc-token-propagation` 扩展需要 `quarkus-oidc` 扩展。它提供了Jakarta REST `TokenCredentialRequestFilter` ，它将OpenID Connect Bearer token或Authorization Code Flow访问令牌作为HTTP `Authorization` 头的 `Bearer` 方案值。这个过滤器可以与MicroProfile REST客户端实现注册，注入到当前的Quarkus端点，必须使用Quarkus OIDC适配器来保护。这个过滤器可以将访问令牌传播到下游服务中。"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms.adoc:239
#, fuzzy
msgid "For more information, see the xref:security-openid-connect-client.adoc[OpenID Connect client and token propagation quickstart] and xref:security-openid-connect-client-reference.adoc[OpenID Connect (OIDC) and OAuth2 client and filters reference] guides."
msgstr "欲了解更多信息，请参阅 link:security-openid-connect-client.html[OpenID Connect客户端和令牌传播快速入门] 和 link:security-openid-connect-client-reference.html[OpenID Connect（OIDC）和OAuth2客户端和过滤器参考] 指南。"

#. type: Title ===
#: upstream/_guides/security-authentication-mechanisms.adoc:241
#, fuzzy, no-wrap
msgid "SmallRye JWT authentication"
msgstr "SmallRye JWT认证"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms.adoc:245
#, fuzzy
msgid "The `quarkus-smallrye-jwt` extension provides a MicroProfile JSON Web Token (JWT) 2.1 implementation and multiple options to verify signed and encrypted `JWT` tokens.  It represents them as `org.eclipse.microprofile.jwt.JsonWebToken`."
msgstr " `quarkus-smallrye-jwt` 扩展提供了一个MicroProfile JSON Web Token（JWT）2.1的实现和多种选项，以验证签名和加密的 `JWT` token。它将它们表示为 `org.eclipse.microprofile.jwt.JsonWebToken` 。"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms.adoc:248
#, fuzzy
msgid "`quarkus-smallrye-jwt` is an alternative to the `quarkus-oidc` Bearer token authentication mechanism and verifies only `JWT` tokens by using either Privacy Enhanced Mail (PEM) keys or the refreshable `JWK` key set.  `quarkus-smallrye-jwt` also provides the JWT generation API, which you can use to easily create `signed`, `inner-signed`, and `encrypted` `JWT` tokens."
msgstr " `quarkus-smallrye-jwt` 是 Bearer token认证机制的替代方案，仅通过使用隐私增强邮件（PEM）密钥或可刷新的 密钥集来验证 token。 还提供JWT生成API，你可以用它来轻松创建 、 和  token。 `quarkus-oidc` `JWK` `JWT` `quarkus-smallrye-jwt` `signed` `inner-signed` `encrypted` `JWT` "

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms.adoc:250
#, fuzzy
msgid "For more information, see the xref:security-jwt.adoc[Using JWT RBAC] guide."
msgstr "欲了解更多信息，请参阅《 link:security-jwt.html[使用JWT RBAC] 》指南。"

#. type: Title ===
#: upstream/_guides/security-authentication-mechanisms.adoc:252
#, fuzzy, no-wrap
msgid "OAuth2 authentication"
msgstr "OAuth2认证"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms.adoc:257
#, fuzzy
msgid "`quarkus-elytron-security-oauth2` provides an alternative to the Quarkus `quarkus-oidc` Bearer token authentication mechanism extension.  `quarkus-elytron-security-oauth2` is based on `Elytron` and is primarily intended for introspecting opaque tokens remotely.  For more information, see the Quarkus xref:security-oauth2.adoc[Using OAuth2] guide."
msgstr " `quarkus-elytron-security-oauth2` 提供了Quarkus Bearer token认证机制扩展的替代方案。 是基于 ，主要用于远程反省不透明的token。欲了解更多信息，请参见Quarkus `quarkus-oidc` `quarkus-elytron-security-oauth2` `Elytron` link:security-oauth2.html[使用OAuth2] 指南。"

#. type: Title ==
#: upstream/_guides/security-authentication-mechanisms.adoc:259
#, fuzzy, no-wrap
msgid "Choosing between OpenID Connect, SmallRye JWT, and OAuth2 authentication mechanisms"
msgstr "在OpenID Connect、SmallRye JWT和OAuth2认证机制之间做出选择"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms.adoc:262
#, fuzzy
msgid "Use the following information to select the appropriate token authentication mechanism to secure your Quarkus applications."
msgstr "使用以下信息来选择适当的令牌认证机制来保护你的Quarkus应用程序。"

#. type: Block title
#: upstream/_guides/security-authentication-mechanisms.adoc:263
#, fuzzy, no-wrap
msgid "List of authentication mechanism use-cases"
msgstr "认证机制用例列表"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms.adoc:267
#, fuzzy
msgid "`quarkus-oidc` requires an OpenID Connect provider such as Keycloak, which can verify the bearer tokens or authenticate the end users with the Authorization Code flow.  In both cases, `quarkus-oidc` requires a connection to the specified OpenID Connect provider."
msgstr " `quarkus-oidc` 需要一个OpenID连接提供者，如Keycloak，它可以验证不记名令牌或用授权码流验证终端用户。在这两种情况下， ，需要连接到指定的OpenID连接提供者。 `quarkus-oidc` "

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms.adoc:270
#, fuzzy
msgid "If the user authentication requires Authorization Code flow, or you need to support multiple tenants, use `quarkus-oidc`.  `quarkus-oidc` can also request user information by using both Authorization Code Flow and Bearer access tokens."
msgstr "如果用户认证需要授权码流，或者你需要支持多个租户，请使用 `quarkus-oidc` 。 `quarkus-oidc` ，也可以同时使用授权码流和承载器访问令牌来请求用户信息。"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms.adoc:272
#, fuzzy
msgid "If your bearer tokens must be verified, use `quarkus-oidc`, `quarkus-smallrye-jwt`, or `quarkus-elytron-security-oauth2`."
msgstr "如果你的不记名代币必须经过验证，请使用 `quarkus-oidc` , `quarkus-smallrye-jwt` , 或 `quarkus-elytron-security-oauth2` 。"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms.adoc:276
#, fuzzy
msgid "If your bearer tokens are in a JSON web token (JWT) format, you can use any extensions in the preceding list.  Both `quarkus-oidc` and `quarkus-smallrye-jwt` support refreshing the `JsonWebKey` (JWK) set when the OpenID Connect provider rotates the keys.  Therefore, if remote token introspection must be avoided or is unsupported by the providers, use `quarkus-oidc` or `quarkus-smallrye-jwt` for verifying JWT tokens."
msgstr "如果你的不记名令牌是JSON网络令牌（JWT）格式，你可以使用前面列表中的任何扩展。 `quarkus-oidc` 和 `quarkus-smallrye-jwt` 都支持在OpenID Connect提供商轮换密钥时刷新 `JsonWebKey` （JWK）集。因此，如果必须避免远程令牌反省或提供者不支持，请使用 `quarkus-oidc` 或 `quarkus-smallrye-jwt` 来验证JWT令牌。"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms.adoc:279
#, fuzzy
msgid "To introspect the JWT tokens remotely, you can use either `quarkus-oidc` or `quarkus-elytron-security-oauth2` because they support verifying the opaque or binary tokens by using remote introspection.  `quarkus-smallrye-jwt` does not support the remote introspection of both opaque or JWT tokens but instead relies on the locally available keys that are usually retrieved from the OpenID Connect provider."
msgstr "要远程反省JWT令牌，你可以使用 `quarkus-oidc` 或 `quarkus-elytron-security-oauth2` ，因为它们支持通过使用远程反省来验证不透明或二进制令牌。 `quarkus-smallrye-jwt` 不支持对不透明或JWT令牌进行远程反省，而是依赖于通常从OpenID Connect提供者那里获取的本地可用密钥。"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms.adoc:283
#, fuzzy
msgid "`quarkus-oidc` and `quarkus-smallrye-jwt` support the JWT and opaque token injection into the endpoint code.  Injected JWT tokens provide more information about the user.  All extensions can have the tokens injected as `Principal`."
msgstr " `quarkus-oidc` 和 ，支持JWT和不透明的令牌注入到端点代码中。注入的JWT令牌提供了关于用户的更多信息。所有的扩展都可以将令牌注入到 。 `quarkus-smallrye-jwt` `Principal` "

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms.adoc:286
#, fuzzy
msgid "`quarkus-smallrye-jwt` supports more key formats than `quarkus-oidc`.  `quarkus-oidc` uses only the JWK-formatted keys that are part of a JWK set, whereas `quarkus-smallrye-jwt` supports PEM keys."
msgstr " `quarkus-smallrye-jwt` 比 支持更多的密钥格式。 只使用作为JWK集一部分的JWK格式的密钥，而 支持PEM密钥。 `quarkus-oidc` `quarkus-oidc` `quarkus-smallrye-jwt` "

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms.adoc:289
#, fuzzy
msgid "`quarkus-smallrye-jwt` handles locally signed, inner-signed-and-encrypted, and encrypted tokens.  In contrast, although `quarkus-oidc` and `quarkus-elytron-security-oauth2` can also verify such tokens, they treat them as opaque tokens and verify them through remote introspection."
msgstr " `quarkus-smallrye-jwt` 处理本地签名的、内部签名并加密的和加密的令牌。相比之下，尽管 和 也可以验证这样的令牌，但它们把它们当作不透明的令牌，并通过远程反省来验证它们。 `quarkus-oidc` `quarkus-elytron-security-oauth2` "

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms.adoc:291
#, fuzzy
msgid "If you need a lightweight library for the remote introspection of opaque or JWT tokens, use `quarkus-elytron-security-oauth2`."
msgstr "如果你需要一个轻量级的库来对不透明或JWT令牌进行远程反省，请使用 `quarkus-elytron-security-oauth2` 。"

#. type: delimited block =
#: upstream/_guides/security-authentication-mechanisms.adoc:297
#, fuzzy
msgid "Architectural considerations drive your decision to use opaque or JSON web token (JWT) token format.  Opaque tokens tend to be much shorter than JWT tokens but need most of the token-associated state to be maintained in the provider database.  Opaque tokens are effectively database pointers."
msgstr "架构方面的考虑促使你决定使用不透明或JSON网络令牌（JWT）令牌格式。不透明令牌往往比JWT令牌短得多，但需要在提供者数据库中维护大部分与令牌相关的状态。不透明令牌实际上是数据库指针。"

#. type: delimited block =
#: upstream/_guides/security-authentication-mechanisms.adoc:300
#, fuzzy
msgid "JWT tokens are significantly longer than opaque tokens.  Nonetheless, the providers effectively delegate most of the token-associated state to the client by storing it as the token claims and either signing or encrypting them."
msgstr "JWT令牌比不透明的令牌要长得多。尽管如此，供应商通过将大部分与令牌相关的状态存储为令牌声明，并对其进行签名或加密，有效地将其委托给客户。"

#. type: Block title
#: upstream/_guides/security-authentication-mechanisms.adoc:303
#, fuzzy, no-wrap
msgid "Token authentication mechanism comparison"
msgstr "令牌认证机制比较"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:305
#, fuzzy, no-wrap
msgid "Feature required"
msgstr "需要的功能"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:307
#, fuzzy, no-wrap
msgid "`quarkus-oidc`"
msgstr " `quarkus-oidc` "

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:307
#, fuzzy, no-wrap
msgid "`quarkus-smallrye-jwt`"
msgstr " `quarkus-smallrye-jwt` "

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:309
#, fuzzy, no-wrap
msgid "`quarkus-elytron-security-oauth2`"
msgstr " `quarkus-elytron-security-oauth2` "

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:309
#, fuzzy, no-wrap
msgid "Bearer JWT verification"
msgstr "承载者JWT验证"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:309
#, fuzzy, no-wrap
msgid "Local verification or introspection"
msgstr "本地核查或反省"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:309
#: upstream/_guides/security-authentication-mechanisms.adoc:322
#, fuzzy, no-wrap
msgid "Local verification"
msgstr "当地核查"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:311
#: upstream/_guides/security-authentication-mechanisms.adoc:312
#: upstream/_guides/security-authentication-mechanisms.adoc:322
#: upstream/_guides/security-authentication-mechanisms.adoc:323
#, fuzzy, no-wrap
msgid "Introspection"
msgstr "自省"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:311
#, fuzzy, no-wrap
msgid "Bearer opaque token verification"
msgstr "不记名不透明令牌验证"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:311
#: upstream/_guides/security-authentication-mechanisms.adoc:313
#: upstream/_guides/security-authentication-mechanisms.adoc:316
#: upstream/_guides/security-authentication-mechanisms.adoc:317
#: upstream/_guides/security-authentication-mechanisms.adoc:318
#: upstream/_guides/security-authentication-mechanisms.adoc:319
#: upstream/_guides/security-authentication-mechanisms.adoc:321
#: upstream/_guides/security-authentication-mechanisms.adoc:322
#: upstream/_guides/security-authentication-mechanisms.adoc:323
#: upstream/_guides/security-authentication-mechanisms.adoc:324
#, fuzzy, no-wrap
msgid "No"
msgstr "没有"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:312
#, fuzzy, no-wrap
msgid "Refreshing `JsonWebKey` set for verifying JWT tokens"
msgstr "刷新 `JsonWebKey` 集，以验证JWT令牌"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:312
#: upstream/_guides/security-authentication-mechanisms.adoc:313
#: upstream/_guides/security-authentication-mechanisms.adoc:314
#: upstream/_guides/security-authentication-mechanisms.adoc:316
#: upstream/_guides/security-authentication-mechanisms.adoc:317
#: upstream/_guides/security-authentication-mechanisms.adoc:318
#: upstream/_guides/security-authentication-mechanisms.adoc:319
#: upstream/_guides/security-authentication-mechanisms.adoc:324
#: upstream/_guides/security-authentication-mechanisms.adoc:325
#, fuzzy, no-wrap
msgid "Yes"
msgstr "是"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:313
#, fuzzy, no-wrap
msgid "Represent token as `Principal`"
msgstr "将令牌表示为 `Principal` "

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:314
#, fuzzy, no-wrap
msgid "Inject JWT as MP JWT"
msgstr "注入JWT作为MP JWT"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:316
#, fuzzy, no-wrap
msgid "Authorization code flow"
msgstr "授权代码流程"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:317
#, fuzzy, no-wrap
msgid "Multi-tenancy"
msgstr "多租户"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:318
#, fuzzy, no-wrap
msgid "User information support"
msgstr "用户信息支持"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:319
#, fuzzy, no-wrap
msgid "PEM key format support"
msgstr "支持PEM密钥格式"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:321
#, fuzzy, no-wrap
msgid "SecretKey support"
msgstr "支持SecretKey"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:321
#, fuzzy, no-wrap
msgid "In JSON Web Key (JWK) format"
msgstr "以JSON网络密钥（JWK）的格式"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:322
#, fuzzy, no-wrap
msgid "Inner-signed and encrypted or encrypted tokens"
msgstr "内部签名和加密的或加密的令牌"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:323
#, fuzzy, no-wrap
msgid "Custom token verification"
msgstr "自定义令牌验证"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:323
#, fuzzy, no-wrap
msgid "With injected JWT parser"
msgstr "有了注入的JWT解析器"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:324
#, fuzzy, no-wrap
msgid "JWT as a cookie support"
msgstr "支持JWT作为一个cookie"

#. type: Title ==
#: upstream/_guides/security-authentication-mechanisms.adoc:328
#, fuzzy, no-wrap
msgid "Combining authentication mechanisms"
msgstr "结合认证机制"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms.adoc:332
#, fuzzy
msgid "If different sources provide the user credentials, you can combine authentication mechanisms.  For example, you can combine the built-in Basic and the Quarkus `quarkus-oidc` Bearer token authentication mechanisms."
msgstr "如果不同的来源提供了用户凭证，你可以结合认证机制。例如，你可以结合内置的Basic和Quarkus `quarkus-oidc` Bearer token认证机制。"

#. type: delimited block =
#: upstream/_guides/security-authentication-mechanisms.adoc:336
#, fuzzy
msgid "You cannot combine the Quarkus `quarkus-oidc` Bearer token and `smallrye-jwt` authentication mechanisms because both mechanisms attempt to verify the token extracted from the HTTP Bearer token authentication scheme."
msgstr "你不能把Quarkus `quarkus-oidc` Bearer令牌和 `smallrye-jwt` 认证机制结合起来，因为这两种机制都试图验证从HTTP Bearer令牌认证方案中提取的令牌。"

#. type: Title ===
#: upstream/_guides/security-authentication-mechanisms.adoc:338
#, fuzzy, no-wrap
msgid "Path-specific authentication mechanisms"
msgstr "特定路径的认证机制"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms.adoc:341
#, fuzzy
msgid "The following configuration example demonstrates how you can enforce a single selectable authentication mechanism for a given request path:"
msgstr "下面的配置例子演示了如何为一个给定的请求路径强制执行一个可选择的认证机制："

#. type: delimited block -
#: upstream/_guides/security-authentication-mechanisms.adoc:346
#, no-wrap
msgid ""
"quarkus.http.auth.permission.basic-or-bearer.paths=/service\n"
"quarkus.http.auth.permission.basic-or-bearer.policy=authenticated\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-authentication-mechanisms.adoc:350
#, no-wrap
msgid ""
"quarkus.http.auth.permission.basic.paths=/basic-only\n"
"quarkus.http.auth.permission.basic.policy=authenticated\n"
"quarkus.http.auth.permission.basic.auth-mechanism=basic\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-authentication-mechanisms.adoc:354
#, no-wrap
msgid ""
"quarkus.http.auth.permission.bearer.paths=/bearer-only\n"
"quarkus.http.auth.permission.bearer.policy=authenticated\n"
"quarkus.http.auth.permission.bearer.auth-mechanism=bearer\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms.adoc:357
#, fuzzy
msgid "Ensure that the value of the `auth-mechanism` property matches the authentication scheme supported by `HttpAuthenticationMechanism`, for example, `basic`, `bearer`, or `form`."
msgstr "确保 `auth-mechanism` 属性的值与 `HttpAuthenticationMechanism` 所支持的认证方案相匹配，例如 `basic` 、 `bearer` 或 `form` 。"

#. type: Title ==
#: upstream/_guides/security-authentication-mechanisms.adoc:358
#, fuzzy, no-wrap
msgid "Proactive authentication"
msgstr "主动认证"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms.adoc:363
msgid "Proactive authentication is enabled in Quarkus by default.  This means that if an incoming request has a credential, the request will always be authenticated, even if the target page does not require authentication.  For more information, see the Quarkus xref:security-proactive-authentication.adoc[Proactive authentication] guide."
msgstr ""

#. type: Title ==
#: upstream/_guides/security-authentication-mechanisms.adoc:364
#, no-wrap
msgid "References"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms.adoc:367
msgid "xref:security-overview.adoc[Quarkus Security overview]"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms.adoc:368
msgid "xref:security-architecture.adoc[Quarkus Security architecture]"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms.adoc:369
msgid "xref:security-authorize-web-endpoints-reference.adoc[Authorization of web endpoints]"
msgstr ""

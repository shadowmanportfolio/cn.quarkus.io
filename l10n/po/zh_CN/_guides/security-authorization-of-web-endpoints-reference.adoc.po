# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-01-25 16:17+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:7
#, fuzzy, no-wrap
msgid "Authorization of Web Endpoints"
msgstr "网络端点的授权"

#. type: Plain text
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:13
#, fuzzy
msgid "Quarkus has an integrated pluggable web security layer. If security is enabled all HTTP requests will have a permission check performed to make sure they are allowed to continue."
msgstr "Quarkus有一个集成的可插入的网络安全层。如果安全功能被启用，所有的HTTP请求将被进行权限检查，以确保它们被允许继续。"

#. type: Plain text
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:20
#, fuzzy
msgid "Configuration authorization checks are executed before any annotation-based authorization check is done, so both checks have to pass for a request to be allowed. This means you cannot use `@PermitAll` to open up a path if the path has been blocked using `quarkus.http.auth.` configuration. If you are using JAX-RS you may want to consider using the `quarkus.security.jaxrs.deny-unannotated-endpoints` or `quarkus.security.jaxrs.default-roles-allowed` to set default security requirements instead of HTTP path level matching, as these properties can be overridden by annotations on an individual endpoint."
msgstr "配置授权检查是在任何基于注解的授权检查之前执行的，所以这两种检查都必须通过，请求才会被允许。这意味着如果使用 `quarkus.http.auth.` 配置阻止了一个路径，你就不能使用 `@PermitAll` 来打开该路径。如果你使用 JAX-RS，你可能会考虑使用 `quarkus.security.jaxrs.deny-unannotated-endpoints` 或 `quarkus.security.jaxrs.default-roles-allowed` 来设置默认的安全要求，而不是 HTTP 路径级别的匹配，因为这些属性可以被单个端点上的注释所覆盖。"

#. type: Plain text
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:24
#, fuzzy
msgid "Authorization is based on user roles that are provided by the security provider.  To customize these roles, a `SecurityIdentityAugmentor` can be created, see xref:security-customization.adoc#security-identity-customization[Security Identity Customization]."
msgstr "授权是基于安全提供商提供的用户角色。要定制这些角色，可以创建一个 `SecurityIdentityAugmentor` ，见 link:security-customization.html#security-identity-customization[安全身份定制] 。"

#. type: Title ==
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:25
#, fuzzy, no-wrap
msgid "Authorization using Configuration"
msgstr "使用配置进行授权"

#. type: Plain text
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:29
#, fuzzy
msgid "The default implementation allows you to define permissions using config in `application.properties`. An example config is shown below:"
msgstr "默认实现允许你使用 `application.properties` 中的配置来定义权限。下面是一个配置的例子。"

#. type: delimited block -
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:33
#, no-wrap
msgid "quarkus.http.auth.policy.role-policy1.roles-allowed=user,admin                      <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:36
#, no-wrap
msgid ""
"quarkus.http.auth.permission.roles1.paths=/roles-secured/*,/other/*,/api/*          <2>\n"
"quarkus.http.auth.permission.roles1.policy=role-policy1\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:40
#, no-wrap
msgid ""
"quarkus.http.auth.permission.permit1.paths=/public/*                                <3>\n"
"quarkus.http.auth.permission.permit1.policy=permit\n"
"quarkus.http.auth.permission.permit1.methods=GET\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:43
#, no-wrap
msgid ""
"quarkus.http.auth.permission.deny1.paths=/forbidden                                 <4>\n"
"quarkus.http.auth.permission.deny1.policy=deny\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:45
#, fuzzy
msgid "This defines a role based policy that allows users with the `user` and `admin` roles. This is referenced by later rules."
msgstr "这定义了一个基于角色的策略，允许具有 `user` 和 `admin` 角色的用户。这被后面的规则所引用。"

#. type: Plain text
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:46
#, fuzzy
msgid "This is a permission set that references the previously defined policy. `roles1` is an arbitrary name, you can call the permission sets whatever you want."
msgstr "这是一个引用先前定义的策略的权限集。 `roles1` 是一个任意的名字，你可以随心所欲地称呼权限集。"

#. type: Plain text
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:47
#, fuzzy
msgid "This permission references the default `permit` built-in policy to allow `GET` methods to `/public`. This is actually a no-op in this example, as this request would have been allowed anyway."
msgstr "这个权限引用了默认的 `permit` 内置策略，允许 `GET` 方法到 `/public` 。在这个例子中，这实际上是一个无用功，因为无论如何这个请求都会被允许。"

#. type: Plain text
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:48
#, fuzzy
msgid "This permission references the built-in `deny` policy for `/forbidden`. This is an exact path match as it does not end with `*`."
msgstr "这个权限引用了内置的 `deny` 策略，用于 `/forbidden` 。这是一个精确的路径匹配，因为它没有以 `*` 结尾。"

#. type: Plain text
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:52
#, fuzzy
msgid "Permissions are defined in config using permission sets. These are arbitrarily named permission grouping. Each permission set must specify a policy that is used to control access. There are three built-in policies: `deny`, `permit` and `authenticated`, which respectively permits all, denies all and only allows authenticated users."
msgstr "权限是在配置中使用权限集定义的。这些是任意命名的权限分组。每个权限集必须指定一个用于控制访问的策略。有三种内置策略。 `deny` , `permit` 和 `authenticated` ，分别是允许所有、拒绝所有和只允许认证的用户。"

#. type: Plain text
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:55
#, fuzzy
msgid "It is also possible to define role based policies, as shown in the example. These policies will only allow users with the specified roles to access the resources."
msgstr "也可以定义基于角色的策略，如例子所示。这些策略将只允许具有指定角色的用户访问资源。"

#. type: Title ===
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:56
#, fuzzy, no-wrap
msgid "Matching on paths, methods"
msgstr "路径、方法上的匹配"

#. type: Plain text
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:60
#, fuzzy
msgid "Permission sets can also specify paths and methods as a comma separated list. If a path ends with `*` then it is considered to be a wildcard match and will match all sub paths, otherwise it is an exact match and will only match that specific path:"
msgstr "权限集也可以用逗号分隔的列表来指定路径和方法。如果一个路径以 `*` 结尾，那么它被认为是通配符匹配，将匹配所有的子路径，否则它是精确匹配，将只匹配该特定路径。"

#. type: delimited block -
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:66
#, no-wrap
msgid ""
"quarkus.http.auth.permission.permit1.paths=/public/*,/css/*,/js/*,/robots.txt\n"
"quarkus.http.auth.permission.permit1.policy=permit\n"
"quarkus.http.auth.permission.permit1.methods=GET,HEAD\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:68
#, fuzzy, no-wrap
msgid "Matching path but not method"
msgstr "匹配路径但不匹配方法"

#. type: Plain text
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:72
#, fuzzy
msgid "If a request would match one or more permission sets based on the path, but does not match any due to method requirements then the request is rejected."
msgstr "如果一个请求根据路径可以匹配一个或多个权限集，但由于方法的要求，没有匹配任何权限集，那么该请求将被拒绝。"

#. type: Plain text
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:75
#, fuzzy
msgid "Given the above permission set, `GET /public/foo` would match both the path and method and thus be allowed, whereas `POST /public/foo` would match the path but not the method and would thus be rejected."
msgstr "鉴于上述权限设置， `GET /public/foo` 将同时匹配路径和方法，因此被允许，而 `POST /public/foo` 将匹配路径但不匹配方法，因此被拒绝。"

#. type: Title ===
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:76
#, fuzzy, no-wrap
msgid "Matching multiple paths: longest path wins"
msgstr "匹配多条路径：最长的路径获胜"

#. type: Plain text
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:80
#, fuzzy
msgid "Matching is always done on a longest path wins basis, less specific permission sets are not considered if a more specific one has been matched:"
msgstr "匹配总是在最长路径胜利的基础上进行，如果已经匹配了更具体的权限集，则不考虑不太具体的权限集。"

#. type: delimited block -
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:86
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:123
#, no-wrap
msgid ""
"quarkus.http.auth.permission.permit1.paths=/public/*\n"
"quarkus.http.auth.permission.permit1.policy=permit\n"
"quarkus.http.auth.permission.permit1.methods=GET,HEAD\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:89
#, no-wrap
msgid ""
"quarkus.http.auth.permission.deny1.paths=/public/forbidden-folder/*\n"
"quarkus.http.auth.permission.deny1.policy=deny\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:94
#, fuzzy
msgid "Given the above permission set, `GET /public/forbidden-folder/foo` would match both permission sets' paths, but because it matches the `deny1` permission set's path on a longer match, `deny1` will be chosen and the request will be rejected."
msgstr "鉴于上述权限集， `GET /public/forbidden-folder/foo` 将与两个权限集的路径相匹配，但由于它与 `deny1` 权限集的路径匹配时间较长， `deny1` 将被选择，请求将被拒绝。"

#. type: delimited block =
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:99
#, fuzzy
msgid "Subpath permissions always win against the root path permissions as explained above in the `deny1` versus `permit1` permission example.  Here is another example showing a subpath permission allowing a public resource access with the root path permission requiring the authorization:"
msgstr "子路径权限总是赢过根路径权限，正如上面 `deny1` 与 `permit1` 权限的例子所解释的那样。下面是另一个例子，显示子路径权限允许公共资源访问，而根路径权限需要授权。"

#. type: delimited block -
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:105
#, no-wrap
msgid ""
"quarkus.http.auth.policy.user-policy.roles-allowed=user\n"
"quarkus.http.auth.permission.roles.paths=/api/*\n"
"quarkus.http.auth.permission.roles.policy=user-policy\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:108
#, no-wrap
msgid ""
"quarkus.http.auth.permission.public.paths=/api/noauth/*\n"
"quarkus.http.auth.permission.public.policy=permit\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:111
#, fuzzy, no-wrap
msgid "Matching multiple paths: most specific method wins"
msgstr "匹配多条路径：最具体的方法获胜"

#. type: delimited block =
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:117
#, fuzzy
msgid "If a path is registered with multiple permission sets then any permission sets that specify an HTTP method will take precedence and permissions sets without a method will not be considered (assuming of course the method matches). In this instance, the permission sets without methods will only come into effect if the request method does not match any of the sets with method permissions."
msgstr "如果一个路径被注册了多个权限集, 那么任何指定了HTTP方法的权限集将被优先考虑, 没有方法的权限集将不被考虑 (当然, 假设方法匹配的话).在这种情况下，没有方法的权限集只有在请求方法与任何有方法权限的权限集不匹配时才会生效。"

#. type: delimited block -
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:126
#, no-wrap
msgid ""
"quarkus.http.auth.permission.deny1.paths=/public/*\n"
"quarkus.http.auth.permission.deny1.policy=deny\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:132
#, fuzzy
msgid "Given the above permission set, `GET /public/foo` would match both permission sets' paths, but because it matches the `permit1` permission set's explicit method, `permit1` will be chosen and the request will be accepted. `PUT /public/foo` on the other hand, will not match the method permissions of `permit1` and so `deny1` will be activated and reject the request."
msgstr "鉴于上述权限集， `GET /public/foo` 将与两个权限集的路径相匹配，但由于它与 `permit1` 权限集的明确方法相匹配， `permit1` 将被选择，请求将被接受。另一方面， `PUT /public/foo` 将不匹配 `permit1` 的方法权限，因此 `deny1` 将被激活并拒绝请求。"

#. type: Title ===
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:133
#, fuzzy, no-wrap
msgid "Matching multiple paths and methods: both win"
msgstr "匹配多条路径和方法：双赢"

#. type: Plain text
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:138
#, fuzzy
msgid "If multiple permission sets specify the same path and method (or multiple have no method) then both permissions have to allow access for the request to proceed. Note that for this to happen both have to either have specified the method, or have no method, method specific matches take precedence as stated above:"
msgstr "如果多个权限组指定了相同的路径和方法(或者多个权限组没有方法), 那么这两个权限都必须允许访问才能继续请求。请注意，要做到这一点，两个权限都必须指定方法，或者没有方法，如上所述，特定的方法匹配优先。"

#. type: delimited block -
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:143
#, no-wrap
msgid ""
"quarkus.http.auth.policy.user-policy1.roles-allowed=user\n"
"quarkus.http.auth.policy.admin-policy1.roles-allowed=admin\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:146
#, no-wrap
msgid ""
"quarkus.http.auth.permission.roles1.paths=/api/*,/restricted/*\n"
"quarkus.http.auth.permission.roles1.policy=user-policy1\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:149
#, no-wrap
msgid ""
"quarkus.http.auth.permission.roles2.paths=/api/*,/admin/*\n"
"quarkus.http.auth.permission.roles2.policy=admin-policy1\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:153
#, fuzzy
msgid "Given the above permission set, `GET /api/foo` would match both permission sets' paths, so would require both the `user` and `admin` roles."
msgstr "鉴于上述权限集， `GET /api/foo` 将符合两个权限集的路径，所以需要 `user` 和 `admin` 两个角色。"

#. type: Title ===
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:154
#, fuzzy, no-wrap
msgid "Configuration Properties to Deny access"
msgstr "拒绝访问的配置属性"

#. type: Plain text
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:157
#, fuzzy
msgid "There are three configuration settings that alter the RBAC Deny behavior:"
msgstr "有三种配置设置可以改变RBAC拒绝行为。"

#. type: Labeled list
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:158
#, fuzzy, no-wrap
msgid "`quarkus.security.jaxrs.deny-unannotated-endpoints=true|false`"
msgstr " `quarkus.security.jaxrs.deny-unannotated-endpoints=true|false` "

#. type: Plain text
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:161
#, fuzzy
msgid "If set to true, the access will be denied for all JAX-RS endpoints by default, so if a JAX-RS endpoint does not have any security annotations then it will default to `@DenyAll` behaviour. This is useful to ensure you cannot accidentally expose an endpoint that is supposed to be secured. Defaults to `false`."
msgstr "如果设置为 true，默认情况下将拒绝所有 JAX-RS 端点的访问，所以如果一个 JAX-RS 端点没有任何安全注释，那么它将默认为 `@DenyAll` 行为。这对于确保你不会意外地暴露出一个应该是安全的端点是很有用的。默认为 `false` 。"

#. type: Labeled list
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:162
#, fuzzy, no-wrap
msgid "`quarkus.security.jaxrs.default-roles-allowed=role1,role2`"
msgstr " `quarkus.security.jaxrs.default-roles-allowed=role1,role2` "

#. type: Plain text
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:165
#, fuzzy
msgid "Defines the default role requirements for unannotated endpoints. The role '**' is a special role that means any authenticated user. This cannot be combined with `deny-unannotated-endpoints`, as the deny will take effect instead."
msgstr "定义了未注释的端点的默认角色要求。角色'**'是一个特殊的角色，意味着任何认证的用户。这不能与 `deny-unannotated-endpoints` ，因为deny会代替它生效。"

#. type: Labeled list
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:166
#, fuzzy, no-wrap
msgid "`quarkus.security.deny-unannotated-members=true|false`"
msgstr " `quarkus.security.deny-unannotated-members=true|false` "

#. type: Plain text
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:170
#, fuzzy
msgid "if set to true, the access will be denied to all CDI methods and JAX-RS endpoints that do not have security annotations but are defined in classes that contain methods with security annotations. Defaults to `false`."
msgstr "如果设置为 \"true\"，所有没有安全注释但被定义在包含安全注释的方法的类中的CDI方法和JAX-RS端点的访问将被拒绝。默认为 `false` 。"

#. type: Title ===
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:171
#, fuzzy, no-wrap
msgid "Disabling permissions"
msgstr "禁用权限"

#. type: Plain text
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:174
#, fuzzy
msgid "Permissions can be disabled at build time with an `enabled` property for each declared permission, for example:"
msgstr "例如，权限可以在构建时通过每个声明的权限的 `enabled` 属性来禁用。"

#. type: delimited block -
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:181
#, no-wrap
msgid ""
"quarkus.http.auth.permission.permit1.enabled=false\n"
"quarkus.http.auth.permission.permit1.paths=/public/*,/css/*,/js/*,/robots.txt\n"
"quarkus.http.auth.permission.permit1.policy=permit\n"
"quarkus.http.auth.permission.permit1.methods=GET,HEAD\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:184
#, fuzzy
msgid "and enabled at runtime with a system property or environment variable, for example: `-Dquarkus.http.auth.permission.permit1.enabled=true`."
msgstr "并在运行时通过系统属性或环境变量启用，例如： `-Dquarkus.http.auth.permission.permit1.enabled=true` 。"

#. type: Title ==
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:185
#, fuzzy, no-wrap
msgid "Permission paths and http root path"
msgstr "权限路径和http根路径"

#. type: Plain text
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:188
#, fuzzy
msgid "The `quarkus.http.root-path` configuration property is used to change the xref:http-reference.adoc#context-path[http endpoint context path]."
msgstr " `quarkus.http.root-path` 配置属性用于改变 link:http-reference.html#context-path[http端点上下文路径] 。"

#. type: Plain text
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:190
#, fuzzy
msgid "By default, `quarkus.http.root-path` is prepended automatically to configured permission paths then do not use a forward slash, for example:"
msgstr "默认情况下， `quarkus.http.root-path` ，然后不使用正斜杠的配置的权限路径会自动预加，例如。"

#. type: delimited block -
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:194
#, no-wrap
msgid "quarkus.http.auth.permission.permit1.paths=public/*,css/*,js/*,robots.txt\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:197
#, fuzzy
msgid "This configuration is equivalent to the following:"
msgstr "这种配置相当于以下内容。"

#. type: delimited block -
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:201
#, no-wrap
msgid "quarkus.http.auth.permission.permit1.paths=${quarkus.http.root-path}/public/*,${quarkus.http.root-path}/css/*,${quarkus.http.root-path}/js/*,${quarkus.http.root-path}/robots.txt\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:204
#, fuzzy
msgid "A leading slash will change how the configured permission path is interpreted. The configured URL will be used as-is, and paths will not be adjusted if the value of `quarkus.http.root-path` is changed. For example:"
msgstr "前导斜线将改变配置的权限路径的解释方式。配置的URL将按原样使用, 如果 `quarkus.http.root-path` 的值改变了, 路径将不会被调整。比如说。"

#. type: delimited block -
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:208
#, no-wrap
msgid "quarkus.http.auth.permission.permit1.paths=/public/*,css/*,js/*,robots.txt\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:211
#, fuzzy
msgid "This configuration will only impact resources served from the fixed/static URL `/public`, which may not match your application resources if `quarkus.http.root-path` has been set to something other than `/`."
msgstr "此配置将只影响从固定/静态URL `/public` 提供的资源，如果 `quarkus.http.root-path` 被设置为其他的 `/` ，可能与你的应用程序资源不匹配。"

#. type: Plain text
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:213
#, fuzzy
msgid "See link:https://quarkus.io/blog/path-resolution-in-quarkus/[Path Resolution in Quarkus] for more information."
msgstr "更多信息见 link:https://quarkus.io/blog/path-resolution-in-quarkus/[Quarkus中的路径解析] 。"

#. type: Title ==
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:215
#, fuzzy, no-wrap
msgid "Authorization using Annotations"
msgstr "使用注解的授权"

#. type: Plain text
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:222
#, fuzzy
msgid "Quarkus comes with built-in security to allow for Role-Based Access Control (link:https://en.wikipedia.org/wiki/Role-based_access_control[RBAC])  based on the common security annotations `@RolesAllowed`, `@DenyAll`, `@PermitAll` on REST endpoints and CDI beans.  An example of an endpoint that makes use of both JAX-RS and Common Security annotations to describe and secure its endpoints is given in <<subject-example>>. Quarkus also provides the `io.quarkus.security.Authenticated` annotation that will permit any authenticated user to access the resource (equivalent to `@RolesAllowed(\"**\")`)."
msgstr "Quarkus 具有内置的安全性，允许基于 REST 端点和 CDI Bean 的通用安全注释 `@RolesAllowed` , `@DenyAll` , `@PermitAll` 的基于角色的访问控制 link:https://en.wikipedia.org/wiki/Role-based_access_control[（RBAC] ）。在 link:#subject-example[[subject-example]] 中给出了一个同时使用 JAX-RS 和通用安全注释来描述和保护其端点的例子。Quarkus 还提供了 `io.quarkus.security.Authenticated` 注解，它将允许任何经过认证的用户访问该资源（相当于 `@RolesAllowed(\"**\")` ）。"

#. type: Block title
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:224
#, fuzzy, no-wrap
msgid "SubjectExposingResource Example"
msgstr "标的物显示资源的例子"

#. type: delimited block -
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:228
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:291
#, no-wrap
msgid "import java.security.Principal;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:236
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:299
#, no-wrap
msgid ""
"import javax.annotation.security.DenyAll;\n"
"import javax.annotation.security.PermitAll;\n"
"import javax.annotation.security.RolesAllowed;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.core.Context;\n"
"import javax.ws.rs.core.SecurityContext;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:239
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:302
#, no-wrap
msgid ""
"@Path(\"subject\")\n"
"public class SubjectExposingResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:248
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"secured\")\n"
"    @RolesAllowed(\"Tester\") <1>\n"
"    public String getSubjectSecured(@Context SecurityContext sec) {\n"
"        Principal user = sec.getUserPrincipal(); <2>\n"
"        String name = user != null ? user.getName() : \"anonymous\";\n"
"        return name;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:257
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"unsecured\")\n"
"    @PermitAll <3>\n"
"    public String getSubjectUnsecured(@Context SecurityContext sec) {\n"
"        Principal user = sec.getUserPrincipal(); <4>\n"
"        String name = user != null ? user.getName() : \"anonymous\";\n"
"        return name;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:267
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"denied\")\n"
"    @DenyAll <5>\n"
"    public String getSubjectDenied(@Context SecurityContext sec) {\n"
"        Principal user = sec.getUserPrincipal();\n"
"        String name = user != null ? user.getName() : \"anonymous\";\n"
"        return name;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:269
#, fuzzy
msgid "This `/subject/secured` endpoint requires an authenticated user that has been granted the role \"Tester\" through the use of the `@RolesAllowed(\"Tester\")` annotation."
msgstr "这个 `/subject/secured` 端点需要一个经过认证的用户，该用户通过使用 `@RolesAllowed(\"Tester\")` 注解被授予 \"测试者 \"的角色。"

#. type: Plain text
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:270
#, fuzzy
msgid "The endpoint obtains the user principal from the JAX-RS `SecurityContext`. This will be non-null for a secured endpoint."
msgstr "该端点从 JAX-RS `SecurityContext` 中获取用户本金。对于一个安全的端点，这将是非空的。"

#. type: Plain text
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:271
#, fuzzy
msgid "The `/subject/unsecured` endpoint allows for unauthenticated access by specifying the `@PermitAll` annotation."
msgstr " `/subject/unsecured` 端点允许通过指定 `@PermitAll` 注释来实现未经认证的访问。"

#. type: Plain text
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:272
#, fuzzy
msgid "This call to obtain the user principal will return null if the caller is unauthenticated, non-null if the caller is authenticated."
msgstr "如果调用者没有经过认证，这个获取用户本金的调用将返回null，如果调用者经过认证，则返回非null。"

#. type: Plain text
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:273
#, fuzzy
msgid "The `/subject/denied` endpoint disallows any access regardless of whether the call is authenticated by specifying the `@DenyAll` annotation."
msgstr " `/subject/denied` 端点不允许任何访问，无论呼叫是否通过指定 `@DenyAll` 注释来验证。"

#. type: Plain text
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:275
#, fuzzy
msgid "Please refer to the xref:security-built-in-authentication-support-concept.adoc#proactive-authentication[Proactive Authentication] section of the Built-In Authentication Support guide if you plan to use standard security annotations on IO thread."
msgstr "如果你打算在IO线程上使用标准安全注释，请参考内置认证支持指南中的 link:security-built-in-authentication-support-concept.html#proactive-authentication[主动认证] 部分。"

#. type: Plain text
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:278
msgid "The `@RolesAllowed` annotation value supports <<config-reference#property-expressions,Property Expressions>> including default values and nested Property Expressions.  Configuration properties used with the annotation are resolved at runtime."
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:286
#, no-wrap
msgid ""
"admin=Administrator\n"
"tester.group=Software\n"
"tester.role=Tester\n"
"%prod.secured=User\n"
"%dev.secured=**\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:311
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"admin\")\n"
"    @RolesAllowed(\"${admin}\") <1>\n"
"    public String getSubjectSecuredAdmin(@Context SecurityContext sec) {\n"
"        Principal user = sec.getUserPrincipal();\n"
"        String name = user != null ? user.getName() : \"anonymous\";\n"
"        return name;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:320
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"software-tester\")\n"
"    @RolesAllowed(\"${tester.group}-${tester.role}\") <2>\n"
"    public String getSubjectSoftwareTester(@Context SecurityContext sec) {\n"
"        Principal user = sec.getUserPrincipal();\n"
"        String name = user != null ? user.getName() : \"anonymous\";\n"
"        return name;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:329
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"user\")\n"
"    @RolesAllowed(\"${customer:User}\") <3>\n"
"    public String getSubjectUser(@Context SecurityContext sec) {\n"
"        Principal user = sec.getUserPrincipal();\n"
"        String name = user != null ? user.getName() : \"anonymous\";\n"
"        return name;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:339
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"secured\")\n"
"    @RolesAllowed(\"${secured}\") <4>\n"
"    public String getSubjectSecured(@Context SecurityContext sec) {\n"
"        Principal user = sec.getUserPrincipal();\n"
"        String name = user != null ? user.getName() : \"anonymous\";\n"
"        return name;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:341
msgid "The `@RolesAllowed` annotation value is set to the value of the `admin`."
msgstr ""

#. type: Plain text
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:342
#, fuzzy
msgid "This `/subject/software-tester` endpoint requires an authenticated user that has been granted the role \"Software-Tester\". It is possible to use multiple expressions in the role definition."
msgstr "这个 `/subject/secured` 端点需要一个经过认证的用户，该用户通过使用 `@RolesAllowed(\"Tester\")` 注解被授予 \"测试者 \"的角色。"

#. type: Plain text
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:343
#, fuzzy
msgid "This `/subject/user` endpoint requires an authenticated user that has been granted the role \"User\" through the use of the `@RolesAllowed(\"${customer:User}\")` annotation, as we did not set the configuration property `customer`."
msgstr "这个 `/subject/secured` 端点需要一个经过认证的用户，该用户通过使用 `@RolesAllowed(\"Tester\")` 注解被授予 \"测试者 \"的角色。"

#. type: Plain text
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:344
#, fuzzy
msgid "This `/subject/secured` endpoint requires an authenticated user that has been granted the role `User` in production, but allows any authenticated user in development mode."
msgstr "这个 `/subject/secured` 端点需要一个经过认证的用户，该用户通过使用 `@RolesAllowed(\"Tester\")` 注解被授予 \"测试者 \"的角色。"

#. type: Title ==
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:345
#, no-wrap
msgid "References"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-authorization-of-web-endpoints-reference.adoc:347
msgid "xref:security-overview-concept.adoc[Quarkus Security overview]"
msgstr ""

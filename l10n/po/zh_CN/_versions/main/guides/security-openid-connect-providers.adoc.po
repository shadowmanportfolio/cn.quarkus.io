# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-07-18 02:59+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:6
#, no-wrap
msgid "Configuring Well-Known OpenID Connect Providers"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:10
#, no-wrap
msgid "Introduction"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:13
msgid "If you use xref:security-oidc-code-flow-authentication.adoc[OpenID Connect Authorization Code Flow] to protect Quarkus endpoints, then you need to configure Quarkus to tell it how to connect to OpenID Connect providers, how to authenticate to such providers, which scopes to use, and so on."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:15
msgid "Sometimes you need to use the configuration to work around the fact that some providers do not implement OpenID Connect completely or when they are in fact xref:security-oidc-code-flow-authentication.adoc#oauth2[OAuth2 providers only]."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:17
msgid "The configuration of such providers can become complex, very technical and difficult to understand."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:19
msgid "`quarkus.oidc.provider` configuration property has been introduced to refer to well-known OpenID Connect and OAuth2 providers. This property can be used to refer to a provider such as `github` with only a minimum number of customizations required, typically, an account specific `client id`, `client secret` and some properties have to be set to complete the configuration."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:21
msgid "This property can be used in `application.properties`, in xref:security-openid-connect-multitenancy.adoc[multi-tenant] set-ups if more than one provider has to be configured (for example, see https://quarkiverse.github.io/quarkiverse-docs/quarkus-renarde/dev/security.html#_using_oidc_for_login[Quarkus Renarde security documentation]), in custom xref:security-openid-connect-multitenancy.adoc#tenant-config-resolver[TenantConfigResolvers] if the tenant configurations are created dynamically."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:22
#, no-wrap
msgid "Well Known Providers"
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:25
#, no-wrap
msgid "GitHub"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:28
msgid "In order to set up OIDC for GitHub you need to create a new OAuth application in your https://github.com/settings/applications/new[GitHub developer settings]:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:29
#, no-wrap
msgid "oidc-github-1.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:33
msgid "Make sure to fill in the appropriate details, but more importantly the Authorization Callback URL, set to `http://localhost:8080/_renarde/security/github-success` (if you intend to test this using the Quarkus DEV mode)."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:35
msgid "Now click on `Register application` and you'll be shown your application page:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:36
#, no-wrap
msgid "oidc-github-2.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:41
msgid "You need to click on `Generate a new client secret`, confirm your credentials, and write down your Client ID and Client secret (especially that one, because you will not be able to see it again later from that page, but you can always recreate one, do don't worry too much):"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:42
#, no-wrap
msgid "oidc-github-3.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:45
msgid "Now add the following configuration to your `application.properties`:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:51
#, no-wrap
msgid ""
"quarkus.oidc.provider=github\n"
"quarkus.oidc.client-id=<Client ID>\n"
"quarkus.oidc.credentials.secret=<Secret>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:54
msgid "You can also use GitHub provider with `quarkus.oidc.application-type=service`, just set `quarkus.oidc.verify-access-token-with-user-info` configuration property to `true`."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:56
#, no-wrap
msgid "Google"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:59
msgid "In order to set up OIDC for Google you need to create a new project in your https://console.cloud.google.com/projectcreate[Google Cloud Platform console]:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:61
msgid "Pick a project name and click on `CREATE`."
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:62
#, no-wrap
msgid "oidc-google-1.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:65
msgid "Now make sure you select your project in the top selector, and click on the left-hand bar menu on `APIs and Services > OAuth consent screen`:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:66
#, no-wrap
msgid "oidc-google-2.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:69
msgid "Select `External` to authorise any Google user to log in to your application and press `CREATE`:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:70
#, no-wrap
msgid "oidc-google-3.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:73
msgid "Now you can fill in your application name, your support email, your developer contact information and press `SAVE AND CONTINUE`:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:74
#, no-wrap
msgid "oidc-google-4.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:77
msgid "Do not add any scopes on the next page, and press `SAVE AND CONTINUE`:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:78
#, no-wrap
msgid "oidc-google-5.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:81
msgid "Do not add any test user on the next page, and press `SAVE AND CONTINUE`:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:82
#, no-wrap
msgid "oidc-google-6.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:85
msgid "Click on the top menu `CREATE CREDENTIALS` > `OAuth client ID`:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:86
#, no-wrap
msgid "oidc-google-7.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:90
msgid "Select `Web application` as `Application type`, and add `http://localhost:8080/_renarde/security/oidc-success` in the `Authorised redirect URIs` list, then press `CREATE`:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:91
#, no-wrap
msgid "oidc-google-8.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:94
msgid "Copy your Client ID and Client Secret:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:95
#, no-wrap
msgid "oidc-google-9.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:98
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:140
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:259
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:302
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:359
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:389
msgid "You can now configure your `application.properties`:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:104
#, no-wrap
msgid ""
"quarkus.oidc.provider=google\n"
"quarkus.oidc.client-id=<Client ID>\n"
"quarkus.oidc.credentials.secret=<Secret>\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:107
#, no-wrap
msgid "Microsoft"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:111
msgid "In order to set up OIDC for Microsoft you need to go to your https://portal.azure.com[Microsoft Azure Portal], and search for `Azure Active Directory`, then click on it:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:112
#, no-wrap
msgid "oidc-microsoft-1.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:115
msgid "Once there, on the left side under `Manage`, click on `App registrations` then click on `New registration`:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:116
#, no-wrap
msgid "oidc-microsoft-2.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:120
msgid "Fill in your application name, select `Accounts in any organizational directory (Any Azure AD directory - Multitenant) and personal Microsoft accounts (e.g. Skype, Xbox)` to allow anyone to log in, and add a `Web` Redirect URI as `http://localhost:8080/_renarde/security/oidc-success`, then click on `Register`:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:121
#, no-wrap
msgid "oidc-microsoft-3.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:124
msgid "On that resulting page, copy the `Client Id` (under `Application (client) ID`, then click on `Add a certificate or secret`:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:125
#, no-wrap
msgid "oidc-microsoft-4.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:128
msgid "Now, under `Client secrets (0)`, click on `New client secret`:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:129
#, no-wrap
msgid "oidc-microsoft-5.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:132
msgid "Click on `Add` in that dialog without changing anything:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:133
#, no-wrap
msgid "oidc-microsoft-6.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:136
msgid "On the resulting page, copy your `Secret Value`:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:137
#, no-wrap
msgid "oidc-microsoft-7.png"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:146
#, no-wrap
msgid ""
"quarkus.oidc.provider=microsoft\n"
"quarkus.oidc.client-id=<Client ID>\n"
"quarkus.oidc.credentials.secret=<Secret>\n"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:152
msgid "Some Microsoft services may issue tokens whose signatures can only be verified if the current token's `nonce` header is reset with its SHA-256 digest value.  If your application has to deal with such tokens then please enable an Azure token customizer:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:159
#, no-wrap
msgid ""
"quarkus.oidc.provider=microsoft\n"
"quarkus.oidc.client-id=<Client ID>\n"
"quarkus.oidc.credentials.secret=<Secret>\n"
"quarkus.oidc.token.customizer-name=azure-access-token-customizer\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:164
#, no-wrap
msgid "Apple"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:169
msgid "In order to set up OIDC for Apple you need to create a developer account, and sign up for the 99€/year program, but you cannot test your application on `localhost` like most other OIDC providers: you will need to run it over `https` and make it publicly accessible, so for development purposes you may want to use a service such as https://ngrok.com."
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:171
msgid "Go to https://developer.apple.com/account/resources/identifiers/list[Create a new identifier] and press `+`"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:172
#, no-wrap
msgid "oidc-apple-1.png"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:175
msgid "Don't touch anything, keep `App IDs` selected, and press `Continue`:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:176
#, no-wrap
msgid "oidc-apple-2.png"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:179
msgid "Don't touch anything, keep `App` selected, and press `Continue`:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:180
#, no-wrap
msgid "oidc-apple-3.png"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:183
msgid "Enter a description and a Bundle ID (use your application package name):"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:184
#, no-wrap
msgid "oidc-apple-4.png"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:187
msgid "Then scroll down to find the `Sign in with Apple` Capability, select it, and press `Continue`:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:188
#, no-wrap
msgid "oidc-apple-5.png"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:191
msgid "Write down your App ID Prefix, then press `Register`:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:192
#, no-wrap
msgid "oidc-apple-6.png"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:195
msgid "Back on the `Identifiers` page, press `+`:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:196
#, no-wrap
msgid "oidc-apple-7.png"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:199
msgid "Select `Service IDs` and press `Continue`:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:200
#, no-wrap
msgid "oidc-apple-8.png"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:203
msgid "Enter a description and Bundle ID (use your application package name), then press `Continue`:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:204
#, no-wrap
msgid "oidc-apple-9.png"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:207
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:251
msgid "Now press `Register`:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:208
#, no-wrap
msgid "oidc-apple-10.png"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:211
msgid "Back on the service list, click on your newly created service:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:212
#, no-wrap
msgid "oidc-apple-11.png"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:215
msgid "Enable `Sign in with Apple` and press `Configure`:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:216
#, no-wrap
msgid "oidc-apple-12.png"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:219
msgid "Add your domain and return URL (set to `<host>/_renarde/security/oidc-success`) and press `Next`:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:220
#, no-wrap
msgid "oidc-apple-13.png"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:223
msgid "Now press `Done`:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:224
#, no-wrap
msgid "oidc-apple-14.png"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:227
msgid "Now press `Continue`:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:228
#, no-wrap
msgid "oidc-apple-15.png"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:231
msgid "And now press `Save`:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:232
#, no-wrap
msgid "oidc-apple-16.png"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:235
msgid "Go to the https://developer.apple.com/account/resources/authkeys/list[Keys] page on the left menu, and press `+`:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:236
#, no-wrap
msgid "oidc-apple-17.png"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:239
msgid "Fill in a key name, enable `Sign in with Apple`, and press `Configure`:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:240
#, no-wrap
msgid "oidc-apple-18.png"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:243
msgid "Select your Primary App ID and press `Save`:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:244
#, no-wrap
msgid "oidc-apple-19.png"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:247
msgid "Back on the key page, press `Continue`:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:248
#, no-wrap
msgid "oidc-apple-20.png"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:252
#, no-wrap
msgid "oidc-apple-21.png"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:255
msgid "Write down your `Key ID`, download your key and save it to your Quarkus application in `src/main/resources/AuthKey_<KEYID>.p8`:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:256
#, no-wrap
msgid "oidc-apple-22.png"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:268
#, no-wrap
msgid ""
"quarkus.oidc.provider=apple\n"
"quarkus.oidc.client-id=<Bundle ID>\n"
"quarkus.oidc.credentials.jwt.key-file=AuthKey_<Key ID>.p8\n"
"quarkus.oidc.credentials.jwt.token-key-id=<Key ID>\n"
"quarkus.oidc.credentials.jwt.issuer=<App ID Prefix>\n"
"quarkus.oidc.credentials.jwt.subject=<Bundle ID}\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:271
#, no-wrap
msgid "Facebook"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:276
msgid "Facebook you will not be let you test your application on `localhost` like most other OIDC providers: you will need to run it over `https` and make it publicly accessible, so for development purposes you may want to use a service such as https://ngrok.com."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:278
msgid "In order to set up OIDC for Facebook start by https://developers.facebook.com/apps/create/[Creating an application], select `None` as an app type, and press `Next`:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:279
#, no-wrap
msgid "oidc-facebook-1.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:282
msgid "Now enter an application name, and contact email, and press `Create app`:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:283
#, no-wrap
msgid "oidc-facebook-2.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:286
msgid "On the app page, click `Set up` on the `Facebook login` product:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:287
#, no-wrap
msgid "oidc-facebook-3.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:290
msgid "Quick the `Quickstarts` page and click on `Facebook login > Settings` on the left menu:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:291
#, no-wrap
msgid "oidc-facebook-4.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:294
msgid "Enter your `Redirect URIs` (set to `<host>/_renarde/security/oidc-success`) and press `Save changes`:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:295
#, no-wrap
msgid "oidc-facebook-5.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:298
msgid "Now go to `Settings > Basic` on the left-hand menu, and write down your `App ID` and `App secret`:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:299
#, no-wrap
msgid "oidc-facebook-6.png"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:308
#, no-wrap
msgid ""
"quarkus.oidc.provider=facebook\n"
"quarkus.oidc.client-id=<App ID>\n"
"quarkus.oidc.credentials.secret=<App secret>\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:311
#, no-wrap
msgid "Twitter"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:315
msgid "You can use Twitter for OIDC login, but at the moment, it restricts access to the user's email, which means you will have to obtain it and verify it yourself."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:317
msgid "In order to set up OIDC for Twitter start by https://developer.twitter.com/en/portal/projects/new[Creating a project], enter a project name, and press `Next`:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:318
#, no-wrap
msgid "oidc-twitter-1.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:321
msgid "Enter a use case, and press `Next`:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:322
#, no-wrap
msgid "oidc-twitter-2.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:325
msgid "Enter a project description, and press `Next`:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:326
#, no-wrap
msgid "oidc-twitter-3.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:329
msgid "Now enter an application name, and press `Next`:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:330
#, no-wrap
msgid "oidc-twitter-4.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:333
msgid "Write down your keys, because they will not be displayed again, and press `App Settings`:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:334
#, no-wrap
msgid "oidc-twitter-5.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:337
msgid "Navigate down to the `User authentication settings` section and press `Set up`:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:338
#, no-wrap
msgid "oidc-twitter-6.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:341
msgid "Check the `OAuth 2.0` check box:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:342
#, no-wrap
msgid "oidc-twitter-7.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:346
msgid "Select `Web App` as application type, then fill in your application details (use `<host>/_renarde/security/twitter-success` for the `Callback URI`)."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:349
msgid "Twitter doesn't require https usage in practice, but won't accept your `Website URL` without it, so you can still use ngrok for it."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:351
msgid "Now press `Save`:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:352
#, no-wrap
msgid "oidc-twitter-8.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:355
msgid "You can now copy your `Client ID` and `Client Secret` and press `Done`:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:356
#, no-wrap
msgid "oidc-twitter-9.png"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:365
#, no-wrap
msgid ""
"quarkus.oidc.provider=twitter\n"
"quarkus.oidc.client-id=<Client ID>\n"
"quarkus.oidc.credentials.secret=<Client Secret>\n"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:372
msgid "Twitter provider requires Proof Key for Code Exchange (PKCE) which is supported by the `quarkus.oidc.provider=twitter` declaration.  Quarkus has to encrypt the current PKCE code verifier in a state cookie while the authorization code flow with Twitter is in progress and it will generate a secure random secret key for encrypting it."
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:375
msgid "You can provide your own secret key for encrypting the PKCE code verifier if you prefer with the `quarkus.oidc.authentication.pkce-secret` property but note that this secret should be 32 characters long, and an error will be reported if it is less than 16 characters long."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:378
#, no-wrap
msgid "Spotify"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:381
msgid "Create a https://developer.spotify.com/documentation/general/guides/authorization/app-settings/[Spotify application]:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:382
#, no-wrap
msgid "oidc-spotify-1.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:385
msgid "Don't forget to add `http://localhost:8080` as a redirect URI for testing during development purposes. You should get a client id and secret generated once a Spotify application setup has been complete, for example:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:386
#, no-wrap
msgid "oidc-spotify-2.png"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:395
#, no-wrap
msgid ""
"quarkus.oidc.provider=spotify\n"
"quarkus.oidc.client-id=<Client ID>\n"
"quarkus.oidc.credentials.secret=<Client Secret>\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:397
#, no-wrap
msgid "Support for multiple providers"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:400
msgid "If you would like to support authenticating users with more than one provider then a provider-specific tenant configuration resolution must be supported."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:402
msgid "For more information, see the Quarkus xref:security-openid-connect-multitenancy.adoc#static-tenant-resolution[Using OpenID Connect (OIDC) Multi-Tenancy] guide."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:403
#, no-wrap
msgid "Access provider services with token propagation"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:407
msgid "Sometimes, only authenticating users with a social provider is not enough.  A provider-specific service also needs to be accessed for the Quarkus OIDC `web-app` application to fetch or update data from the provider service on behalf of the currently authenticated user."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:410
msgid "As mentioned in the xref:security-oidc-code-flow-authentication.adoc[OIDC code flow mechanism for protecting web applications] guide, ID and access tokens are returned after the authorization code flow has been completed, with some providers like `GitHub` returning an access token only.  It is this access token that has to be propagated to services such as `Google Calendar`, or `Spotify Playlists` for the currently authenticated user to be able to use such services."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:413
msgid "You do not have to bring provider-specific libraries in order to achieve this, but instead you can use a reactive `Token Propagation` filter, which can be bound to a given REST client with a simple annotation.  For more information, see the Quarkus xref:security-openid-connect-client-reference.adoc#token-propagation-reactive[Access token propagation] guide."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:415
msgid "For example, after you have configured the xref:google[Google] provider, you can have events added to the user's Google Calendar by using a REST client as shown in the following example:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:419
#, no-wrap
msgid "package org.acme.calendar;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:421
#, no-wrap
msgid "import org.eclipse.microprofile.rest.client.inject.RegisterRestClient;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:429
#, no-wrap
msgid ""
"import io.quarkus.oidc.token.propagation.AccessToken;\n"
"import io.smallrye.mutiny.Uni;\n"
"import jakarta.ws.rs.Consumes;\n"
"import jakarta.ws.rs.POST;\n"
"import jakarta.ws.rs.Path;\n"
"import jakarta.ws.rs.Produces;\n"
"import jakarta.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:445
#, no-wrap
msgid ""
"@RegisterRestClient(configKey=\"google-calendar-api\")\n"
"@AccessToken  <1>\n"
"@Path(\"/calendars/primary\")\n"
"public interface GoogleCalendarClient {\n"
"    @POST\n"
"    @Path(\"events\")\n"
"    @Consumes(MediaType.APPLICATION_JSON)\n"
"    @Produces(MediaType.APPLICATION_JSON)\n"
"    Uni<String> addEvent(Event event);\n"
"    public static class Event {\n"
"        public String summary;\n"
"        public String kind = \"calendar#event\";\n"
"        public Time start;\n"
"        public Time end\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:456
#, no-wrap
msgid ""
"    public static class Time {\n"
"        public String dateTime;\n"
"        public String timeZone = \"Europe/CET\";\n"
"        public Time() {\n"
"        }\n"
"        public Time(String value) {\n"
"            dateTime = value;\n"
"\t}\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:459
msgid "The `@AccessToken` annotation enables an access token propagation to the target service."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:461
msgid "Finally, you need to configure the Google Calendar address and request the Google Calendar scope for an access token, as outlined in the following example:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:466
#, no-wrap
msgid ""
"quarkus.oidc.authentication.scopes=email,profile,https://www.googleapis.com/auth/calendar\n"
"quarkus.rest-client.google-calendar-api.url=https://www.googleapis.com/calendar/v3\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:468
#, no-wrap
msgid "References"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:471
msgid "xref:security-oidc-code-flow-authentication.adoc[OIDC code flow mechanism for protecting web applications]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-providers.adoc:471
msgid "xref:security-overview.adoc[Quarkus Security overview]"
msgstr ""

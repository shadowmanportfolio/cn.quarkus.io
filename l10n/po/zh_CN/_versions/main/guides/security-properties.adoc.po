# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-10-12 02:16+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/main/guides/security-properties.adoc:6
#, no-wrap
msgid "Using Security with .properties File"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-properties.adoc:15
msgid "Quarkus provides support for properties file-based authentication intended for development and testing purposes.  It is not recommended to use this authentication in production as, at present, only plain-text and MD5 hashed passwords are used, and properties files are generally too limited."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-properties.adoc:17
msgid "Add the following to your build file:"
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/security-properties.adoc:19
#, no-wrap
msgid "pom.xml"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-properties.adoc:25
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-elytron-security-properties-file</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/security-properties.adoc:28
#, no-wrap
msgid "build.gradle"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-properties.adoc:31
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-elytron-security-properties-file\")\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/security-properties.adoc:33
#, no-wrap
msgid "Configuration"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-properties.adoc:37
msgid "The elytron-security-properties-file extension currently supports two different realms for storing authentication and authorization information.  Both support storage of this information in properties files."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-properties.adoc:39
msgid "The following sections detail the specific configuration properties."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/security-properties.adoc:42
#, no-wrap
msgid "Properties Files Realm Configuration"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-properties.adoc:47
msgid "The properties files realm supports the mapping of users to passwords and users to roles with a combination of properties files.  They are configured with properties starting with `quarkus.security.users.file`."
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/security-properties.adoc:48
#, no-wrap
msgid "Example of the `application.properties` file section for property files realm"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-properties.adoc:56
#, no-wrap
msgid ""
"quarkus.security.users.file.enabled=true\n"
"quarkus.security.users.file.users=test-users.properties\n"
"quarkus.security.users.file.roles=test-roles.properties\n"
"quarkus.security.users.file.realm-name=MyRealm\n"
"quarkus.security.users.file.plain-text=true\n"
msgstr ""

#. type: Title ====
#: upstream/_versions/main/guides/security-properties.adoc:58
#, no-wrap
msgid "Users.properties"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-properties.adoc:61
msgid "The `quarkus.security.users.file.users` configuration property specifies a classpath resource which is a properties file with a user-to-password mapping, one per line."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-properties.adoc:63
msgid "The following xref:test-users-example[Example of `test-users.properties`] illustrates the format:"
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/security-properties.adoc:65
#, no-wrap
msgid "Example of `test-users.properties`"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-properties.adoc:72
#, no-wrap
msgid ""
"scott=jb0ss <1>\n"
"jdoe=p4ssw0rd <2>\n"
"stuart=test\n"
"noadmin=n0Adm1n\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-properties.adoc:74
msgid "User `scott` has password defined as `jb0ss`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-properties.adoc:75
msgid "User `jdoe` has password defined as `p4ssw0rd`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-properties.adoc:78
msgid "This file has usernames and passwords stored in plain text, which is not recommended. If plain text is set to false (or omitted) in the config, then passwords must be stored in the form `MD5 ( username : realm : password )`.  This can be generated for the first example above by running the command `echo -n scott:MyRealm:jb0ss | md5` from the command line."
msgstr ""

#. type: Title ====
#: upstream/_versions/main/guides/security-properties.adoc:79
#, no-wrap
msgid "Roles.properties"
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/security-properties.adoc:81
#, no-wrap
msgid "Example of `test-roles.properties`"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-properties.adoc:88
#, no-wrap
msgid ""
"scott=Admin,admin,Tester,user <1>\n"
"jdoe=NoRolesUser <2>\n"
"stuart=admin,user <3>\n"
"noadmin=user\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-properties.adoc:90
msgid "User `scott` has been assigned the roles `Admin`, `admin`, `Tester` and `user`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-properties.adoc:91
msgid "User `jdoe` has been assigned the role `NoRolesUser`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-properties.adoc:92
msgid "User `stuart` has been assigned the roles `admin` and `user`."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/security-properties.adoc:93
#, no-wrap
msgid "Embedded Realm Configuration"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-properties.adoc:97
msgid "The embedded realm also supports the mapping of users to passwords and users to roles. It uses the main `application.properties` Quarkus configuration file to embed this information.  They are configured with properties starting with `quarkus.security.users.embedded`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-properties.adoc:99
msgid "The following is an example application.properties file section illustrating the embedded realm configuration:"
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/security-properties.adoc:100
#, no-wrap
msgid "Example of the `application.properties` file section for embedded realm"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-properties.adoc:113
#, no-wrap
msgid ""
"quarkus.security.users.embedded.enabled=true\n"
"quarkus.security.users.embedded.plain-text=true\n"
"quarkus.security.users.embedded.users.scott=jb0ss\n"
"quarkus.security.users.embedded.users.stuart=test\n"
"quarkus.security.users.embedded.users.jdoe=p4ssw0rd\n"
"quarkus.security.users.embedded.users.noadmin=n0Adm1n\n"
"quarkus.security.users.embedded.roles.scott=Admin,admin,Tester,user\n"
"quarkus.security.users.embedded.roles.stuart=admin,user\n"
"quarkus.security.users.embedded.roles.jdoe=NoRolesUser\n"
"quarkus.security.users.embedded.roles.noadmin=user\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-properties.adoc:117
msgid "As with the first example, this file has usernames and passwords stored in plain text, which is not recommended. If plain text is set to false (or omitted) in the config, then passwords must be stored in the form `MD5 ( username : realm : password )`.  This can be generated for the first example above by running the command `echo -n scott:MyRealm:jb0ss | md5` from the command line."
msgstr ""

#. type: Title ====
#: upstream/_versions/main/guides/security-properties.adoc:119
#, no-wrap
msgid "Embedded Users"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-properties.adoc:123
msgid "The user to password mappings are specified in the `application.properties` file by properties keys of the form `quarkus.security.users.embedded.users.<user>=<password>`.  The following xref:password-example[Example of passwords] illustrates the syntax with 4 user-to-password mappings:"
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/security-properties.adoc:125
#, no-wrap
msgid "Example of passwords"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-properties.adoc:132
#, no-wrap
msgid ""
"quarkus.security.users.embedded.users.scott=jb0ss # <1>\n"
"quarkus.security.users.embedded.users.stuart=test # <2>\n"
"quarkus.security.users.embedded.users.jdoe=p4ssw0rd\n"
"quarkus.security.users.embedded.users.noadmin=n0Adm1n\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-properties.adoc:134
msgid "User `scott` has password `jb0ss`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-properties.adoc:135
msgid "User `stuart` has password `test`"
msgstr ""

#. type: Title ====
#: upstream/_versions/main/guides/security-properties.adoc:136
#, no-wrap
msgid "Embedded Roles"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-properties.adoc:140
msgid "The user to role mappings are specified in the `application.properties` file by properties keys of the form `quarkus.security.users.embedded.roles.<user>=role1[,role2[,role3[,...]]]`.  The following xref:roles-example[Example of roles] illustrates the syntax with 4 user-to-role mappings:"
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/security-properties.adoc:142
#, no-wrap
msgid "Example of roles"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-properties.adoc:149
#, no-wrap
msgid ""
"quarkus.security.users.embedded.roles.scott=Admin,admin,Tester,user # <1>\n"
"quarkus.security.users.embedded.roles.stuart=admin,user # <2>\n"
"quarkus.security.users.embedded.roles.jdoe=NoRolesUser\n"
"quarkus.security.users.embedded.roles.noadmin=user\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-properties.adoc:151
msgid "User `scott` has roles `Admin`, `admin`, `Tester`, and `user`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-properties.adoc:152
msgid "User `stuart` has roles `admin` and `user`"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/security-properties.adoc:153
#, no-wrap
msgid "References"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-properties.adoc:155
msgid "xref:security-overview.adoc[Quarkus Security overview]"
msgstr ""

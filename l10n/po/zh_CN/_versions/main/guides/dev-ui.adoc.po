# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-10-13 02:22+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/main/guides/dev-ui.adoc:6
#, no-wrap
msgid "Dev UI"
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/dev-ui.adoc:14
#, no-wrap
msgid "Dev UI v2"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/dev-ui.adoc:17
msgid "This guide covers the Dev UI v2, which is the default from Quarkus 3 onwards."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:20
msgid "This guide covers the Quarkus Dev UI for xref:building-my-first-extension.adoc[extension authors]."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:24
msgid "Quarkus ships with a Developer UI, which is available in dev mode (when you start quarkus with `mvn quarkus:dev`) at http://localhost:8080/q/dev-ui[/q/dev-ui] by default. It will show you something like this:"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#: upstream/_versions/main/guides/dev-ui.adoc:25
#: upstream/_versions/main/guides/dev-ui.adoc:39
#: upstream/_versions/main/guides/dev-ui.adoc:63
#: upstream/_versions/main/guides/dev-ui.adoc:108
#: upstream/_versions/main/guides/dev-ui.adoc:126
#: upstream/_versions/main/guides/dev-ui.adoc:169
#: upstream/_versions/main/guides/dev-ui.adoc:190
#: upstream/_versions/main/guides/dev-ui.adoc:499
#: upstream/_versions/main/guides/dev-ui.adoc:612
#: upstream/_versions/main/guides/dev-ui.adoc:684
#: upstream/_versions/main/guides/dev-ui.adoc:754
#: upstream/_versions/main/guides/dev-ui.adoc:808
#: upstream/_versions/main/guides/dev-ui.adoc:1021
#, no-wrap
msgid "Dev"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/dev-ui.adoc:25
#, no-wrap
msgid "dev-ui-overview-v2.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:28
msgid "It allows you to:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:30
msgid "quickly visualize all the extensions currently loaded"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:31
msgid "view extension statuses and go directly to extension documentation"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:32
msgid "view and change `Configuration`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:33
msgid "manage and visualize `Continuous Testing`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:34
msgid "view `Dev Services` information"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:35
msgid "view the Build information"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:36
msgid "view and stream various logs"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:38
msgid "Each extension used in the application will be listed and you can navigate to the guide for each extension, see some more information on the extension, and view configuration applicable for that extension:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/dev-ui.adoc:39
#, no-wrap
msgid "dev-ui-extension-card-v2.png"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/dev-ui.adoc:41
#, no-wrap
msgid "Make my extension extend the Dev UI"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:44
msgid "In order to make your extension listed in the Dev UI you don't need to do anything!"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:46
msgid "So you can always start with that :)"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:48
msgid "Extensions can:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:50
msgid "xref:add-links-to-an-extension-card[Add links to an extension card]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:51
msgid "xref:add-full-pages[Add full custom pages]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:52
msgid "xref:add-a-log-file[Add a log stream]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:53
msgid "xref:add-a-section-menu[Add a section menu]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:54
msgid "xref:custom-cards[Create a custom card]"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/dev-ui.adoc:55
#, no-wrap
msgid "Add links to an extension card"
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/dev-ui.adoc:57
#, no-wrap
msgid "External Links"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:60
msgid "These are links that reference other (external from Dev UI) data. This data can be HTML pages, text or other data."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:62
msgid "A good example of this is the SmallRye OpenAPI extension that contains links to the generated openapi schema in both json and yaml format, and a link to Swagger UI:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/dev-ui.adoc:63
#, no-wrap
msgid "dev-ui-extension-openapi-v2.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:66
msgid "The links to these external references is known at build time, so to get links like this on your card, all you need to do is add the following Build Step in your extension:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:71
#, no-wrap
msgid ""
"@BuildStep(onlyIf = IsDevelopment.class)// <1>\n"
"public CardPageBuildItem pages(NonApplicationRootPathBuildItem nonApplicationRootPathBuildItem) {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:73
#, no-wrap
msgid "    CardPageBuildItem cardPageBuildItem = new CardPageBuildItem(); // <2>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:78
#, no-wrap
msgid ""
"    cardPageBuildItem.addPage(Page.externalPageBuilder(\"Schema yaml\") // <3>\n"
"            .url(nonApplicationRootPathBuildItem.resolvePath(\"openapi\")) // <4>\n"
"            .isYamlContent() // <5>\n"
"            .icon(\"font-awesome-solid:file-lines\")); // <6>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:83
#, no-wrap
msgid ""
"    cardPageBuildItem.addPage(Page.externalPageBuilder(\"Schema json\")\n"
"            .url(nonApplicationRootPathBuildItem.resolvePath(\"openapi\") + \"?format=json\")\n"
"            .isJsonContent()\n"
"            .icon(\"font-awesome-solid:file-code\"));\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:88
#, no-wrap
msgid ""
"    cardPageBuildItem.addPage(Page.externalPageBuilder(\"Swagger UI\")\n"
"            .url(nonApplicationRootPathBuildItem.resolvePath(\"swagger-ui\"))\n"
"            .isHtmlContent()\n"
"            .icon(\"font-awesome-solid:signs-post\"));\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:91
#, no-wrap
msgid ""
"    return cardPageBuildItem;\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:93
msgid "Always make sure that this build step is only run when in dev mode"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:94
msgid "To add anything on the card, you need to return/produce a `CardPageBuildItem`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:95
msgid "To add a link, you can use the `addPage` method, as all links go to a \"page\". `Page` has some builders to assist with building a page. For `external` links, use the `externalPageBuilder`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:96
msgid "Adding the url of the external link (in this case we use `NonApplicationRootPathBuildItem` to create this link, as this link is under the configurable non application path, default `/q`). Always use `NonApplicationRootPathBuildItem` if your link is available under `/q`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:97
msgid "You can (optionally) hint the content type of the content you are navigating to. If there is no hint, a header call will be made to determine the `MediaType`;"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:98
msgid "You can add an icon. All free font-awesome icons are available."
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/dev-ui.adoc:100
#, no-wrap
msgid "Note about icons"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:103
msgid "If you find your icon at https://fontawesome.com/search?o=r&m=free[Font awesome], you can map as follow: Example `<i class=\"fa-solid fa-house\"></i>` will map to `font-awesome-solid:house`, so `fa` becomes `font-awesome` and for the icon name, remove the `fa-`;"
msgstr ""

#. type: Title ====
#: upstream/_versions/main/guides/dev-ui.adoc:104
#, no-wrap
msgid "Embedding external content"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:107
msgid "By default, even external links will render inside (embedded) in Dev UI. In the case of HTML, the page will be rendered and any other content will be shown using https://codemirror.net/[code-mirror] to markup the media type. For example the open api schema document in `yaml` format:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/dev-ui.adoc:108
#, no-wrap
msgid "dev-ui-extension-openapi-embed-v2.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:111
msgid "If you do not want to embed the content, you can use the `.doNotEmbed()` on the Page Builder, this will then open the link in a new tab."
msgstr ""

#. type: Title ====
#: upstream/_versions/main/guides/dev-ui.adoc:112
#, no-wrap
msgid "Runtime external links "
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:115
msgid "The example above assumes you know the link to use at build time. There might be cases where you only know this at runtime. In that case you can use a xref:JsonRPC[JsonRPC] Method that returns the link to add, and use that when creating the link. Rather than using the `.url` method on the page builder, use the `.dynamicUrlJsonRPCMethodName(\"yourJsonRPCMethodName\")`."
msgstr ""

#. type: Title ====
#: upstream/_versions/main/guides/dev-ui.adoc:116
#, no-wrap
msgid "Adding labels"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:119
msgid "You can add an option label to the link in the card using one of the builder methods on the page builder. These labels can be"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:121
msgid "static (known at build time) `.staticLabel(\"staticLabelValue\")`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:122
msgid "dynamic (loaded at runtime) `.dynamicLabelJsonRPCMethodName(\"yourJsonRPCMethodName\")`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:123
msgid "streaming (continuously streaming updated values at runtime) `.streamingLabelJsonRPCMethodName(\"yourJsonRPCMethodName\")`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:125
msgid "For dynamic and streaming labels, see the xref:JsonRPC[JsonRPC] Section."
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/dev-ui.adoc:126
#, no-wrap
msgid "dev-ui-extension-card-label-v2.png"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/dev-ui.adoc:128
#, no-wrap
msgid "Add full pages"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:131
msgid "You can also link to an \"internal\" page (as opposed to the above \"external\" page). This means that you can build the page and add data and actions for rendering in Dev UI."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:132
#: upstream/_versions/main/guides/dev-ui.adoc:1155
#, no-wrap
msgid "Build time data"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:135
msgid "To make build time data available in your full page, you can add any data to your `CardPageBuildItem` with a key and a value:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:140
#, no-wrap
msgid ""
"CardPageBuildItem pageBuildItem = new CardPageBuildItem();\n"
"pageBuildItem.addBuildTimeData(\"someKey\", getSomeValueObject());\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:143
msgid "You can add multiple of these key-value pairs for all the data you know at build time that you need on the page."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:145
msgid "There are a few options to add full page content in Dev UI. Starting from the most basic (good start) to a full blown web-component (preferred)."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/dev-ui.adoc:146
#, no-wrap
msgid "Display some build time data on a screen (without having to do frontend coding):"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:149
msgid "If you have some data that is known at build time that you want to display you can use one of the following builders in `Page`:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:151
msgid "xref:raw-data[Raw data]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:152
msgid "xref:table-data[Table data]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:153
msgid "xref:qute-data[Qute data]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:154
msgid "xref:web-component-page[Web Component page]"
msgstr ""

#. type: Title ====
#: upstream/_versions/main/guides/dev-ui.adoc:155
#, no-wrap
msgid "Raw data"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:157
msgid "This will display your data in it's raw (serialised) json value:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:163
#, no-wrap
msgid ""
"cardPageBuildItem.addPage(Page.rawDataPageBuilder(\"Raw data\") // <1>\n"
"                .icon(\"font-awesome-brands:js\")\n"
"                .buildTimeDataKey(\"someKey\")); // <2>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:165
msgid "Use the `rawDataPageBuilder`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:166
#: upstream/_versions/main/guides/dev-ui.adoc:187
msgid "Link back to the key used when you added the build time data in `addBuildTimeData` on the Page BuildItem."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:168
msgid "That will create a link to a page that renders the raw data in json:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/dev-ui.adoc:169
#, no-wrap
msgid "dev-ui-raw-page-v2.png"
msgstr ""

#. type: Title ====
#: upstream/_versions/main/guides/dev-ui.adoc:171
#, no-wrap
msgid "Table data"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:174
msgid "You can also display your Build time data in a table if the structure allows it:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:183
#, no-wrap
msgid ""
"cardPageBuildItem.addPage(Page.tableDataPageBuilder(\"Table data\") // <1>\n"
"                .icon(\"font-awesome-solid:table\")\n"
"                .showColumn(\"timestamp\") // <2>\n"
"                .showColumn(\"user\") // <2>\n"
"                .showColumn(\"fullJoke\") // <2>\n"
"                .buildTimeDataKey(\"someKey\")); // <3>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:185
msgid "Use the `tableDataPageBuilder`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:186
msgid "Optionally only show certain fields."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:189
msgid "That will create a link to a page that renders the data in a table:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/dev-ui.adoc:190
#, no-wrap
msgid "dev-ui-table-page-v2.png"
msgstr ""

#. type: Title ====
#: upstream/_versions/main/guides/dev-ui.adoc:192
#, no-wrap
msgid "Qute data"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:195
msgid "You can also display your build time data using a qute template. All build time data keys are available to use in the template:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:201
#, no-wrap
msgid ""
"cardPageBuildItem.addPage(Page.quteDataPageBuilder(\"Qute data\") // <1>\n"
"                .icon(\"font-awesome-solid:q\")\n"
"                .templateLink(\"qute-jokes-template.html\")); // <2>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:203
msgid "Use the `quteDataPageBuilder`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:204
msgid "Link to the Qute template in `/deployment/src/main/resources/dev-ui/`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:206
msgid "Using any Qute template to display the data, for example `qute-jokes-template.html`:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:227
#, no-wrap
msgid ""
"<table>\n"
"    <thead>\n"
"        <tr>\n"
"            <th>Timestamp</th>\n"
"            <th>User</th>\n"
"            <th>Joke</th>\n"
"        </tr>\n"
"    </thead>\n"
"    <tbody>\n"
"        {#for joke in jokes} // <1>\n"
"        <tr>\n"
"            <td>{joke.timestamp}</td>\n"
"            <td><span><img src=\"{joke.profilePic}\" height=\"30px\"></img> {joke.user}</span></td>\n"
"            <td>{joke.fullJoke}</td>\n"
"        </tr>\n"
"        {/for}\n"
"    </tbody>\n"
"</table>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:229
msgid "`jokes` added as a build time data key on the Page Build Item."
msgstr ""

#. type: Title ====
#: upstream/_versions/main/guides/dev-ui.adoc:230
#, no-wrap
msgid "Web Component page"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:233
msgid "To build an interactive page with actions and runtime (or build time) data, you need to use the web component page:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:240
#, no-wrap
msgid ""
"cardPageBuildItem.addPage(Page.webComponentPageBuilder() // <1>\n"
"                    .icon(\"font-awesome-solid:egg\")\n"
"                    .componentLink(\"qwc-arc-beans.js\") // <2>\n"
"                    .staticLabel(String.valueOf(beans.size())));\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:242
msgid "Use the `webComponentPageBuilder`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:243
msgid "Link to the Web Component in `/deployment/src/main/resources/dev-ui/`. The title can also be defined (using `.title(\"My title\")` in the builder), but if not the title will be assumed from the componentLink, which should always have the format `qwc` (stands for Quarkus Web Component) dash `extensionName` (example, `arc` in this case ) dash `page title` (\"Beans\" in this case)"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:245
msgid "Dev UI uses https://lit.dev/[Lit] to make building these web components easier. You can read more about Web Components and Lit:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:247
msgid "https://www.webcomponents.org/introduction[Web components Getting started]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:248
msgid "https://lit.dev/docs/[Lit documentation]"
msgstr ""

#. type: Title =====
#: upstream/_versions/main/guides/dev-ui.adoc:249
#, no-wrap
msgid "Basic structure of a Web component page"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:252
msgid "A Web component page is just a JavaScript Class that creates a new HTML Element:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:257
#, no-wrap
msgid ""
"import { LitElement, html, css} from 'lit'; // <1>\n"
"import { beans } from 'build-time-data'; // <2>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:262
#, no-wrap
msgid ""
"/**\n"
" * This component shows the Arc Beans\n"
" */\n"
"export class QwcArcBeans extends LitElement { // <3>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:267
#, no-wrap
msgid ""
"    static styles = css` // <4>\n"
"        .annotation {\n"
"          color: var(--lumo-contrast-50pct); // <5>\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:272
#: upstream/_versions/main/guides/dev-ui.adoc:346
#, no-wrap
msgid ""
"        .producer {\n"
"          color: var(--lumo-primary-text-color);\n"
"        }\n"
"        `;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:276
#, no-wrap
msgid ""
"    static properties = {\n"
"        _beans: {state: true}, // <6>\n"
"    };\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:281
#, no-wrap
msgid ""
"    constructor() { // <7>\n"
"        super();\n"
"        this._beans = beans;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:294
#, no-wrap
msgid ""
"    render() { // <8>\n"
"        if (this._beans) {\n"
"            return html`<ul>\n"
"                ${this._beans.map((bean) => // <9>\n"
"                    html`<li>${bean.providerType.name}</li>`\n"
"                )}</ul>`;\n"
"        } else {\n"
"            return html`No beans found`;\n"
"        }\n"
"    }\n"
"}\n"
"customElements.define('qwc-arc-beans', QwcArcBeans); // <10>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:298
msgid "You can import Classes and/or functions from other libraries.  In this case we use the `LitElement` class and `html` & `css` functions from `Lit`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:299
msgid "Build time data as defined in the Build step and can be imported using the key and always from `build-time-data`. All keys added in your Build step will be available."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:300
msgid "The component should be named in the following format: Qwc (stands for Quarkus Web Component) then Extension Name then Page Title, all concatenated with Camel Case. This will also match the file name format as described earlier. The component should also extend `LitComponent`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:301
msgid "CSS styles can be added using the `css` function, and these styles only apply to your component."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:302
msgid "Styles can reference globally defined CSS variables to make sure your page renders correctly, especially when switching between light and dark mode. You can find all CSS variables in the Vaadin documentation (https://vaadin.com/docs/latest/styling/lumo/lumo-style-properties/color[Color], https://vaadin.com/docs/latest/styling/lumo/lumo-style-properties/size-space[Sizing and Spacing], etc)"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:303
msgid "Properties can be added. Use `_` in front of a property if that property is private. Properties are usually injected in the HTML template, and can be defined as having state, meaning that if that property changes, the component should re-render. In this case, the beans are Build time data and only change on hot-reload, which will be covered later."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:304
msgid "Constructors (optional) should always call `super` first, and then set the default values for the properties."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:305
msgid "The render method (from `LitElement`) will be called to render the page. In this method you return the markup of the page you want. You can use the `html` function from `Lit`, that gives you a template language to output the HTML you want. Once the template is created, you only need to set/change the properties to re-render the page content. Read more about https://lit.dev/docs/components/rendering/[Lit html]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:306
msgid "You can use the built-in template functions to do conditional, list, etc. Read more about https://lit.dev/docs/templates/overview/[Lit Templates]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:307
msgid "You always need to register your Web component as a custom element, with a unique tag. Here the tag will follow the same format as the filename (`qwc` dash `extension name` dash `page title` );"
msgstr ""

#. type: Title =====
#: upstream/_versions/main/guides/dev-ui.adoc:308
#, no-wrap
msgid "Using Vaadin UI components for rendering"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:311
msgid "Dev UI makes extensive usage of https://vaadin.com/docs/latest/components[Vaadin web components] as UI Building blocks."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:313
msgid "As an example, the Arc Beans are rendered using a https://vaadin.com/docs/latest/components/grid[Vaadin Grid]:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:322
#, no-wrap
msgid ""
"import { LitElement, html, css} from 'lit';\n"
"import { beans } from 'build-time-data';\n"
"import '@vaadin/grid'; // <1>\n"
"import { columnBodyRenderer } from '@vaadin/grid/lit.js'; // <2>\n"
"import '@vaadin/vertical-layout';\n"
"import 'qui-badge'; // <3>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:327
#, no-wrap
msgid ""
"/**\n"
" * This component shows the Arc Beans\n"
" */\n"
"export class QwcArcBeans extends LitElement {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:333
#, no-wrap
msgid ""
"    static styles = css`\n"
"        .arctable {\n"
"          height: 100%;\n"
"          padding-bottom: 10px;\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:337
#, no-wrap
msgid ""
"        code {\n"
"          font-size: 85%;\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:341
#, no-wrap
msgid ""
"        .annotation {\n"
"          color: var(--lumo-contrast-50pct);\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:350
#, no-wrap
msgid ""
"    static properties = {\n"
"        _beans: {state: true},\n"
"    };\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:355
#, no-wrap
msgid ""
"    constructor() {\n"
"        super();\n"
"        this._beans = beans;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:358
#, no-wrap
msgid ""
"    render() {\n"
"        if (this._beans) {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:366
#, no-wrap
msgid ""
"            return html`\n"
"                <vaadin-grid .items=\"${this._beans}\" class=\"arctable\" theme=\"no-border\">\n"
"                    <vaadin-grid-column auto-width\n"
"                        header=\"Bean\"\n"
"                        ${columnBodyRenderer(this._beanRenderer, [])}\n"
"                        resizable>\n"
"                    </vaadin-grid-column>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:372
#, no-wrap
msgid ""
"                    <vaadin-grid-column auto-width\n"
"                        header=\"Kind\"\n"
"                        ${columnBodyRenderer(this._kindRenderer, [])}\n"
"                        resizable>\n"
"                    </vaadin-grid-column>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:379
#, no-wrap
msgid ""
"                    <vaadin-grid-column auto-width\n"
"                        header=\"Associated Interceptors\"\n"
"                        ${columnBodyRenderer(this._interceptorsRenderer, [])}\n"
"                        resizable>\n"
"                    </vaadin-grid-column>\n"
"                </vaadin-grid>`;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:384
#, no-wrap
msgid ""
"        } else {\n"
"            return html`No beans found`;\n"
"        }\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:394
#, no-wrap
msgid ""
"    _beanRenderer(bean) {\n"
"        return html`<vaadin-vertical-layout>\n"
"      <code class=\"annotation\">@${bean.scope.simpleName}</code>\n"
"      ${bean.nonDefaultQualifiers.map(qualifier =>\n"
"            html`${this._qualifierRenderer(qualifier)}`\n"
"        )}\n"
"      <code>${bean.providerType.name}</code>\n"
"      </vaadin-vertical-layout>`;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:403
#, no-wrap
msgid ""
"    _kindRenderer(bean) {\n"
"      return html`\n"
"        <vaadin-vertical-layout>\n"
"          ${this._kindBadgeRenderer(bean)}\n"
"          ${this._kindClassRenderer(bean)}\n"
"        </vaadin-vertical-layout>\n"
"    `;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:407
#, no-wrap
msgid ""
"    _kindBadgeRenderer(bean){\n"
"      let kind = this._camelize(bean.kind);\n"
"      let level = null;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:417
#, no-wrap
msgid ""
"      if(bean.kind.toLowerCase() === \"field\"){\n"
"        kind = \"Producer field\";\n"
"        level = \"success\";\n"
"      }else if(bean.kind.toLowerCase() === \"method\"){\n"
"          kind = \"Producer method\";\n"
"          level = \"success\";\n"
"      }else if(bean.kind.toLowerCase() === \"synthetic\"){\n"
"        level = \"contrast\";\n"
"      }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:424
#, no-wrap
msgid ""
"      return html`\n"
"        ${level\n"
"          ? html`<qui-badge level='${level}' small><span>${kind}</span></qui-badge>` \n"
"          : html`<qui-badge small><span>${kind}</span></qui-badge>`\n"
"        }`;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:433
#, no-wrap
msgid ""
"    _kindClassRenderer(bean){\n"
"      return html`\n"
"          ${bean.declaringClass\n"
"            ? html`<code class=\"producer\">${bean.declaringClass.simpleName}.${bean.memberName}()</code>`\n"
"            : html`<code class=\"producer\">${bean.memberName}</code>`\n"
"          }\n"
"      `;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:446
#, no-wrap
msgid ""
"    _interceptorsRenderer(bean) {\n"
"        if (bean.interceptors && bean.interceptors.length > 0) {\n"
"            return html`<vaadin-vertical-layout>\n"
"                          ${bean.interceptorInfos.map(interceptor =>\n"
"                              html`<div>\n"
"                                    <code>${interceptor.interceptorClass.name}</code> \n"
"                                    <qui-badge class=\"${bean.kind.toLowerCase()}\" small pill><span>${interceptor.priority}</span></qui-badge>\n"
"                                  </div>`\n"
"                          )}\n"
"                        </vaadin-vertical-layout>`;\n"
"        }\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:450
#, no-wrap
msgid ""
"    _qualifierRenderer(qualifier) {\n"
"        return html`<code class=\"annotation\">${qualifier.simpleName}</code>`;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:460
#, no-wrap
msgid ""
"    _camelize(str) {\n"
"        return str.replace(/(?:^\\w|[A-Z]|\\b\\w|\\s+)/g, function (match, index) {\n"
"            if (+match === 0)\n"
"                return \"\";\n"
"            return index === 0 ? match.toUpperCase() : match.toLowerCase();\n"
"        });\n"
"    }\n"
"}\n"
"customElements.define('qwc-arc-beans', QwcArcBeans);\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:462
msgid "Import the Vaadin component you want to use"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:463
msgid "You can also import other functions if needed"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:464
msgid "There are some internal UI components that you can use, described below"
msgstr ""

#. type: Title =====
#: upstream/_versions/main/guides/dev-ui.adoc:465
#, no-wrap
msgid "Using internal UI components"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:468
msgid "Some https://github.com/quarkusio/quarkus/tree/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/qui[internal UI components] (under the `qui` namespace) are available to make certain things easier:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:470
msgid "Card"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:471
msgid "Badge"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:472
msgid "Alert"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:473
msgid "Code block"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:474
msgid "IDE Link"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:476
msgid "====== Card"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:478
msgid "Card component to display contents in a card"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:482
#, no-wrap
msgid "import 'qui-card';\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:491
#, no-wrap
msgid ""
"<qui-card title=\"My title\">\n"
"    <div slot=\"content\">\n"
"        My contents\n"
"    </div>\n"
"</qui-card>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:494
msgid "https://github.com/phillip-kruger/quarkus-jokes/blob/f572ed6f949de0c0b8cbfa99d7389ab5168fea65/deployment/src/main/resources/dev-ui/qwc-jokes-vaadin.js#L110[Example code]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:496
msgid "====== Badge"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:498
msgid "Badge UI Component based on the https://vaadin.com/docs/latest/components/badge[vaadin themed] badge"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/dev-ui.adoc:499
#, no-wrap
msgid "dev-ui-qui-badge-v2.png"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:504
#, no-wrap
msgid "import 'qui-badge';\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:507
msgid "You can use any combination of small, primary, pill, with icon and clickable with any level of `default`, `success`, `warning`, `error`, `contrast` or set your own colors."
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:602
#, no-wrap
msgid ""
"<div class=\"badges\">\n"
"    <h3>Badges</h3>\n"
"    <p>Badges wrap the Vaadin theme in a component.\n"
"        See <a href=\"https://vaadin.com/docs/latest/components/badge\">https://vaadin.com/docs/latest/components/badge</a> for more info.\n"
"    </p>\n"
"    <div class=\"cards\">\n"
"        <qui-card title=\"Small\">\n"
"            <div slot=\"content\">\n"
"                <div class=\"cardcontents\">\n"
"                    <qui-badge small><span>Default</span></qui-badge>\n"
"                    <qui-badge level=\"success\" small><span>Success</span></qui-badge>\n"
"                    <qui-badge level=\"warning\" small><span>Warning</span></qui-badge>\n"
"                    <qui-badge level=\"error\" small><span>Error</span></qui-badge>\n"
"                    <qui-badge level=\"contrast\" small><span>Contrast</span></qui-badge>\n"
"                    <qui-badge background=\"pink\" color=\"purple\" small><span>Custom colours</span></qui-badge>\n"
"                </div>\n"
"            </div>\n"
"        </qui-card> \n"
"        <qui-card title=\"Primary\">\n"
"            <div slot=\"content\">\n"
"                <div class=\"cardcontents\">\n"
"                    <qui-badge primary><span>Default primary</span></qui-badge>\n"
"                    <qui-badge level=\"success\" primary><span>Success primary</span></qui-badge>\n"
"                    <qui-badge level=\"warning\" primary><span>Warning primary</span></qui-badge>\n"
"                    <qui-badge level=\"error\" primary><span>Error primary</span></qui-badge>\n"
"                    <qui-badge level=\"contrast\" primary><span>Contrast primary</span></qui-badge>\n"
"                    <qui-badge background=\"pink\" color=\"purple\" primary><span>Custom colours</span></qui-badge>\n"
"                </div>\n"
"            </div>\n"
"        </qui-card>\n"
"        <qui-card title=\"Pill\">\n"
"            <div slot=\"content\">\n"
"                <div class=\"cardcontents\">\n"
"                    <qui-badge pill><span>Default pill</span></qui-badge>\n"
"                    <qui-badge level=\"success\" pill><span>Success pill</span></qui-badge>\n"
"                    <qui-badge level=\"warning\" pill><span>Warning pill</span></qui-badge>\n"
"                    <qui-badge level=\"error\" pill><span>Error pill</span></qui-badge>\n"
"                    <qui-badge level=\"contrast\" pill><span>Contrast pill</span></qui-badge>\n"
"                    <qui-badge background=\"pink\" color=\"purple\" pill><span>Custom colours</span></qui-badge>\n"
"                </div>\n"
"            </div>\n"
"        </qui-card>\n"
"        <qui-card title=\"With icon\">\n"
"            <div slot=\"content\">            \n"
"                <div class=\"cardcontents\">\n"
"                    <qui-badge text=\"Default\" icon=\"font-awesome-solid:circle-info\">\n"
"                        <span>Default icon</span>\n"
"                    </qui-badge>\n"
"                    <qui-badge text=\"Success\" level=\"success\" icon=\"font-awesome-solid:check\">\n"
"                        <span>Success icon</span>\n"
"                    </qui-badge>\n"
"                    <qui-badge text=\"Warning\" level=\"warning\" icon=\"font-awesome-solid:triangle-exclamation\">\n"
"                        <span>Warning icon</span>\n"
"                    </qui-badge>\n"
"                    <qui-badge text=\"Error\" level=\"error\" icon=\"font-awesome-solid:circle-exclamation\">\n"
"                        <span>Error icon</span>\n"
"                    </qui-badge>\n"
"                    <qui-badge text=\"Contrast\" level=\"contrast\" icon=\"font-awesome-solid:hand\">\n"
"                        <span>Contrast icon</span>\n"
"                    </qui-badge>\n"
"                    <qui-badge text=\"Custom\" background=\"pink\" color=\"purple\" icon=\"font-awesome-brands:redhat\">\n"
"                        <span>Custom colours</span>\n"
"                    </qui-badge>\n"
"                </div>\n"
"            </div>\n"
"        </qui-card>\n"
"        <qui-card title=\"Icon only\">\n"
"            <div slot=\"content\">\n"
"                <div class=\"cardcontents\">\n"
"                    <qui-badge icon=\"font-awesome-solid:clock\"></qui-badge>\n"
"                    <qui-badge level=\"success\" icon=\"font-awesome-solid:check\"></qui-badge>\n"
"                    <qui-badge level=\"warning\" icon=\"font-awesome-solid:triangle-exclamation\"></qui-badge>\n"
"                    <qui-badge level=\"error\" icon=\"font-awesome-solid:circle-exclamation\"></qui-badge>\n"
"                    <qui-badge level=\"contrast\" icon=\"font-awesome-solid:hand\"></qui-badge>\n"
"                    <qui-badge level=\"contrast\" background=\"pink\" color=\"purple\" icon=\"font-awesome-brands:redhat\"></qui-badge>\n"
"                </div>\n"
"            </div>\n"
"        </qui-card>\n"
"        <qui-card title=\"Clickable\">\n"
"            <div slot=\"content\">\n"
"                <div class=\"cardcontents\">\n"
"                    <qui-badge clickable @click=${() => this._info()}><span>Default</span></qui-badge>\n"
"                    <qui-badge clickable level=\"success\" @click=${() => this._success()}><span>Success</span></qui-badge>\n"
"                    <qui-badge clickable level=\"warning\" @click=${() => this._warning()}><span>Warning</span></qui-badge>\n"
"                    <qui-badge clickable level=\"error\" @click=${() => this._error()}><span>Error</span></qui-badge>\n"
"                    <qui-badge clickable level=\"contrast\" @click=${() => this._contrast()}><span>Contrast</span></qui-badge>\n"
"                    <qui-badge clickable background=\"pink\" color=\"purple\" @click=${() => this._info()}><span>Custom colours</span></qui-badge>\n"
"                </div>\n"
"            </div>\n"
"        </qui-card>\n"
"    </div>\n"
"</div>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:605
msgid "https://github.com/phillip-kruger/quarkus-jokes/blob/f572ed6f949de0c0b8cbfa99d7389ab5168fea65/deployment/src/main/resources/dev-ui/qwc-jokes-vaadin.js#L214[Example code]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:607
msgid "====== Alert"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:609
msgid "Alerts are modeled around the Bootstrap alerts. Click https://getbootstrap.com/docs/4.0/components/alerts[here] for more info."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:611
msgid "Also see Notification controller below as an alternative."
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/dev-ui.adoc:612
#, no-wrap
msgid "dev-ui-qui-alert-v2.png"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:617
#, no-wrap
msgid "import 'qui-alert';\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:674
#, no-wrap
msgid ""
"<div class=\"cards\">\n"
"    <div class=\"cardcontents\">\n"
"        <qui-alert><span>Info alert</span></qui-alert>\n"
"        <qui-alert level=\"success\"><span>Success alert</span></qui-alert>\n"
"        <qui-alert level=\"warning\"><span>Warning alert</span></qui-alert>\n"
"        <qui-alert level=\"error\"><span>Error alert</span></qui-alert>\n"
"        <hr class=\"line\">\n"
"        <qui-alert permanent><span>Permanent Info alert</span></qui-alert>\n"
"        <qui-alert level=\"success\" permanent><span>Permanent Success alert</span></qui-alert>\n"
"        <qui-alert level=\"warning\" permanent><span>Permanent Warning alert</span></qui-alert>\n"
"        <qui-alert level=\"error\" permanent><span>Permanent Error alert</span></qui-alert>\n"
"        <hr class=\"line\">\n"
"        <qui-alert center><span>Center Info alert</span></qui-alert>\n"
"        <qui-alert level=\"success\" center><span>Center Success alert</span></qui-alert>\n"
"        <qui-alert level=\"warning\" center><span>Center Warning alert</span></qui-alert>\n"
"        <qui-alert level=\"error\" center><span>Center Error alert</span></qui-alert>\n"
"        <hr class=\"line\">\n"
"        <qui-alert showIcon><span>Info alert with icon</span></qui-alert>\n"
"        <qui-alert level=\"success\" showIcon><span>Success alert with icon</span></qui-alert>\n"
"        <qui-alert level=\"warning\" showIcon><span>Warning alert with icon</span></qui-alert>\n"
"        <qui-alert level=\"error\" showIcon><span>Error alert with icon</span></qui-alert>\n"
"        <hr class=\"line\">\n"
"        <qui-alert icon=\"font-awesome-brands:redhat\"><span>Info alert with custom icon</span></qui-alert>\n"
"        <qui-alert level=\"success\" icon=\"font-awesome-brands:redhat\"><span>Success alert with custom icon</span></qui-alert>\n"
"        <qui-alert level=\"warning\" icon=\"font-awesome-brands:redhat\"><span>Warning alert with custom icon</span></qui-alert>\n"
"        <qui-alert level=\"error\" icon=\"font-awesome-brands:redhat\"><span>Error alert with custom icon</span></qui-alert>\n"
"        <hr class=\"line\">\n"
"        <qui-alert size=\"small\" showIcon><span>Small Info alert with icon</span></qui-alert>\n"
"        <qui-alert level=\"success\" size=\"small\" showIcon><span>Small Success alert with icon</span></qui-alert>\n"
"        <qui-alert level=\"warning\" size=\"small\" showIcon><span>Small Warning alert with icon</span></qui-alert>\n"
"        <qui-alert level=\"error\" size=\"small\" showIcon><span>Small Error alert with icon</span></qui-alert>\n"
"        <hr class=\"line\">\n"
"        <qui-alert showIcon><span>Info <code>alert</code> with markup <br><a href=\"https://quarkus.io/\" target=\"_blank\">quarkus.io</a></span></qui-alert>\n"
"        <qui-alert level=\"success\" showIcon><span>Success <code>alert</code> with markup <br><a href=\"https://quarkus.io/\" target=\"_blank\">quarkus.io</a></span></qui-alert>\n"
"        <qui-alert level=\"warning\" showIcon><span>Warning <code>alert</code> with markup <br><a href=\"https://quarkus.io/\" target=\"_blank\">quarkus.io</a></span></qui-alert>\n"
"        <qui-alert level=\"error\" showIcon><span>Error <code>alert</code> with markup <br><a href=\"https://quarkus.io/\" target=\"_blank\">quarkus.io</a></span></qui-alert>\n"
"        <hr class=\"line\">\n"
"        <qui-alert showIcon primary><span>Primary Info alert with icon</span></qui-alert>\n"
"        <qui-alert level=\"success\" showIcon primary><span>Primary Success alert with icon</span></qui-alert>\n"
"        <qui-alert level=\"warning\" showIcon primary><span>Primary Warning alert with icon</span></qui-alert>\n"
"        <qui-alert level=\"error\" showIcon primary><span>Primary Error alert with icon</span></qui-alert>\n"
"        <hr class=\"line\">\n"
"        <qui-alert title=\"Information\"><span>Info alert with title</span></qui-alert>\n"
"        <qui-alert title=\"Well done\" level=\"success\"><span>Success alert with title</span></qui-alert>\n"
"        <qui-alert title=\"Beware\" level=\"warning\"><span>Warning alert with title</span></qui-alert>\n"
"        <qui-alert title=\"Ka-boom\" level=\"error\"><span>Error alert with title</span></qui-alert>\n"
"        <hr class=\"line\">\n"
"        <qui-alert title=\"Information\" showIcon><span>Info alert with title and icon</span></qui-alert>\n"
"        <qui-alert title=\"Well done\" level=\"success\" showIcon><span>Success alert with title and icon</span></qui-alert>\n"
"        <qui-alert title=\"Beware\" level=\"warning\" showIcon><span>Warning alert with title and icon</span></qui-alert>\n"
"        <qui-alert title=\"Ka-boom\" level=\"error\" showIcon><span>Error alert with title and icon</span></qui-alert>\n"
"    </div>\n"
"</div>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:677
msgid "https://github.com/phillip-kruger/quarkus-jokes/blob/f572ed6f949de0c0b8cbfa99d7389ab5168fea65/deployment/src/main/resources/dev-ui/qwc-jokes-vaadin.js#L316[Example code]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:680
msgid "====== Code block"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:682
msgid "Display a code block. This component is aware of the theme and will use the correct codemirror theme to match the light/dark mode."
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/dev-ui.adoc:684
#, no-wrap
msgid "dev-ui-qui-code-block-v2.png"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:689
#, no-wrap
msgid "import 'qui-code-block';\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:699
#, no-wrap
msgid ""
"<div class=\"codeBlock\">\n"
"    <qui-code-block \n"
"        mode='yaml'\n"
"        content='${yaml}'>\n"
"    </qui-code-block>\n"
"</div>;\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:702
msgid "https://github.com/quarkusio/quarkus/blob/e03a97845738436c69443a591ec4ce88ed04ac91/extensions/kubernetes/vanilla/deployment/src/main/resources/dev-ui/qwc-kubernetes-manifest.js#L99[Example code]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:704
msgid "or fetching the contents from a URL:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:713
#, no-wrap
msgid ""
"<div class=\"codeBlock\">\n"
"    <qui-code-block \n"
"        mode='${this._mode}'\n"
"        src='${this._externalUrl}'>\n"
"    </qui-code-block>\n"
"</div>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:716
msgid "https://github.com/quarkusio/quarkus/blob/95c54fa46a6b6f31d69477234486d9359a2a3a4a/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/qwc/qwc-external-page.js#L116[Example code]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:718
msgid "====== IDE link"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:720
msgid "Creates a link to a resource (like a Java source file) that can be opened in the user's IDE (if we could detect the IDE)."
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:724
#, no-wrap
msgid "import 'qui-ide-link';\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:732
#, no-wrap
msgid ""
"<qui-ide-link title='Source full class name' \n"
"                        class='text-source'\n"
"                        fileName='${sourceClassNameFull}'\n"
"                        lineNumber=${sourceLineNumber}>[${sourceClassNameFull}]</qui-ide-link>;\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:735
msgid "https://github.com/quarkusio/quarkus/blob/582f1f78806d2268885faea7aa8f5a4d2b3f5b98/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/qwc/qwc-server-log.js#L315[Example code]"
msgstr ""

#. type: Title =====
#: upstream/_versions/main/guides/dev-ui.adoc:736
#, no-wrap
msgid "Using internal controllers"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:739
msgid "Some https://github.com/quarkusio/quarkus/tree/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/controller[internal controllers] are available to make certain things easier:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:741
msgid "Notifier"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:742
msgid "Storage"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:743
msgid "Log"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:744
msgid "Router"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:745
msgid "JsonRPC"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:747
msgid "====== Notifier"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:749
msgid "This is an easy way to show a toast message. The toast can be placed on the screen (default left bottom) and can have a level (Info, Success, Warning, Error). Any of the levels can also be primary, that will create a more prominent toast message."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:751
msgid "See the source of this controller https://github.com/quarkusio/quarkus/blob/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/controller/notifier.js[here]."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:753
msgid "Example usage:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/dev-ui.adoc:754
#, no-wrap
msgid "dev-ui-controller-notifier.gif"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:759
#, no-wrap
msgid "import { notifier } from 'notifier';\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:764
#, no-wrap
msgid "<a @click=${() => this._info()}>Info</a>;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:771
#, no-wrap
msgid ""
"_info(position = null){\n"
"    notifier.showInfoMessage(\"This is an information message\", position);\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:774
msgid "You can find all the valid positions https://vaadin.com/docs/latest/components/notification/#position[here]."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:776
msgid "https://github.com/phillip-kruger/quarkus-jokes/blob/f572ed6f949de0c0b8cbfa99d7389ab5168fea65/deployment/src/main/resources/dev-ui/qwc-jokes-vaadin.js#L374[Example code]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:778
msgid "====== Storage"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:780
msgid "An easy way to access the local storage in a safe way. This will store values in the local storage, scoped to your extension. This way you do not have to worry that you might clash with another extension."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:782
msgid "Local storage is useful to remember user preferences or state. For example, the footer remembers the state (open/close) and the size when open of the bottom drawer."
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:786
#, no-wrap
msgid "import { StorageController } from 'storage-controller';\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:788
#: upstream/_versions/main/guides/dev-ui.adoc:792
#: upstream/_versions/main/guides/dev-ui.adoc:796
#: upstream/_versions/main/guides/dev-ui.adoc:815
#: upstream/_versions/main/guides/dev-ui.adoc:915
#: upstream/_versions/main/guides/dev-ui.adoc:919
#: upstream/_versions/main/guides/dev-ui.adoc:1009
#: upstream/_versions/main/guides/dev-ui.adoc:1036
#, no-wrap
msgid "// ...\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:790
#, no-wrap
msgid "storageControl = new StorageController(this); // Passing in this will scope the storage to your extension\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:794
#, no-wrap
msgid "const storedHeight = this.storageControl.get(\"height\"); // Get some value\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:798
#, no-wrap
msgid "this.storageControl.set('height', 123); // Set some val\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:801
msgid "https://github.com/quarkusio/quarkus/blob/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/qwc/qwc-footer.js[Example code]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:804
msgid "====== Log"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:807
msgid "The log controller is used to add control buttons to a (footer) log.  See <<Add a log file>>."
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/dev-ui.adoc:808
#, no-wrap
msgid "dev-ui-log-control-v2.png"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:813
#, no-wrap
msgid "import { LogController } from 'log-controller';\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:817
#, no-wrap
msgid "logControl = new LogController(this); // Passing in this will scope the control to your extension\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:835
#, no-wrap
msgid ""
"// ...\n"
"this.logControl\n"
"                .addToggle(\"On/off switch\", true, (e) => {\n"
"                    this._toggleOnOffClicked(e);\n"
"                }).addItem(\"Log levels\", \"font-awesome-solid:layer-group\", \"var(--lumo-tertiary-text-color)\", (e) => {\n"
"                    this._logLevels();\n"
"                }).addItem(\"Columns\", \"font-awesome-solid:table-columns\", \"var(--lumo-tertiary-text-color)\", (e) => {\n"
"                    this._columns();\n"
"                }).addItem(\"Zoom out\", \"font-awesome-solid:magnifying-glass-minus\", \"var(--lumo-tertiary-text-color)\", (e) => {\n"
"                    this._zoomOut();\n"
"                }).addItem(\"Zoom in\", \"font-awesome-solid:magnifying-glass-plus\", \"var(--lumo-tertiary-text-color)\", (e) => {\n"
"                    this._zoomIn();\n"
"                }).addItem(\"Clear\", \"font-awesome-solid:trash-can\", \"var(--lumo-error-color)\", (e) => {\n"
"                    this._clearLog();\n"
"                }).addFollow(\"Follow log\", true , (e) => {\n"
"                    this._toggleFollowLog(e);\n"
"                }).done();\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:838
msgid "https://github.com/quarkusio/quarkus/blob/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/qwc/qwc-server-log.js[Example code]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:840
msgid "====== Router"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:842
msgid "The router is mostly used internally. This uses https://github.com/vaadin/router[Vaadin Router] under the covers to route URLs to the correct page/section within the SPA. It will update the navigation and allow history (back button). This also creates the sub-menu available on extensions that have multiple pages."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:844
msgid "See the https://github.com/quarkusio/quarkus/blob/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/controller/router-controller.js[controller] for some methods that might be useful."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:847
msgid "====== JsonRPC"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:849
msgid "This controller allows you to fetch or stream runtime data. (vs. <<Build time data>> discussed earlier). There are two parts to getting data during runtime. The Java side in the runtime module, and then the usage in the web component."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:851
#, no-wrap
msgid "*Java part*\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:853
msgid "This code is responsible for making data available to display on the UI."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:855
msgid "You need to register the JsonPRCService in your processor in the deployment module:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:862
#, no-wrap
msgid ""
"@BuildStep(onlyIf = IsDevelopment.class)// <1>\n"
"JsonRPCProvidersBuildItem createJsonRPCServiceForCache() {// <2>\n"
"    return new JsonRPCProvidersBuildItem(CacheJsonRPCService.class);// <3>\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:864
msgid "Always only do this in Dev Mode"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:865
msgid "Produce / return a `JsonRPCProvidersBuildItem`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:866
msgid "Define the class in your runtime module that will contain methods that make data available in the UI"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:868
msgid "https://github.com/quarkusio/quarkus/blob/main/extensions/cache/deployment/src/main/java/io/quarkus/cache/deployment/devui/CacheDevUiProcessor.java[Example code]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:870
msgid "Now, in your Runtime module create the JsonRPC Service. This class will default to an application scoped bean, except if you explicitly scope the bean. All public methods that return something will be made available to call from the Web component Javascript."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:872
msgid "The return object in these methods can be:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:874
msgid "primitives or `String`,"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:875
msgid "`io.vertx.core.json.JsonArray`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:876
msgid "`io.vertx.core.json.JsonObject`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:877
msgid "any other POJO that can be serializable to Json"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:879
msgid "All of the above can be blocking (POJO) or non-blocking (`@NonBlocking` or `Uni`). Or alternatively data can be streamed using `Multi`."
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:893
#, no-wrap
msgid ""
"@NonBlocking // <1>\n"
"public JsonArray getAll() { // <2>\n"
"    Collection<String> names = manager.getCacheNames();\n"
"    List<CaffeineCache> allCaches = new ArrayList<>(names.size());\n"
"    for (String name : names) {\n"
"        Optional<Cache> cache = manager.getCache(name);\n"
"        if (cache.isPresent() && cache.get() instanceof CaffeineCache) {\n"
"            allCaches.add((CaffeineCache) cache.get());\n"
"        }\n"
"    }\n"
"    allCaches.sort(Comparator.comparing(CaffeineCache::getName));\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:900
#, no-wrap
msgid ""
"    var array = new JsonArray();\n"
"    for (CaffeineCache cc : allCaches) {\n"
"        array.add(getJsonRepresentationForCache(cc));\n"
"    }\n"
"    return array;\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:902
msgid "This example runs non blocking. We could also return `Uni<JsonArray>`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:903
msgid "The method name `getAll` will be available in the Javascript"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:905
msgid "https://github.com/quarkusio/quarkus/blob/main/extensions/cache/runtime/src/main/java/io/quarkus/cache/runtime/devconsole/CacheJsonRPCService.java[Example code]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:907
#, no-wrap
msgid "*Webcomponent (Javascript) part*\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:909
msgid "Now you can use the JsonRPC controller to access the `getAll` method (and any other methods in you JsonRPC Service)"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:913
#, no-wrap
msgid "import { JsonRpc } from 'jsonrpc';\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:917
#, no-wrap
msgid "jsonRpc = new JsonRpc(this); // Passing in this will scope the rpc calls to your extension\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:932
#, no-wrap
msgid ""
"/**\n"
"  * Called when displayed\n"
"  */\n"
"connectedCallback() {\n"
"    super.connectedCallback();\n"
"    this.jsonRpc.getAll().then(jsonRpcResponse => { // <1>\n"
"        this._caches = new Map();\n"
"        jsonRpcResponse.result.forEach(c => { //<2>\n"
"            this._caches.set(c.name, c);\n"
"        });\n"
"    });\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:935
msgid "Note the method `getAll` corresponds to the method in your Java Service. This method returns a https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise[Promise] with the JsonRPC result."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:936
msgid "In this case the result is an array, so we can loop over it."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:938
msgid "JsonArray (or any Java collection) in either blocking or non-blocking will return an array, else a JsonObject will be returned."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:940
msgid "https://github.com/quarkusio/quarkus/blob/main/extensions/cache/deployment/src/main/resources/dev-ui/qwc-cache-caches.js[Example code]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:943
msgid "You can also pass in parameters in the method being called, for example: (In the Runtime Java code)"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:954
#, no-wrap
msgid ""
"public Uni<JsonObject> clear(String name) { //<1>\n"
"    Optional<Cache> cache = manager.getCache(name);\n"
"    if (cache.isPresent()) {\n"
"        return cache.get().invalidateAll().map((t) -> getJsonRepresentationForCache(cache.get()));\n"
"    } else {\n"
"        return Uni.createFrom().item(new JsonObject().put(\"name\", name).put(\"size\", -1));\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:956
msgid "the clear method takes one parameter called `name`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:958
msgid "In the Webcomponent (Javascript):"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:966
#, no-wrap
msgid ""
"_clear(name) {\n"
"    this.jsonRpc.clear({name: name}).then(jsonRpcResponse => { //<1>\n"
"        this._updateCache(jsonRpcResponse.result)\n"
"    });\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:968
msgid "the `name` parameter is passed in."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:970
msgid "====== Streaming data"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:972
msgid "You can keep a UI screen updated with the latest data by continuously streaming data to the screen. This can be done with `Multi` (Java side) and `Observer` (Javascript side)"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:974
msgid "Java side of streaming data:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:978
#, no-wrap
msgid "public class JokesJsonRPCService {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:980
#, no-wrap
msgid "    private final BroadcastProcessor<Joke> jokeStream = BroadcastProcessor.create();\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:987
#, no-wrap
msgid ""
"    @PostConstruct\n"
"    void init() {\n"
"        Multi.createFrom().ticks().every(Duration.ofHours(4)).subscribe().with((item) -> {\n"
"            jokeStream.onNext(getJoke());\n"
"        });\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:991
#, no-wrap
msgid ""
"    public Multi<Joke> streamJokes() { // <1>\n"
"        return jokeStream;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:994
#, no-wrap
msgid ""
"    // ...\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:996
msgid "Return the Multi that will stream jokes"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:998
msgid "https://github.com/phillip-kruger/quarkus-jokes/blob/f572ed6f949de0c0b8cbfa99d7389ab5168fea65/runtime/src/main/java/io/quarkus/jokes/runtime/JokesJsonRPCService.java#L37[Example code]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1000
msgid "Javascript side of streaming data:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:1007
#, no-wrap
msgid ""
"this._observer = this.jsonRpc.streamJokes().onNext(jsonRpcResponse => { //<1>\n"
"    this._addToJokes(jsonRpcResponse.result);\n"
"    this._numberOfJokes = this._numberOfJokes++;\n"
"});\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:1011
#, no-wrap
msgid "this._observer.cancel(); //<2>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1013
msgid "You can call the method (optionally passing in parameters) and then provide the code that will be called on the next event."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1014
msgid "Make sure to keep an instance of the observer to cancel later if needed."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1016
msgid "https://github.com/phillip-kruger/quarkus-jokes/blob/main/deployment/src/main/resources/dev-ui/qwc-jokes-web-components.js[Example code]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1018
msgid "====== Dev UI Log"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1020
msgid "When running a local application using the `999-SNAPSHOT` version, the Dev UI will show a `Dev UI` Log in the footer. This is useful to debug all JSON RPC messages flowing between the browser and the Quarkus app."
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/dev-ui.adoc:1021
#, no-wrap
msgid "dev-ui-jsonrpc-log-v2.png"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/dev-ui.adoc:1023
#, no-wrap
msgid "Hot reload"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1026
msgid "You can update a screen automatically when a Hot reload has happened. To do this replace the `LitElement` that your Webcomponent extends with `QwcHotReloadElement`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1028
msgid "`QwcHotReloadElement` extends `LitElement` so your component is still a Lit Element."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1030
msgid "When extending a `QwcHotReloadElement` you have to provide the `hotReload` method. (You also still need to provide the `render` method from Lit)"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:1034
#, no-wrap
msgid "import { QwcHotReloadElement, html, css} from 'qwc-hot-reload-element';\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:1038
#, no-wrap
msgid "export class QwcMyExtensionPage extends QwcHotReloadElement {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:1042
#, no-wrap
msgid ""
"    render(){\n"
"        // ...\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:1046
#, no-wrap
msgid ""
"    hotReload(){\n"
"        // ..\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:1048
#: upstream/_versions/main/guides/dev-ui.adoc:1201
#, no-wrap
msgid "}\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/dev-ui.adoc:1050
#, no-wrap
msgid "Custom cards"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1053
msgid "You can customize the card that is being displayed on the extension page if you do not want to use the default built-in card."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1055
msgid "To do this, you need to provide a Webcomponent that will be loaded in the place of the provided card and register this in the Java Processor:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:1059
#, no-wrap
msgid "cardPageBuildItem.setCustomCard(\"qwc-mycustom-card.js\");\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1062
msgid "On the Javascript side, you have access to all the pages (in case you want to create links)"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:1066
#, no-wrap
msgid "import { pages } from 'build-time-data';\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1069
msgid "And the following properties will be passed in:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1071
msgid "extensionName"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1072
msgid "description"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1073
msgid "guide"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1074
msgid "namespace"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:1083
#, no-wrap
msgid ""
"static properties = {\n"
"    extensionName: {type: String},\n"
"    description: {type: String},\n"
"    guide: {type: String},\n"
"    namespace: {type: String}    \n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/dev-ui.adoc:1085
#, no-wrap
msgid "State (Advance)"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1088
msgid "State allows properties to contain state and can be reused globally. An example of state properties are the theme, the connection state (if we are connected to the backend), etc."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1090
msgid "See the https://github.com/quarkusio/quarkus/tree/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/state[current built-in] state objects."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1092
msgid "The state in Dev UI uses https://github.com/gitaarik/lit-state[LitState] and you can read more about it in their https://gitaarik.github.io/lit-state/build/[documentation]."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/dev-ui.adoc:1094
#, no-wrap
msgid "Add a log file"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1097
msgid "Apart from adding a card and a page, extensions can add a log to the footer. This is useful to log things happening continuously. A page will lose connection to the backend when navigating away from that page, a log in the footer is permanently connected."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1099
msgid "Adding something to the footer works exactly like adding a Card, except you use a `FooterPageBuildItem` rather than a `CardPageBuildItem`."
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:1103
#, no-wrap
msgid "FooterPageBuildItem footerPageBuildItem = new FooterPageBuildItem();\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:1108
#, no-wrap
msgid ""
"footerPageBuildItem.addPage(Page.webComponentPageBuilder()\n"
"        .icon(\"font-awesome-regular:face-grin-tongue-wink\")\n"
"        .title(\"Joke Log\")\n"
"        .componentLink(\"qwc-jokes-log.js\"));\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:1110
#, no-wrap
msgid "footerProducer.produce(footerPageBuildItem);\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1113
msgid "https://github.com/phillip-kruger/quarkus-jokes/blob/f572ed6f949de0c0b8cbfa99d7389ab5168fea65/deployment/src/main/java/io/quarkus/jokes/deployment/devui/JokesDevUIProcessor.java#L87[Example code]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1115
msgid "In your Webcomponent you can then stream the log to the UI:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:1121
#, no-wrap
msgid ""
"export class QwcJokesLog extends LitElement {\n"
"    jsonRpc = new JsonRpc(this);\n"
"    logControl = new LogController(this);\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:1124
#, no-wrap
msgid ""
"    // ....\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1127
msgid "https://github.com/phillip-kruger/quarkus-jokes/blob/main/deployment/src/main/resources/dev-ui/qwc-jokes-log.js[Example code]"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/dev-ui.adoc:1128
#, no-wrap
msgid "Add a section menu"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1131
msgid "This allows an extension to link a page directly in the section Menu."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1133
msgid "Adding something to the section menu works exactly like adding a Card, except you use a `MenuPageBuildItem` rather than a `CardPageBuildItem`."
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:1137
#, no-wrap
msgid "MenuPageBuildItem menuPageBuildItem = new MenuPageBuildItem();\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:1142
#, no-wrap
msgid ""
"menuPageBuildItem.addPage(Page.webComponentPageBuilder()\n"
"        .icon(\"font-awesome-regular:face-grin-tongue-wink\")\n"
"        .title(\"One Joke\")\n"
"        .componentLink(\"qwc-jokes-menu.js\"));\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:1144
#, no-wrap
msgid "menuProducer.produce(menuPageBuildItem);\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1147
msgid "https://github.com/phillip-kruger/quarkus-jokes/blob/f572ed6f949de0c0b8cbfa99d7389ab5168fea65/deployment/src/main/java/io/quarkus/jokes/deployment/devui/JokesDevUIProcessor.java#LL71C16-L71C16[Example code]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1149
msgid "Your page can be any Page similar to Cards."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/dev-ui.adoc:1150
#, no-wrap
msgid "Testing"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1153
msgid "You can add tests to your extension that test:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1156
msgid "Runtime data via JsonRPC"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1158
msgid "You need to add this to your pom:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:1166
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-vertx-http-dev-ui-tests</artifactId>\n"
"    <scope>test</scope>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1169
msgid "This will give you access to two base classes for creating these tests."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/dev-ui.adoc:1170
#, no-wrap
msgid "Testing Build time data"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1173
msgid "If you added Build time data, for example:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:1177
#, no-wrap
msgid "cardPageBuildItem.addBuildTimeData(\"somekey\", somevalue);\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1180
msgid "To test that your build time data is generated correctly you can add a test that extends `DevUIBuildTimeDataTest`."
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:1184
#, no-wrap
msgid "public class SomeTest extends DevUIBuildTimeDataTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:1187
#: upstream/_versions/main/guides/dev-ui.adoc:1222
#, no-wrap
msgid ""
"    @RegisterExtension\n"
"    static final QuarkusDevModeTest config = new QuarkusDevModeTest().withEmptyApplication();\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:1191
#: upstream/_versions/main/guides/dev-ui.adoc:1226
#, no-wrap
msgid ""
"    public SomeTest() {\n"
"        super(\"io.quarkus.my-extension\");\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:1196
#, no-wrap
msgid ""
"    @Test\n"
"    public void testSomekey() throws Exception {\n"
"        JsonNode somekeyResponse = super.getBuildTimeData(\"somekey\");\n"
"        Assertions.assertNotNull(somekeyResponse);\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:1199
#, no-wrap
msgid ""
"        // Check more values on somekeyResponse\n"
"    }\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/dev-ui.adoc:1203
#, no-wrap
msgid "Testing Runtime data"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1206
msgid "If you added a JsonRPC Service with runtime data responses, for example:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:1212
#, no-wrap
msgid ""
"public boolean updateProperties(String content, String type) {\n"
"    // ...\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1215
msgid "To test that `updateProperties` execute correctly via JsonRPC you can add a test that extends `DevUIJsonRPCTest`."
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:1219
#, no-wrap
msgid "public class SomeTest extends DevUIJsonRPCTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:1229
#, no-wrap
msgid ""
"    @Test\n"
"    public void testUpdateProperties() throws Exception {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:1235
#, no-wrap
msgid ""
"        JsonNode updatePropertyResponse = super.executeJsonRPCMethod(\"updateProperty\",\n"
"                Map.of(\n"
"                        \"name\", \"quarkus.application.name\",\n"
"                        \"value\", \"changedByTest\"));\n"
"        Assertions.assertTrue(updatePropertyResponse.asBoolean());\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:1242
#, no-wrap
msgid ""
"        // Get the properties to make sure it is changed\n"
"        JsonNode allPropertiesResponse = super.executeJsonRPCMethod(\"getAllValues\");\n"
"        String applicationName = allPropertiesResponse.get(\"quarkus.application.name\").asText();\n"
"        Assertions.assertEquals(\"changedByTest\", applicationName);\n"
"    }\n"
"}\n"
msgstr ""

# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-07-05 02:34+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: upstream/_versions/main/guides/logging.adoc:7
#, no-wrap
msgid "Logging configuration"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:13
msgid "Read about the use of logging API in Quarkus, configuring logging output, and using logging adapters to unify the output from other logging APIs."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:17
msgid "Quarkus uses the JBoss Log Manager logging backend for publishing application and framework logs.  Quarkus supports the JBoss Logging API as well as multiple other logging APIs, seamlessly integrated with JBoss Log Manager.  You can use any of the xref:logging-apis[following APIs]:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:19
msgid "link:https://github.com/jboss-logging/jboss-logging[JBoss Logging]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:20
msgid "JDK `java.util.logging` (JUL)"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:21
msgid "link:https://www.slf4j.org/[SLF4J]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:22
msgid "link:https://commons.apache.org/proper/commons-logging/[Apache Commons Logging]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:23
msgid "link:https://logging.apache.org/log4j/2.x/[Apache Log4j 2]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:24
msgid "link:https://logging.apache.org/log4j/1.2/[Apache Log4j 1]"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/logging.adoc:26
#, no-wrap
msgid "Use JBoss Logging for application logging"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:29
msgid "No additional dependencies are needed when using the JBoss Logging API; it is automatically provided."
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/logging.adoc:30
#, no-wrap
msgid "An example of using the JBoss Logging API to log a message:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/logging.adoc:34
#: upstream/_versions/main/guides/logging.adoc:133
#, no-wrap
msgid "import org.jboss.logging.Logger;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/logging.adoc:39
#, no-wrap
msgid ""
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.Path;\n"
"import jakarta.ws.rs.Produces;\n"
"import jakarta.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/logging.adoc:42
#, no-wrap
msgid ""
"@Path(\"/hello\")\n"
"public class ExampleResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/logging.adoc:44
#, no-wrap
msgid "    private static final Logger LOG = Logger.getLogger(ExampleResource.class);\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/logging.adoc:52
#, no-wrap
msgid ""
"    @GET\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String hello() {\n"
"        LOG.info(\"Hello\");\n"
"        return \"hello\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:56
msgid "While JBoss Logging routes log messages into JBoss Log Manager directly, one of your libraries might rely on a different logging API.  In such cases, you need to use a xref:logging-apis[logging adapter] to ensure that its log messages are routed to JBoss Log Manager as well."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/logging.adoc:57
#, no-wrap
msgid "Get an application logger"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:60
msgid "In Quarkus, the most common ways to obtain an application logger are by:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:62
msgid "xref:declaring-a-loger-field[Declaring a logger field]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:63
msgid "xref:logging-with-panache[Logging with Panache]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:64
msgid "xref:injection-of-a-configured-logger[Injecting a configured logger]"
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/logging.adoc:66
#, no-wrap
msgid "Declaring a logger field"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:69
msgid "With this classic approach, you use a specific API to obtain a logger instance, store it in a static field of a class, and call logging operations upon this instance."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:71
msgid "The same flow can be applied with any of the xref:logging-apis[supported logging APIs]."
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/logging.adoc:72
#, no-wrap
msgid "An example of storing a logger instance into a static field by using the JBoss Logging API:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/logging.adoc:77
#, no-wrap
msgid ""
"package com.example;\n"
"import org.jboss.logging.Logger;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/logging.adoc:80
#, no-wrap
msgid ""
"public class MyService {\n"
"    private static final Logger log = Logger.getLogger(MyService.class); <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/logging.adoc:85
#, no-wrap
msgid ""
"    public void doSomething() {\n"
"        log.info(\"It works!\"); <2>\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:87
msgid "Define the logger field."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:88
msgid "Invoke the desired logging methods on the `log` object."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/logging.adoc:91
#, no-wrap
msgid "Logging with Panache"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:95
msgid "Quarkus simplifies logging by automatically adding logger fields to classes that use `io.quarkus.logging.Log`.  This eliminates the need for repetitive boilerplate code and enhances logging setup convenience."
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/logging.adoc:96
#, no-wrap
msgid "An example of simplified logging using static method calls:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/logging.adoc:100
#, no-wrap
msgid "package com.example;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/logging.adoc:102
#, no-wrap
msgid "import io.quarkus.logging.Log; // <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/logging.adoc:108
#, no-wrap
msgid ""
"class MyService { // <2>\n"
"    public void doSomething() {\n"
"        Log.info(\"Simple!\"); // <3>\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:110
msgid "The `io.quarkus.logging.Log` class contains the same methods as JBoss Logging, except that they are `static`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:114
msgid "Note that the class does not declare a logger field.  This is because during application build, a `private static final org.jboss.logging.Logger` field is created automatically in each class that uses the `Log` API.  The fully qualified name of the class that calls the `Log` methods is used as a logger name.  In this example, the logger name would be `com.example.MyService`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:115
msgid "Finally, all calls to `Log` methods are rewritten to regular JBoss Logging calls on the logger field during the application build."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:118
msgid "Only use the `Log` API in application classes, not in external dependencies.  `Log` method calls that are not processed by Quarkus at build time will throw an exception."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/logging.adoc:121
#, no-wrap
msgid "Injecting a configured logger"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:125
msgid "The last alternative is to inject a configured `org.jboss.logging.Logger` logger instance by using the `@Inject` annotation.  This approach is applicable only for CDI beans."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:128
msgid "You can use `@Inject Logger log`, where the logger gets named after the class you inject it to, or `@Inject @LoggerName(\"...\") Logger log`, where the logger will receive the specified name.  Once injected, you can use the `log` object to invoke logging methods."
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/logging.adoc:129
#, no-wrap
msgid "An example of two different types of logger injection:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/logging.adoc:136
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"class SimpleBean {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/logging.adoc:139
#, no-wrap
msgid ""
"   @Inject\n"
"   Logger log; <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/logging.adoc:142
#, no-wrap
msgid ""
"   @LoggerName(\"foo\")\n"
"   Logger fooLog; <2>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/logging.adoc:148
#, no-wrap
msgid ""
"   public void ping() {\n"
"     log.info(\"Simple!\");\n"
"     fooLog.info(\"Goes to _foo_ logger!\");\n"
"   }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:150
msgid "The FQCN of the declaring class is used as a logger name, for example, `org.jboss.logging.Logger.getLogger(SimpleBean.class)` will be used."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:151
msgid "In this case, the name _foo_ is used as a logger name, for example,`org.jboss.logging.Logger.getLogger(\"foo\")` will be used."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:153
msgid "The logger instances are cached internally. Therefore, when a logger is injected, for example, into a `@RequestScoped` bean, it is shared for all bean instances to avoid possible performance penalties associated with logger instantiation."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/logging.adoc:155
#, no-wrap
msgid "Use log levels"
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/logging.adoc:157
#, no-wrap
msgid "Log levels used by Quarkus"
msgstr ""

#. type: Labeled list
#: upstream/_versions/main/guides/logging.adoc:160
#, no-wrap
msgid "OFF"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:161
msgid "A special level to use in configuration in order to turn off logging."
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:161
#: upstream/_versions/main/guides/logging.adoc:184
#, no-wrap
msgid "FATAL"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:162
msgid "A critical service failure or complete inability to service requests of any kind."
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:162
#: upstream/_versions/main/guides/logging.adoc:186
#, no-wrap
msgid "ERROR"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:163
msgid "A significant disruption in a request or the inability to service a request."
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:163
#: upstream/_versions/main/guides/logging.adoc:188
#, no-wrap
msgid "WARN"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:164
msgid "A non-critical service error or problem that may not require immediate correction."
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:164
#: upstream/_versions/main/guides/logging.adoc:190
#: upstream/_versions/main/guides/logging.adoc:192
#: upstream/_versions/main/guides/logging.adoc:283
#, no-wrap
msgid "INFO"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:165
msgid "Service lifecycle events or important related very low-frequency information."
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:165
#: upstream/_versions/main/guides/logging.adoc:194
#: upstream/_versions/main/guides/logging.adoc:264
#: upstream/_versions/main/guides/logging.adoc:284
#, no-wrap
msgid "DEBUG"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:166
msgid "Messages that convey extra information regarding lifecycle or non-request-bound events, useful for debugging."
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:166
#: upstream/_versions/main/guides/logging.adoc:196
#, no-wrap
msgid "TRACE"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:167
msgid "Messages that convey extra per-request debugging information that may be very high frequency."
msgstr ""

#. type: Labeled list
#: upstream/_versions/main/guides/logging.adoc:167
#, no-wrap
msgid "ALL"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:168
msgid "A special level to use in configuration to turn on logging for all messages, including custom levels."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:170
msgid "You can also configure the following levels for applications and libraries that use link:https://docs.oracle.com/javase/8/docs/api/java/util/logging/Level.html[`java.util.logging`]:"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:172
#: upstream/_versions/main/guides/logging.adoc:188
#, no-wrap
msgid "SEVERE"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:173
msgid "Same as **ERROR**."
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:173
#: upstream/_versions/main/guides/logging.adoc:190
#, no-wrap
msgid "WARNING"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:174
msgid "Same as **WARN**."
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:174
#: upstream/_versions/main/guides/logging.adoc:194
#, no-wrap
msgid "CONFIG"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:175
msgid "Service configuration information."
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:175
#: upstream/_versions/main/guides/logging.adoc:196
#, no-wrap
msgid "FINE"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:176
msgid "Same as **DEBUG**."
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:176
#: upstream/_versions/main/guides/logging.adoc:198
#, no-wrap
msgid "FINER"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:177
msgid "Same as **TRACE**."
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:177
#: upstream/_versions/main/guides/logging.adoc:199
#, no-wrap
msgid "FINEST"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:178
msgid "Increased debug output compared to `TRACE`, which might have a higher frequency."
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/logging.adoc:179
#, no-wrap
msgid "The mapping between the levels"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:182
#, no-wrap
msgid "Numerical level value"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:182
#, no-wrap
msgid "Standard level name"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:184
#, no-wrap
msgid "Equivalent `java.util.logging` (JUL) level name"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:184
#, no-wrap
msgid "1100"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:186
#: upstream/_versions/main/guides/logging.adoc:192
#: upstream/_versions/main/guides/logging.adoc:198
#, no-wrap
msgid "Not applicable"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:186
#, no-wrap
msgid "1000"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:188
#, no-wrap
msgid "900"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:190
#, no-wrap
msgid "800"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:192
#, no-wrap
msgid "700"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:194
#, no-wrap
msgid "500"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:196
#, no-wrap
msgid "400"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:198
#, no-wrap
msgid "300"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/logging.adoc:202
#, no-wrap
msgid "Configure the log level, category and format"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:205
msgid "Runtime logging is configured in the `application.properties` file."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:207
msgid "Because JBoss Logging is built in to Quarkus, link:https://quarkus.io/developer-joy/[unified configuration] is provided for all xref:logging-apis[supported logging APIs]."
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/logging.adoc:208
#, no-wrap
msgid "An example of how you can set the default log level to `INFO` logging and include Hibernate `DEBUG` logs:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/logging.adoc:213
#, no-wrap
msgid ""
"quarkus.log.level=INFO\n"
"quarkus.log.category.\"org.hibernate\".level=DEBUG\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:217
msgid "When you set the log level to below `DEBUG`, you must also adjust the minimum log level.  This setting is either global, using the `quarkus.log.min-level` configuration property, or per category:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/logging.adoc:221
#, no-wrap
msgid "quarkus.log.category.\"org.hibernate\".min-level=TRACE\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:225
msgid "This sets a floor level for which Quarkus needs to generate supporting code.  The minimum log level must be set at build time so that Quarkus can open the door to optimization opportunities where logging on unusable levels can be elided."
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/logging.adoc:226
#, no-wrap
msgid "An example from native execution:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:229
msgid "Setting `INFO` as the minimum logging level sets lower-level checks, such as `isTraceEnabled`, to `false`.  This identifies code like `if(logger.isDebug()) callMethod();` that will never be executed and mark it as \"dead.\""
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/logging.adoc:233
msgid "If you add these properties on the command line, ensure the `\"` character is escaped properly:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/logging.adoc:236
#, no-wrap
msgid " `-Dquarkus.log.category.\\\"org.hibernate\\\".level=TRACE`\n"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/logging.adoc:240
msgid "All potential properties are listed in the xref:loggingConfigurationReference[logging configuration reference] section."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/logging.adoc:242
#, no-wrap
msgid "Logging categories"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/logging.adoc:246
msgid "Logging is done on a per-category basis, with each category being configured independently.  A category configuration recursively applies to all subcategories of that category unless there is a more specific matching sub-category configuration."
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/logging.adoc:249
msgid "The parent of all logging categories is called the \"root category\".  This category, being the ultimate parent, may contain configuration which applies globally to all other categories. This includes the globally configured handlers and formatters."
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/logging.adoc:251
msgid "Thus, configurations made under `quarkus.log.console.*`, `quarkus.log.file.*`, and `quarkus.log.syslog.*`, are global and apply for all categories. For more information, see xref:loggingConfigurationReference[Logging configuration reference]."
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/logging.adoc:253
msgid "If you want to configure something extra for a specific category, create a named handler like `quarkus.log.handler.[console|file|syslog].<your-handler-name>.*` and set it up for that category by using `quarkus.log.category.<my-category>.handlers`."
msgstr ""

#. TODO: Add a better, real-world example of a handler configuration for a more specific category. CC DML
#. type: delimited block =
#: upstream/_versions/main/guides/logging.adoc:257
msgid "An example use case can be a desire to use a different timestamp format for log messages which are saved to a file than the format used for other handlers."
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/logging.adoc:259
msgid "For further demonstration, see the outputs of the xref:category-named-handlers-example[Attaching named handlers to a category] example."
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:262
#: upstream/_versions/main/guides/logging.adoc:282
#, no-wrap
msgid "Property Nam"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:262
#: upstream/_versions/main/guides/logging.adoc:282
#, no-wrap
msgid "Default"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:263
#: upstream/_versions/main/guides/logging.adoc:283
#: upstream/_versions/main/guides/logging.adoc:309
#, no-wrap
msgid "Description"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:263
#, no-wrap
msgid "quarkus.log.category.\"<category-name>\".leve"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:263
#, no-wrap
msgid "INFO footnote:[Some extensions may define customized default log levels for certain categories, in order to reduce log noise by default. Setting the log level in configuration will override any extension-defined log levels.]"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:264
#, no-wrap
msgid "The level to use to configure the category named `<category-name>`. The quotes are necessary."
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:264
#, no-wrap
msgid "quarkus.log.category.\"<category-name>\".min-leve"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:265
#, no-wrap
msgid "The minimum logging level to use to configure the category named `<category-name>`. The quotes are necessary."
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:265
#, no-wrap
msgid "quarkus.log.category.\"<category-name>\".use-parent-handler"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:265
#, no-wrap
msgid "tru"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:266
#, no-wrap
msgid "Specify whether this logger should send its output to its parent logger."
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:266
#, no-wrap
msgid "quarkus.log.category.\"<category-name>\".handlers=[<handler>]"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:266
#, no-wrap
msgid "empty footnote:[By default, the configured category gets the same handlers attached as the one on the root logger.]"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:267
#, no-wrap
msgid "The names of the handlers that you want to attach to a specific category."
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/logging.adoc:273
msgid "The `.` symbol separates the specific parts in the configuration property.  The quotes in the property name are used as a required escape to keep category specifications, such as `quarkus.log.category.\"io.quarkus.smallrye.jwt\".level=TRACE`, intact."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/logging.adoc:276
#, no-wrap
msgid "Root logger configuration"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:279
msgid "The root logger category is handled separately, and is configured by using the following properties:"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:283
#, no-wrap
msgid "quarkus.log.leve"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:284
#, no-wrap
msgid "The default log level for every log category."
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:284
#, no-wrap
msgid "quarkus.log.min-leve"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:285
#, no-wrap
msgid "The default minimum log level for every log category."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:288
msgid "The parent category is examined if no level configuration exists for a given logger category."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:289
msgid "The root logger configuration is used if no specific configurations are provided for the category and any of its parent categories."
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/logging.adoc:293
msgid "Although the root logger's handlers are usually configured directly via `quarkus.log.console`, `quarkus.log.file` and `quarkus.log.syslog`, it can nonetheless have additional named handlers attached to it using the `quarkus.log.handlers` property."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/logging.adoc:296
#, no-wrap
msgid "Logging format"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:299
msgid "Quarkus uses a pattern-based logging formatter that generates human-readable text logs by default."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:302
msgid "You can configure the format for each log handler by using a dedicated property.  For the console handler, the property is `quarkus.log.console.format`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:304
msgid "The logging format string supports the following symbols:"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:307
#, no-wrap
msgid "Symbo"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:307
#, no-wrap
msgid "Summary"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:309
#, no-wrap
msgid "%%"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:309
#, no-wrap
msgid "`%`"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:310
#, no-wrap
msgid "Renders a simple `%` character."
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:310
#, no-wrap
msgid "%c"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:310
#, no-wrap
msgid "Category"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:311
#, no-wrap
msgid "Renders the category name."
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:311
#, no-wrap
msgid "%C"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:311
#, no-wrap
msgid "Source clas"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:312
#, no-wrap
msgid "Renders the source class name.footnote:calc[Format sequences which examine caller information may affect performance]"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:312
#, no-wrap
msgid "%d{xxx}"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:312
#, no-wrap
msgid "Dat"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:313
#, no-wrap
msgid "Renders a date with the given date format string, which uses the syntax defined by `java.text.SimpleDateFormat`."
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:313
#: upstream/_versions/main/guides/logging.adoc:315
#: upstream/_versions/main/guides/logging.adoc:318
#: upstream/_versions/main/guides/logging.adoc:320
#: upstream/_versions/main/guides/logging.adoc:326
#, no-wrap
msgid "%"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:313
#, no-wrap
msgid "Exception"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:314
#, no-wrap
msgid "Renders the thrown exception, if any."
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:314
#, no-wrap
msgid "%F"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:314
#, no-wrap
msgid "Source fil"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:315
#, no-wrap
msgid "Renders the source file name.footnote:calc[]"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:315
#, no-wrap
msgid "Host nam"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:316
#, no-wrap
msgid "Renders the system simple host name."
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:316
#, no-wrap
msgid "%H"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:316
#, no-wrap
msgid "Qualified host nam"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:317
#, no-wrap
msgid "Renders the system's fully qualified host name, which may be the same as the simple host name, depending on OS configuration."
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:317
#, no-wrap
msgid "%i"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:317
#, no-wrap
msgid "Process ID"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:318
#, no-wrap
msgid "Render the current process PID."
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:318
#, no-wrap
msgid "Source location"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:319
#, no-wrap
msgid "Renders the source location information, which includes source file name, line number, class name, and method name.footnote:calc[]"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:319
#, no-wrap
msgid "%L"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:319
#, no-wrap
msgid "Source lin"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:320
#, no-wrap
msgid "Renders the source line number.footnote:calc[]"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:320
#, no-wrap
msgid "Full Messag"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:321
#, no-wrap
msgid "Renders the log message plus exception (if any)."
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:321
#, no-wrap
msgid "%M"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:321
#, no-wrap
msgid "Source metho"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:322
#, no-wrap
msgid "Renders the source method name.footnote:calc[]"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:322
#, no-wrap
msgid "%n"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:322
#, no-wrap
msgid "Newlin"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:323
#, no-wrap
msgid "Renders the platform-specific line separator string."
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:323
#, no-wrap
msgid "%N"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:323
#, no-wrap
msgid "Process nam"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:324
#, no-wrap
msgid "Render the name of the current process."
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:324
#, no-wrap
msgid "%p"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:324
#, no-wrap
msgid "Leve"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:325
#, no-wrap
msgid "Render the log level of the message."
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:325
#, no-wrap
msgid "%r"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:325
#, no-wrap
msgid "Relative tim"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:326
#, no-wrap
msgid "Render the time in milliseconds since the start of the application log."
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:326
#, no-wrap
msgid "Simple messag"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:327
#, no-wrap
msgid "Renders just the log message, with no exception trace."
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:327
#, no-wrap
msgid "%t"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:327
#, no-wrap
msgid "Thread nam"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:328
#, no-wrap
msgid "Render the thread name."
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:328
#, no-wrap
msgid "%t{id}"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:328
#, no-wrap
msgid "Thread ID"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:329
#, no-wrap
msgid "Render the thread ID."
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:329
#, no-wrap
msgid "%z{<zone name>}"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:329
#, no-wrap
msgid "Time zon"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:330
#, no-wrap
msgid "Set the time zone of the output to `<zone name>`."
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:330
#, no-wrap
msgid "%X{<MDC property name>}"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:330
#, no-wrap
msgid "Mapped Diagnostics Context Valu"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:331
#, no-wrap
msgid "Renders the value from Mapped Diagnostics Context"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:331
#, no-wrap
msgid "%X"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:331
#, no-wrap
msgid "Mapped Diagnostics Context Value"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:332
#, no-wrap
msgid "Renders all the values from Mapped Diagnostics Context in format {property.key=property.value}"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:332
#, no-wrap
msgid "%x"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:332
#, no-wrap
msgid "Nested Diagnostics context value"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/logging.adoc:333
#, no-wrap
msgid "Renders all the values from Nested Diagnostics Context in format {value1.value2}"
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/logging.adoc:337
#, no-wrap
msgid "Alternative console logging formats"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:340
msgid "The flexibility to change console log format is a useful feature you can use, for example, when the output of the Quarkus application is captured by a service that process and store the log information for later analysis."
msgstr ""

#. type: Title ====
#: upstream/_versions/main/guides/logging.adoc:343
#, no-wrap
msgid "JSON logging format"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:346
msgid "The `quarkus-logging-json` extension may be employed to add support for the JSON logging format and its related configuration."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:348
msgid "Add this extension to your build file as the following snippet illustrates:"
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/logging.adoc:350
#: upstream/_versions/main/guides/logging.adoc:598
#: upstream/_versions/main/guides/logging.adoc:615
#: upstream/_versions/main/guides/logging.adoc:632
#: upstream/_versions/main/guides/logging.adoc:654
#, no-wrap
msgid "pom.xml"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/logging.adoc:356
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-logging-json</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/logging.adoc:359
#: upstream/_versions/main/guides/logging.adoc:607
#: upstream/_versions/main/guides/logging.adoc:624
#: upstream/_versions/main/guides/logging.adoc:641
#: upstream/_versions/main/guides/logging.adoc:663
#, no-wrap
msgid "build.gradle"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/logging.adoc:362
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-logging-json\")\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:366
msgid "By default, the presence of this extension replaces the output format configuration from the console configuration, and the format string and the color settings (if any) are ignored.  The other console configuration items, including those controlling asynchronous logging and the log level, will continue to be applied."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:369
msgid "For some, it will make sense to use humanly readable (unstructured) logging in dev mode and JSON logging (structured) in production mode.  This can be achieved using different profiles, as shown in the following configuration."
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/logging.adoc:370
#, no-wrap
msgid "Disable JSON logging in application.properties for dev and test mode"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/logging.adoc:375
#, no-wrap
msgid ""
"%dev.quarkus.log.console.json=false\n"
"%test.quarkus.log.console.json=false\n"
msgstr ""

#. type: Title =====
#: upstream/_versions/main/guides/logging.adoc:377
#, no-wrap
msgid "Configuration"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:380
msgid "Configure the JSON logging extension using supported properties to customize its behavior."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:384
msgid "Enabling pretty printing might cause certain processors and JSON parsers to fail."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:387
msgid "Printing the details can be expensive as the values are retrieved from the caller.  The details include the source class name, source file name, source method name, and source line number."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/logging.adoc:388
#, no-wrap
msgid "Log handlers"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:392
msgid "A log handler is a logging component responsible for the emission of log events to a recipient.  Quarkus includes several different log handlers: **console**, **file**, and **syslog**."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/logging.adoc:393
#, no-wrap
msgid "Console log handler"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:396
msgid "The console log handler is enabled by default, and it directs all log events to the application's console, usually the system's `stdout`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:398
msgid "For details about its configuration, see the xref:#quarkus-log-logging-log-config_quarkus.log.console-console-logging[console logging configuration] reference."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/logging.adoc:399
#, no-wrap
msgid "Logging filters"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:402
msgid "Log handlers, including the console log handler, can be associated with a link:https://docs.oracle.com/en/java/javase/11/docs/api/java.logging/java/util/logging/Filter.html[filter] that determines whether a log record should be logged or not."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:405
msgid "To register a logging filter, annotate a (`final`) class that implements `java.util.logging.Filter` with `@io.quarkus.logging.LoggingFilter` and set the `name` property.  The filter is then attached to the appropriate handler using the `filter` configuration property."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:407
msgid "For instance, if you want to filter out log records containing specific text from the console logs, you can define the text as part of the application configuration instead of hardcoding it."
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/logging.adoc:408
#, no-wrap
msgid "An example of how you can write a filter:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/logging.adoc:415
#, no-wrap
msgid ""
"import io.quarkus.logging.LoggingFilter;\n"
"import java.util.logging.Filter;\n"
"import java.util.logging.LogRecord;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/logging.adoc:418
#, no-wrap
msgid ""
"@LoggingFilter(name = \"my-filter\")\n"
"public final class TestFilter implements Filter {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/logging.adoc:420
#, no-wrap
msgid "    private final String part;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/logging.adoc:424
#, no-wrap
msgid ""
"    public TestFilter(@ConfigProperty(name = \"my-filter.part\") String part) {\n"
"        this.part = part;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/logging.adoc:430
#, no-wrap
msgid ""
"    @Override\n"
"    public boolean isLoggable(LogRecord record) {\n"
"        return !record.getMessage().contains(part);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/logging.adoc:432
#, no-wrap
msgid "Then, configure it in the usual Quarkus way, for example, by using `application.properties`:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/logging.adoc:436
#, no-wrap
msgid "my-filter.part=TEST\n"
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/logging.adoc:438
#, no-wrap
msgid "Lastly, register this filter to the console handler:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/logging.adoc:442
#, no-wrap
msgid "quarkus.log.console.filter=my-filter\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/logging.adoc:445
#, no-wrap
msgid "File log handler"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/logging.adoc:450
msgid "By default, the file log handler in Quarkus is disabled.  Once enabled, it enables the logging of all events to a file on the application's host, while also supporting log file rotation.  Log file rotation ensures effective log file management over time by maintaining a specified number of backup log files, while keeping the primary log file up-to-date and manageable."
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/logging.adoc:452
msgid "For details about its configuration, see the xref:#quarkus-log-logging-log-config_quarkus.log.file-file-logging[file logging configuration] reference."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/logging.adoc:453
#, no-wrap
msgid "Syslog log handler"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/logging.adoc:457
msgid "The syslog handler in Quarkus follows the link:https://en.wikipedia.org/wiki/Syslog[Syslog] protocol, which is used to send log messages on Unix-like systems.  It utilizes the protocol defined in link:https://tools.ietf.org/html/rfc5424[RFC 5424]."
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/logging.adoc:460
msgid "By default, the syslog handler is disabled.  When enabled, it sends all log events to a syslog server, typically the local syslog server for the application."
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/logging.adoc:462
msgid "For details about its configuration, see the xref:#quarkus-log-logging-log-config_quarkus.log.syslog-syslog-logging[Syslog logging configuration] reference."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/logging.adoc:464
#, no-wrap
msgid "Logging configurations examples"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/logging.adoc:467
msgid "This chapter provides examples of frequently used logging configurations."
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/logging.adoc:468
#, no-wrap
msgid "Console DEBUG logging except for Quarkus logs (INFO), no color, shortened time, shortened category prefixes"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/logging.adoc:474
#, no-wrap
msgid ""
"quarkus.log.console.format=%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n\n"
"quarkus.log.console.level=DEBUG\n"
"quarkus.console.color=false\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/logging.adoc:476
#, no-wrap
msgid "quarkus.log.category.\"io.quarkus\".level=INFO\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:480
msgid "If you are adding these properties via command line make sure `\"` is escaped.  For example `-Dquarkus.log.category.\\\"io.quarkus\\\".level=DEBUG`."
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/logging.adoc:482
#, no-wrap
msgid "File TRACE logging configuration"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/logging.adoc:494
#, no-wrap
msgid ""
"quarkus.log.file.enable=true\n"
"# Send output to a trace.log file under the /tmp directory\n"
"quarkus.log.file.path=/tmp/trace.log\n"
"quarkus.log.file.level=TRACE\n"
"quarkus.log.file.format=%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n\n"
"# Set 2 categories (io.quarkus.smallrye.jwt, io.undertow.request.security) to TRACE level\n"
"quarkus.log.min-level=TRACE\n"
"quarkus.log.category.\"io.quarkus.smallrye.jwt\".level=TRACE\n"
"quarkus.log.category.\"io.undertow.request.security\".level=TRACE\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:497
msgid "As we don't change the root logger, console log will only contain `INFO` or higher order logs."
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/logging.adoc:499
#, no-wrap
msgid "Named handlers attached to a category"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/logging.adoc:513
#, no-wrap
msgid ""
"# Send output to a trace.log file under the /tmp directory\n"
"quarkus.log.file.path=/tmp/trace.log\n"
"quarkus.log.console.format=%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n\n"
"# Configure a named handler that logs to console\n"
"quarkus.log.handler.console.\"STRUCTURED_LOGGING\".format=%e%n\n"
"# Configure a named handler that logs to file\n"
"quarkus.log.handler.file.\"STRUCTURED_LOGGING_FILE\".enable=true\n"
"quarkus.log.handler.file.\"STRUCTURED_LOGGING_FILE\".format=%e%n\n"
"# Configure the category and link the two named handlers to it\n"
"quarkus.log.category.\"io.quarkus.category\".level=INFO\n"
"quarkus.log.category.\"io.quarkus.category\".handlers=STRUCTURED_LOGGING,STRUCTURED_LOGGING_FILE\n"
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/logging.adoc:516
#, no-wrap
msgid "Named handlers attached to the root logger"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/logging.adoc:524
#, no-wrap
msgid ""
"# configure a named file handler that sends the output to 'quarkus.log'\n"
"quarkus.log.handler.file.CONSOLE_MIRROR.enable=true\n"
"quarkus.log.handler.file.CONSOLE_MIRROR.path=quarkus.log\n"
"# attach the handler to the root logger\n"
"quarkus.log.handlers=CONSOLE_MIRROR\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/logging.adoc:526
#, no-wrap
msgid "Centralized log management"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:529
msgid "To send logs to a centralized tool such as Graylog, Logstash, or Fluentd, see the Quarkus xref:centralized-log-management.adoc[Centralized log management] guide."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/logging.adoc:530
#, no-wrap
msgid "Configure logging for `@QuarkusTest`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:534
msgid "To configure logging for your `@QuarkusTest`, ensure that you configure the `maven-surefire-plugin` accordingly.  Specifically, you need to set the appropriate `LogManager` by using the `java.util.logging.manager` system property."
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/logging.adoc:535
#, no-wrap
msgid "Example Configuration"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/logging.adoc:553
#, no-wrap
msgid ""
"<build>\n"
"  <plugins>\n"
"    <plugin>\n"
"      <artifactId>maven-surefire-plugin</artifactId>\n"
"      <version>${surefire-plugin.version}</version>\n"
"      <configuration>\n"
"        <systemPropertyVariables>\n"
"          <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager> <1>\n"
"          <quarkus.log.level>DEBUG</quarkus.log.level>  <2>\n"
"          <maven.home>${maven.home}</maven.home>\n"
"        </systemPropertyVariables>\n"
"      </configuration>\n"
"    </plugin>\n"
"  </plugins>\n"
"</build>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:555
msgid "Make sure the `org.jboss.logmanager.LogManager` is used."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:556
msgid "Enable debug logging for all logging categories."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:558
msgid "For Gradle, add the following configuration to the `build.gradle` file:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/logging.adoc:564
#, no-wrap
msgid ""
"test {\n"
"\tsystemProperty \"java.util.logging.manager\", \"org.jboss.logmanager.LogManager\"\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:567
msgid "See also xref:getting-started-testing.adoc#test-from-ide[Running `@QuarkusTest` from an IDE]."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/logging.adoc:569
#, no-wrap
msgid "Use other logging APIs"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:572
msgid "Quarkus relies on the JBoss Logging library for all the logging requirements."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:575
msgid "Suppose you use libraries that depend on other logging libraries, such as Apache Commons Logging, Log4j, or SLF4J.  In that case, you need to exclude them from the dependencies and use one of the JBoss Logging adapters."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:577
msgid "This is especially important when building native executables, as you could encounter issues similar to the following when compiling the native executable:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/logging.adoc:581
#, no-wrap
msgid "Caused by java.lang.ClassNotFoundException: org.apache.commons.logging.impl.LogFactoryImpl\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:584
msgid "The logging implementation is not included in the native executable, but you can resolve this issue using JBoss Logging adapters."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:586
msgid "These adapters are available for popular open-source logging components, as explained in the next chapter."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/logging.adoc:587
#, no-wrap
msgid "Add a logging adapter to your application"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:590
msgid "For each logging API that is not `jboss-logging`:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:592
msgid "Add a logging adapter library to ensure that messages logged through these APIs are routed to the JBoss Log Manager backend."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:594
msgid "This step is unnecessary for libraries that are dependencies of a Quarkus extension where the extension handles it automatically."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:596
msgid "Apache Commons Logging:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/logging.adoc:604
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>org.jboss.logging</groupId>\n"
"    <artifactId>commons-logging-jboss-logging</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/logging.adoc:610
#, no-wrap
msgid "implementation(\"org.jboss.logging:commons-logging-jboss-logging\")\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:613
msgid "Log4j:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/logging.adoc:621
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>org.jboss.logmanager</groupId>\n"
"    <artifactId>log4j-jboss-logmanager</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/logging.adoc:627
#, no-wrap
msgid "implementation(\"org.jboss.logmanager:log4j-jboss-logmanager\")\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:630
msgid "Log4j 2:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/logging.adoc:638
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>org.jboss.logmanager</groupId>\n"
"    <artifactId>log4j2-jboss-logmanager</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/logging.adoc:644
#, no-wrap
msgid "implementation(\"org.jboss.logmanager:log4j2-jboss-logmanager\")\n"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/logging.adoc:649
msgid "Do not include any Log4j dependencies because the `log4j2-jboss-logmanager` library contains all that is needed to use Log4j as a logging implementation."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:652
msgid "SLF4J:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/logging.adoc:660
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>org.jboss.slf4j</groupId>\n"
"    <artifactId>slf4j-jboss-logmanager</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/logging.adoc:666
#, no-wrap
msgid "implementation(\"org.jboss.slf4j:slf4j-jboss-logmanager\")\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:669
msgid "Verify whether the logs generated by the added library adhere to the same format as the other Quarkus logs."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/logging.adoc:670
#, no-wrap
msgid "Use MDC to add contextual log information"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:673
msgid "Quarkus overrides log MDC (Mapped Diagnostic Context) to improve the compatibility with its reactive core."
msgstr ""

#. type: Title ====
#: upstream/_versions/main/guides/logging.adoc:674
#, no-wrap
msgid "Adding and reading MDC data"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:677
msgid "To add data to the MDC and extract it in your log output, you need to:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:679
msgid "Use the `MDC` class to set the data"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:680
msgid "Customize the log format to use `%X\\{mdc-key\\}`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:682
msgid "Let's consider the following code:"
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/logging.adoc:684
#, no-wrap
msgid "Example with JBoss Logging and `io.quarkus.logging.Log`"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/logging.adoc:687
#, no-wrap
msgid "package me.sample;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/logging.adoc:692
#, no-wrap
msgid ""
"import io.quarkus.logging.Log;\n"
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.Path;\n"
"import org.jboss.logmanager.MDC;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/logging.adoc:694
#, no-wrap
msgid "import java.util.UUID;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/logging.adoc:697
#, no-wrap
msgid ""
"@Path(\"/hello/jboss\")\n"
"public class GreetingResourceJbossLogging {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/logging.adoc:707
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/test\")\n"
"    public String greeting() {\n"
"        MDC.put(\"request.id\", UUID.randomUUID().toString());\n"
"        MDC.put(\"request.path\", \"/hello/test\");\n"
"        Log.info(\"request received\");\n"
"        return \"hello world!\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:710
msgid "If you configure the log format with the following line:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/logging.adoc:714
#, no-wrap
msgid "quarkus.log.console.format=%d{HH:mm:ss} %-5p request.id=%X{request.id} request.path=%X{request.path} [%c{2.}] (%t) %s%n\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:717
msgid "You get messages containing the MDC data:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/logging.adoc:721
#, no-wrap
msgid "08:48:13 INFO  request.id=c37a3a36-b7f6-4492-83a1-de41dbc26fe2 request.path=/hello/test [me.sa.GreetingResourceJbossLogging] (executor-thread-1) request received\n"
msgstr ""

#. type: Title ====
#: upstream/_versions/main/guides/logging.adoc:723
#, no-wrap
msgid "MDC and supported logging APIs"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:727
msgid "Depending on the API you use, the MDC class is slightly different.  However, the APIs are very similar:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:729
msgid "log4j 1 - `org.apache.log4j.MDC.put(key, value)`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:730
msgid "log4j 2 - `org.apache.logging.log4j.ThreadContext.put(key, value)`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:731
msgid "slf4j - `org.slf4j.MDC.put(key, value)`"
msgstr ""

#. type: Title ====
#: upstream/_versions/main/guides/logging.adoc:733
#, no-wrap
msgid "MDC propagation"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:737
msgid "Under the hood, Quarkus provides a specific implementation of the MDC provider handling the reactive context.  Thus, the MDC data is propagated even when using reactive and asynchronous processing."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:739
msgid "Consequently, the MDC data is still available:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:741
msgid "after async calls (like a REST client returning a Uni)"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:742
msgid "in the code submitted to the `ManagedExecutor` (`@Inject org.eclipse.microprofile.context.ManagedExecutor executor`)"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:743
msgid "in the code executed using `vertx.executeBlocking()`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/logging.adoc:745
msgid "When available, the MDC data is stored on a _duplicated context_ which is an isolated context for your processing."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/logging.adoc:748
#, no-wrap
msgid "Logging configuration reference"
msgstr ""

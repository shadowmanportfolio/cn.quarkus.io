# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-04-04 02:10+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:7
#, no-wrap
msgid "Authorization of web endpoints"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:13
msgid "Quarkus has an integrated pluggable web security layer. If security is enabled, all HTTP requests will have a permission check performed to make sure they are allowed to continue.  This means you cannot use `@PermitAll` to open a path if the path is blocked by the `quarkus.http.auth.` configuration."
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:17
msgid "If you are using Jakarta REST, consider using `quarkus.security.jaxrs.deny-unannotated-endpoints` or `quarkus.security.jaxrs.default-roles-allowed` to set default security requirements instead of HTTP path-level matching because annotations can override these properties on an individual endpoint."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:22
msgid "Authorization is based on user roles that the security provider provides.  To customize these roles, a `SecurityIdentityAugmentor` can be created, see xref:security-customization.adoc#security-identity-customization[Security Identity Customization]."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:24
#, no-wrap
msgid "Authorization using configuration"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:27
msgid "Permissions are defined in the Quarkus configuration using permission sets, with each permission set specifying a policy for access control."
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:28
#, no-wrap
msgid "{project-name} policies summary"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:30
#, no-wrap
msgid "Built-in policy"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:31
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:244
#, no-wrap
msgid "Description"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:31
#, no-wrap
msgid "`deny`"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:32
#, no-wrap
msgid "This policy denies all users."
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:32
#, no-wrap
msgid "`permit`"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:33
#, no-wrap
msgid "This policy permits all users."
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:33
#, no-wrap
msgid "`authenticated`"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:34
#, no-wrap
msgid "This policy permits only authenticated users."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:37
msgid "You can define role-based policies that allow users with specified roles to access the resources."
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:38
#, no-wrap
msgid "Example of a role-based policy"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:42
#, no-wrap
msgid "quarkus.http.auth.policy.role-policy1.roles-allowed=user,admin                  <1>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:45
msgid "This defines a role-based policy that allows users with the `user` and `admin` roles.  Such a custom policy can be referenced by permission sets just like the built-in ones, as shown in the example below."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:47
msgid "Permission sets are defined in `application.properties` as follows:"
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:48
#, no-wrap
msgid "Example of policy configuration"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:54
#, no-wrap
msgid ""
"quarkus.http.auth.permission.permit1.paths=/public/*                            <1>\n"
"quarkus.http.auth.permission.permit1.policy=permit\n"
"quarkus.http.auth.permission.permit1.methods=GET\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:57
#, no-wrap
msgid ""
"quarkus.http.auth.permission.deny1.paths=/forbidden                             <2>\n"
"quarkus.http.auth.permission.deny1.policy=deny\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:60
#, no-wrap
msgid ""
"quarkus.http.auth.permission.roles1.paths=/roles-secured/*,/other/*,/api/*      <3>\n"
"quarkus.http.auth.permission.roles1.policy=role-policy1\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:63
msgid "This permission references the default `permit` built-in policy to allow `GET` methods to `/public`.  In this case, the demonstrated setting would not affect this example because this request is allowed anyway."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:65
msgid "This permission references the built-in `deny` policy for `/forbidden`.  This is an exact path match as it does not end with `*`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:67
msgid "This is a permission set that references the previously defined policy.  `roles1` is an example name; you can call the permission sets whatever you want."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:69
#, no-wrap
msgid "Matching on paths and methods"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:74
msgid "Permission sets can also specify paths and methods as a comma-separated list.  If a path ends with the `*` wildcard, the query it generates matches all sub-paths.  Otherwise, it queries for an exact match and will only match that specific path:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:80
#, no-wrap
msgid ""
"quarkus.http.auth.permission.permit1.paths=/public/*,/css/*,/js/*,/robots.txt\n"
"quarkus.http.auth.permission.permit1.policy=permit\n"
"quarkus.http.auth.permission.permit1.methods=GET,HEAD\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:82
#, no-wrap
msgid "Matching a path but not a method"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:85
msgid "The request is rejected if a request matches one or more permission sets based on the path but does not match any due to method requirements."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:88
msgid "Given the above permission set, `GET /public/foo` would match both the path and method and thus be allowed, whereas `POST /public/foo` would match the path but not the method and would therefore be rejected."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:90
#, no-wrap
msgid "Matching multiple paths: longest path wins"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:94
msgid "Matching is always done on the \"longest path wins\" basis.  Less specific permission sets are not considered if a more specific one has been matched:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:100
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:136
#, no-wrap
msgid ""
"quarkus.http.auth.permission.permit1.paths=/public/*\n"
"quarkus.http.auth.permission.permit1.policy=permit\n"
"quarkus.http.auth.permission.permit1.methods=GET,HEAD\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:103
#, no-wrap
msgid ""
"quarkus.http.auth.permission.deny1.paths=/public/forbidden-folder/*\n"
"quarkus.http.auth.permission.deny1.policy=deny\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:108
msgid "Given the above permission set, `GET /public/forbidden-folder/foo` would match both permission sets' paths, but because it matches the `deny1` permission set's path on a longer match, `deny1` will be chosen, and the request will be rejected."
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:113
msgid "Subpath permissions always win against the root path permissions, as explained above in the `deny1` versus `permit1` permission example.  Here is another example showing subpath permission allowing a public resource access with the root path permission requiring the authorization:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:119
#, no-wrap
msgid ""
"quarkus.http.auth.policy.user-policy.roles-allowed=user\n"
"quarkus.http.auth.permission.roles.paths=/api/*\n"
"quarkus.http.auth.permission.roles.policy=user-policy\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:122
#, no-wrap
msgid ""
"quarkus.http.auth.permission.public.paths=/api/noauth/*\n"
"quarkus.http.auth.permission.public.policy=permit\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:125
#, no-wrap
msgid "Matching multiple paths: most specific method wins"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:130
msgid "When a path is registered with multiple permission sets, the permission sets that explicitly specify an HTTP method that matches the request will take precedence.  In this instance, the permission sets without methods will only come into effect if the request method does not match permission sets with the method specification."
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:139
#, no-wrap
msgid ""
"quarkus.http.auth.permission.deny1.paths=/public/*\n"
"quarkus.http.auth.permission.deny1.policy=deny\n"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:144
msgid "Given the above permission set, `GET /public/foo` would match the paths of both permission sets, but because it fits the explicit method of the `permit1` permission set, `permit1` is chosen, and the request is accepted."
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:146
msgid "`PUT /public/foo`, on the other hand, will not match the method permissions of `permit1`, so `deny1` will be activated and reject the request."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:148
#, no-wrap
msgid "Matching multiple paths and methods: both win"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:153
msgid "Sometimes, the previously described rules allow multiple permission sets to win at the same time.  In that case, for the request to proceed, all the permissions must allow access.  Note that for this to happen, both have to either have specified the method or have no method. Method-specific matches take precedence."
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:158
#, no-wrap
msgid ""
"quarkus.http.auth.policy.user-policy1.roles-allowed=user\n"
"quarkus.http.auth.policy.admin-policy1.roles-allowed=admin\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:161
#, no-wrap
msgid ""
"quarkus.http.auth.permission.roles1.paths=/api/*,/restricted/*\n"
"quarkus.http.auth.permission.roles1.policy=user-policy1\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:164
#, no-wrap
msgid ""
"quarkus.http.auth.permission.roles2.paths=/api/*,/admin/*\n"
"quarkus.http.auth.permission.roles2.policy=admin-policy1\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:167
msgid "Given the above permission set, `GET /api/foo` would match both permission sets' paths, requiring both the `user` and `admin` roles."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:168
#, no-wrap
msgid "Configuration properties to deny access"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:171
msgid "The following configuration settings alter the role-based access control (RBAC) denying behavior:"
msgstr ""

#. type: Labeled list
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:172
#, no-wrap
msgid "`quarkus.security.jaxrs.deny-unannotated-endpoints=true|false`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:176
msgid "If set to true, access is denied for all Jakarta REST endpoints by default. If a Jakarta REST endpoint does not have any security annotations, it defaults to the `@DenyAll` behavior.  This is useful to ensure you cannot accidentally expose an endpoint that is supposed to be secured.  Defaults to `false`."
msgstr ""

#. type: Labeled list
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:177
#, no-wrap
msgid "`quarkus.security.jaxrs.default-roles-allowed=role1,role2`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:181
msgid "Defines the default role requirements for unannotated endpoints.  The `**` role is a special role that means any authenticated user.  This cannot be combined with `deny-unannotated-endpoints`, as `deny` takes the effect instead."
msgstr ""

#. type: Labeled list
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:182
#, no-wrap
msgid "`quarkus.security.deny-unannotated-members=true|false`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:187
msgid "if set to true, the access will be denied to all CDI methods and Jakarta REST endpoints that do not have security annotations but are defined in classes that contain methods with security annotations.  Defaults to `false`."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:188
#, no-wrap
msgid "Disabling permissions"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:191
msgid "Permissions can be disabled at build time with an `enabled` property for each declared permission, such as:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:198
#, no-wrap
msgid ""
"quarkus.http.auth.permission.permit1.enabled=false\n"
"quarkus.http.auth.permission.permit1.paths=/public/*,/css/*,/js/*,/robots.txt\n"
"quarkus.http.auth.permission.permit1.policy=permit\n"
"quarkus.http.auth.permission.permit1.methods=GET,HEAD\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:202
msgid "Permissions can be reenabled at runtime with a system property or environment variable, such as: `-Dquarkus.http.auth.permission.permit1.enabled=true`."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:203
#, no-wrap
msgid "Permission paths and HTTP root path"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:206
msgid "The `quarkus.http.root-path` configuration property is used to change the xref:http-reference.adoc#context-path[http endpoint context path]."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:208
msgid "By default, `quarkus.http.root-path` is prepended automatically to configured permission paths then do not use a forward slash, for example:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:212
#, no-wrap
msgid "quarkus.http.auth.permission.permit1.paths=public/*,css/*,js/*,robots.txt\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:215
msgid "This configuration is equivalent to the following:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:219
#, no-wrap
msgid "quarkus.http.auth.permission.permit1.paths=${quarkus.http.root-path}/public/*,${quarkus.http.root-path}/css/*,${quarkus.http.root-path}/js/*,${quarkus.http.root-path}/robots.txt\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:224
msgid "A leading slash will change how the configured permission path is interpreted.  The configured URL will be used as-is, and paths will not be adjusted if the value of `quarkus.http.root-path` is changed.  For example:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:228
#, no-wrap
msgid "quarkus.http.auth.permission.permit1.paths=/public/*,css/*,js/*,robots.txt\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:231
msgid "This configuration will only impact resources served from the fixed/static URL `/public`, which may not match your application resources if `quarkus.http.root-path` has been set to something other than `/`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:233
msgid "See link:https://quarkus.io/blog/path-resolution-in-quarkus/[Path Resolution in Quarkus] for more information."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:236
#, no-wrap
msgid "Authorization using annotations"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:240
msgid "{project-name} comes with built-in security to allow for Role-Based Access Control (link:https://en.wikipedia.org/wiki/Role-based_access_control[RBAC])  based on the common security annotations `@RolesAllowed`, `@DenyAll`, `@PermitAll` on REST endpoints and CDI beans."
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:241
#, no-wrap
msgid "{project-name} annotation types summary"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:243
#, no-wrap
msgid "Annotation type"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:244
#, no-wrap
msgid "@DenyAll"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:245
#, no-wrap
msgid "Specifies that no security roles are allowed to invoke the specified methods."
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:245
#, no-wrap
msgid "@PermitAll"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:248
#, no-wrap
msgid ""
"Specifies that all security roles are allowed to invoke the specified methods.\n"
"\n"
"`@PermitAll` lets everybody in even without authentication."
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:248
#, no-wrap
msgid "@RolesAllowed"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:251
#, no-wrap
msgid ""
"Specifies the list of security roles permitted to access methods in an application.\n"
"\n"
"As an equivalent to `@RolesAllowed(\"**\")`, {project-name} also provides the `io.quarkus.security.Authenticated` annotation that permits any authenticated user to access the resource."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:254
msgid "xref:subject-example[SubjectExposingResource example] featured in this chapter demonstrates an endpoint that uses both Jakarta REST and Common Security annotations to describe and secure its endpoints."
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:256
#, no-wrap
msgid "SubjectExposingResource example"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:260
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:336
#, no-wrap
msgid "import java.security.Principal;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:268
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:344
#, no-wrap
msgid ""
"import jakarta.annotation.security.DenyAll;\n"
"import jakarta.annotation.security.PermitAll;\n"
"import jakarta.annotation.security.RolesAllowed;\n"
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.Path;\n"
"import jakarta.ws.rs.core.Context;\n"
"import jakarta.ws.rs.core.SecurityContext;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:271
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:347
#, no-wrap
msgid ""
"@Path(\"subject\")\n"
"public class SubjectExposingResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:280
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"secured\")\n"
"    @RolesAllowed(\"Tester\") <1>\n"
"    public String getSubjectSecured(@Context SecurityContext sec) {\n"
"        Principal user = sec.getUserPrincipal(); <2>\n"
"        String name = user != null ? user.getName() : \"anonymous\";\n"
"        return name;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:289
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"unsecured\")\n"
"    @PermitAll <3>\n"
"    public String getSubjectUnsecured(@Context SecurityContext sec) {\n"
"        Principal user = sec.getUserPrincipal(); <4>\n"
"        String name = user != null ? user.getName() : \"anonymous\";\n"
"        return name;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:299
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"denied\")\n"
"    @DenyAll <5>\n"
"    public String getSubjectDenied(@Context SecurityContext sec) {\n"
"        Principal user = sec.getUserPrincipal();\n"
"        String name = user != null ? user.getName() : \"anonymous\";\n"
"        return name;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:301
msgid "The `/subject/secured` endpoint requires an authenticated user with the granted \"Tester\" role through the use of the `@RolesAllowed(\"Tester\")` annotation."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:302
msgid "The endpoint obtains the user principal from the Jakarta REST `SecurityContext`. This will be non-null for a secured endpoint."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:303
msgid "The `/subject/unsecured` endpoint allows for unauthenticated access by specifying the `@PermitAll` annotation."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:304
msgid "The call to obtain the user principal returns null if the caller is unauthenticated and non-null if the caller is authenticated."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:305
msgid "The `/subject/denied` endpoint declares the `@DenyAll` annotation, thus disallowing all direct access to it as a REST method, regardless of the user calling it. The method is still invokable internally by other methods in this class."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:307
msgid "If you plan to use standard security annotations on the IO thread, review the information in xref:security-proactive-authentication-concept.adoc[Proactive Authentication]."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:310
msgid "The `@RolesAllowed` annotation value supports xref:config-reference.adoc#property-expressions[Property Expressions] including default values and nested Property Expressions.  Configuration properties used with the annotation are resolved at runtime."
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:311
#, no-wrap
msgid "Annotation value examples"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:313
#, no-wrap
msgid "Annotation"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:314
#, no-wrap
msgid "Value explanation"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:314
#, no-wrap
msgid "`@RolesAllowed(\"${admin-role}\")`"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:315
#, no-wrap
msgid "The endpoint will allow users with the role denoted by the value of the `admin-role` property."
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:315
#, no-wrap
msgid "`@RolesAllowed(\"${tester.group}-${tester.role}\")`"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:317
#, no-wrap
msgid "An example showing that the value can contain multiple variables."
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:317
#, no-wrap
msgid "`@RolesAllowed(\"${customer:User}\")`"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:319
#, no-wrap
msgid ""
"A default value demonstration.\n"
"The required role will be denoted by the value of the `customer` property, but if that property is not specified, a role named `User` will be required as a default."
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:322
#, no-wrap
msgid "Example of a property expressions usage in the `@RolesAllowed` annotation"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:331
#, no-wrap
msgid ""
"admin=Administrator\n"
"tester.group=Software\n"
"tester.role=Tester\n"
"%prod.secured=User\n"
"%dev.secured=**\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:356
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"admin\")\n"
"    @RolesAllowed(\"${admin}\") <1>\n"
"    public String getSubjectSecuredAdmin(@Context SecurityContext sec) {\n"
"        Principal user = sec.getUserPrincipal();\n"
"        String name = user != null ? user.getName() : \"anonymous\";\n"
"        return name;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:365
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"software-tester\")\n"
"    @RolesAllowed(\"${tester.group}-${tester.role}\") <2>\n"
"    public String getSubjectSoftwareTester(@Context SecurityContext sec) {\n"
"        Principal user = sec.getUserPrincipal();\n"
"        String name = user != null ? user.getName() : \"anonymous\";\n"
"        return name;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:374
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"user\")\n"
"    @RolesAllowed(\"${customer:User}\") <3>\n"
"    public String getSubjectUser(@Context SecurityContext sec) {\n"
"        Principal user = sec.getUserPrincipal();\n"
"        String name = user != null ? user.getName() : \"anonymous\";\n"
"        return name;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:384
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"secured\")\n"
"    @RolesAllowed(\"${secured}\") <4>\n"
"    public String getSubjectSecured(@Context SecurityContext sec) {\n"
"        Principal user = sec.getUserPrincipal();\n"
"        String name = user != null ? user.getName() : \"anonymous\";\n"
"        return name;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:386
msgid "The `@RolesAllowed` annotation value is set to the value of `Administrator`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:388
msgid "This `/subject/software-tester` endpoint requires an authenticated user that has been granted the role \"Software-Tester\".  It is possible to use multiple expressions in the role definition."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:389
msgid "This `/subject/user` endpoint requires an authenticated user that has been granted the role \"User\" through the use of the `@RolesAllowed(\"${customer:User}\")` annotation, as we did not set the configuration property `customer`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:390
msgid "This `/subject/secured` endpoint requires an authenticated user that has been granted the role `User` in production but allows any authenticated user in development mode."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:391
#, no-wrap
msgid "Permission annotation"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:395
msgid "Quarkus also provides the `io.quarkus.security.PermissionsAllowed` annotation that will permit any authenticated user with given permission to access the resource.  The annotation is extension of the common security annotations and check permissions granted to `SecurityIdentity`."
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:396
#, no-wrap
msgid "Example of endpoints secured with the `@PermissionsAllowed` annotation"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:401
#, no-wrap
msgid "package org.acme.crud;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:408
#, no-wrap
msgid ""
"import io.quarkus.arc.Arc;\n"
"import io.vertx.ext.web.RoutingContext;\n"
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.POST;\n"
"import jakarta.ws.rs.Path;\n"
"import jakarta.ws.rs.QueryParam;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:410
#, no-wrap
msgid "import io.quarkus.security.PermissionsAllowed;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:415
#, no-wrap
msgid ""
"import java.security.BasicPermission;\n"
"import java.security.Permission;\n"
"import java.util.Collection;\n"
"import java.util.Collections;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:418
#, no-wrap
msgid ""
"@Path(\"/crud\")\n"
"public class CRUDResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:426
#, no-wrap
msgid ""
"    @PermissionsAllowed(\"create\") <1>\n"
"    @PermissionsAllowed(\"update\")\n"
"    @POST\n"
"    @Path(\"/modify/repeated\")\n"
"    public String createOrUpdate() {\n"
"        return \"modified\";\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:433
#, no-wrap
msgid ""
"    @PermissionsAllowed(value = {\"create\", \"update\"}, inclusive=true) <2>\n"
"    @POST\n"
"    @Path(\"/modify/inclusive\")\n"
"    public String createOrUpdate(Long id) {\n"
"        return id + \" modified\";\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:440
#, no-wrap
msgid ""
"    @PermissionsAllowed({\"see:detail\", \"see:all\", \"read\"}) <3>\n"
"    @GET\n"
"    @Path(\"/id/{id}\")\n"
"    public String getItem(String id) {\n"
"        return \"item-detail-\" + id;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:448
#, no-wrap
msgid ""
"    @PermissionsAllowed(value = \"list\", permission = CustomPermission.class) <4>\n"
"    @Path(\"/list\")\n"
"    @GET\n"
"    public Collection<String> list(@QueryParam(\"query-options\") String queryOptions) {\n"
"        // your business logic comes here\n"
"        return Collections.emptySet();\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:450
#, no-wrap
msgid "    public static class CustomPermission extends BasicPermission {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:454
#, no-wrap
msgid ""
"        public CustomPermission(String name) {\n"
"            super(name);\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:464
#, no-wrap
msgid ""
"        @Override\n"
"        public boolean implies(Permission permission) {\n"
"            var event = Arc.container().instance(RoutingContext.class).get(); <5>\n"
"            var publicContent = \"public-content\".equals(event.request().params().get(\"query-options\"));\n"
"            var hasPermission = getName().equals(permission.getName());\n"
"            return hasPermission && publicContent;\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:466
msgid "Resource method `createOrUpdate` is only accessible by user with both `create` and `update` permissions."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:468
msgid "By default, at least one of the permissions specified through one annotation instance is required.  You can require all of them by setting `inclusive=true`. Both resource methods `createOrUpdate` have equal authorization requirements."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:469
msgid "Access is granted to `getItem` if `SecurityIdentity` has either `read` permission or `see` permission and one of actions (`all`, `detail`)."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:471
msgid "You can use any `java.security.Permission` implementation of your choice.  By default, string-based permission is performed by the `io.quarkus.security.StringPermission`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:472
msgid "Permissions are not beans, therefore only way to obtain bean instances is programmatically via the `Arc.container()`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:474
msgid "If you plan to use the `@PermissionsAllowed` on the IO thread, review the information in xref:security-proactive-authentication-concept.adoc[Proactive Authentication]."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:477
msgid "The `@PermissionsAllowed` is not repeatable on class-level due to limitations of Quarkus interceptors.  Please find well-argued explanation in the xref:cdi-reference.adoc#repeatable-interceptor-bindings[Repeatable interceptor bindings] section of the CDI reference."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:480
msgid "Provided `SecurityIdentity` contains roles, the easiest to add permissions to `SecurityIdentity` is to create a roles to permissions mapping.  xref:authorization-using-configuration[HTTP role-based policies] can be used to grant `SecurityIdentity` permissions required by `CRUDResource` endpoints to authenticated requests like this:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:487
#, no-wrap
msgid ""
"quarkus.http.auth.policy.role-policy1.permissions.user=see:all                                      <1>\n"
"quarkus.http.auth.policy.role-policy1.permissions.admin=create,update,read                          <2>\n"
"quarkus.http.auth.permission.roles1.paths=/crud/modify/*,/crud/id/*                                 <3>\n"
"quarkus.http.auth.permission.roles1.policy=role-policy1\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:492
#, no-wrap
msgid ""
"quarkus.http.auth.policy.role-policy2.permissions.user=list\n"
"quarkus.http.auth.policy.role-policy2.permission-class=org.acme.crud.CRUDResource.CustomPermission  <4>\n"
"quarkus.http.auth.permission.roles2.paths=/crud/list\n"
"quarkus.http.auth.permission.roles2.policy=role-policy2\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:495
msgid "Add permission `see` with action `all` to `SecurityIdentity` that holds role `user`.  Similarly as for `@PermissionsAllowed` annotation, `io.quarkus.security.StringPermission` is used by default."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:496
msgid "Permissions `create`, `update` and `read` are mapped to the role `admin`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:498
msgid "The role policy `role-policy1` only allows authenticated requests to access `/crud/modify` and `/crud/id` sub-paths.  Please see xref:matching-multiple-paths[Matching multiple paths] section of this guide for more information on path matching algorithm."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:501
msgid "You can also specify your own implementation of the `java.security.Permission` class.  The class you provide must define exactly one constructor that accepts permission name and optionally actions (as `String` array).  Here, permission `list` will be added to `SecurityIdentity` as `new CustomPermission(\"list\")`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:505
msgid "You can also create a custom `java.security.Permission` with additional constructor parameters.  These additional parameters will be matched with arguments of the method annotated with the `@PermissionsAllowed` annotation.  Later, Quarkus will instantiate your custom Permission with actual arguments, with which the method annotated with the `@PermissionsAllowed` has been invoked."
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:506
#, no-wrap
msgid "Example of a custom `java.security.Permission` that accepts additional arguments"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:513
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:641
#, no-wrap
msgid ""
"import java.security.Permission;\n"
"import java.util.Arrays;\n"
"import java.util.Set;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:515
#, no-wrap
msgid "public class LibraryPermission extends Permission {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:518
#, no-wrap
msgid ""
"    private final Set<String> actions;\n"
"    private final Library library;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:524
#, no-wrap
msgid ""
"    public LibraryPermission(String libraryName, String[] actions, Library library) { <1>\n"
"        super(libraryName);\n"
"        this.actions = Set.copyOf(Arrays.asList(actions));\n"
"        this.library = library;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:536
#, no-wrap
msgid ""
"    @Override\n"
"    public boolean implies(Permission requiredPermission) {\n"
"        if (requiredPermission instanceof LibraryPermission) {\n"
"            LibraryPermission that = (LibraryPermission) requiredPermission;\n"
"            boolean librariesMatch = getName().equals(that.getName());\n"
"            boolean requiredLibraryIsSublibrary = library.isParentLibraryOf(that.library);\n"
"            boolean hasOneOfRequiredActions = that.actions.stream().anyMatch(actions::contains);\n"
"            return (librariesMatch || requiredLibraryIsSublibrary) && hasOneOfRequiredActions;\n"
"        }\n"
"        return false;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:538
#, no-wrap
msgid "    ...\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:540
#, no-wrap
msgid "    public static abstract class Library {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:542
#, no-wrap
msgid "        protected String description;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:544
#, no-wrap
msgid "        abstract boolean isParentLibraryOf(Library library);\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:546
#, no-wrap
msgid "    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:548
#, no-wrap
msgid "    public static class MediaLibrary extends Library {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:554
#, no-wrap
msgid ""
"        @Override\n"
"        boolean isParentLibraryOf(Library library) {\n"
"            return library instanceof MediaLibrary;\n"
"        }\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:559
#, no-wrap
msgid ""
"    public static class TvLibrary extends MediaLibrary {\n"
"        ...\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:562
msgid "There must be exactly one constructor of a custom `Permission` class, also first parameter is always considered a permission name (must be `String`).  Optionally, Quarkus may pass Permission actions to the constructor. Just declare the second parameter as `String[]`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:565
msgid "The `LibraryPermission` permit access to a library if `SecurityIdentity` is allowed to perform one of required actions (like `read`, `write`, `list`) on the very same library, or the parent one. Let's see how it is used:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:570
#, no-wrap
msgid ""
"import io.quarkus.security.PermissionsAllowed;\n"
"import jakarta.enterprise.context.ApplicationScoped;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:573
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class LibraryService {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:579
#, no-wrap
msgid ""
"    @PermissionsAllowed(value = \"tv:write\", permission = LibraryPermission.class) <1>\n"
"    public Library updateLibrary(String newDesc, Library update) {\n"
"        update.description = newDesc;\n"
"        return update;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:586
#, no-wrap
msgid ""
"    @PermissionsAllowed(value = \"tv:write\", permission = LibraryPermission.class, params = \"library\") <2>\n"
"    @PermissionsAllowed(value = {\"tv:read\", \"tv:list\"}, permission = LibraryPermission.class)\n"
"    public Library migrateLibrary(Library migrate, Library library) {\n"
"        // migrate libraries\n"
"        return library;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:588
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:625
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:649
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:711
#, no-wrap
msgid "}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:591
msgid "Formal parameter `update` is identified as the first `Library` parameter and passed to the `LibraryPermission`.  However this option comes with a price, as the `LibraryPermission` must be instantiated every single time `updateLibrary` method is invoked."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:593
msgid "Here, the first `Library` parameter is `migrate`, therefore we marked `library` parameter explicitly via `PermissionsAllowed#params`.  Please note that both Permission constructor and annotated method must have parameter `library`, otherwise validation will fail."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:599
msgid "If you would like to pass method parameters to a custom `Permission` constructor from RESTEasy Reactive endpoints, make sure you have `@PermissionsAllowed` annotation set not on the JAX-RS resource method itself, but on the injected CDI bean to which this method will delegate to. Setting `@PermissionsAllowed` on the JAX-RS resource method will not work because RESTEasy Reactive performs the security checks before the deserialization.  These limitations are demonstrated in the example below."
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:600
#, no-wrap
msgid "Example of endpoint limitations when it comes to passing annotated method arguments to the Permission constructor"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:606
#, no-wrap
msgid ""
"@Path(\"/library\")\n"
"public class LibraryResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:609
#, no-wrap
msgid ""
"    @Inject\n"
"    LibraryService libraryService;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:616
#, no-wrap
msgid ""
"    @PermissionsAllowed(value = \"tv:write\", permission = LibraryPermission.class)\n"
"    @PUT\n"
"    @Path(\"/id/{id}\")\n"
"    public Library updateLibrary(@PathParam(\"id\") Integer id, Library library) { <1>\n"
"        ...\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:623
#, no-wrap
msgid ""
"    @PUT\n"
"    @Path(\"/service-way/id/{id}\")\n"
"    public Library updateLibrarySvc(@PathParam(\"id\") Integer id, Library library) {\n"
"        String newDescription = \"new description \" + id;\n"
"        return libraryService.updateLibrary(newDescription, library); <2>\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:629
msgid "In the RESTEasy Reactive, the endpoint argument `library` won't ever be passed to the `LibraryPermission`, because it is not available.  Instead, Quarkus will pass `null` for the argument `library`.  That gives you option to reuse your custom Permission when the method argument (like `library`) is optional."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:630
msgid "Argument `library` will be passed to the `LibraryPermission` constructor as the `LibraryService#updateLibrary` method is not an endpoint."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:633
msgid "Similarly to the `CRUDResource` example, we can use permission to role mapping and grant user with role `admin` right to update `MediaLibrary`:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:637
#, no-wrap
msgid "package org.acme.library;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:643
#, no-wrap
msgid "public class MediaLibraryPermission extends LibraryPermission {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:647
#, no-wrap
msgid ""
"    public MediaLibraryPermission(String libraryName, String[] actions) {\n"
"        super(libraryName, actions, new MediaLibrary());    <1>\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:651
msgid "We want to pass `MediaLibrary` instance to the `LibraryPermission` constructor."
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:658
#, no-wrap
msgid ""
"quarkus.http.auth.policy.role-policy3.permissions.admin=media-library:list,media-library:read,media-library:write   <1>\n"
"quarkus.http.auth.policy.role-policy3.permission-class=org.acme.library.MediaLibraryPermission\n"
"quarkus.http.auth.permission.roles3.paths=/library/*\n"
"quarkus.http.auth.permission.roles3.policy=role-policy3\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:661
msgid "Grants permission `media-library` that is allowed to perform actions `read`, `write` and `list`.  Considering `MediaLibrary` is the `TvLibrary` class parent, we know that administrator is also going to be allowed to modify television library."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:665
msgid "All the examples above leveraged role to permission mapping, but you can also add permissions to the `SecurityIdentity` programmatically.  In the example below, we use xref:security-customization.adoc#security-identity-customization[Security Identity Customization] to add the same permission as we previously granted with the HTTP role-based policy."
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:666
#, no-wrap
msgid "Example of adding the `LibraryPermission` programmatically to the `SecurityIdentity`"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:672
#, no-wrap
msgid ""
"import java.security.Permission;\n"
"import java.util.function.Function;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:674
#, no-wrap
msgid "import jakarta.enterprise.context.ApplicationScoped;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:680
#, no-wrap
msgid ""
"import io.quarkus.security.identity.AuthenticationRequestContext;\n"
"import io.quarkus.security.identity.SecurityIdentity;\n"
"import io.quarkus.security.identity.SecurityIdentityAugmentor;\n"
"import io.quarkus.security.runtime.QuarkusSecurityIdentity;\n"
"import io.smallrye.mutiny.Uni;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:683
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class PermissionsIdentityAugmentor implements SecurityIdentityAugmentor {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:691
#, no-wrap
msgid ""
"    @Override\n"
"    public Uni<SecurityIdentity> augment(SecurityIdentity identity, AuthenticationRequestContext context) {\n"
"        if (isNotAdmin(identity)) {\n"
"            return Uni.createFrom().item(identity);\n"
"        }\n"
"        return Uni.createFrom().item(build(identity));\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:695
#, no-wrap
msgid ""
"    private boolean isNotAdmin(SecurityIdentity identity) {\n"
"        return identity.isAnonymous() || !\"admin\".equals(identity.getPrincipal().getName());\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:709
#, no-wrap
msgid ""
"    SecurityIdentity build(SecurityIdentity identity) {\n"
"        Permission possessedPermission = new MediaLibraryPermission(\"media-library\",\n"
"                new String[] { \"read\", \"write\", \"list\"}); <1>\n"
"        return QuarkusSecurityIdentity.builder(identity)\n"
"                .addPermissionChecker(new Function<Permission, Uni<Boolean>>() { <2>\n"
"                    @Override\n"
"                    public Uni<Boolean> apply(Permission requiredPermission) {\n"
"                        boolean accessGranted = possessedPermission.implies(requiredPermission);\n"
"                        return Uni.createFrom().item(accessGranted);\n"
"                    }\n"
"                })\n"
"                .build();\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:714
msgid "Created permission `media-library` is allowed to perform actions `read`, `write` and `list`.  Considering `MediaLibrary` is the `TvLibrary` class parent, we know that administrator is also going to be allowed to modify television library."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:715
msgid "You can add a permission checker via `io.quarkus.security.runtime.QuarkusSecurityIdentity.Builder#addPermissionChecker`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:717
msgid "Annotation permissions do not work with the custom xref:security-customization.adoc#jaxrs-security-context[JAX-RS SecurityContext], for there are no permissions in `jakarta.ws.rs.core.SecurityContext`."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:718
#, no-wrap
msgid "References"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:721
msgid "xref:security-overview-concept.adoc[Quarkus Security overview]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:722
msgid "xref:security-architecture-concept.adoc[Quarkus Security architecture]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:723
msgid "xref:security-authentication-mechanisms-concept.adoc#other-supported-authentication-mechanisms[Authentication mechanisms in Quarkus]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:724
msgid "xref:security-basic-authentication-concept.adoc[Basic authentication]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:724
msgid "xref:security-basic-authentication-tutorial.adoc[Secure a Quarkus application with Basic authentication and Jakarta Persistence]"
msgstr ""

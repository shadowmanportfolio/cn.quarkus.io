# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-05-04 02:00+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: upstream/_versions/main/guides/ansible.adoc:1
#, no-wrap
msgid "Automate Quarkus deployment with Ansible"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/ansible.adoc:8
msgid "Let’s see how to build and deploy a Quarkus app using https://docs.ansible.com/ansible/latest/index.html[Ansible]. We’ll see how we can automate the entire process, from the code checkout to the application compilation using Maven and then its deployment and start of the service, as a https://systemd.io/[systemd service], on the target system using Ansible and its collection for Quarkus."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/ansible.adoc:10
msgid "The first part, the application code checkout, compilation and packaging on the Ansible (where Ansible runs). We’ll use the getting-started sample application provided in its {quickstarts-tree-url}/getting-started[Quarkus QuickStarts directory] as a base for this tutorial. We’ll also leverage the https://galaxy.ansible.com/middleware_automation/quarkus[Quarkus collection] for Ansible, an extension for Ansible that alleviates the boilerplate required and to quickly build and deploy a Quarkus using Ansible."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/ansible.adoc:11
#, no-wrap
msgid "Prerequisites"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/ansible.adoc:19
msgid "You'll need to https://docs.ansible.com/ansible/latest/installation_guide/intro_installation.html[install Ansible] on your workstation. Once this is done, you can install this extension for Ansible dedicated to Quarkus with the following command:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:23
#, no-wrap
msgid "$ ansible-galaxy collection install middleware_automation.quarkus\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/ansible.adoc:25
#, no-wrap
msgid "Inventory file"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/ansible.adoc:28
msgid "If you are not familiar with Ansible, please note that the inventory needs to be provided for the command above to run properly. This is a simple text file providing the information Ansible requires on the target system it manages. Please refer to the Ansible documentation for more information on https://docs.ansible.com/ansible/latest/inventory_guide/intro_inventory.html[Ansible inventory]."
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:32
#, no-wrap
msgid "[all]\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:35
#, no-wrap
msgid ""
"10.0.0.1\n"
"10.0.0.2\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/ansible.adoc:38
msgid "To follow the tutorial, you may want to use only one machine (localhost) and skip the ssh authentication setup. This can be easily achieved by using the following inventory file:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:43
#, no-wrap
msgid ""
"[all]\n"
"localhost ansible_connection=local\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/ansible.adoc:45
#, no-wrap
msgid "Root access on target system"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/ansible.adoc:48
msgid "A few tasks performed by the Ansible collection for Quarkus will require administrative privileges on the target (create a group and user account, install packages). If Ansible does run as root, you'll need to add the following options to the `ansible-playbook` command line:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:52
#, no-wrap
msgid "$ ansible-playbook -i inventory  --ask-become-pass  ...\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/ansible.adoc:54
#, no-wrap
msgid "Tutorial"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/ansible.adoc:57
msgid "With the Ansible collection installed on the controller, you can already directly use a playbook provided with it to build and deploy your Quarkus application:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:66
#, no-wrap
msgid ""
"ansible-playbook -i inventory \\\n"
"  middleware_automation.quarkus.playbook \\\n"
"  -e app_name=getting-started \\\n"
"  -e quarkus_app_repo_url='https://github.com/quarkusio/quarkus-quickstarts.git' \\\n"
"  -e quarkus_app_source_folder='getting-started' \\\n"
"  -e quarkus_path_to_folder_to_deploy=/opt/quarkus_deploy\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/ansible.adoc:69
msgid "The four parameters provided to the playbook are pretty self-explanatory. The first one, `app_name`, is the name of the application, in our case, it's just `getting-started`. The second one, `quarkus_app_repo_url`, is the URL to the Git repository to checkout. The third one is optional, `quarkus_app_source_folder` specifies, if needed, which subfolder from the repo the source code is located. Finally, the fourth one indicates where to install the application on the target."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/ansible.adoc:70
#, no-wrap
msgid "Playbook run"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/ansible.adoc:73
msgid "Once the command above has successfully run, you should have an output similar to the one below:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:77
#, no-wrap
msgid "…\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:79
#, no-wrap
msgid "PLAY [Build and deploy a Quarkus app using Ansible] ****************************\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:81
#, no-wrap
msgid "TASK [Build the Quarkus from https://github.com/quarkusio/quarkus-quickstarts.git.] ***\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:84
#: upstream/_versions/main/guides/ansible.adoc:110
#, no-wrap
msgid ""
"TASK [middleware_automation.quarkus.quarkus : Ensure required parameters are provided.] ***\n"
"ok: [localhost]\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:87
#, no-wrap
msgid ""
"TASK [middleware_automation.quarkus.quarkus : Define path to mvnw script.] *****\n"
"ok: [localhost]\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:90
#, no-wrap
msgid ""
"TASK [middleware_automation.quarkus.quarkus : Ensure that builder host localhost has appropriate JDK installed: java-17-openjdk] ***\n"
"ok: [localhost]\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:93
#, no-wrap
msgid ""
"TASK [middleware_automation.quarkus.quarkus : Delete previous workdir (if requested).] ***\n"
"ok: [localhost]\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:96
#, no-wrap
msgid ""
"TASK [middleware_automation.quarkus.quarkus : Ensure app workdir exists: /tmp/workdir] ***\n"
"changed: [localhost]\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:99
#, no-wrap
msgid ""
"TASK [middleware_automation.quarkus.quarkus : Checkout the application source code.] ***\n"
"changed: [localhost]\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:102
#, no-wrap
msgid ""
"TASK [middleware_automation.quarkus.quarkus : Build the App using Maven] *******\n"
"ok: [localhost]\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:105
#, no-wrap
msgid ""
"TASK [middleware_automation.quarkus.quarkus : Display build application log] ***\n"
"skipping: [localhost]\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:107
#, no-wrap
msgid "TASK [Deploy webapp on target.] ************************************************\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:113
#, no-wrap
msgid ""
"TASK [middleware_automation.quarkus.quarkus : Ensure required OpenJDK is installed on target.] ***\n"
"skipping: [localhost]\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:116
#, no-wrap
msgid ""
"TASK [middleware_automation.quarkus.quarkus : Ensure Quarkus system group exists on target system] ***\n"
"ok: [localhost]\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:119
#, no-wrap
msgid ""
"TASK [middleware_automation.quarkus.quarkus : Ensure Quarkus user exists on target system.] ***\n"
"ok: [localhost]\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:122
#, no-wrap
msgid ""
"TASK [middleware_automation.quarkus.quarkus : Ensure deployement directory exits: /opt/quarkus_deploy.] ***\n"
"ok: [localhost]\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:125
#, no-wrap
msgid ""
"TASK [middleware_automation.quarkus.quarkus : Set Quarkus app source dir (if not defined).] ***\n"
"ok: [localhost]\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:128
#, no-wrap
msgid ""
"TASK [middleware_automation.quarkus.quarkus : Deploy application from  to target system] ***\n"
"ok: [localhost]\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:131
#, no-wrap
msgid ""
"TASK [middleware_automation.quarkus.quarkus : Deploy Systemd configuration for Quarkus app] ***\n"
"ok: [localhost]\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:134
#, no-wrap
msgid ""
"TASK [middleware_automation.quarkus.quarkus : Perform daemon-reload to ensure the changes are picked up] ***\n"
"skipping: [localhost]\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:137
#, no-wrap
msgid ""
"TASK [middleware_automation.quarkus.quarkus : Ensure Quarkus app service is running.] ***\n"
"ok: [localhost]\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:140
#, no-wrap
msgid ""
"TASK [middleware_automation.quarkus.quarkus : Ensure firewalld is available.] ***\n"
"skipping: [localhost]\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:143
#, no-wrap
msgid ""
"TASK [middleware_automation.quarkus.quarkus : Configure firewall for 8080 ports] ***\n"
"skipping: [localhost]\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:147
#, no-wrap
msgid ""
"PLAY RECAP *********************************************************************\n"
"localhost              \t: ok=15   changed=2\tunreachable=0\tfailed=0\tskipped=5\trescued=0\tignored=0\n"
"…\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/ansible.adoc:150
msgid "The Ansible collection for Quarkus does all the `heavy lifting` here. First, it checks out the code from Github and builds the application from its sources. It also ensures the system used for this step does have the required OpenJDK installed. By default, the application is built on the localhost (the Ansible controller), but it can be performed on a remote system if needed. Once the application is built, the collection will take care of the deployment."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/ansible.adoc:152
msgid "Here again, it checks that the appropriate OpenJDK is available on the target system. Then we ensure that the required user and group exist on the target. This is recommended mostly to be able to run the Quarkus app with a regular user, rather than with the root account."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/ansible.adoc:154
msgid "With those requirements in place, the jar can be deployed on the target, along with the required configuration for the app integration into systemd as a service. Any change to the systemd configuration requires reloading its daemon, which the collection ensures will happen whenever it is needed. With all of that in place, the only thing that remains is to start the service itself, which Ansible will also take care of."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/ansible.adoc:155
#, no-wrap
msgid "Validate that deployment was successful"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/ansible.adoc:158
msgid "For the purpose of this tutorial, you may want to check manually, that the playbook did indeed deployed the app properly. Here is the few ways to do so."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/ansible.adoc:160
msgid "First, because the collection integrated, we can check the status of the service on one of the targets:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:172
#, no-wrap
msgid ""
"# systemctl status getting-started.service\n"
"● getting-started.service - A Quarkus service named getting-started\n"
"   Loaded: loaded (/usr/lib/systemd/system/getting-started.service; enabled; vendor preset: disabled)\n"
"   Active: active (running) since Thu 2023-04-13 12:48:18 UTC; 2min 40s ago\n"
" Main PID: 853 (java)\n"
"\tTasks: 43 (limit: 1638)\n"
"   Memory: 73.3M\n"
"   CGroup: /system.slice/getting-started.service\n"
"       \t└─853 /usr/bin/java -jar /opt/quarkus_deploy/quarkus-run.jar\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:181
#, no-wrap
msgid ""
"Apr 13 12:48:18 bd71f39642c8 systemd[1]: Started A Quarkus service named getting-started.\n"
"Apr 13 12:48:19 bd71f39642c8 java[853]: __  ____  __  _____   ___  __ ____  ______\n"
"Apr 13 12:48:19 bd71f39642c8 java[853]:  --/ __ \\/ / / / _ | / _ \\/ //_/ / / / __/\n"
"Apr 13 12:48:19 bd71f39642c8 java[853]:  -/ /_/ / /_/ / __ |/ , _/ ,< / /_/ /\\ \\\n"
"Apr 13 12:48:19 bd71f39642c8 java[853]: --\\___\\_\\____/_/ |_/_/|_/_/|_|\\____/___/\n"
"Apr 13 12:48:19 bd71f39642c8 java[853]: 2023-04-13 12:48:19,284 INFO  [io.quarkus] (main) getting-started 1.0.0-SNAPSHOT on JVM (powered by Quarkus 2.16.6.Final) started in 0.607s. Listening on: http://0.0.0.0:8080\n"
"Apr 13 12:48:19 bd71f39642c8 java[853]: 2023-04-13 12:48:19,309 INFO  [io.quarkus] (main) Profile prod activated.\n"
"Apr 13 12:48:19 bd71f39642c8 java[853]: 2023-04-13 12:48:19,310 INFO  [io.quarkus] (main) Installed features: [cdi, resteasy-reactive, smallrye-context-propagation, vertx]\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/ansible.adoc:184
msgid "Manually, you can also test if the app is reachable:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:194
#, no-wrap
msgid ""
"# curl -I http://localhost:8080/\n"
"HTTP/1.1 200 OK\n"
"accept-ranges: bytes\n"
"content-length: 3918\n"
"cache-control: public, immutable, max-age=86400\n"
"last-modified: Thu, 2 Mar 2023 11:03:18 GMT\n"
"date: Thu, 2 Mar 2023 11:03:18 GMT\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/ansible.adoc:197
msgid "We'll see how to automate those validation in the next and last part of this tutorial."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/ansible.adoc:198
#, no-wrap
msgid "Writing a playbook"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/ansible.adoc:201
msgid "Of course, you’ll most likely need to build on this, so you may want to write up your own playbook, rather than just using the one provided by the collection. Below is an example of such playbook:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:212
#, no-wrap
msgid ""
"- name: \"Build and deploy a Quarkus app using Ansible\"\n"
"  hosts: all\n"
"  gather_facts: true\n"
"  vars:\n"
"    quarkus_app_repo_url: 'https://github.com/quarkusio/quarkus-quickstarts.git'\n"
"    app_name: getting-started\n"
"    quarkus_app_source_folder: getting-started\n"
"    quarkus_path_to_folder_to_deploy: /opt/quarkus_deploy\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:223
#, no-wrap
msgid ""
"  pre_tasks:\n"
"    - name: \"Build the Quarkus from {{ quarkus_app_repo_url }}.\"\n"
"      ansible.builtin.include_role:\n"
"        name: quarkus\n"
"        tasks_from: build.yml\n"
"  tasks:\n"
"    - name: \"Deploy Quarkus app on target.\"\n"
"      ansible.builtin.include_role:\n"
"        name: quarkus\n"
"        tasks_from: deploy.yml\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/ansible.adoc:226
msgid "To run this playbook, you use again the ansible-playbook command, but providing now the path to the playbook:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:230
#, no-wrap
msgid "$ ansible-playbook -i inventory playbook.yml\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/ansible.adoc:233
msgid "You also can automate the validation part we mentioned in the previous section. You can use the https://docs.ansible.com/ansible/latest/collections/ansible/builtin/assert_module.html[ansible.builtin.assert] module and populate the https://docs.ansible.com/ansible/latest/collections/ansible/builtin/service_facts_module.html#examples[service facts] to ensure the systemd service of the Quarkus app is running, along with https://docs.ansible.com/ansible/latest/collections/ansible/builtin/uri_module.html[ansible.builtin.uri] to check that the Quarkus app is accessible."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/ansible.adoc:236
#, no-wrap
msgid ""
"```\n"
" post_tasks:\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/ansible.adoc:238
#, no-wrap
msgid ""
"name: Populate service facts\n"
"ansible.builtin.service_facts:\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/ansible.adoc:241
msgid "name: \"Check that systemd service {{ app_name }} is running.\" ansible.builtin.assert:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/ansible.adoc:242
#, no-wrap
msgid "that:\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/ansible.adoc:243
#, no-wrap
msgid "ansible_facts.services is defined\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/ansible.adoc:244
#, no-wrap
msgid "ansible_facts.services[\"{{ app_name }}.service\"] is defined\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/ansible.adoc:245
#, no-wrap
msgid "ansible_facts.services[\"{{ app_name }}.service\"]['state'] == 'running'\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/ansible.adoc:246
#, no-wrap
msgid "ansible_facts.services[\"{{ app_name }}.service\"]['status'] == 'enabled'\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/ansible.adoc:247
#, no-wrap
msgid "quiet: true\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/ansible.adoc:250
msgid "name: \"Check that Quarkus app is accessible\" ansible.builtin.uri:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/ansible.adoc:252
#, no-wrap
msgid ""
"url: 'http://localhost:8080/'\n"
"```\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/ansible.adoc:253
msgid "And that’s all, folks!"
msgstr ""

# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-10-12 02:16+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/main/guides/infinispan-client.adoc:6
#, no-wrap
msgid "Using the Infinispan Client"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:14
msgid "This guide demonstrates how your Quarkus application can connect to an Infinispan server using the Infinispan Client extension."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/infinispan-client.adoc:15
#, no-wrap
msgid "Prerequisites"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:19
msgid "A working Docker environment"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/infinispan-client.adoc:20
#, no-wrap
msgid "Architecture"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:24
msgid "In this guide, we are going to expose a Greeting Rest API to create and display greeting messages by using the https://infinispan.org/docs/stable/titles/hotrod_java/hotrod_java.html#remotecache_api[Infinispan RemoteCache API] and `getAsync` and `putAsync` operations."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:26
msgid "We'll be using the Quarkus Infinispan Client extension to connect to interact with Infinispan."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/infinispan-client.adoc:27
#, no-wrap
msgid "Solution"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:30
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the completed example."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:32
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:34
msgid "The solution is located in the `infinispan-client-quickstart` link:{quickstarts-tree-url}/infinispan-client-quickstart[directory]."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/infinispan-client.adoc:35
#, no-wrap
msgid "Creating the Maven Project"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:38
msgid "First, we need a new project. Create a new project with the following command:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:44
msgid "This command generates a new project, importing the Infinispan Client extension."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:47
msgid "If you already have your Quarkus project configured, you can add the `infinispan-client` extension to your project by running the following command in your project base directory:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:52
msgid "This will add the following to your build file:"
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/infinispan-client.adoc:54
#, no-wrap
msgid "pom.xml"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:60
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-infinispan-client</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/infinispan-client.adoc:63
#, no-wrap
msgid "build.gradle"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:67
#, no-wrap
msgid ""
"implementation(\"io.quarkus:quarkus-infinispan-client\")\n"
"annotationProcessor 'org.infinispan.protostream:protostream-processor:4.6.1.Final' <1>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:69
msgid "Mandatory in the Gradle build to enable the generation of the files in the annotation based serialization"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/infinispan-client.adoc:70
#, no-wrap
msgid "Creating the Greeting POJO"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:73
msgid "We are going to model our increments using the `Greeting` POJO.  Create the `src/main/java/org/acme/infinispan/client/Greeting.java` file, with the following content:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:77
#: upstream/_versions/main/guides/infinispan-client.adoc:105
#: upstream/_versions/main/guides/infinispan-client.adoc:140
#: upstream/_versions/main/guides/infinispan-client.adoc:197
#, no-wrap
msgid "package org.acme.infinispan.client;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:80
#, no-wrap
msgid ""
"import org.infinispan.protostream.annotations.ProtoFactory;\n"
"import org.infinispan.protostream.annotations.ProtoField;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:84
#, no-wrap
msgid ""
"public class Greeting { // <1>\n"
"   @ProtoField(number = 1) // <2>\n"
"   public String name;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:88
#, no-wrap
msgid ""
"   @ProtoField(number = 2) // <3>\n"
"   public String message;\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:91
msgid "If your classes have only mutable fields, then the `ProtoFactory` annotation is not required is not required, assuming your class has a no arg constructor"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:92
msgid "`@ProtoField` annotation to add the name field as string in the generated Protobuf schema"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:93
msgid "`@ProtoField` annotation to add the message field as string in the generated Protobuf schema"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:97
msgid "Note that we are not going to use Java serialization. https://github.com/infinispan/protostream[Protostream] is a serialization library based on Protobuf data format part of Infinispan. Using an annotation based API, we will store our data in Protobuf format."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/infinispan-client.adoc:98
#, no-wrap
msgid "Creating the Greeting Schema"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:101
msgid "We are going to create our serialization schema using the `GreetingSchema` interface.  Create the `src/main/java/org/acme/infinispan/client/GreetingSchema.java` file, with the following content:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:108
#, no-wrap
msgid ""
"import org.infinispan.protostream.GeneratedSchema;\n"
"import org.infinispan.protostream.annotations.AutoProtoSchemaBuilder;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:112
#, no-wrap
msgid ""
"@AutoProtoSchemaBuilder(includeClasses = Greeting.class) // <1>\n"
"public interface GreetingSchema extends GeneratedSchema { // <2>\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:114
msgid "Includes the `Greeting` pojo with the `@AutoProtoSchemaBuilder` annotation"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:115
msgid "Extends `GeneratedSchema` Protostream API interface"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:118
msgid "The Protobuf Schema that will be generated and used both on client and Infinispan Server side, will have the following content:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:123
#, no-wrap
msgid ""
"// File name: GreetingSchema.proto\n"
"// Generated from : org.acme.infinispan.client.GreetingSchema\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:125
#, no-wrap
msgid "syntax = \"proto2\";\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:127
#, no-wrap
msgid "message Greeting {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:129
#, no-wrap
msgid "   optional string name = 1;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:132
#, no-wrap
msgid ""
"   optional string message = 2;\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/infinispan-client.adoc:134
#, no-wrap
msgid "Creating the Infinispan Greeting Resource"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:136
msgid "Create the `src/main/java/org/acme/infinispan/client/InfinispanGreetingResource.java` file, with the following content:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:147
#, no-wrap
msgid ""
"import io.quarkus.infinispan.client.Remote;\n"
"import jakarta.inject.Inject;\n"
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.POST;\n"
"import jakarta.ws.rs.Path;\n"
"import org.infinispan.client.hotrod.RemoteCache;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:149
#, no-wrap
msgid "import java.util.concurrent.CompletionStage;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:152
#, no-wrap
msgid ""
"@Path(\"/greeting\")\n"
"public class InfinispanGreetingResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:156
#, no-wrap
msgid ""
"    @Inject\n"
"    @Remote(\"mycache\") // <1>\n"
"    RemoteCache<String, Greeting> cache; //<2>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:164
#, no-wrap
msgid ""
"    @POST\n"
"    @Path(\"/{id}\")\n"
"    public CompletionStage<String> postGreeting(String id, Greeting greeting) {\n"
"        return cache.putAsync(id, greeting) // <3>\n"
"              .thenApply(g -> \"Greeting done!\")\n"
"              .exceptionally(ex -> ex.getMessage());\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:171
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/{id}\")\n"
"    public CompletionStage<Greeting> getGreeting(String id) {\n"
"        return cache.getAsync(id); // <4>\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:174
msgid "Use the `@Remote` annotation to use a cache. If the cache does not exist, will be created with a default configuration *on first access*."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:175
msgid "Inject the `RemoteCache`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:176
msgid "Put the greeting id as a key and the Greeting pojo as a value"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:177
msgid "Get the greeting by id as the key"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/infinispan-client.adoc:178
#, no-wrap
msgid "Creating the test class"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:181
msgid "Edit the `pom.xml` file to add the following dependency:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:189
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.rest-assured</groupId>\n"
"    <artifactId>rest-assured</artifactId>\n"
"    <scope>test</scope>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:192
msgid "Create the `src/test/java/org/acme/infinispan/client/InfinispanGreetingResourceTest.java` file with the following content:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:201
#, no-wrap
msgid ""
"import io.quarkus.test.junit.QuarkusTest;\n"
"import io.restassured.http.ContentType;\n"
"import org.junit.jupiter.api.Test;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:204
#, no-wrap
msgid ""
"import static io.restassured.RestAssured.given;\n"
"import static org.hamcrest.CoreMatchers.is;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:207
#, no-wrap
msgid ""
"@QuarkusTest\n"
"class InfinispanGreetingResourceTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:217
#, no-wrap
msgid ""
"    @Test\n"
"    public void testHelloEndpoint() {\n"
"        given()\n"
"              .contentType(ContentType.JSON)\n"
"              .body(\"{\\\"name\\\":\\\"Infinispan Client\\\",\\\"message\\\":\\\"Hello World, Infinispan is up!\\\"}\")\n"
"              .when()\n"
"              .post(\"/greeting/quarkus\")\n"
"              .then()\n"
"              .statusCode(200);\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:225
#, no-wrap
msgid ""
"        given()\n"
"                .when().get(\"/greeting/quarkus\")\n"
"                .then()\n"
"                .statusCode(200)\n"
"                .body(is(\"{\\\"name\\\":\\\"Infinispan Client\\\",\\\"message\\\":\\\"Hello World, Infinispan is up!\\\"}\"));\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/infinispan-client.adoc:227
#, no-wrap
msgid "Get it running"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:230
msgid "We just need to run the application using:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:236
msgid "We should have the Infinispan server running thanks to the Dev Services.  We can access the Dev Services UI through `http://localhost:8080/q/dev/`.  The Dev UI should display the Infinispan UI Panel."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#: upstream/_versions/main/guides/infinispan-client.adoc:237
#, no-wrap
msgid "Dev"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/infinispan-client.adoc:237
#, no-wrap
msgid "dev-ui-infinispan.png"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/infinispan-client.adoc:245
msgid "Click on the Web Console link and log using `admin` and `password` default credentials.  Quarkus has uploaded into the Schemas Tab the Protobuf Schema that is needed to marshall on the server the Greeting POJO with Protobuf.  Check the xref:infinispan-dev-services.adoc[Infinispan Dev Services Guide] to learn more."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/infinispan-client.adoc:247
#, no-wrap
msgid "Interacting with the Greeting Service"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:250
msgid "As we have seen above, the Greeting API exposes two Rest endpoints.  In this section we are going to see how to create and display a greeting message."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/infinispan-client.adoc:251
#, no-wrap
msgid "Creating a Greeting Message"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:253
msgid "With the following command, we will create a greeting message with the id `quarkus`."
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:257
#, no-wrap
msgid "curl -X POST http://localhost:8080/greeting/quarkus -H \"Content-Type: application/json\" -d '{\"name\" : \"Infinispan Client\", \"message\":\"Hello World, Infinispan is up!\"}'\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:260
msgid "The service should respond with a `Greeting added!` message."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/infinispan-client.adoc:261
#, no-wrap
msgid "Displaying a Greeting Message"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:263
msgid "With the following command, we will display the greeting message with the id `quarkus`."
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:266
#, no-wrap
msgid "curl  http://localhost:8080/greeting/quarkus\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:269
msgid "The service should respond with the following json content."
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:276
#, no-wrap
msgid ""
"{\n"
"  \"name\" : \"Infinispan Client\",\n"
"  \"message\" : \"Hello World, Infinispan is up!\"\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/infinispan-client.adoc:278
#, no-wrap
msgid "Display the cache and content with the Infinispan Server Console"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:284
msgid "If a requested cache does not exist, Quarkus creates a cache with a Default configuration on first access.  We should be able to reaload the Infinispan Server Console and display the content of the Cache.  The Infinispan Server Console uses the https://infinispan.org/docs/stable/titles/rest/rest.html[Infinispan Server REST API].  The content can be displayed in JSON thanks to the Protobuf Encoding that converts to JSON format."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#: upstream/_versions/main/guides/infinispan-client.adoc:285
#, no-wrap
msgid "Infinispan"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/infinispan-client.adoc:285
#, no-wrap
msgid "infinispan-console-client-guide.png"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/infinispan-client.adoc:288
#, no-wrap
msgid "Configuring for production"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:292
msgid "At this point, Quarkus uses the Infinispan Dev Service to run an Infinispan server and configure the application.  However, in production, you will run your own Infinispan (or Red Hat Data Grid)."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:294
msgid "Let's start an Infinispan server on the port 11222 using:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:298
#, no-wrap
msgid "docker run -it -p 11222:11222 -e USER=\"admin\" -e PASS=\"password\" quay.io/infinispan/server:latest\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:301
msgid "Then, open the `src/main/resources/application.properties` file and add:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:307
#, no-wrap
msgid ""
"%prod.quarkus.infinispan-client.hosts=localhost:11222 # <1>\n"
"%prod.quarkus.infinispan-client.username=admin <2>\n"
"%prod.quarkus.infinispan-client.password=password <3>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:310
#, no-wrap
msgid ""
"## Docker 4 Mac workaround\n"
"%prod.quarkus.infinispan-client.client-intelligence=BASIC <4>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:312
msgid "Sets Infinispan Server address list, separated with commas"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:313
msgid "Sets the authentication username"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:314
msgid "Sets the authentication password"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:315
msgid "Sets the client intelligence. Use BASIC as a workaround if using Docker for Mac."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/infinispan-client.adoc:316
#, no-wrap
msgid "Packaging and running in JVM mode"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:319
msgid "You can run the application as a conventional jar file."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:321
msgid "First, we will need to package it:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:325
msgid "This command will start an Infinispan instance to execute the tests."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:327
msgid "Then run it:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:331
#, no-wrap
msgid "java -jar target/quarkus-app/quarkus-run.jar\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/infinispan-client.adoc:333
#, no-wrap
msgid "Running Native"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:339
msgid "You can also create a native executable from this application without making any source code changes. A native executable removes the dependency on the JVM: everything needed to run the application on the target platform is included in the executable, allowing the application to run with minimal resource overhead."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:343
msgid "Compiling a native executable takes a bit longer, as GraalVM performs additional steps to remove unnecessary codepaths. Use the `native` profile to compile a native executable:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:347
msgid "Once the build is finished, you can run the executable with:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:351
#, no-wrap
msgid "./target/infinispan-client-quickstart-1.0.0-SNAPSHOT-runner\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/infinispan-client.adoc:353
#, no-wrap
msgid "Going further"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:355
msgid "To learn more about the Quarkus Infinispan extension, check xref:infinispan-client-reference.adoc[the Infinispan Client extension reference guide]."
msgstr ""

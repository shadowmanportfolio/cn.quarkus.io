# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-10-14 03:58+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/main/guides/infinispan-client.adoc:6
#, no-wrap
msgid "Infinispan Client"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:14
msgid "Infinispan is a distributed, in-memory key/value store that provides Quarkus applications with a highly configurable and independently scalable data layer.  This extension gives you client functionality that connects applications running on Quarkus with remote Infinispan clusters."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:16
msgid "To find out more about Infinispan, visit the https://infinispan.org/documentation[Infinispan documentation]."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/infinispan-client.adoc:17
#, no-wrap
msgid "Solution"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:21
msgid "We recommend that you complete each step in the following sections to create the application.  However, you can proceed directly to the completed solution as follows:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:24
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}` or download an {quickstarts-archive-url}[archive].  Locate the solution in the `infinispan-client-quickstart` {quickstarts-tree-url}/infinispan-client-quickstart[directory]."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/infinispan-client.adoc:25
#, no-wrap
msgid "Adding the Infinispan client extension"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:28
msgid "Run the following command in the base directory of your Quarkus project to add the `infinispan-client` extension:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:33
msgid "This command adds the following dependency to your build file:"
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/infinispan-client.adoc:35
#, no-wrap
msgid "pom.xml"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:41
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-infinispan-client</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/infinispan-client.adoc:44
#, no-wrap
msgid "build.gradle"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:47
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-infinispan-client\")\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/infinispan-client.adoc:49
#, no-wrap
msgid "Configuring the Infinispan client"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:52
msgid "Open the `application.properties` file in the `src/main/resources` directory with any text editor."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:56
msgid "Note that Infinispan documentation refers to a `hotrod-client.properties` file.  You can configure the Infinispan client with either properties file but `application.properties` always takes priority over `hotrod-client.properties`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:59
msgid "Additionally, you cannot update configuration properties at runtime.  If you modify `application.properties` or `hotrod-client.properties`, you must rebuild the application before those changes take effect."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/infinispan-client.adoc:60
#, no-wrap
msgid "Connecting to Infinispan clusters"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:63
msgid "Add the following properties to connect to Infinispan Server:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:67
#, no-wrap
msgid "quarkus.infinispan-client.server-list=localhost:11222 <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:70
#, no-wrap
msgid ""
"quarkus.infinispan-client.auth-username=admin <2>\n"
"quarkus.infinispan-client.auth-password=password <3>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:72
#, no-wrap
msgid "quarkus.infinispan-client.client-intelligence=BASIC <4>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:74
msgid "Sets Infinispan Server address list, separated with commas"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:75
msgid "Sets the authentication username"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:76
msgid "Sets the authentication password"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:77
msgid "Sets the client intelligence. Use BASIC as a workaround if using Docker for Mac."
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/infinispan-client.adoc:78
#, no-wrap
msgid "Running Infinispan Server"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:81
msgid "To use the Infinispan client extension, you need at least one running instance of Infinispan Server."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:83
msgid "Check out our 5-minute https://infinispan.org/get-started/[Getting stated with Infinispan] tutorial to run Infinispan Server locally."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:85
msgid "Infinispan Server also enables authentication and security authorization by default, so you need to create a user with permissions."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:87
msgid "If you run the Infinispan Server image, pass the `USER=\"admin\"` and `PASS=\"password\"` parameters."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:88
msgid "If you run the bare metal distribution, use the Command Line Interface (CLI) as follows:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:92
#, no-wrap
msgid "$ ./bin/cli.sh user create admin -p password\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/infinispan-client.adoc:94
#, no-wrap
msgid "Creating caches from the client"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:98
msgid "When a cache is accessed from the client, if the cache does not exist in the Infinispan Server and you want to create it on first access, use one of the following properties:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:103
#, no-wrap
msgid ""
"quarkus.infinispan-client.cache.books.configuration-uri=cacheConfig.xml <1>\n"
"quarkus.infinispan-client.cache.magazine.configuration=<distributed-cache><encoding media-type=\"application/x-protostream\"/></distributed-cache> <2>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:105
msgid "The file name located under the `resources` folder that contains the configuration of the 'books' cache"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:106
msgid "The configuration of the 'magazine' cache as a plain text property"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:109
msgid "If both `configuration-uri` and `configuration` are configured for the same cache with the same Quarkus profile, `configuration-uri` gets preference over `configuration`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:111
msgid "If nothing is configured for a particular cache, it will be created with the following basic configuration:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:117
#, no-wrap
msgid ""
"<distributed-cache>\n"
"    <encoding media-type=\"application/x-protostream\"/>\n"
"</distributed-cache>\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/infinispan-client.adoc:119
#, no-wrap
msgid "Authentication mechanisms"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:122
msgid "You can use the following authentication mechanisms with the Infinispan client:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:124
msgid "DIGEST-MD5"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:125
msgid "PLAIN (recommended only in combination with TLS encryption)"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:126
msgid "EXTERNAL"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:128
msgid "Other authentication mechanisms, such as SCRAM and GSSAPI, are not yet verified with the Infinispan client."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:130
msgid "You can find more information on configuring authentication in https://infinispan.org/docs/stable/titles/hotrod_java/hotrod_java.html#hotrod_endpoint_auth-hotrod-client-configuration[Hot Rod Endpoint Authentication Mechanisms]."
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/infinispan-client.adoc:134
msgid "You must configure authentication in the `hotrod-client.properties` file if you use Dependency Injection."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/infinispan-client.adoc:136
#, no-wrap
msgid "Serialization (Key Value types support)"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:141
msgid "By default, the client will support keys and values of the following types: byte[], primitive wrappers (e.g. Integer, Long, Double), String, Date and Instant. User types require some additional steps that are detailed here. Let's say we have the following user classes:"
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/infinispan-client.adoc:142
#: upstream/_versions/main/guides/infinispan-client.adoc:197
#, no-wrap
msgid "Author.java"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:148
#, no-wrap
msgid ""
"public class Author {\n"
"   private final String name;\n"
"   private final String surname;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:155
#, no-wrap
msgid ""
"   public Author(String name, String surname) {\n"
"      this.name = Objects.requireNonNull(name);\n"
"      this.surname = Objects.requireNonNull(surname);\n"
"   }\n"
"   // Getter/Setter/equals/hashCode/toString omitted\n"
"}\n"
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/infinispan-client.adoc:157
#: upstream/_versions/main/guides/infinispan-client.adoc:217
#, no-wrap
msgid "Book.java"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:166
#, no-wrap
msgid ""
"public class Book {\n"
"   private final String title;\n"
"   private final String description;\n"
"   private final int publicationYear;\n"
"   private final Set<Author> authors;\n"
"   private final BigDecimal price;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:176
#, no-wrap
msgid ""
"   public Book(String title, String description, int publicationYear, Set<Author> authors, BigDecimal price) {\n"
"      this.title = Objects.requireNonNull(title);\n"
"      this.description = Objects.requireNonNull(description);\n"
"      this.publicationYear = publicationYear;\n"
"      this.authors = Objects.requireNonNull(authors);\n"
"      this.price = price;\n"
"   }\n"
"   // Getter/Setter/equals/hashCode/toString omitted\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:180
msgid "Serialization of user types uses a library based on protobuf, called https://github.com/infinispan/protostream[Protostream]."
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/infinispan-client.adoc:184
msgid "Infinispan caches can store keys and values in different encodings, but recommend using https://developers.google.com/protocol-buffers[Protocol Buffers (Protobuf)]."
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/infinispan-client.adoc:186
msgid "For more information see our https://infinispan.org/docs/stable/titles/encoding/encoding.html[Cache Encoding and Marshalling] guide."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/infinispan-client.adoc:189
#, no-wrap
msgid "Annotation based Serialization"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:194
msgid "This can be done automatically by adding protostream annotations to your user classes.  In addition, a single Initializer annotated interface is required which controls how the supporting classes are generated."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:196
msgid "Here is an example of how the preceding classes should be changed:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:205
#, no-wrap
msgid ""
"    @ProtoFactory\n"
"    public Author(String name, String surname) {\n"
"        this.name = Objects.requireNonNull(name);\n"
"        this.surname = Objects.requireNonNull(surname);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:210
#, no-wrap
msgid ""
"    @ProtoField(number = 1)\n"
"    public String getName() {\n"
"        return name;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:215
#, no-wrap
msgid ""
"    @ProtoField(number = 2)\n"
"    public String getSurname() {\n"
"        return surname;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:227
#, no-wrap
msgid ""
"    @ProtoFactory\n"
"    public Book(String title, String description, int publicationYear, Set<Author> authors) {\n"
"        this.title = Objects.requireNonNull(title);\n"
"        this.description = Objects.requireNonNull(description);\n"
"        this.publicationYear = publicationYear;\n"
"        this.authors = Objects.requireNonNull(authors);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:232
#, no-wrap
msgid ""
"    @ProtoField(number = 1)\n"
"    public String getTitle() {\n"
"        return title;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:237
#, no-wrap
msgid ""
"    @ProtoField(number = 2)\n"
"    public String getDescription() {\n"
"        return description;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:242
#, no-wrap
msgid ""
"    @ProtoField(number = 3, defaultValue = \"-1\")\n"
"    public int getPublicationYear() {\n"
"        return publicationYear;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:247
#, no-wrap
msgid ""
"    @ProtoField(number = 4)\n"
"    public Set<Author> getAuthors() {\n"
"        return authors;\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:251
msgid "If your classes have only mutable fields, then the `ProtoFactory` annotation is not required, assuming your class has a no arg constructor."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:254
msgid "Then all that is required is a very simple `GeneratedSchema` interface with an annotation on it to specify configuration settings"
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/infinispan-client.adoc:255
#, no-wrap
msgid "BooksSchema.java"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:261
#, no-wrap
msgid ""
"import org.infinispan.protostream.GeneratedSchema;\n"
"import org.infinispan.protostream.annotations.AutoProtoSchemaBuilder;\n"
"import org.infinispan.protostream.types.java.math.BigDecimalAdapter;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:265
#, no-wrap
msgid ""
"@AutoProtoSchemaBuilder(includeClasses = { Book.class, Author.class, BigDecimalAdapter.class }, schemaPackageName = \"book_sample\")\n"
"interface BookStoreSchema extends GeneratedSchema {\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:269
msgid "Protostream provides default Protobuf mappers for commonly used types as `BigDecimal`, included in the `org.infinispan.protostream.types` package."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:272
msgid "So in this case we will automatically generate the marshaller and schemas for the included classes and place them in the schema package automatically. The package does not have to be provided, but if you use Infinispan query capabilities, you must know the generated package."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:274
msgid "In Quarkus the `schemaFileName` and `schemaFilePath` attributes should NOT be set on the `AutoProtoSchemaBuilder` annotation. Setting either attributes causes native runtime errors."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/infinispan-client.adoc:275
#, no-wrap
msgid "Custom serialization"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:281
msgid "The previous method is suggested for any case when the user can annotate their classes.  Unfortunately the user may not be able to annotate all classes they will put in the cache. In this case you must define your schema and create your own Marshaller(s)  yourself."
msgstr ""

#. type: Labeled list
#: upstream/_versions/main/guides/infinispan-client.adoc:282
#, no-wrap
msgid "Protobuf schema"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:283
msgid "You can supply a protobuf schema through either one of two ways."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:284
msgid "Proto File"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:287
msgid "+ You can put the `.proto` file in the `META-INF` directory of the project. These files will automatically be picked up at initialization time."
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/infinispan-client.adoc:288
#, no-wrap
msgid "library.proto"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:291
#, no-wrap
msgid "package book_sample;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:299
#, no-wrap
msgid ""
"message Book {\n"
"  required string title = 1;\n"
"  required string description = 2;\n"
"  required int32 publicationYear = 3; // no native Date type available in Protobuf\n"
"  repeated Author authors = 4;\n"
"  requited double price = 5; // no native BigDecimal type available in Protobuf\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:304
#, no-wrap
msgid ""
"message Author {\n"
"  required string name = 1;\n"
"  required string surname = 2;\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:306
msgid "In Code"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:309
msgid "+ Or you can define the proto schema directly in user code by defining a produced bean of type `org.infinispan.protostream.FileDescriptorSource`."
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:331
#, no-wrap
msgid ""
"   @Produces\n"
"   FileDescriptorSource bookProtoDefinition() {\n"
"      return FileDescriptorSource.fromString(\"library.proto\", \"package book_sample;\\n\" +\n"
"            \"\\n\" +\n"
"            \"message Book {\\n\" +\n"
"            \"  required string title = 1;\\n\" +\n"
"            \"  required string description = 2;\\n\" +\n"
"            \"  required int32 publicationYear = 3; // no native Date type available in Protobuf\\n\" +\n"
"            \"\\n\" +\n"
"            \"  repeated Author authors = 4;\\n\" +\n"
"            \"\\n\" +\n"
"            \"  required double price = 5; // no native BigDecimal type available in Protobuf\\n\" +\n"
"            \"}\\n\" +\n"
"            \"\\n\" +\n"
"            \"message Author {\\n\" +\n"
"            \"  required string name = 1;\\n\" +\n"
"            \"  required string surname = 2;\\n\" +\n"
"            \"}\");\n"
"   }\n"
msgstr ""

#. type: Labeled list
#: upstream/_versions/main/guides/infinispan-client.adoc:332
#, no-wrap
msgid "User Marshaller"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:336
msgid "The last thing to do is to provide a `org.infinispan.protostream.MessageMarshaller` implementation for each user class defined in the proto schema. This class is then provided via `@Produces` in a similar fashion to the code based proto schema definition above."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:338
msgid "Here is the Marshaller class for our Author & Book classes."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:340
msgid "The type name must match the `<protobuf package>.<protobuf message>` exactly!"
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/infinispan-client.adoc:341
#, no-wrap
msgid "AuthorMarshaller.java"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:345
#, no-wrap
msgid "public class AuthorMarshaller implements MessageMarshaller<Author> {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:350
#, no-wrap
msgid ""
"   @Override\n"
"   public String getTypeName() {\n"
"      return \"book_sample.Author\";\n"
"   }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:355
#, no-wrap
msgid ""
"   @Override\n"
"   public Class<? extends Author> getJavaClass() {\n"
"      return Author.class;\n"
"   }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:361
#, no-wrap
msgid ""
"   @Override\n"
"   public void writeTo(ProtoStreamWriter writer, Author author) throws IOException {\n"
"      writer.writeString(\"name\", author.getName());\n"
"      writer.writeString(\"surname\", author.getSurname());\n"
"   }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:369
#, no-wrap
msgid ""
"   @Override\n"
"   public Author readFrom(ProtoStreamReader reader) throws IOException {\n"
"      String name = reader.readString(\"name\");\n"
"      String surname = reader.readString(\"surname\");\n"
"      return new Author(name, surname);\n"
"   }\n"
"}\n"
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/infinispan-client.adoc:371
#, no-wrap
msgid "BookMarshaller.java"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:375
#, no-wrap
msgid "public class BookMarshaller implements MessageMarshaller<Book> {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:380
#, no-wrap
msgid ""
"   @Override\n"
"   public String getTypeName() {\n"
"      return \"book_sample.Book\";\n"
"   }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:385
#, no-wrap
msgid ""
"   @Override\n"
"   public Class<? extends Book> getJavaClass() {\n"
"      return Book.class;\n"
"   }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:394
#, no-wrap
msgid ""
"   @Override\n"
"   public void writeTo(ProtoStreamWriter writer, Book book) throws IOException {\n"
"      writer.writeString(\"title\", book.getTitle());\n"
"      writer.writeString(\"description\", book.getDescription());\n"
"      writer.writeInt(\"publicationYear\", book.getPublicationYear());\n"
"      writer.writeCollection(\"authors\", book.getAuthors(), Author.class);\n"
"      writer.writeDouble(\"price\", book.getPrice().doubleValue());\n"
"   }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:405
#, no-wrap
msgid ""
"   @Override\n"
"   public Book readFrom(ProtoStreamReader reader) throws IOException {\n"
"      String title = reader.readString(\"title\");\n"
"      String description = reader.readString(\"description\");\n"
"      int publicationYear = reader.readInt(\"publicationYear\");\n"
"      Set<Author> authors = reader.readCollection(\"authors\", new HashSet<>(), Author.class);\n"
"      BigDecimal price = BigDecimal.valueOf(reader.readDouble(\"price\"));\n"
"      return new Book(title, description, publicationYear, authors, price);\n"
"   }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:408
msgid "And you pass the marshaller by defining the following:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:415
#, no-wrap
msgid ""
"   @Produces\n"
"   MessageMarshaller authorMarshaller() {\n"
"      return new AuthorMarshaller();\n"
"   }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:420
#, no-wrap
msgid ""
"   @Produces\n"
"   MessageMarshaller bookMarshaller() {\n"
"      return new BookMarshaller();\n"
"   }\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:422
msgid "The above produced Marshaller method MUST return `MessageMarshaller` without types or else it will not be found."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/infinispan-client.adoc:423
#, no-wrap
msgid "Dependency Injection"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:429
msgid "As you saw above we support the user injecting Marshaller configuration. You can do the inverse with the Infinispan client extension providing injection for `RemoteCacheManager` and `RemoteCache` objects.  There is one global `RemoteCacheManager` that takes all the configuration parameters setup in the above sections."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:432
msgid "It is very simple to inject these components. All you need to do is to add the `@Inject` annotation to the field, constructor or method. In the below code we utilize field and constructor injection."
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/infinispan-client.adoc:433
#, no-wrap
msgid "SomeClass.java"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:439
#, no-wrap
msgid ""
"    @Inject SomeClass(RemoteCacheManager remoteCacheManager) {\n"
"       this.remoteCacheManager = remoteCacheManager;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:442
#, no-wrap
msgid ""
"    @Inject @Remote(\"myCache\")\n"
"    RemoteCache<String, Book> cache;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:444
#, no-wrap
msgid "    RemoteCacheManager remoteCacheManager;\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:449
msgid "If you notice the `RemoteCache` declaration has an additional optional annotation named `Remote`.  This is a qualifier annotation allowing you to specify which named cache that will be injected. This annotation is not required and if it is not supplied, the default cache will be injected."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:451
msgid "Other types may be supported for injection, please see other sections for more information"
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/infinispan-client.adoc:452
#, no-wrap
msgid "Registering Protobuf Schemas with Infinispan Server"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:455
msgid "You need to register the generated Protobuf schemas with Infinispan Server to perform queries or convert from `Protobuf` to other media types such as `JSON`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:459
msgid "You can check the schemas that exist under the `Schemas` tab by logging into Infinispan Console at `http://localhost:11222`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:464
msgid "By default, Protobuf schemas generated this way will be registered by this extension when the client first connects.  However, it might be required to handle the registration manually as a schema may evolve over time when used in production, so you can disable this from occurring by configuring the `quarkus.infinispan-client.use-schema-registration` to `false`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:470
msgid "To configure the schema manually please use https://infinispan.org/docs/infinispan-operator/main/operator.html[Infinispan Operator] for Kubernetes deployments, Infinispan Console, https://infinispan.org/docs/stable/titles/rest/rest.html#rest_v2_protobuf_schemas[REST API] or the https://infinispan.org/docs/stable/titles/encoding/encoding.html#registering-sci-remote-caches_marshalling[Hot Rod Java Client]."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/infinispan-client.adoc:472
#, no-wrap
msgid "Caching using annotations"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:475
msgid "The Infinispan Client extension offers a set of annotations that can be used in a CDI managed bean to enable caching abilities with Infinispan."
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/infinispan-client.adoc:480
msgid "Caching annotations are not allowed on private methods.  They will work fine with any other access modifier including package-private (no explicit modifier)."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/infinispan-client.adoc:482
#, no-wrap
msgid "@CacheResult"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:485
msgid "Loads a method result from the cache without executing the method body whenever possible."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:491
msgid "When a method annotated with `@CacheResult` is invoked, Quarkus will use the method argument as the cache key and check in the cache whether the method has been already invoked.  Methods with multiple parameters are not allowed. For composite keys, define a Protobuf schema that will hold multiple values.  If a value is found in the cache, it is returned and the annotated method is never actually executed.  If no value is found, the annotated method is invoked and the returned value is stored in the cache using the computed key.  This annotation cannot be used on a method returning `void`."
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/infinispan-client.adoc:495
msgid "Infinispan Client extension is not able yet to cache `null` values unlike the Quarkus-Cache extension."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/infinispan-client.adoc:497
#, no-wrap
msgid "@CacheInvalidate"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:500
msgid "Removes an entry from the cache."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:503
msgid "When a method annotated with `@CacheInvalidate` is invoked, Infinispan will use the method argument as a cache key to try to remove an existing entry from the cache.  If the key does not identify any cache entry, nothing will happen."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/infinispan-client.adoc:504
#, no-wrap
msgid "@CacheInvalidateAll"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:507
msgid "When a method annotated with `@CacheInvalidateAll` is invoked, Infinispan will remove all entries from the cache."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/infinispan-client.adoc:509
#, no-wrap
msgid "Querying"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:514
msgid "The Infinispan client supports both indexed and non-indexed querying as long as the `ProtoStreamMarshaller` is configured above. This allows the user to query based on the properties of the proto schema."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:519
msgid "Query builds upon the proto definitions you can configure when setting up the `ProtoStreamMarshaller`.  Either method of Serialization above will automatically register the schema with the server at startup, meaning that you will automatically gain the ability to query objects stored in the remote Infinispan Server."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:521
msgid "You can read more about https://infinispan.org/docs/stable/titles/developing/developing.html#creating_ickle_queries-querying[querying] in the Infinispan documentation."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:524
msgid "You can use either the Query DSL or the Ickle Query language with the Quarkus Infinispan client extension."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/infinispan-client.adoc:525
#, no-wrap
msgid "Counters"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:529
msgid "Infinispan also has a notion of counters and the Quarkus Infinispan client supports them out of the box."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:533
msgid "The Quarkus Infinispan client extension allows for Dependency Injection of the `CounterManager` directly. All you need to do is annotate your field, constructor or method, and you get it with no fuss. You can then use counters as you would normally."
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:538
#, no-wrap
msgid ""
"@Inject\n"
"CounterManager counterManager;\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:541
msgid "You can read more about https://infinispan.org/docs/stable/titles/developing/developing.html#clustered_counters[clustered counters] in the Infinispan documentation."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/infinispan-client.adoc:542
#, no-wrap
msgid "Near Caching"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:545
msgid "Near caching is disabled by default, but you can enable it on a per cache basic by configuring the following properties:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/infinispan-client.adoc:551
#, no-wrap
msgid ""
"quarkus.infinispan-client.cache.books.near-cache-mode=INVALIDATED <1>\n"
"quarkus.infinispan-client.cache.books.near-cache-max-entries=200 <2>\n"
"quarkus.infinispan-client.cache.books.near-cache-use-bloom-filter=true <3>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:554
msgid "Enables near caching for the 'books' cache by setting the mode to `INVALIDATED`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:555
msgid "Sets the maximum number of entries that the near cache of the 'books' cache can hold before eviction occurs"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:556
msgid "Enables bloom filter for the 'books' cache"
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/infinispan-client.adoc:557
#, no-wrap
msgid "Bounded near caching"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:560
msgid "You should always use bounded near caches by specifying the maximum number of entries they can contain."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/infinispan-client.adoc:561
#, no-wrap
msgid "Bloom filters"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:566
msgid "If you need to optimize the performance for write operations by reducing the total number of invalidation messages, enable bloom filter. Bloom filters reside on Infinispan Server and keep track of the entries that the client has requested.  They cannot be used with unbounded near cache: maximum number of entries must be defined when enabling bloom filters."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/infinispan-client.adoc:567
#, no-wrap
msgid "Encryption"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:570
msgid "Encryption at this point requires additional steps to get working."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:573
msgid "The first step is to configure the `hotrod-client.properties` file to point to your truststore and/or keystore. This is further detailed https://infinispan.org/docs/stable/titles/hotrod_java/hotrod_java.html#hotrod_encryption[here]."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:576
msgid "The Infinispan Client extension enables SSL/TLS by default. You can read more about this at xref:native-and-ssl.adoc[Using SSL With Native Executables]."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/infinispan-client.adoc:577
#, no-wrap
msgid "Additional Features"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:582
msgid "The Infinispan Client has additional features that were not mentioned here. This means this feature was not tested in a Quarkus environment, and they may or may not work. Please let us know if you need these added!"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/infinispan-client.adoc:584
#, no-wrap
msgid "Dev Services for Infinispan"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:587
msgid "When you use the infinispan-client extension in dev mode or in test, Quarkus automatically starts an Infinispan server and configure your application."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/infinispan-client.adoc:588
#, no-wrap
msgid "Enabling / Disabling Dev Services for Infinispan"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:591
msgid "Dev Services for Infinispan is automatically enabled unless:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:593
msgid "`quarkus.infinispan-client.devservices.enabled` is set to `false`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:594
msgid "the `quarkus.infinispan-client.server-list` is configured"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:598
msgid "Dev Services for Infinispan relies on Docker to start the broker.  If your environment does not support Docker, you will need to start the broker manually, or connect to an already running broker.  You can configure the broker address using `quarkus.infinispan-client.server-list`."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/infinispan-client.adoc:599
#, no-wrap
msgid "Shared server"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:603
msgid "Quarkus will share the Infinispan broker if you have multiple applications running in dev mode.  Dev Services for Infinispan implements a _service discovery_ mechanism for your multiple Quarkus applications running in _dev_ mode to share a single broker."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:605
msgid "Dev Services for Infinispan starts the container with the `quarkus-dev-service-infinispan` label which is used to identify the container."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:609
msgid "If you need multiple (shared) Infinispan server, you can configure the `quarkus.infinispan-client.devservices.service-name` attribute and indicate the server name.  It looks for a container with the same value, or starts a new one if none can be found.  The default service name is `infinispan`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:612
msgid "Sharing is enabled by default in dev mode, but disabled in test mode.  You can disable the sharing with `quarkus.infinispan-client.devservices.shared=false`."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/infinispan-client.adoc:613
#, no-wrap
msgid "Setting the port"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:617
msgid "By default, Dev Services for Infinispan picks a random port and configures the application.  You can set the port by configuring the `quarkus.infinispan-client.devservices.port` property."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/infinispan-client.adoc:618
#, no-wrap
msgid "Testing helpers"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:621
msgid "To start an Infinispan Server for your unit tests, Quarkus provides one `QuarkusTestResourceLifecycleManager` that relies on link:https://infinispan.org/docs/stable/titles/hotrod_java/hotrod_java.html#junit-testing[Infinispan Server Test Container]."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:623
msgid "`io.quarkus.test.infinispan.client.InfinispanTestResource` will start a single instance on port 11222 with user 'admin' and password 'password'."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:625
msgid "To use them, you need to add the `io.quarkus:quarkus-test-infinispan-client` dependency to your pom.xml."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/infinispan-client.adoc:627
msgid "For more information about the usage of a `QuarkusTestResourceLifecycleManager` please read xref:getting-started-testing.adoc#quarkus-test-resource[Quarkus test resource]."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/infinispan-client.adoc:628
#, no-wrap
msgid "Configuration Reference"
msgstr ""

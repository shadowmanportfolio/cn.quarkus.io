# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-03-16 13:20+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/amqp.adoc:6
#, fuzzy, no-wrap
msgid "Getting Started to SmallRye Reactive Messaging with AMQP 1.0"
msgstr "AMQP 1.0によるSmallRyeリアクティブ・メッセージングの開始"

#. type: Plain text
#: upstream/_guides/amqp.adoc:11
#, fuzzy
msgid "This guide demonstrates how your Quarkus application can utilize SmallRye Reactive Messaging to interact with AMQP 1.0."
msgstr ""
"このガイドでは、QuarkusアプリケーションがSmallRye Reactive "
"Messagingを利用してAMQP 1.0と連携する方法を説明します。"

#. type: Plain text
#: upstream/_guides/amqp.adoc:16
#, fuzzy
msgid "If you want to use RabbitMQ, you should use the xref:rabbitmq.adoc[SmallRye Reactive Messaging RabbitMQ extension].  Alternatively, if want to use RabbitMQ with AMQP 1.0 you need to enable the AMQP 1.0 plugin in the RabbitMQ broker; check the https://smallrye.io/smallrye-reactive-messaging/smallrye-reactive-messaging/3.9/amqp/amqp.html#amqp-rabbitmq[connecting to RabbitMQ] documentation."
msgstr ""
"RabbitMQを使用したい場合は、 link:rabbitmq.html[SmallRye Reactive Messaging "
"RabbitMQ extension]を使用してください。また、AMQP 1."
"0でRabbitMQを使用したい場合は、RabbitMQブローカーでAMQP 1."
"0プラグインを有効にする必要があります（ link:https://smallrye.io/"
"smallrye-reactive-messaging/smallrye-reactive-messaging/3.9/amqp/amqp.html"
"#amqp-rabbitmq[RabbitMQへの接続]のドキュメントを参照）。"

#. type: Title ==
#: upstream/_guides/amqp.adoc:17
#, no-wrap
msgid "Prerequisites"
msgstr "前提条件"

#. type: Title ==
#: upstream/_guides/amqp.adoc:22
#, no-wrap
msgid "Architecture"
msgstr "アーキテクチャ"

#. type: Plain text
#: upstream/_guides/amqp.adoc:28
#, fuzzy
msgid "In this guide, we are going to develop two applications communicating with an AMQP broker.  We will use https://activemq.apache.org/components/artemis/[Artemis], but you can use any AMQP 1.0 broker.  The first application sends a _quote request_ to an AMQP queue and consumes messages from the _quote_ queue.  The second application receives the _quote request_ and sends a _quote_ back."
msgstr ""
"このガイドでは、AMQP ブローカーと通信する 2 "
"つのアプリケーションを開発します。ここでは link:https://activemq.apache.org/"
"components/artemis/[Artemis]を使用しますが、AMQP 1."
"0ブローカーであれば何でも構いません。最初のアプリケーションは、AMQPキューに "
"_見積依頼_を送信し、 "
"_見積_キューからのメッセージを消費します。2番目のアプリケーションは、 "
"_見積もり要求_を受け取り、 _見積もり_を送り返します。"

#. type: Named 'alt' AttributeList argument for macro 'image'
#: upstream/_guides/amqp.adoc:29
#, fuzzy, no-wrap
msgid "Architecture,"
msgstr "アーキテクチャ"

#. type: Target for macro image
#: upstream/_guides/amqp.adoc:29
#, fuzzy, no-wrap
msgid "amqp-qs-architecture.png"
msgstr "アーキテクチャ"

#. type: Plain text
#: upstream/_guides/amqp.adoc:34
#, fuzzy
msgid "The first application, the `producer`, will let the user request some quotes over an HTTP endpoint.  For each quote request, a random identifier is generated and returned to the user, to put the quote request on _pending_.  At the same time the generated request id is sent over the `quote-requests` queue."
msgstr ""
"最初のアプリケーションである `producer` では、ユーザーが HTTP エンドポイント"
"を介していくつかの見積もりを要求することができます。各見積依頼に対して、"
"見積依頼を _保留_にするためのランダムな識別子が生成され、ユーザーに返されます"
"。同時に、生成されたリクエストIDは、 `quote-requests` のキューに送られます。"

#. type: Named 'alt' AttributeList argument for macro 'image'
#: upstream/_guides/amqp.adoc:35
#, fuzzy, no-wrap
msgid "Producer"
msgstr "プロデューサー"

#. type: Target for macro image
#: upstream/_guides/amqp.adoc:35
#, no-wrap
msgid "amqp-qs-app-screenshot.png"
msgstr ""

#. type: Plain text
#: upstream/_guides/amqp.adoc:38
#, fuzzy
msgid "The second application, the `processor`, in turn, will read from the `quote-requests` queue put a random price to the quote, and send it to a queue named `quotes`."
msgstr ""
"2 番目のアプリケーションである `processor` は、順番に `quote-requests` "
"のキューから読み取って、ランダムな価格を引用符に付けて、 `quotes` "
"というキューに送ります。"

#. type: Plain text
#: upstream/_guides/amqp.adoc:41
#, fuzzy
msgid "Lastly, the `producer` will read the quotes and send them to the browser using server-sent events.  The user will therefore see the quote price updated from _pending_ to the received price in real-time."
msgstr ""
"最後に、 `producer` が気配値を読み取り、サーバーが送信するイベントを使ってブ"
"ラウザに送信します。そのため、ユーザーは気配値が "
"_保留_から受信した価格にリアルタイムで更新されるのを見ることができます。"

#. type: Title ==
#: upstream/_guides/amqp.adoc:42
#, no-wrap
msgid "Solution"
msgstr "ソリューション"

#. type: Plain text
#: upstream/_guides/amqp.adoc:46
#, fuzzy
msgid "We recommend that you follow the instructions in the next sections and create applications step by step.  However, you can go right to the completed example."
msgstr "次のセクションの説明に沿って、段階的にアプリケーションを作成することをお勧め"
"します。しかし、完成した例をすぐに見ることもできます。"

#. type: Plain text
#: upstream/_guides/amqp.adoc:48
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Gitレポジトリをクローンするか `git clone {quickstarts-clone-url}` 、 {quickstarts-archive-url}[アーカイブ] をダウンロードします。"

#. type: Plain text
#: upstream/_guides/amqp.adoc:50
#, fuzzy
msgid "The solution is located in the `amqp-quickstart` {quickstarts-tree-url}/amqp-quickstart[directory]."
msgstr ""
"このソリューションは `amqp-quickstart` {quickstarts-tree-url}/amqp-"
"quickstart[directory] にあります。"

#. type: Title ==
#: upstream/_guides/amqp.adoc:51
#, fuzzy, no-wrap
msgid "Creating the Maven Project"
msgstr "Mavenプロジェクトの作成"

#. type: Plain text
#: upstream/_guides/amqp.adoc:54
#, fuzzy
msgid "First, we need to create two projects: the _producer_ and the _processor_."
msgstr "まず、 _プロデューサー_と "
"_プロセッサー_の2つのプロジェクトを作成する必要があります。"

#. type: Plain text
#: upstream/_guides/amqp.adoc:56
#, fuzzy
msgid "To create the _producer_ project, in a terminal run:"
msgstr "_プロデューサー・_プロジェクトを作成するには、ターミナルで次のように実行しま"
"す。"

#. type: Plain text
#: upstream/_guides/amqp.adoc:63
#, fuzzy
msgid "This command creates the project structure and select the two Quarkus extensions we will be using:"
msgstr "このコマンドは、プロジェクト構造を作成し、使用する2つのQuarkusエクステンショ"
"ンを選択します。"

#. type: Plain text
#: upstream/_guides/amqp.adoc:65
#, fuzzy
msgid "RESTEasy Reactive and its Jackson support to handle JSON payloads"
msgstr "RESTEasy ReactiveとそのJacksonによるJSONペイロードの処理のサポート"

#. type: Plain text
#: upstream/_guides/amqp.adoc:66
#, fuzzy
msgid "The Reactive Messaging AMQP connector"
msgstr "Reactive Messaging AMQP コネクタ"

#. type: Plain text
#: upstream/_guides/amqp.adoc:68
#, fuzzy
msgid "To create the _processor_ project, from the same directory, run:"
msgstr "_プロセッサー・_プロジェクトを作成するには、同じディレクトリから、次のように"
"実行します。"

#. type: Plain text
#: upstream/_guides/amqp.adoc:75
#, fuzzy
msgid "At that point you should have the following structure:"
msgstr "この時点では、次のような構成になっているはずです。"

#. type: delimited block -
#: upstream/_guides/amqp.adoc:101
#, no-wrap
msgid ""
".\n"
"├── amqp-quickstart-processor\n"
"│  ├── README.md\n"
"│  ├── mvnw\n"
"│  ├── mvnw.cmd\n"
"│  ├── pom.xml\n"
"│  └── src\n"
"│     └── main\n"
"│        ├── docker\n"
"│        ├── java\n"
"│        └── resources\n"
"│           └── application.properties\n"
"└── amqp-quickstart-producer\n"
"   ├── README.md\n"
"   ├── mvnw\n"
"   ├── mvnw.cmd\n"
"   ├── pom.xml\n"
"   └── src\n"
"      └── main\n"
"         ├── docker\n"
"         ├── java\n"
"         └── resources\n"
"            └── application.properties\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/amqp.adoc:104
#, fuzzy
msgid "Open the two projects in your favorite IDE."
msgstr "2つのプロジェクトをお好きなIDEで開きます。"

#. type: Title ==
#: upstream/_guides/amqp.adoc:105
#, fuzzy, no-wrap
msgid "The Quote object"
msgstr "Quoteオブジェクト"

#. type: Plain text
#: upstream/_guides/amqp.adoc:110
#, fuzzy
msgid "The `Quote` class will be used in both `producer` and `processor` projects.  For the sake of simplicity we will duplicate the class.  In both projects, create the `src/main/java/org/acme/amqp/model/Quote.java` file, with the following content:"
msgstr ""
"`Quote` クラスは、 `producer` と `processor` の両方のプロジェクトで使用されま"
"す。簡単にするために、このクラスを複製します。両方のプロジェクトで、"
"次のような内容の `src/main/java/org/acme/amqp/model/Quote.java` "
"ファイルを作成します。"

#. type: delimited block -
#: upstream/_guides/amqp.adoc:114
#, no-wrap
msgid "package org.acme.amqp.model;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/amqp.adoc:116
#, no-wrap
msgid "import io.quarkus.runtime.annotations.RegisterForReflection;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/amqp.adoc:119
#, no-wrap
msgid ""
"@RegisterForReflection\n"
"public class Quote {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/amqp.adoc:122
#, no-wrap
msgid ""
"    public String id;\n"
"    public int price;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/amqp.adoc:127
#, no-wrap
msgid ""
"    /**\n"
"    * Default constructor required for Jackson serializer\n"
"    */\n"
"    public Quote() { }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/amqp.adoc:132
#, no-wrap
msgid ""
"    public Quote(String id, int price) {\n"
"        this.id = id;\n"
"        this.price = price;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/amqp.adoc:141
#, no-wrap
msgid ""
"    @Override\n"
"    public String toString() {\n"
"        return \"Quote{\" +\n"
"                \"id='\" + id + '\\'' +\n"
"                \", price=\" + price +\n"
"                '}';\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/amqp.adoc:145
#, fuzzy
msgid "JSON representation of `Quote` objects will be used in messages sent to the AMQP queues and also in the server-sent events sent to browser clients."
msgstr ""
"`Quote` オブジェクトのJSON表現は、AMQPキューに送信されるメッセージや、ブラウ"
"ザクライアントに送信されるサーバーからのイベントで使用されます。"

#. type: Plain text
#: upstream/_guides/amqp.adoc:147
#, fuzzy
msgid "Quarkus has built-in capabilities to deal with JSON AMQP messages."
msgstr "Quarkusには、JSON AMQPメッセージを処理する機能が組み込まれています。"

#. type: Block title
#: upstream/_guides/amqp.adoc:149
#, fuzzy, no-wrap
msgid "@RegisterForReflection"
msgstr "@RegisterForReflection"

#. type: delimited block =
#: upstream/_guides/amqp.adoc:154
#, fuzzy
msgid "The `@RegisterForReflection` annotation instructs Quarkus to include the class (including fields and methods) when building the native executable.  This will be useful later when we run the applications as native executables inside containers.  Without, the native compilation would remove the fields and methods during the dead-code elimination phase."
msgstr ""
"`@RegisterForReflection` アノテーションは、ネイティブ実行可能ファイルをビルド"
"する際に、クラス（フィールドとメソッドを含む）を含めるようQuarkusに指示します"
"。これは、後でアプリケーションをコンテナ内のネイティブ実行可能ファイルとして"
"実行する際に役立ちます。これがないと、ネイティブのコンパイル時にデッドコード"
"の除去段階でフィールドやメソッドが削除されてしまいます。"

#. type: Title ==
#: upstream/_guides/amqp.adoc:156
#, fuzzy, no-wrap
msgid "Sending quote request"
msgstr "見積もり依頼の送信"

#. type: Plain text
#: upstream/_guides/amqp.adoc:159
#, fuzzy
msgid "Inside the `producer` project locate the generated `src/main/java/org/acme/amqp/producer/QuotesResource.java` file, and update the content to be:"
msgstr ""
"`producer` プロジェクト内で、生成された `src/main/java/org/acme/amqp/"
"producer/QuotesResource.java` "
"ファイルを探し、コンテンツを次のように更新します。"

#. type: delimited block -
#: upstream/_guides/amqp.adoc:163
#, no-wrap
msgid "package org.acme.amqp.producer;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/amqp.adoc:165
#, no-wrap
msgid "import java.util.UUID;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/amqp.adoc:171
#, no-wrap
msgid ""
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.POST;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/amqp.adoc:175
#, no-wrap
msgid ""
"import org.acme.amqp.model.Quote;\n"
"import org.eclipse.microprofile.reactive.messaging.Channel;\n"
"import org.eclipse.microprofile.reactive.messaging.Emitter;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/amqp.adoc:177
#, no-wrap
msgid "import io.smallrye.mutiny.Multi;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/amqp.adoc:180
#, no-wrap
msgid ""
"@Path(\"/quotes\")\n"
"public class QuotesResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/amqp.adoc:182
#, no-wrap
msgid "    @Channel(\"quote-requests\") Emitter<String> quoteRequestEmitter; // <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/amqp.adoc:195
#, no-wrap
msgid ""
"    /**\n"
"     * Endpoint to generate a new quote request id and send it to \"quote-requests\" AMQP queue using the emitter.\n"
"     */\n"
"    @POST\n"
"    @Path(\"/request\")\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String createRequest() {\n"
"        UUID uuid = UUID.randomUUID();\n"
"        quoteRequestEmitter.send(uuid.toString()); // <2>\n"
"        return uuid.toString();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/amqp.adoc:197
#, fuzzy
msgid "Inject a Reactive Messaging `Emitter` to send messages to the `quote-requests` channel."
msgstr ""
"Reactive Messaging `Emitter` をインジェクトして、 `quote-requests` "
"チャンネルにメッセージを送信します。"

#. type: Plain text
#: upstream/_guides/amqp.adoc:198
#, fuzzy
msgid "On a post request, generate a random UUID and send it to the AMQP queue using the emitter."
msgstr "投稿リクエストで、ランダムなUUIDを生成し、エミッターを使ってAMQPキューに送信"
"します。"

#. type: Plain text
#: upstream/_guides/amqp.adoc:202
#, fuzzy
msgid "The `quote-requests` channel is going to be managed as a AMQP queue, as that's the only connector on the classpath.  If not indicated otherwise, like in this example, Quarkus uses the channel name as AMQP queue name.  So, in this example, the application sends messages to the `quote-requests` queue."
msgstr ""
"`quote-requests` チャンネルは、クラスパス上の唯一のコネクタであるため、AMQPキ"
"ューとして管理されることになります。この例のように他に指示がない場合、Quarkus"
"はチャンネル名をAMQPキュー名として使用します。したがって、この例では、"
"アプリケーションは `quote-requests` キューにメッセージを送信します。"

#. type: Plain text
#: upstream/_guides/amqp.adoc:204
#, fuzzy
msgid "When you have multiple connectors, you would need to indicate which connector you want to use in the application configuration."
msgstr "複数のコネクタがある場合は、アプリケーションの設定でどのコネクタを使用するか"
"を指定する必要があります。"

#. type: Title ==
#: upstream/_guides/amqp.adoc:205
#, fuzzy, no-wrap
msgid "Processing quote requests"
msgstr "見積もり依頼の処理"

#. type: Plain text
#: upstream/_guides/amqp.adoc:209
#, fuzzy
msgid "Now let's consume the quote request and give out a price.  Inside the `processor` project, locate the `src/main/java/org/acme/amqp/processor/QuoteProcessor.java` file and add the following:"
msgstr ""
"それでは、見積依頼を消費して、価格を出してみましょう。 `processor` "
"プロジェクト内で、 `src/main/java/org/acme/amqp/processor/QuoteProcessor."
"java` ファイルを探し、以下を追加します。"

#. type: delimited block -
#: upstream/_guides/amqp.adoc:213
#, no-wrap
msgid "package org.acme.amqp.processor;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/amqp.adoc:215
#, no-wrap
msgid "import java.util.Random;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/amqp.adoc:217
#, no-wrap
msgid "import javax.enterprise.context.ApplicationScoped;\n"
msgstr "import javax.enterprise.context.ApplicationScoped;\n"

#. type: delimited block -
#: upstream/_guides/amqp.adoc:221
#, no-wrap
msgid ""
"import org.acme.amqp.model.Quote;\n"
"import org.eclipse.microprofile.reactive.messaging.Incoming;\n"
"import org.eclipse.microprofile.reactive.messaging.Outgoing;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/amqp.adoc:223
#, no-wrap
msgid "import io.smallrye.reactive.messaging.annotations.Blocking;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/amqp.adoc:230
#, no-wrap
msgid ""
"/**\n"
" * A bean consuming data from the \"request\" AMQP queue and giving out a random quote.\n"
" * The result is pushed to the \"quotes\" AMQP queue.\n"
" */\n"
"@ApplicationScoped\n"
"public class QuoteProcessor {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/amqp.adoc:232
#, no-wrap
msgid "    private Random random = new Random();\n"
msgstr "    private Random random = new Random();\n"

#. type: delimited block -
#: upstream/_guides/amqp.adoc:242
#, no-wrap
msgid ""
"    @Incoming(\"requests\")       // <1>\n"
"    @Outgoing(\"quotes\")         // <2>\n"
"    @Blocking                   // <3>\n"
"    public Quote process(String quoteRequest) throws InterruptedException {\n"
"        // simulate some hard working task\n"
"        Thread.sleep(200);\n"
"        return new Quote(quoteRequest, random.nextInt(100));\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/amqp.adoc:244
#, fuzzy
msgid "Indicates that the method consumes the items from the `requests` channel"
msgstr "メソッドが `requests` チャンネルのアイテムを消費することを示します。"

#. type: Plain text
#: upstream/_guides/amqp.adoc:245
#, fuzzy
msgid "Indicates that the objects returned by the method are sent to the `quotes` channel"
msgstr "メソッドが返すオブジェクトが `quotes` チャンネルに送信されることを示す。"

#. type: Plain text
#: upstream/_guides/amqp.adoc:246
#, fuzzy
msgid "Indicates that the processing is _blocking_ and cannot be run on the caller thread."
msgstr "処理が "
"_ブロック_化されており、呼び出し元のスレッドでは実行できないことを示す。"

#. type: Plain text
#: upstream/_guides/amqp.adoc:248
#, fuzzy
msgid "The `process` method is called for every AMQP message from the `quote-requests` queue, and will send a `Quote` object to the `quotes` queue."
msgstr ""
"`process` メソッドは、 `quote-requests` キューからの AMQP "
"メッセージごとに呼び出され、 `Quote` オブジェクトを `quotes` "
"キューに送信します。"

#. type: Plain text
#: upstream/_guides/amqp.adoc:251
#, fuzzy
msgid "Because we want to consume messages from the `quotes-requests` queue into the `requests` channel, we need to configure this association.  Open the `src/main/resources/application.properties` file and add:"
msgstr ""
"`quotes-requests` のキューから `requests` のチャンネルにメッセージを取り込み"
"たいので、この関連付けを設定する必要があります。 `src/main/resources/"
"application.properties` ファイルを開き、次のように追加します。"

#. type: delimited block -
#: upstream/_guides/amqp.adoc:255
#, no-wrap
msgid "mp.messaging.incoming.requests.address=quote-requests\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/amqp.adoc:258
#, fuzzy
msgid "The configuration keys are structured as follows:"
msgstr "設定キーの構成は以下の通りです。"

#. type: Plain text
#: upstream/_guides/amqp.adoc:260
msgid "`mp.messaging.[outgoing|incoming].{channel-name}.property=value`"
msgstr "`mp.messaging.[outgoing|incoming].{channel-name}.property=value`"

#. type: Plain text
#: upstream/_guides/amqp.adoc:262
#, fuzzy
msgid "In our case, we want to configure the `address` attribute to indicate the name of the queue."
msgstr "今回のケースでは、キューの名前を示す `address` 属性を設定したいと思います。"

#. type: Title ==
#: upstream/_guides/amqp.adoc:263
#, fuzzy, no-wrap
msgid "Receiving quotes"
msgstr "見積もりを受け取る"

#. type: Plain text
#: upstream/_guides/amqp.adoc:267
#, fuzzy
msgid "Back to our `producer` project.  Let's modify the `QuotesResource` to consume quotes, bind it to an HTTP endpoint to send events to clients:"
msgstr ""
"`producer` プロジェクトに戻ります。 `QuotesResource` を変更して引用符を消費し"
"、HTTPエンドポイントにバインドしてクライアントにイベントを送信してみましょう"
"。"

#. type: delimited block -
#: upstream/_guides/amqp.adoc:272
#, no-wrap
msgid ""
"import io.smallrye.mutiny.Multi;\n"
"//...\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/amqp.adoc:274
#, no-wrap
msgid "@Channel(\"quotes\") Multi<Quote> quotes;     // <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/amqp.adoc:283
#, no-wrap
msgid ""
"/**\n"
" * Endpoint retrieving the \"quotes\" queue and sending the items to a server sent event.\n"
" */\n"
"@GET\n"
"@Produces(MediaType.SERVER_SENT_EVENTS) // <2>\n"
"public Multi<Quote> stream() {\n"
"    return quotes; // <3>\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/amqp.adoc:285
#, fuzzy
msgid "Injects the `quotes` channel using the `@Channel` qualifier"
msgstr "`@Channel` の修飾子を使用して `quotes` のチャネルを注入します。"

#. type: Plain text
#: upstream/_guides/amqp.adoc:286
msgid "Indicates that the content is sent using `Server Sent Events`"
msgstr "`Server Sent Events` を使用してコンテンツが送信されたことを示します。"

#. type: Plain text
#: upstream/_guides/amqp.adoc:287
msgid "Returns the stream (_Reactive Stream_)"
msgstr "ストリーム (_Reactive Stream_) を返します。"

#. type: Title ==
#: upstream/_guides/amqp.adoc:288
#, fuzzy, no-wrap
msgid "The HTML page"
msgstr "HTMLページ"

#. type: Plain text
#: upstream/_guides/amqp.adoc:291
msgid "Final touch, the HTML page reading the converted prices using SSE."
msgstr "最後に、SSE を使って変換された価格を読み込む HTML ページです。"

#. type: Plain text
#: upstream/_guides/amqp.adoc:293
#, fuzzy
msgid "Create inside the `producer` project `src/main/resources/META-INF/resources/quotes.html` file, with the following content:"
msgstr ""
"`producer` プロジェクト `src/main/resources/META-INF/resources/quotes.html` "
"の中に、以下の内容のファイルを作成します。"

#. type: delimited block -
#: upstream/_guides/amqp.adoc:297
#, no-wrap
msgid "<!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Quotes</title>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/amqp.adoc:333
#, no-wrap
msgid ""
"    <link rel=\"stylesheet\" type=\"text/css\"\n"
"          href=\"https://cdnjs.cloudflare.com/ajax/libs/patternfly/3.24.0/css/patternfly.min.css\">\n"
"    <link rel=\"stylesheet\" type=\"text/css\"\n"
"          href=\"https://cdnjs.cloudflare.com/ajax/libs/patternfly/3.24.0/css/patternfly-additions.min.css\">\n"
"</head>\n"
"<body>\n"
"<div class=\"container\">\n"
"    <div class=\"card\">\n"
"        <div class=\"card-body\">\n"
"            <h2 class=\"card-title\">Quotes</h2>\n"
"            <button class=\"btn btn-info\" id=\"request-quote\">Request Quote</button>\n"
"            <div class=\"quotes\"></div>\n"
"        </div>\n"
"    </div>\n"
"</div>\n"
"</body>\n"
"<script src=\"https://code.jquery.com/jquery-3.6.0.min.js\"></script>\n"
"<script>\n"
"    $(\"#request-quote\").click((event) => {\n"
"        fetch(\"/quotes/request\", {method: \"POST\"})\n"
"        .then(res => res.text())\n"
"        .then(qid => {\n"
"            var row = $(`<h4 class='col-md-12' id='${qid}'>Quote # <i>${qid}</i> | <strong>Pending</strong></h4>`);\n"
"            $(\".quotes\").append(row);\n"
"        });\n"
"    });\n"
"    var source = new EventSource(\"/quotes\");\n"
"    source.onmessage = (event) => {\n"
"      var json = JSON.parse(event.data);\n"
"      $(`#${json.id}`).html(function(index, html) {\n"
"        return html.replace(\"Pending\", `\\$\\xA0${json.price}`);\n"
"      });\n"
"    };\n"
"</script>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/amqp.adoc:337
#, fuzzy
msgid "Nothing spectacular here.  On each received quote, it updates the page."
msgstr "目を見張るものはありません。受け取った見積書の内容が更新されていきます。"

#. type: Title ==
#: upstream/_guides/amqp.adoc:338
#, no-wrap
msgid "Get it running"
msgstr "実行"

#. type: Plain text
#: upstream/_guides/amqp.adoc:341
#, fuzzy
msgid "You just need to run both applications using:"
msgstr "を使って両方のアプリケーションを実行する必要があります。"

#. type: delimited block -
#: upstream/_guides/amqp.adoc:345
#, no-wrap
msgid "> mvn -f amqp-quickstart-producer quarkus:dev\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/amqp.adoc:348
#, fuzzy
msgid "And, in a separate terminal:"
msgstr "そして、別の端末で"

#. type: delimited block -
#: upstream/_guides/amqp.adoc:352
#, no-wrap
msgid "> mvn -f amqp-quickstart-processor quarkus:dev\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/amqp.adoc:356
#, fuzzy
msgid "Quarkus starts a AMQP broker automatically, configures the application and shares the broker instance between different applications.  See xref:amqp-dev-services.adoc[Dev Services for AMQP] for more details."
msgstr ""
"Quarkusは、AMQPブローカーを自動的に起動し、アプリケーションを構成し、異なるア"
"プリケーション間でブローカーインスタンスを共有します。詳細は、「 link:amqp-"
"dev-services.html[AMQP用のDev Services]」を参照してください。"

#. type: Plain text
#: upstream/_guides/amqp.adoc:359
#, fuzzy
msgid "Open `http://localhost:8080/quotes.html` in your browser and request some quotes by clicking the button."
msgstr ""
"開く `<a href=\"http://localhost:8080/quotes.html\" class=\"bare\""
">http://localhost:8080/quotes."
"html</a>`をブラウザで開き、ボタンをクリックして見積もりを依頼してください。"

#. type: Title ==
#: upstream/_guides/amqp.adoc:360
#, fuzzy, no-wrap
msgid "Running in JVM or Native mode"
msgstr "JVMまたはNativeモードでの実行"

#. type: Plain text
#: upstream/_guides/amqp.adoc:364
#, fuzzy
msgid "When not running in dev or test mode, you will need to start your AMQP broker.  You can follow the instructions from the https://activemq.apache.org/components/artemis/documentation/latest/using-server.html[Apache ActiveMQ Artemis website] or create a `docker-compose.yaml` file with the following content:"
msgstr ""
"開発モードやテストモードで動作していないときは、AMQPブローカを起動する必要が"
"あります。 link:https://activemq.apache.org/components/artemis/documentation/"
"latest/using-server.html[Apache ActiveMQ "
"Artemisのウェブサイト]の指示に従うか、以下の内容の `docker-compose.yaml` "
"ファイルを作成してください。"

#. type: delimited block -
#: upstream/_guides/amqp.adoc:368
#, no-wrap
msgid "version: '2'\n"
msgstr "version: '2'\n"

#. type: delimited block -
#: upstream/_guides/amqp.adoc:370
#, no-wrap
msgid "services:\n"
msgstr "services:\n"

#. type: delimited block -
#: upstream/_guides/amqp.adoc:382
#, no-wrap
msgid ""
"  artemis:\n"
"    image: quay.io/artemiscloud/activemq-artemis-broker:0.1.2\n"
"    ports:\n"
"      - \"8161:8161\"\n"
"      - \"61616:61616\"\n"
"      - \"5672:5672\"\n"
"    environment:\n"
"      AMQ_USER: quarkus\n"
"      AMQ_PASSWORD: quarkus\n"
"    networks:\n"
"      - amqp-quickstart-network\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/amqp.adoc:395
#, no-wrap
msgid ""
"  producer:\n"
"    image: quarkus-quickstarts/amqp-quickstart-producer:1.0-${QUARKUS_MODE:-jvm}\n"
"    build:\n"
"      context: amqp-quickstart-producer\n"
"      dockerfile: src/main/docker/Dockerfile.${QUARKUS_MODE:-jvm}\n"
"    environment:\n"
"      AMQP_HOST: artemis\n"
"      AMQP_PORT: 5672\n"
"    ports:\n"
"      - \"8080:8080\"\n"
"    networks:\n"
"      - amqp-quickstart-network\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/amqp.adoc:406
#, no-wrap
msgid ""
"  processor:\n"
"    image: quarkus-quickstarts/amqp-quickstart-processor:1.0-${QUARKUS_MODE:-jvm}\n"
"    build:\n"
"      context: amqp-quickstart-processor\n"
"      dockerfile: src/main/docker/Dockerfile.${QUARKUS_MODE:-jvm}\n"
"    environment:\n"
"      AMQP_HOST: artemis\n"
"      AMQP_PORT: 5672\n"
"    networks:\n"
"      - amqp-quickstart-network\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/amqp.adoc:410
#, no-wrap
msgid ""
"networks:\n"
"  amqp-quickstart-network:\n"
"    name: amqp-quickstart\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/amqp.adoc:414
#, fuzzy
msgid "Note how the AMQP broker location is configured.  The `amqp.host` and `amqp.port` (`AMQP_HOST` and `AMQP_PORT` environment variables) properties configure location."
msgstr ""
"AMQPブローカーのロケーションがどのように構成されているかに注目してください。 "
"`amqp.host` と `amqp.port` ( `AMQP_HOST` と `AMQP_PORT` 環境変数) "
"のプロパティで場所を設定します。"

#. type: Plain text
#: upstream/_guides/amqp.adoc:417
#, fuzzy
msgid "First, make sure you stopped the applications, and build both applications in JVM mode with:"
msgstr "まず、アプリケーションが停止していることを確認し、両方のアプリケーションをJVM"
"モードでビルドします。"

#. type: delimited block -
#: upstream/_guides/amqp.adoc:422
#, no-wrap
msgid ""
"> mvn -f amqp-quickstart-producer clean package\n"
"> mvn -f amqp-quickstart-processor clean package\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/amqp.adoc:426
#, fuzzy
msgid "Once packaged, run `docker compose up --build`.  The UI is exposed on http://localhost:8080/quotes.html"
msgstr ""
"パッケージングされたら、 `docker compose up --build` を実行します。UI は "
"http://localhost:8080/quotes.html で公開されます。"

#. type: Plain text
#: upstream/_guides/amqp.adoc:428
#, fuzzy
msgid "To run your applications as native, first we need to build the native executables:"
msgstr "アプリケーションをネイティブで動作させるには、まず、ネイティブ実行可能ファイ"
"ルをビルドする必要があります。"

#. type: delimited block -
#: upstream/_guides/amqp.adoc:433
#, no-wrap
msgid ""
"> mvn -f amqp-quickstart-producer package -Pnative  -Dquarkus.native.container-build=true\n"
"> mvn -f amqp-quickstart-processor package -Pnative -Dquarkus.native.container-build=true\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/amqp.adoc:437
#, fuzzy
msgid "The `-Dquarkus.native.container-build=true` instructs Quarkus to build Linux 64bits native executables, who can run inside containers.  Then, run the system using:"
msgstr ""
"`-Dquarkus.native.container-build=true` は、"
"Quarkusにコンテナ内で実行可能なLinux 64bitsネイティブ実行可能ファイルを構築す"
"るよう指示しています。その後、システムを使用して実行します。"

#. type: delimited block -
#: upstream/_guides/amqp.adoc:442
#, no-wrap
msgid ""
"> export QUARKUS_MODE=native\n"
"> docker compose up --build\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/amqp.adoc:445
#, fuzzy
msgid "As before, the UI is exposed on http://localhost:8080/quotes.html"
msgstr "従来通り、UIは http://localhost:8080/quotes.html で公開されています。"

#. type: Title ==
#: upstream/_guides/amqp.adoc:446
#, no-wrap
msgid "Going further"
msgstr "さらに詳しく"

#. type: Plain text
#: upstream/_guides/amqp.adoc:450
#, fuzzy
msgid "This guide has shown how you can interact with AMQP 1.0 using Quarkus.  It utilizes https://smallrye.io/smallrye-reactive-messaging[SmallRye Reactive Messaging] to build data streaming applications."
msgstr ""
"このガイドでは、Quarkusを使ってAMQP 1.0を操作する方法を紹介しました。 "
"link:https://smallrye.io/smallrye-reactive-messaging[SmallRye Reactive "
"Messaging]を利用して、データストリーミングアプリケーションを構築しています。"

#. type: Plain text
#: upstream/_guides/amqp.adoc:453
#, fuzzy
msgid "If you did the Kafka quickstart, you have realized that it's the same code.  The only difference is the connector configuration and the JSON mapping."
msgstr "Kafkaのクイックスタートを行った方は、同じコードであることに気づいたと思います"
"。唯一の違いは、コネクタの設定とJSONマッピングです。"

#~ msgid "To complete this guide, you need:"
#~ msgstr "このガイドを完成させるには、以下が必要です:"

#~ msgid "less than 15 minutes"
#~ msgstr "15分未満"

#~ msgid "an IDE"
#~ msgstr "IDE"

#~ msgid "Apache Maven {maven-version}"
#~ msgstr "Apache Maven {maven-version}"

# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: \n"
"POT-Creation-Date: 2022-03-16 13:20+0000\n"
"PO-Revision-Date: 2022-02-05 10:53+0900\n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 3.0.1\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/config.adoc:6
#, no-wrap
msgid "Configuring Your Application"
msgstr "アプリケーションの設定"

#. type: Plain text
#: upstream/_guides/config.adoc:12
msgid "The content of this guide and been revised and split into additional topics. Please check the <<additional-information,Additional Information>> section."
msgstr "本ガイドの内容を改訂し、さらにトピックを分割しました。<<additional-information,追加情報>>をご覧ください。"

#. type: Plain text
#: upstream/_guides/config.adoc:17
msgid "Hardcoded values in your code are a _no go_ (even if we all did it at some point ;-)).  In this guide, we will learn how to configure a Quarkus application."
msgstr "コードの中にハードコードされた値を使うことは _できません_ (たとえ誰もがどこかの時点でそうしていたとしてもです ;-)。このガイドでは、Quarkusアプリケーションを設定する方法を学びます。"

#. type: Title ==
#: upstream/_guides/config.adoc:18
#, no-wrap
msgid "Prerequisites"
msgstr "前提条件"

#. type: Title ==
#: upstream/_guides/config.adoc:22
#, no-wrap
msgid "Solution"
msgstr "ソリューション"

#. type: Plain text
#: upstream/_guides/config.adoc:26
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the completed example."
msgstr "次のセクションで紹介する手順に沿って、ステップを踏んでアプリを作成することをお勧めします。ただし、完成した例にそのまま進んでも構いません。"

#. type: Plain text
#: upstream/_guides/config.adoc:28
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Git レポジトリをクローンするか `git clone {quickstarts-clone-url}` 、 {quickstarts-archive-url}[アーカイブ] をダウンロードします。"

#. type: Plain text
#: upstream/_guides/config.adoc:30
msgid "The solution is located in the `config-quickstart` {quickstarts-tree-url}/config-quickstart[directory]."
msgstr "ソリューションは `config-quickstart` {quickstarts-tree-url}/config-quickstart[ディレクトリ] にあります。"

#. type: Title ==
#: upstream/_guides/config.adoc:31
#, no-wrap
msgid "Create the Maven project"
msgstr "Maven プロジェクトの作成"

#. type: Plain text
#: upstream/_guides/config.adoc:34
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "まず、新しいプロジェクトが必要です。以下のコマンドで新規プロジェクトを作成します。"

#. type: Plain text
#: upstream/_guides/config.adoc:40
msgid "It generates:"
msgstr "以下が生成されます:"

#. type: Plain text
#: upstream/_guides/config.adoc:42
msgid "the Maven structure"
msgstr "Maven の構造"

#. type: Plain text
#: upstream/_guides/config.adoc:43
msgid "a landing page accessible on `http://localhost:8080`"
msgstr "ランディングページは次の URL でアクセス可能です: `http://localhost:8080`"

#. type: Plain text
#: upstream/_guides/config.adoc:44
msgid "example `Dockerfile` files for both `native` and `jvm` modes"
msgstr "`native`  と `jvm`  の両方のモードに対応した `Dockerfile`  ファイルの例"

#. type: Plain text
#: upstream/_guides/config.adoc:45
msgid "the application configuration file"
msgstr "アプリケーション設定ファイル"

#. type: Title ==
#: upstream/_guides/config.adoc:46
#, no-wrap
msgid "Create the configuration"
msgstr "設定の作成"

#. type: Plain text
#: upstream/_guides/config.adoc:50
msgid "A Quarkus application uses the https://github.com/smallrye/smallrye-config[SmallRye Config] API to provide all mechanisms related with configuration."
msgstr "Quarkusアプリケーションは link:https://github.com/smallrye/smallrye-config[SmallRye Config] APIを使用して、設定に関連するすべてのメカニズムを提供します。"

#. type: Plain text
#: upstream/_guides/config.adoc:54
msgid "By default, Quarkus reads configuration properties from <<config-reference.adoc#configuration-sources,several sources>>.  For the purpose of this guide, we will use an application configuration file located in `src/main/resources/application.properties`.  Edit the file with the following content:"
msgstr "デフォルトでは、Quarkus は <<config-reference.adoc#configuration-sources,複数のソース>> から設定プロパティーを読み取ります。このガイドでは、 `src/main/resources/application.properties` にあるアプリケーション設定ファイルを使用します。以下の内容でファイルを編集します。"

#. type: Block title
#: upstream/_guides/config.adoc:55
#, no-wrap
msgid "application.properties"
msgstr "application.properties"

#. type: delimited block -
#: upstream/_guides/config.adoc:61
#, no-wrap
msgid ""
"# Your configuration properties\n"
"greeting.message = hello\n"
"greeting.name = quarkus\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/config.adoc:63
#, no-wrap
msgid "Create a REST resource"
msgstr "RESTリソースの作成"

#. type: Plain text
#: upstream/_guides/config.adoc:66
msgid "Create the `org.acme.config.GreetingResource` REST resource with the following content:"
msgstr "`org.acme.config.GreetingResource` REST リソースを以下の内容で作成します:"

#. type: delimited block -
#: upstream/_guides/config.adoc:70 upstream/_guides/config.adoc:141
#, no-wrap
msgid "package org.acme.config;\n"
msgstr "package org.acme.config;\n"

#. type: delimited block -
#: upstream/_guides/config.adoc:75
#, no-wrap
msgid ""
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"
msgstr ""
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"

#. type: delimited block -
#: upstream/_guides/config.adoc:78
#, no-wrap
msgid ""
"@Path(\"/greeting\")\n"
"public class GreetingResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config.adoc:85
#, no-wrap
msgid ""
"    @GET\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String hello() {\n"
"        return \"Hello RESTEasy\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/config.adoc:87
#, no-wrap
msgid "Inject the configuration"
msgstr "設定の挿入"

#. type: Plain text
#: upstream/_guides/config.adoc:91
msgid "Quarkus uses https://microprofile.io/project/eclipse/microprofile-config[MicroProfile Config] annotations to inject the configuration properties in the application."
msgstr "Quarkus では、 link:https://microprofile.io/project/eclipse/microprofile-config[MicroProfile Config] アノテーションを使用して、アプリケーションに設定プロパティーを注入しています。"

#. type: delimited block -
#: upstream/_guides/config.adoc:96 upstream/_guides/config.adoc:108
#, no-wrap
msgid ""
"@ConfigProperty(name = \"greeting.message\") <1>\n"
"String message;\n"
msgstr ""
"@ConfigProperty(name = \"greeting.message\") <1>\n"
"String message;\n"

#. type: Plain text
#: upstream/_guides/config.adoc:99
msgid "You can use `@Inject @ConfigProperty` or just `@ConfigProperty`. The `@Inject` annotation is not necessary for members annotated with `@ConfigProperty`."
msgstr "`@Inject @ConfigProperty` を使用することも、 `@ConfigProperty` だけを使用することもできます。 `@Inject` アノテーションは、 `@ConfigProperty` でアノテーションされたメンバーには必要ありません。"

#. type: Plain text
#: upstream/_guides/config.adoc:101
msgid "If the application attempts to inject a configuration property that is not set, an error is thrown."
msgstr "アプリケーションが設定されていない設定プロパティーを注入しようとすると、エラーがスローされます。"

#. type: Plain text
#: upstream/_guides/config.adoc:103
msgid "Edit the `org.acme.config.GreetingResource`, and introduce the following configuration properties:"
msgstr "`org.acme.config.GreetingResource` を編集し、以下の設定プロパティーを導入します:"

#. type: delimited block -
#: upstream/_guides/config.adoc:111
#, no-wrap
msgid ""
"@ConfigProperty(name = \"greeting.suffix\", defaultValue=\"!\") <2>\n"
"String suffix;\n"
msgstr ""
"@ConfigProperty(name = \"greeting.suffix\", defaultValue=\"!\") <2>\n"
"String suffix;\n"

#. type: delimited block -
#: upstream/_guides/config.adoc:114
#, no-wrap
msgid ""
"@ConfigProperty(name = \"greeting.name\")\n"
"Optional<String> name; <3>\n"
msgstr ""
"@ConfigProperty(name = \"greeting.name\")\n"
"Optional<String> name; <3>\n"

#. type: Plain text
#: upstream/_guides/config.adoc:116
msgid "If you do not provide a value for this property, the application startup fails with `javax.enterprise.inject.spi.DeploymentException: No config value of type [class java.lang.String] exists for: greeting.message`."
msgstr "このプロパティーに値を指定しないと、アプリケーションの起動は `javax.enterprise.inject.spi.DeploymentException: No config value of type [class java.lang.String] exists for: greeting.message` エラーで失敗します。"

#. type: Plain text
#: upstream/_guides/config.adoc:117
msgid "The default value is injected if the configuration does not provide a value for `greeting.suffix`."
msgstr "デフォルト値は、設定が `greeting.suffix` の値を提供していない場合に注入されます。"

#. type: Plain text
#: upstream/_guides/config.adoc:118
msgid "This property is optional - an empty `Optional` is injected if the configuration does not provide a value for `greeting.name`."
msgstr "このプロパティーはオプションです - 設定が `greeting.name` の値を提供していない場合は、空の `Optional` が注入されます。"

#. type: Plain text
#: upstream/_guides/config.adoc:120
msgid "Now, modify the `hello` method to use the injected properties:"
msgstr "ここで、 `hello` メソッドを修正して、注入されたプロパティーを使用します:"

#. type: delimited block -
#: upstream/_guides/config.adoc:128
#, no-wrap
msgid ""
"@GET\n"
"@Produces(MediaType.TEXT_PLAIN)\n"
"public String hello() {\n"
"    return message + \" \" + name.orElse(\"world\") + suffix;\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/config.adoc:132
msgid "Use `@io.smallrye.config.ConfigMapping` annotation to group multiple configurations in a single interface. Please, check the https://smallrye.io/docs/smallrye-config/main/mapping/mapping.html[Config Mappings] documentation."
msgstr "`@io.smallrye.config.ConfigMapping` アノテーションを使用して、複数の設定を1つのインターフェイスにまとめます。 link:https://smallrye.io/docs/smallrye-config/main/mapping/mapping.html[Config Mappings]のドキュメントを参照してください。"

#. type: Title ==
#: upstream/_guides/config.adoc:133
#, no-wrap
msgid "Update the test"
msgstr "テストの更新"

#. type: Plain text
#: upstream/_guides/config.adoc:137
msgid "We also need to update the functional test to reflect the changes made to the endpoint.  Create the `src/test/java/org/acme/config/GreetingResourceTest.java` file with the following content:"
msgstr "また、エンドポイントに加えられた変更を反映させるために、機能テストを更新する必要があります。 `src/test/java/org/acme/config/GreetingResourceTest.java` ファイルを以下の内容で作成します:"

#. type: delimited block -
#: upstream/_guides/config.adoc:144
#, no-wrap
msgid ""
"import io.quarkus.test.junit.QuarkusTest;\n"
"import org.junit.jupiter.api.Test;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config.adoc:147
#, no-wrap
msgid ""
"import static io.restassured.RestAssured.given;\n"
"import static org.hamcrest.CoreMatchers.is;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config.adoc:150
#, no-wrap
msgid ""
"@QuarkusTest\n"
"public class GreetingResourceTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config.adoc:159
#, no-wrap
msgid ""
"    @Test\n"
"    public void testHelloEndpoint() {\n"
"        given()\n"
"          .when().get(\"/greeting\")\n"
"          .then()\n"
"             .statusCode(200)\n"
"             .body(is(\"hello quarkus!\")); // Modified line\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config.adoc:161
#, no-wrap
msgid "}\n"
msgstr "}\n"

#. type: Title ==
#: upstream/_guides/config.adoc:163
#, no-wrap
msgid "Package and run the application"
msgstr "アプリケーションをパッケージ化して実行する"

#. type: Plain text
#: upstream/_guides/config.adoc:166
msgid "Run the application with:"
msgstr "アプリケーションを実行します:"

#. type: Plain text
#: upstream/_guides/config.adoc:170
msgid "Open your browser to http://localhost:8080/greeting."
msgstr "ブラウザで http://localhost:8080/greeting を開きます。"

#. type: Plain text
#: upstream/_guides/config.adoc:173
msgid "Changing the configuration file is immediately reflected.  You can add the `greeting.suffix`, remove the other properties, change the values, etc."
msgstr "設定ファイルの変更はすぐに反映されます。 `greeting.suffix` の追加、他のプロパティーの削除、値の変更などが可能です。"

#. type: Plain text
#: upstream/_guides/config.adoc:175
msgid "As usual, the application can be packaged using:"
msgstr "いつものように、アプリケーションは以下の方法でパッケージ化されます。"

#. type: Plain text
#: upstream/_guides/config.adoc:179
msgid "and executed using `java -jar target/quarkus-app/quarkus-run.jar`."
msgstr "そして次のコマンドで実行できます。 `java -jar target/quarkus-app/quarkus-run.jar`."

#. type: Plain text
#: upstream/_guides/config.adoc:181
msgid "You can also generate the native executable with:"
msgstr "次のようにネイティブ実行可能ファイルを生成することもできます。"

#. type: Title ==
#: upstream/_guides/config.adoc:184
#, no-wrap
msgid "Programmatically access the configuration"
msgstr "設定にプログラムでアクセス"

#. type: Plain text
#: upstream/_guides/config.adoc:188
msgid "The `org.eclipse.microprofile.config.ConfigProvider.getConfig()` API allows to access the Config API programmatically.  This API is mostly useful in situations where CDI injection is not available."
msgstr "`org.eclipse.microprofile.config.ConfigProvider.getConfig()` APIを使用すると、Config APIにプログラムでアクセスすることができます。このAPIは、CDIインジェクションが利用できない状況で主に役立ちます。"

#. type: delimited block -
#: upstream/_guides/config.adoc:193
#, no-wrap
msgid ""
"String databaseName = ConfigProvider.getConfig().getValue(\"database.name\", String.class);\n"
"Optional<String> maybeDatabaseName = ConfigProvider.getConfig().getOptionalValue(\"database.name\", String.class);\n"
msgstr ""
"String databaseName = ConfigProvider.getConfig().getValue(\"database.name\", String.class);\n"
"Optional<String> maybeDatabaseName = ConfigProvider.getConfig().getOptionalValue(\"database.name\", String.class);\n"

#. type: Title ==
#: upstream/_guides/config.adoc:195
#, no-wrap
msgid "Configuring Quarkus"
msgstr "Quarkus の設定"

#. type: Plain text
#: upstream/_guides/config.adoc:200
msgid "Quarkus itself is configured via the same mechanism as your application. Quarkus reserves the `quarkus.` namespace for its own configuration. For example to configure the HTTP server port you can set `quarkus.http.port` in `application.properties`. All the Quarkus configuration properties are xref:all-config.adoc[documented and searchable]."
msgstr "Quarkus自体は、アプリケーションと同じメカニズムで設定されます。Quarkusは、自身の設定のために `quarkus.` 名前空間を予約します。例えば、HTTPサーバーポートを設定するには、 `quarkus.http.port` を `application.properties` に設定します。Quarkusのすべての設定プロパティは link:all-config.html[文書化されており、検索可能]です。"

#. type: delimited block =
#: upstream/_guides/config.adoc:205
msgid "As mentioned above, properties prefixed with `quarkus.` are effectively reserved for configuring Quarkus itself and its extensions. Therefore, the `quarkus.` prefix should **never** be used for application specific properties."
msgstr "上述したように、 `quarkus.` で始まるプロパティーは、Quarkus 自体を設定するために実質的に予約されているため、アプリケーション固有のプロパティーのプレフィックスとして `quarkus.` を使用してはいけ *ません* 。"

#. type: Title ===
#: upstream/_guides/config.adoc:207
#, no-wrap
msgid "Build Time configuration"
msgstr "ビルド時設定"

#. type: Plain text
#: upstream/_guides/config.adoc:212
msgid "Some Quarkus configurations only take effect during build time, meaning is not possible to change them at runtime. These configurations are still available at runtime but as read-only and have no effect in Quarkus behaviour. A change to any of these configurations requires a rebuild of the application itself to reflect changes of such properties."
msgstr "Quarkusの設定の中には、ビルド時にのみ有効になるものがあり、ランタイムに変更することはできません。これらの設定はランタイムでも利用可能ですが、読み取り専用であり、Quarkusの動作には影響しません。これらの設定を変更するには、そのようなプロパティの変更を反映させる場合、アプリケーション自体を再ビルドする必要があります。"

#. type: Plain text
#: upstream/_guides/config.adoc:214
msgid "The properties fixed at build time are marked with a lock icon (icon:lock[]) in the xref:all-config.adoc[list of all configuration options]."
msgstr "ビルド時に固定されたプロパティーは、 link:all-config[すべての設定オプションのリスト] でロックアイコン (icon:lock[]) でマークされます。"

#. type: Plain text
#: upstream/_guides/config.adoc:218
msgid "However, some extensions do define properties _overridable at runtime_. A simple example is the database URL, username and password which is only known specifically in your target environment, so they can be set and influence the application behaviour at runtime."
msgstr "しかし、いくつかのエクステンションは _実行時にオーバーライド可能な_ プロパティーを定義しています。定型的な例としては、データベースの URL、ユーザー名とパスワードがあります。これはターゲット環境によって定まるものであり、実行時にセットされ、アプリケーションの動作に影響を与えるものです。"

#. type: Title ==
#: upstream/_guides/config.adoc:220
#, no-wrap
msgid "Additional Information"
msgstr "追加情報"

#. type: Plain text
#: upstream/_guides/config.adoc:223
msgid "xref:config-reference.adoc[Configuration Reference Guide]"
msgstr "xref:config-reference.adoc[設定リファレンスガイド]"

#. type: Plain text
#: upstream/_guides/config.adoc:224
msgid "xref:config-yaml.adoc[YAML ConfigSource Extension]"
msgstr "link:config-yaml.html[YAML ConfigSource エクステンション]"

#. type: Plain text
#: upstream/_guides/config.adoc:225
msgid "xref:vault.adoc[HashiCorp Vault ConfigSource Extension]"
msgstr "link:vault.html[HashiCorp Vault ConfigSource エクステンション]"

#. type: Plain text
#: upstream/_guides/config.adoc:226
msgid "xref:consul-config.adoc[Consul ConfigSource Extension]"
msgstr "link:consul-config.html[Consul ConfigSource エクステンション]"

#. type: Plain text
#: upstream/_guides/config.adoc:227
msgid "xref:spring-cloud-config-client.adoc[Spring Cloud ConfigSource Extension]"
msgstr "link:spring-cloud-config-client.html[Spring Cloud ConfigSource エクステンション]"

#. type: Plain text
#: upstream/_guides/config.adoc:228
msgid "xref:config-mappings.adoc[Mapping configuration to objects]"
msgstr "link:config-mappings.html[設定をオブジェクトにマッピング]"

#. type: Plain text
#: upstream/_guides/config.adoc:229
msgid "xref:config-extending-support.adoc[Extending configuration support]"
msgstr "link:config-extending-support.html[設定サポートの拡張]"

#. type: Plain text
#: upstream/_guides/config.adoc:231
msgid "Quarkus relies on link:https://github.com/smallrye/smallrye-config/[SmallRye Config] and inherits its features:"
msgstr "Quarkusアプリケーションは link:https://github.com/smallrye/smallrye-config/[SmallRye Config] に依存し、その機能を継承します:"

#. type: Plain text
#: upstream/_guides/config.adoc:233
msgid "Additional ``ConfigSource``s"
msgstr "追加 ``ConfigSource``"

#. type: Plain text
#: upstream/_guides/config.adoc:234
msgid "Additional ``Converter``s"
msgstr "追加 ``Converter``"

#. type: Plain text
#: upstream/_guides/config.adoc:235
msgid "Indexed properties"
msgstr "インデックスされたプロパティ"

#. type: Plain text
#: upstream/_guides/config.adoc:236
msgid "Parent profile"
msgstr "親プロファイル"

#. type: Plain text
#: upstream/_guides/config.adoc:237
msgid "Interceptors for configuration value resolution"
msgstr "設定値解決のためのインターセプタ―"

#. type: Plain text
#: upstream/_guides/config.adoc:238
msgid "Relocate configuration properties"
msgstr "設定プロパティーの移動"

#. type: Plain text
#: upstream/_guides/config.adoc:239
msgid "Fallback configuration properties"
msgstr "設定プロパティーのフォールバック"

#. type: Plain text
#: upstream/_guides/config.adoc:240
msgid "Logging"
msgstr "ロギング"

#. type: Plain text
#: upstream/_guides/config.adoc:241
msgid "Hide secrets"
msgstr "シークレットを隠す"

#. type: Plain text
#: upstream/_guides/config.adoc:243
msgid "For more information, please check the link:https://smallrye.io/docs/smallrye-config/index.html[SmallRye Config documentation]."
msgstr "詳細は、link:https://smallrye.io/docs/smallrye-config/index.html[SmallRye Config のドキュメント] を参照してください。"

#~ msgid "To complete this guide, you need:"
#~ msgstr "このガイドを完成させるには、以下が必要です:"

#~ msgid "between 5 and 10 minutes"
#~ msgstr "5分から10分"

#~ msgid "an IDE"
#~ msgstr "IDE"

#~ msgid "JDK 11+ installed with `JAVA_HOME` configured appropriately"
#~ msgstr "JDK 11+ がインストールされ、 `JAVA_HOME` が適切に設定されていること"

#~ msgid "Apache Maven {maven-version}"
#~ msgstr "Apache Maven {maven-version}"

#~ msgid "an `org.acme.config.GreetingResource` resource"
#~ msgstr "`org.acme.config.GreetingResource` リソース"

#~ msgid "an associated test"
#~ msgstr "関連するユニットテスト"

#~ msgid "As usual, the application can be packaged using `./mvnw clean package` and executed using the `target/quarkus-app/quarkus-run.jar` file.  You can also generate the native executable with `./mvnw clean package -Pnative`."
#~ msgstr "いつものように、 `./mvnw clean package` を使ってアプリケーションをパッケージ化し、 `target/quarkus-app/quarkus-run.jar` ファイルを使って実行することができます。また、 `./mvnw clean package -Pnative` でネイティブ実行可能ファイルを生成することも出来ます。"

#~ msgid "As an alternative to injecting multiple related configuration values, you can also use the `@io.quarkus.arc.config.ConfigProperties` annotation to group these properties together.  See the <<config-reference.adoc#using_configproperties,Configuration Reference Guide>> for more information."
#~ msgstr "複数の関連する設定値を注入する代わりに、 `@io.quarkus.arc.config.ConfigProperties` アノテーションを使用して、これらのプロパティーをまとめてグループ化することもできます。詳細については、『 link:config-reference.html#using_configproperties[設定リファレンスガイド] 』を参照してください。"

#~ msgid "You can also access the configuration programmatically.  It can be handy to achieve dynamic lookup, or retrieve configured values from classes that are neither CDI beans or JAX-RS resources."
#~ msgstr "プログラムで設定にアクセスすることもできます。動的なルックアップを実現したり、CDI Bean でも JAX-RS リソースでもないクラスから設定値を取得したりするのに便利です。"

#~ msgid "You can access the configuration programmatically using `org.eclipse.microprofile.config.ConfigProvider.getConfig()` such as in:"
#~ msgstr "以下のように `org.eclipse.microprofile.config.ConfigProvider.getConfig()` を使用してプログラムで設定にアクセスすることも出来ます:"

#~ msgid "Configuration Profiles"
#~ msgstr "設定プロファイル"

#~ msgid "Quarkus supports the notion of configuration profiles.  These allow you to have multiple configuration values in the same file and select between them via a profile name."
#~ msgstr "Quarkus では、設定プロファイルという概念をサポートしています。これにより、同じファイル内に複数の設定値を持つことができ、プロファイル名を使用してそれらの間で選択することができます。"

#~ msgid "The syntax for this is `%{profile}.config.key=value`. For example if I have the following:"
#~ msgstr "このための構文は `%{profile}.config.key=value` です。例えば、以下のような場合:"

#~ msgid ""
#~ "quarkus.http.port=9090\n"
#~ "%dev.quarkus.http.port=8181\n"
#~ msgstr ""
#~ "quarkus.http.port=9090\n"
#~ "%dev.quarkus.http.port=8181\n"

#~ msgid "Then the Quarkus HTTP port will be 9090, unless the `dev` profile is active, in which case it will be 8181."
#~ msgstr "個の場合、Quarkus の HTTP ポートは9090になります。 `dev` プロファイルがアクティブでない場合は8181になります。"

#~ msgid "See the <<config-reference.adoc#configuration_profiles,Configuration Reference Guide>> for more information about configuration profiles."
#~ msgstr "設定プロファイルの詳細については、 link:config-reference.html#configuration_profiles[設定リファレンスガイド] を参照してください。"

#~ msgid "In the previous examples using `quarkus.message` instead of `greeting.message` would result in unexpected behavior."
#~ msgstr "前の例では、 `greeting.message` の代わりに `quarkus.message` を使用すると、予期せぬ動作をすることになります。"

#~ msgid "Quarkus does much of its configuration and bootstrap at build time and some configuration properties are read and used during the build.  These properties are _fixed at build time_ and it's not possible to change them at runtime.  You always need to repackage your application in order to reflect changes of such properties."
#~ msgstr "Quarkus は、その設定とブートストラップの多くをビルド時に行い、いくつかの設定プロパティーはビルド中に読み込まれて使用されます。これらのプロパティーは _ビルド時に固定され_ ており、実行時に変更することはできません。このようなプロパティーの変更を反映させるには、常にアプリケーションをリパッケージする必要があります。"

#~ msgid "Environment variables"
#~ msgstr "環境変数"

#~ msgid "An environment file named `.env` placed in the current working directory"
#~ msgstr "現在の作業ディレクトリーに配置された `.env` という名前の環境ファイル"

#~ msgid "A configuration file placed in `$PWD/config/application.properties`"
#~ msgstr "`$PWD/config/application.properties` に配置された設定ファイル"

# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: \n"
"POT-Creation-Date: 2022-04-12 10:10+0000\n"
"PO-Revision-Date: 2021-04-03 10:24+0900\n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 2.4.2\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/spring-web.adoc:6
#, fuzzy, no-wrap
msgid "Quarkus Extension for Spring Web API"
msgstr "Spring Web APIのためのQuarkus Extension"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:11
#, fuzzy
msgid "While users are encouraged to use JAX-RS annotation for defining REST endpoints, Quarkus provides a compatibility layer for Spring Web in the form of the `spring-web` extension."
msgstr ""
"RESTエンドポイントの定義にはJAX-"
"RSアノテーションを使用することが推奨されていますが、Quarkusでは、 `spring-"
"web` エクステンションという形でSpring Web用の互換レイヤーを提供しています。"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:13
#, fuzzy
msgid "This guide explains how a Quarkus application can leverage the well known Spring Web annotations to define RESTful services."
msgstr ""
"このガイドでは、よく知られているSpring Webアノテーションを利用して、Quarkusア"
"プリケーションでRESTfulサービスを定義する方法を説明します。"

#. type: Title ==
#: upstream/_guides/spring-web.adoc:14
#, no-wrap
msgid "Prerequisites"
msgstr "前提条件"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:17
msgid "To complete this guide, you need:"
msgstr "このガイドを完成させるには、以下が必要です:"

#. type: Title ==
#: upstream/_guides/spring-web.adoc:20
#, no-wrap
msgid "Solution"
msgstr "ソリューション"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:24
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the completed example."
msgstr "次のセクションで紹介する手順に沿って、ステップを踏んでアプリを作成することをお勧めします。ただし、完成した例にそのまま進んでも構いません。"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:26
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Gitレポジトリをクローンするか `git clone {quickstarts-clone-url}` 、 {quickstarts-archive-url}[アーカイブ] をダウンロードします。"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:28
#, fuzzy
msgid "The solution is located in the `spring-web-quickstart` {quickstarts-tree-url}/spring-web-quickstart[directory]."
msgstr ""
"このソリューションは `spring-web-quickstart` {quickstarts-tree-url}/spring-"
"web-quickstart[directory]にあります。"

#. type: Title ==
#: upstream/_guides/spring-web.adoc:29
#, no-wrap
msgid "Creating the Maven project"
msgstr "Mavenプロジェクトの作成"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:32
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "まず、新しいプロジェクトが必要です。以下のコマンドで新規プロジェクトを作成します。"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:38
#, fuzzy
msgid "This command generates a project which imports the `spring-web` extension."
msgstr "このコマンドは、RESTエンドポイントを持つMavenプロジェクトを生成し、 `spring-"
"web` エクステンションをインポートします。"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:41
#, fuzzy
msgid "If you already have your Quarkus project configured, you can add the `spring-web` extension to your project by running the following command in your project base directory:"
msgstr ""
"すでにQuarkusプロジェクトが設定されている場合は、プロジェクトのベースディレク"
"トリで以下のコマンドを実行することで、 `spring-web` "
"エクステンションをプロジェクトに追加することができます。"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:46
#, fuzzy
msgid "This will add the following to your build file:"
msgstr "これにより、 `pom.xml` に以下が追加されます:"

#. type: Block title
#: upstream/_guides/spring-web.adoc:48
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_guides/spring-web.adoc:58
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-spring-web</artifactId>\n"
"</dependency>\n"
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-resteasy-reactive-jackson</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_guides/spring-web.adoc:61
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_guides/spring-web.adoc:65
#, no-wrap
msgid ""
"implementation(\"io.quarkus:quarkus-spring-web\")\n"
"implementation(\"io.quarkus:quarkus-resteasy-reactive-jackson\")\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/spring-web.adoc:70
#, fuzzy
msgid "`quarkus-spring-web` needs to be complemented with either `quarkus-resteasy-reactive-jackson` or `quarkus-resteasy-jackson` in order to work."
msgstr ""
"`quarkus-spring-web` は、 `quarkus-resteasy-jackson` または `quarkus-"
"resteasy-reactive-jackson` のいずれかで補完されないと動作しません。"

#. type: Title ==
#: upstream/_guides/spring-web.adoc:72
#, fuzzy, no-wrap
msgid "GreetingController"
msgstr "@RestController"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:75
#, fuzzy
msgid "Create the `src/main/java/org/acme/spring/web/GreetingController.java` file, a controller with the Spring Web annotations to define our REST endpoint, as follows:"
msgstr ""
"RESTエンドポイントを定義するためのSpring "
"Webアノテーションを持つコントローラである `src/main/java/org/acme/spring/web/"
"GreetingController.java` ファイルを以下のように作成します。"

#. type: delimited block -
#: upstream/_guides/spring-web.adoc:79 upstream/_guides/spring-web.adoc:102
#: upstream/_guides/spring-web.adoc:180
#, no-wrap
msgid "package org.acme.spring.web;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-web.adoc:83
#, no-wrap
msgid ""
"import org.springframework.web.bind.annotation.GetMapping;\n"
"import org.springframework.web.bind.annotation.RequestMapping;\n"
"import org.springframework.web.bind.annotation.RestController;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-web.adoc:87 upstream/_guides/spring-web.adoc:155
#, no-wrap
msgid ""
"@RestController\n"
"@RequestMapping(\"/greeting\")\n"
"public class GreetingController {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-web.adoc:93
#, no-wrap
msgid ""
"    @GetMapping\n"
"    public String hello() {\n"
"        return \"hello\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/spring-web.adoc:95
#, fuzzy, no-wrap
msgid "GreetingControllerTest"
msgstr "@RestController"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:98
#, fuzzy
msgid "Note that a test for the controller has been created as well:"
msgstr "なお、コントローラのテストも作成されています。"

#. type: delimited block -
#: upstream/_guides/spring-web.adoc:105 upstream/_guides/spring-web.adoc:183
#, no-wrap
msgid ""
"import io.quarkus.test.junit.QuarkusTest;\n"
"import org.junit.jupiter.api.Test;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-web.adoc:108 upstream/_guides/spring-web.adoc:186
#, no-wrap
msgid ""
"import static io.restassured.RestAssured.given;\n"
"import static org.hamcrest.CoreMatchers.is;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-web.adoc:111 upstream/_guides/spring-web.adoc:189
#, no-wrap
msgid ""
"@QuarkusTest\n"
"public class GreetingControllerTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-web.adoc:120
#, no-wrap
msgid ""
"    @Test\n"
"    public void testHelloEndpoint() {\n"
"        given()\n"
"          .when().get(\"/greeting\")\n"
"          .then()\n"
"             .statusCode(200)\n"
"             .body(is(\"hello\"));\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-web.adoc:122 upstream/_guides/spring-web.adoc:200
#, no-wrap
msgid "}\n"
msgstr "}\n"

#. type: Title ==
#: upstream/_guides/spring-web.adoc:124
#, no-wrap
msgid "Package and run the application"
msgstr "アプリケーションをパッケージ化して実行する"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:127
#, fuzzy
msgid "Run the application with:"
msgstr "アプリケーションをネイティブ実行可能ファイルとして実行する"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:131
#, fuzzy
msgid "Open your browser to http://localhost:8080/greeting."
msgstr ""
"アプリケーションを実行するには、次の手順を実行します: `./mvnw compile "
"quarkus:dev` 。ブラウザで http://localhost:8080/greeting を開きます。"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:133
#, fuzzy
msgid "The result should be: `{\"message\": \"hello\"}`."
msgstr "結果は次のようになります： `{\"message\": \"hello\"}`."

#. type: Title ==
#: upstream/_guides/spring-web.adoc:134
#, no-wrap
msgid "Run the application as a native executable"
msgstr "アプリケーションをネイティブ実行可能ファイルとして実行する"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:137
#, fuzzy
msgid "You can generate the native executable with:"
msgstr "アプリケーションをネイティブ実行可能ファイルとして実行する"

#. type: Title ==
#: upstream/_guides/spring-web.adoc:140
#, fuzzy, no-wrap
msgid "Going further with an endpoint returning JSON"
msgstr "JSONを返すエンドポイントでさらに進化"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:144
#, fuzzy
msgid "The `GreetingController` above was an example of a very simple endpoint. In many cases however it is required to return JSON content.  The following example illustrates how that could be achieved using a Spring RestController:"
msgstr ""
"上の `GreetingController` は、非常にシンプルなエンドポイントの例でした。しか"
"し、多くの場合、JSONコンテンツを返さなければなりません。次の例では、Spring "
"RestControllerを使用して、これを実現しています。"

#. type: delimited block -
#: upstream/_guides/spring-web.adoc:151
#, no-wrap
msgid ""
"import org.springframework.web.bind.annotation.GetMapping;\n"
"import org.springframework.web.bind.annotation.PathVariable;\n"
"import org.springframework.web.bind.annotation.RequestMapping;\n"
"import org.springframework.web.bind.annotation.RestController;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-web.adoc:160
#, no-wrap
msgid ""
"    @GetMapping(\"/{name}\")\n"
"    public Greeting hello(@PathVariable(name = \"name\") String name) {\n"
"        return new Greeting(\"hello \" + name);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-web.adoc:163
#, no-wrap
msgid ""
"    public static class Greeting {\n"
"        private final String message;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-web.adoc:167
#, no-wrap
msgid ""
"        public Greeting(String message) {\n"
"            this.message = message;\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-web.adoc:173
#, no-wrap
msgid ""
"        public String getMessage(){\n"
"            return message;\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/spring-web.adoc:176
#, fuzzy
msgid "The corresponding test could look like:"
msgstr "対応するテストは次のようになります。"

#. type: delimited block -
#: upstream/_guides/spring-web.adoc:198
#, no-wrap
msgid ""
"    @Test\n"
"    public void testHelloEndpoint() {\n"
"        given()\n"
"          .when().get(\"/greeting/quarkus\")\n"
"          .then()\n"
"            .statusCode(200)\n"
"            .body(\"message\", is(\"hello quarkus\"));\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/spring-web.adoc:203
#, fuzzy
msgid "It should be noted that when using the Spring Web support in Quarkus, link:https://github.com/FasterXML/jackson[Jackson] is automatically added to the classpath and properly setup."
msgstr ""
"なお、QuarkusでSpring Webサポートを使用する場合、 link:https://github.com/"
"FasterXML/"
"jackson[Jackson]は自動的にクラスパスに追加され、適切に設定されます。"

#. type: Title ==
#: upstream/_guides/spring-web.adoc:204
#, fuzzy, no-wrap
msgid "Adding OpenAPI and Swagger-UI"
msgstr "OpenAPIとSwagger-UIの追加"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:207
#, fuzzy
msgid "You can add support for link:https://www.openapis.org/[OpenAPI] and link:https://swagger.io/tools/swagger-ui/[Swagger-UI] by using the `quarkus-smallrye-openapi` extension."
msgstr ""
"`quarkus-smallrye-openapi` エクステンションを使うことで、 link:https://www."
"openapis.org/[OpenAPI]と link:https://swagger.io/tools/swagger-ui/[Swagger-"
"UI]のサポートを追加することができます。"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:209
msgid "Add the extension by running this command:"
msgstr "このコマンドを実行してエクステンションを追加"

#. type: delimited block -
#: upstream/_guides/spring-web.adoc:213
#, no-wrap
msgid "./mvnw quarkus:add-extension -Dextensions=\"io.quarkus:quarkus-smallrye-openapi\"\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/spring-web.adoc:216
msgid "This will add the following to your `pom.xml`:"
msgstr "これにより、 `pom.xml` に以下が追加されます:"

#. type: delimited block -
#: upstream/_guides/spring-web.adoc:223
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-smallrye-openapi</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/spring-web.adoc:226
#, fuzzy
msgid "This is enough to generate a basic OpenAPI schema document from your REST Endpoints:"
msgstr "これは、RESTエンドポイントから基本的なOpenAPIスキーマドキュメントを生成するの"
"に十分です。"

#. type: delimited block -
#: upstream/_guides/spring-web.adoc:230
#, no-wrap
msgid "curl http://localhost:8080/q/openapi\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/spring-web.adoc:233
#, fuzzy
msgid "You will see the generated OpenAPI schema document:"
msgstr "生成されたOpenAPIスキーマのドキュメントが表示されます。"

#. type: delimited block -
#: upstream/_guides/spring-web.adoc:236 upstream/_guides/spring-web.adoc:319
#, no-wrap
msgid "---\n"
msgstr "---\n"

#. type: delimited block -
#: upstream/_guides/spring-web.adoc:273
#, no-wrap
msgid ""
"openapi: 3.0.1\n"
"info:\n"
"  title: Generated API\n"
"  version: \"1.0\"\n"
"paths:\n"
"  /greeting:\n"
"    get:\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            '*/*':\n"
"              schema:\n"
"                type: string\n"
"  /greeting/{name}:\n"
"    get:\n"
"      parameters:\n"
"      - name: name\n"
"        in: path\n"
"        required: true\n"
"        schema:\n"
"          type: string\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            'application/json':\n"
"              schema:\n"
"                $ref: '#/components/schemas/Greeting'\n"
"components:\n"
"  schemas:\n"
"    Greeting:\n"
"      type: object\n"
"      properties:\n"
"        message:\n"
"          type: string\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/spring-web.adoc:276
#, fuzzy
msgid "Also see xref:openapi-swaggerui.adoc[the OpenAPI Guide]"
msgstr "link:openapi-swaggerui.html[OpenAPIガイド]もご覧ください。"

#. type: Title ===
#: upstream/_guides/spring-web.adoc:277
#, fuzzy, no-wrap
msgid "Adding MicroProfile OpenAPI Annotations"
msgstr "MicroProfile OpenAPIアノテーションの追加"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:281
#, fuzzy
msgid "You can use link:https://github.com/eclipse/microprofile-open-api[MicroProfile OpenAPI] to better document your schema, example, adding the following to the class level of the `GreetingController`:"
msgstr ""
"link:https://github.com/eclipse/microprofile-open-api[MicroProfile "
"OpenAPI]を使用して、スキーマをより良く文書化することができます。例えば、 "
"`GreetingController` のクラスレベルに以下を追加します。"

#. type: delimited block -
#: upstream/_guides/spring-web.adoc:296
#, no-wrap
msgid ""
"@OpenAPIDefinition(\n"
"    info = @Info(\n"
"        title=\"Greeting API\",\n"
"        version = \"1.0.1\",\n"
"        contact = @Contact(\n"
"            name = \"Greeting API Support\",\n"
"            url = \"http://exampleurl.com/contact\",\n"
"            email = \"techsupport@example.com\"),\n"
"        license = @License(\n"
"            name = \"Apache 2.0\",\n"
"            url = \"https://www.apache.org/licenses/LICENSE-2.0.html\"))\n"
")\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/spring-web.adoc:299
#, fuzzy
msgid "And describe your endpoints like this:"
msgstr "そして、エンドポイントをこのように記述します。"

#. type: delimited block -
#: upstream/_guides/spring-web.adoc:307
#, no-wrap
msgid ""
"@Tag(name = \"Hello\", description = \"Just say hello\")\n"
"@GetMapping(produces=MediaType.TEXT_PLAIN_VALUE)\n"
"public String hello() {\n"
"    return \"hello\";\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-web.adoc:313
#, no-wrap
msgid ""
"@GetMapping(value = \"/{name}\", produces=MediaType.APPLICATION_JSON_VALUE)\n"
"@Tag(name = \"Hello to someone\", description = \"Just say hello to someone\")\n"
"public Greeting hello(@PathVariable(name = \"name\") String name) {\n"
"    return new Greeting(\"hello \" + name);\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/spring-web.adoc:316
#, fuzzy
msgid "will generate this OpenAPI schema:"
msgstr "は、このOpenAPIスキーマを生成します。"

#. type: delimited block -
#: upstream/_guides/spring-web.adoc:372
#, no-wrap
msgid ""
"openapi: 3.0.1\n"
"info:\n"
"  title: Greeting API\n"
"  contact:\n"
"    name: Greeting API Support\n"
"    url: http://exampleurl.com/contact\n"
"    email: techsupport@example.com\n"
"  license:\n"
"    name: Apache 2.0\n"
"    url: https://www.apache.org/licenses/LICENSE-2.0.html\n"
"  version: 1.0.1\n"
"tags:\n"
"- name: Hello\n"
"  description: Just say hello\n"
"- name: Hello to someone\n"
"  description: Just say hello to someone\n"
"paths:\n"
"  /greeting:\n"
"    get:\n"
"      tags:\n"
"      - Hello\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            '*/*':\n"
"              schema:\n"
"                type: string\n"
"  /greeting/{name}:\n"
"    get:\n"
"      tags:\n"
"      - Hello to someone\n"
"      parameters:\n"
"      - name: name\n"
"        in: path\n"
"        required: true\n"
"        schema:\n"
"          type: string\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            '*/*':\n"
"              schema:\n"
"                $ref: '#/components/schemas/Greeting'\n"
"components:\n"
"  schemas:\n"
"    Greeting:\n"
"      type: object\n"
"      properties:\n"
"        message:\n"
"          type: string\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/spring-web.adoc:374
#, fuzzy, no-wrap
msgid "Using Swagger UI"
msgstr "Swagger UIの使用"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:378
#, fuzzy
msgid "Swagger UI is included by default when running in `Dev` or `Test` mode, and can optionally added to `Prod` mode.  See xref:openapi-swaggerui.adoc#use-swagger-ui-for-development[the Swagger UI] Guide for more details."
msgstr ""
"Swagger UIは、 `Dev` または `Test` "
"モードで実行するとデフォルトで含まれており、オプションで `Prod` "
"モードに追加することができます。詳細は「 link:openapi-swaggerui.html#use-"
"swagger-ui-for-development[Swagger UI]Guide」をご覧ください。"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:380
msgid "Navigate to link:http://localhost:8080/q/swagger-ui/[localhost:8080/q/swagger-ui/] and you will see the Swagger UI screen:"
msgstr "link:http://localhost:8080/q/swagger-ui/[localhost:8080/q/swagger-ui/] に移動すると、Swagger UIの画面が表示されます。"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:382
#, fuzzy
msgid "image:spring-web-guide-screenshot01.png[alt=Swagger UI]"
msgstr "image:spring-web-guide-screenshot01.png[alt=Swagger UI]"

#. type: Title ==
#: upstream/_guides/spring-web.adoc:383
#, no-wrap
msgid "Supported Spring Web functionalities"
msgstr "サポートされているSpring Webの機能"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:387
#, fuzzy
msgid "Quarkus currently supports a subset of the functionalities that Spring Web provides. More specifically Quarkus supports the REST related features of Spring Web (think of `@RestController` instead of `@Controller`)."
msgstr ""
"Quarkusは現在、Spring "
"Webが提供する機能のサブセットをサポートしています。具体的には、"
"QuarkusはSpring WebのREST関連の機能をサポートしています（ `@Controller` "
"の代わりに `@RestController` を考えてみてください）。"

#. type: Title ===
#: upstream/_guides/spring-web.adoc:388
#, no-wrap
msgid "Annotations"
msgstr "アノテーション"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:391
msgid "The table below summarizes the supported annotations:"
msgstr "下の表は、サポートされているアノテーションをまとめたものです。"

#. type: Block title
#: upstream/_guides/spring-web.adoc:392
#, fuzzy, no-wrap
msgid "Supported Spring Web annotation"
msgstr "サポートされているSpring Webの機能"

#. type: Table
#: upstream/_guides/spring-web.adoc:394
#, no-wrap
msgid "Nam"
msgstr "Nam"

#. type: Table
#: upstream/_guides/spring-web.adoc:396 upstream/_guides/spring-web.adoc:478
#, no-wrap
msgid "Comments"
msgstr "コメント"

#. type: Table
#: upstream/_guides/spring-web.adoc:397 upstream/_guides/spring-web.adoc:479
#, no-wrap
msgid "@RestController"
msgstr "@RestController"

#. type: Table
#: upstream/_guides/spring-web.adoc:400
#, no-wrap
msgid "@RequestMapping"
msgstr "@RequestMapping"

#. type: Table
#: upstream/_guides/spring-web.adoc:402
#, no-wrap
msgid "@GetMapping"
msgstr "@GetMapping"

#. type: Table
#: upstream/_guides/spring-web.adoc:404
#, no-wrap
msgid "@PostMapping"
msgstr "@PostMapping"

#. type: Table
#: upstream/_guides/spring-web.adoc:406
#, no-wrap
msgid "@PutMapping"
msgstr "@PutMapping"

#. type: Table
#: upstream/_guides/spring-web.adoc:408
#, no-wrap
msgid "@DeleteMapping"
msgstr "@DeleteMapping"

#. type: Table
#: upstream/_guides/spring-web.adoc:410
#, no-wrap
msgid "@PatchMapping"
msgstr "@PatchMapping"

#. type: Table
#: upstream/_guides/spring-web.adoc:412 upstream/_guides/spring-web.adoc:495
#, no-wrap
msgid "@RequestParam"
msgstr "@RequestParam"

#. type: Table
#: upstream/_guides/spring-web.adoc:414
#, no-wrap
msgid "@RequestHeader"
msgstr "@RequestHeader"

#. type: Table
#: upstream/_guides/spring-web.adoc:416
#, no-wrap
msgid "@MatrixVariable"
msgstr "@MatrixVariable"

#. type: Table
#: upstream/_guides/spring-web.adoc:418 upstream/_guides/spring-web.adoc:499
#, no-wrap
msgid "@PathVariable"
msgstr "@PathVariable"

#. type: Table
#: upstream/_guides/spring-web.adoc:420
#, no-wrap
msgid "@CookieValue"
msgstr "@CookieValue"

#. type: Table
#: upstream/_guides/spring-web.adoc:422 upstream/_guides/spring-web.adoc:503
#, no-wrap
msgid "@RequestBody"
msgstr "@RequestBody"

#. type: Table
#: upstream/_guides/spring-web.adoc:424 upstream/_guides/spring-web.adoc:511
#, no-wrap
msgid "@ResponseStatus"
msgstr "@ResponseStatus"

#. type: Table
#: upstream/_guides/spring-web.adoc:426 upstream/_guides/spring-web.adoc:515
#, no-wrap
msgid "@ExceptionHandler"
msgstr "@ExceptionHandler"

#. type: Table
#: upstream/_guides/spring-web.adoc:427
#, fuzzy, no-wrap
msgid "Can only be used in a @RestControllerAdvice class, not on a per-controller basis"
msgstr "コントローラごとではなく、@RestControllerAdviceクラスでのみ使用可能です。"

#. type: Table
#: upstream/_guides/spring-web.adoc:428 upstream/_guides/spring-web.adoc:507
#, fuzzy, no-wrap
msgid "@RestControllerAdvice"
msgstr "@RestController"

#. type: Table
#: upstream/_guides/spring-web.adoc:429
#, fuzzy, no-wrap
msgid "Only the @ExceptionHandler capability is supported"
msgstr "サポートされているのは@ExceptionHandlerケイパビリティのみです。"

#. type: Title ===
#: upstream/_guides/spring-web.adoc:431
#, no-wrap
msgid "Controller method return types"
msgstr "コントローラメソッドの戻り値の型"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:434 upstream/_guides/spring-web.adoc:449
msgid "The following method return types are supported:"
msgstr "以下のメソッドの戻り値の型がサポートされています。"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:436
msgid "Primitive types"
msgstr "プリミティブ型"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:437
msgid "String (which will be used as a literal, no Spring MVC view support is provided)"
msgstr "文字列 (リテラルとして使用されます。Spring MVC ビューのサポートはありません)"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:438
msgid "POJO classes which will be serialized via JSON"
msgstr "JSON 経由でシリアライズされる POJO クラス"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:439 upstream/_guides/spring-web.adoc:451
msgid "`org.springframework.http.ResponseEntity`"
msgstr "`org.springframework.http.ResponseEntity`"

#. type: Title ===
#: upstream/_guides/spring-web.adoc:440
#, fuzzy, no-wrap
msgid "Controller method parameter types"
msgstr "コントローラメソッドの戻り値の型"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:445
#, fuzzy
msgid "In addition to the method parameters that can be annotated with the appropriate Spring Web annotations from the previous table, `javax.servlet.http.HttpServletRequest` and `javax.servlet.http.HttpServletResponse` are also supported.  For this to function however, users need to add the `quarkus-undertow` dependency."
msgstr ""
"前述の表の適切なSpring "
"Webアノテーションでアノテーションできるメソッドパラメータに加えて、 `javax."
"servlet.http.HttpServletRequest` と `javax.servlet.http.HttpServletResponse` "
"もサポートされています。ただし、これが機能するためには、ユーザーは `quarkus-"
"undertow` の依存関係を追加する必要があります。"

#. type: Title ===
#: upstream/_guides/spring-web.adoc:446
#, fuzzy, no-wrap
msgid "Exception handler method return types"
msgstr "コントローラメソッドの戻り値の型"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:452
msgid "`java.util.Map`"
msgstr "`java.util.Map`"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:454
#, fuzzy
msgid "Other return types mentioned in the Spring `https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/bind/annotation/ExceptionHandler.html[ExceptionHandler javadoc]` are not supported."
msgstr ""
"Springに記載されているその他のリターンタイプは `<a href=\"https://docs.spring"
".io/spring-framework/docs/current/javadoc-api/org/springframework/web/bind/"
"annotation/ExceptionHandler.html\">ExceptionHandler "
"javadoc</a>`はサポートされていません。"

#. type: Title ===
#: upstream/_guides/spring-web.adoc:455
#, fuzzy, no-wrap
msgid "Exception handler method parameter types"
msgstr "コントローラメソッドの戻り値の型"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:458
#, fuzzy
msgid "The following parameter types are supported, in arbitrary order:"
msgstr "以下のメソッドの戻り値の型がサポートされています。"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:460
#, fuzzy
msgid "An exception argument: declared as a general `Exception` or as a more specific exception. This also serves as a mapping hint if the annotation itself does not narrow the exception types through its `value()`."
msgstr ""
"例外の引数：一般的な `Exception` "
"として、またはより具体的な例外として宣言されています。これは、"
"アノテーション自体が `value()` "
"を通して例外タイプを狭めていない場合、マッピングのヒントにもなります。"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:461
#, fuzzy
msgid "Request and/or response objects (typically from the Servlet API). You may choose any specific request/response type, e.g. `ServletRequest` / `HttpServletRequest`. To use Servlet API, the `quarkus-undertow` dependency needs to be added."
msgstr ""
"リクエストおよび／またはレスポンスオブジェクト（通常、サーブレットAPIからのも"
"の）。 `ServletRequest` / `HttpServletRequest` "
"のように、特定のリクエスト/レスポンスタイプを選択することができます。Servlet "
"APIを使用するには、 `quarkus-undertow` の依存関係を追加する必要があります。"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:463
#, fuzzy
msgid "Other parameter types mentioned in the Spring `https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/bind/annotation/ExceptionHandler.html[ExceptionHandler javadoc]` are not supported."
msgstr ""
"Springに記載されているその他のパラメータタイプは `<a href=\"https://docs."
"spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/"
"bind/annotation/ExceptionHandler.html\">ExceptionHandler javadoc</a>`に記載さ"
"れているその他のパラメータタイプはサポートされていません。"

#. type: Title ==
#: upstream/_guides/spring-web.adoc:464
#, fuzzy, no-wrap
msgid "Important Technical Note"
msgstr "重要なテクニカルノート"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:470
#, fuzzy
msgid "Please note that the Spring support in Quarkus does not start a Spring Application Context nor are any Spring infrastructure classes run.  Spring classes and annotations are only used for reading metadata and / or are used as user code method return types or parameter types.  What that means for end users, is that adding arbitrary Spring libraries will not have any effect. Moreover Spring infrastructure classes (like `org.springframework.beans.factory.config.BeanPostProcessor` for example) will not be executed."
msgstr ""
"QuarkusのSpringサポートでは、Spring Application Contextは起動せず、Springイン"
"フラストラクチャクラスも実行されないことに注意してください。Springのクラスや"
"アノテーションは、メタデータを読み込んだり、ユーザーコードのメソッドの戻り値"
"の型やパラメータの型として使用されるだけです。エンドユーザーにとっての意味は"
"、任意のSpringライブラリを追加しても何の効果もないということです。さらに、Spr"
"ingのインフラクラス（例えば `org.springframework.beans.factory.config."
"BeanPostProcessor` ）は実行されません。"

#. type: Title ==
#: upstream/_guides/spring-web.adoc:471
#, no-wrap
msgid "Conversion Table"
msgstr "変換テーブル"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:474
#, fuzzy
msgid "The following table shows how Spring Web annotations can be converted to JAX-RS annotations."
msgstr "以下の表は、Spring WebアノテーションをJAX-"
"RSアノテーションに変換する方法を示しています。"

#. type: Table
#: upstream/_guides/spring-web.adoc:476
#, no-wrap
msgid "Spring"
msgstr "Spring"

#. type: Table
#: upstream/_guides/spring-web.adoc:476
#, no-wrap
msgid "JAX-RS"
msgstr "JAX-RS"

#. type: Table
#: upstream/_guides/spring-web.adoc:482
#, fuzzy, no-wrap
msgid "There is no equivalent in JAX-RS. Annotating a class with @Path suffices"
msgstr "JAX-RSにはこれに相当するものはありません。クラスのアノテーションは@Pathで十分"
"です。"

#. type: Table
#: upstream/_guides/spring-web.adoc:483
#, no-wrap
msgid "@RequestMapping(path=\"/api\")"
msgstr "@RequestMapping(path=\"/api\")"

#. type: Table
#: upstream/_guides/spring-web.adoc:484
#, no-wrap
msgid "@Path(\"/api\")"
msgstr "@Path(\"/api\")"

#. type: Table
#: upstream/_guides/spring-web.adoc:487
#, no-wrap
msgid "@RequestMapping(consumes=\"application/json\")"
msgstr "@RequestMapping(consumes=\"application/json\")"

#. type: Table
#: upstream/_guides/spring-web.adoc:488
#, no-wrap
msgid "@Consumes(\"application/json\")"
msgstr "@Consumes(\"application/json\")"

#. type: Table
#: upstream/_guides/spring-web.adoc:491
#, no-wrap
msgid "@RequestMapping(produces=\"application/json\")"
msgstr "@RequestMapping(produce=\"application/json\")"

#. type: Table
#: upstream/_guides/spring-web.adoc:492
#, no-wrap
msgid "@Produces(\"application/json\")"
msgstr "@Produces(\"application/json\")"

#. type: Table
#: upstream/_guides/spring-web.adoc:496
#, no-wrap
msgid "@QueryParam"
msgstr "@QueryParam"

#. type: Table
#: upstream/_guides/spring-web.adoc:500
#, no-wrap
msgid "@PathParam"
msgstr "@PathParam"

#. type: Table
#: upstream/_guides/spring-web.adoc:506
#, fuzzy, no-wrap
msgid "No equivalent in JAX-RS. Method parameters corresponding to the body of the request are handled in JAX-RS without requiring any annotation"
msgstr ""
"JAX-RSでは同等のものはありません。JAX-RSでは、リクエストのボディに対応するメ"
"ソッド・パラメータは、アノテーションを必要とせずに処理されます。"

#. type: Table
#: upstream/_guides/spring-web.adoc:510 upstream/_guides/spring-web.adoc:514
#, no-wrap
msgid "No equivalent in JAX-RS"
msgstr "JAX-RSには同等のものはありません。"

#. type: Table
#: upstream/_guides/spring-web.adoc:517
#, fuzzy, no-wrap
msgid "No equivalent annotation in JAX-RS. Exceptions are handled by implementing `javax.ws.rs.ext.ExceptionMapper`"
msgstr "JAX-RSには同等のアノテーションはありません。例外を処理するには `javax.ws.rs."
"ext.ExceptionMapper`"

#. type: Title ==
#: upstream/_guides/spring-web.adoc:519
#, no-wrap
msgid "More Spring guides"
msgstr "その他のスプリングガイド"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:522
msgid "Quarkus has more Spring compatibility features. See the following guides for more details:"
msgstr "Quarkusには、より多くのSpring互換機能があります。詳細については、以下のガイドを参照してください。"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:524
#, fuzzy
msgid "xref:spring-di.adoc[Quarkus - Extension for Spring DI]"
msgstr "link:spring-di.html[Quarkus - Spring DIのエクステンション]"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:525
#, fuzzy
msgid "xref:spring-data-jpa.adoc[Quarkus - Extension for Spring Data JPA]"
msgstr "link:spring-data-jpa.html[Quarkus - Spring Data JPAのエクステンション]"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:526
#, fuzzy
msgid "xref:spring-data-rest.adoc[Quarkus - Extension for Spring Data REST]"
msgstr "link:spring-data-rest.html[Quarkus - Spring Data RESTのエクステンション]"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:527
#, fuzzy
msgid "xref:spring-security.adoc[Quarkus - Extension for Spring Security]"
msgstr "link:spring-security.html[Quarkus - Spring Securityのエクステンション]"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:528
#, fuzzy
msgid "xref:spring-cloud-config-client.adoc[Quarkus - Reading properties from Spring Cloud Config Server]"
msgstr ""
"link:spring-cloud-config-client.html[Quarkus - Spring Cloud Config "
"Serverからプロパティを読み込む]"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:529
#, fuzzy
msgid "xref:spring-boot-properties.adoc[Quarkus - Extension for Spring Boot properties]"
msgstr "link:spring-boot-properties.html[Quarkus - Spring "
"Bootプロパティ用のエクステンション]"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:530
#, fuzzy
msgid "xref:spring-cache.adoc[Quarkus - Extension for Spring Cache]"
msgstr "link:spring-cache.html[Quarkus - Spring Cacheのエクステンション]"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:530
#, fuzzy
msgid "xref:spring-scheduled.adoc[Quarkus - Extension for Spring Scheduled]"
msgstr "link:spring-scheduled.html[Quarkus - 春のエクステンションの予定]"

#~ msgid "less than 15 minutes"
#~ msgstr "15分未満"

#~ msgid "an IDE"
#~ msgstr "IDE"

#~ msgid "JDK 11+ installed with `JAVA_HOME` configured appropriately"
#~ msgstr "JDK 11+ がインストールされ、 `JAVA_HOME`  が適切に設定されていること"

#~ msgid "Apache Maven {maven-version}"
#~ msgstr "Apache Maven {maven-version}"

#, fuzzy
#~ msgid "The Quarkus maven plugin automatically generated a controller with the Spring Web annotations to define our REST endpoint (instead of the JAX-RS ones used by default)  The `src/main/java/org/acme/spring/web/GreetingController.java` file looks as follows:"
#~ msgstr "Quarkus mavenプラグインは、RESTエンドポイントを定義するためのSpring Webアノテーションを持つコントローラを自動的に生成しました（デフォルトで使用されているJAX-RSの代わりに）。 `src/main/java/org/acme/spring/web/GreetingController.java` ファイルは以下のようになります。"

#, fuzzy
#~ msgid "You can of course create a native image using the instructions of the xref:building-native-image.adoc[Building a native executable guide]."
#~ msgstr "もちろん、 link:building-native-image.html[「Building a native executable」]の手順でネイティブイメージを作成することもできます。"

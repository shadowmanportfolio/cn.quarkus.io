# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-03-16 13:19+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/rabbitmq.adoc:6
#, fuzzy, no-wrap
msgid "Getting Started to SmallRye Reactive Messaging with RabbitMQ"
msgstr "RabbitMQによるSmallRyeリアクティブメッセージングの開始"

#. type: Plain text
#: upstream/_guides/rabbitmq.adoc:12
msgid "This guide demonstrates how your Quarkus application can utilize SmallRye Reactive Messaging to interact with RabbitMQ."
msgstr "このガイドでは、QuarkusアプリケーションがSmallRye Reactive Messagingを利用してRabbitMQと対話する方法を説明します。"

#. type: Title ==
#: upstream/_guides/rabbitmq.adoc:15
#, no-wrap
msgid "Prerequisites"
msgstr "前提条件"

#. type: Title ==
#: upstream/_guides/rabbitmq.adoc:20
#, no-wrap
msgid "Architecture"
msgstr "アーキテクチャ"

#. type: Plain text
#: upstream/_guides/rabbitmq.adoc:25
#, fuzzy
msgid "In this guide, we are going to develop two applications communicating with a RabbitMQ broker.  The first application sends a _quote request_ to the RabbitMQ _quote requests_ exchange and consumes messages from the _quote_ queue.  The second application receives the _quote request_ and sends a _quote_ back."
msgstr "このガイドでは、RabbitMQ ブローカーと通信する 2 つのアプリケーションを開発します。1つ目のアプリケーションは、RabbitMQの _引用要求_交換所に _引用要求_を送信し、 _引用_キューからメッセージを消費します。2 番目のアプリケーションは、 _見積もり要求_を受信し、 _見積もり_を送り返します。"

#. type: Named 'alt' AttributeList argument for macro 'image'
#: upstream/_guides/rabbitmq.adoc:26
#, no-wrap
msgid "Architecture,"
msgstr "アーキテクチャー"

#. type: Target for macro image
#: upstream/_guides/rabbitmq.adoc:26
#, no-wrap
msgid "amqp-qs-architecture.png"
msgstr ""

#. type: Plain text
#: upstream/_guides/rabbitmq.adoc:31
#, fuzzy
msgid "The first application, the `producer`, will let the user request some quotes over an HTTP endpoint.  For each quote request, a random identifier is generated and returned to the user, to put the quote request on _pending_.  At the same time the generated request id is sent to the `quote-requests` exchange."
msgstr "最初のアプリケーションである `producer` では、ユーザーが HTTP エンドポイントを介していくつかの見積もりを要求することができます。各見積もり要求に対して、ランダムな識別子が生成され、ユーザーに返され、見積もり要求が _保留_されます。同時に、生成されたリクエストIDは、 `quote-requests` の取引所に送信されます。"

#. type: Named 'alt' AttributeList argument for macro 'image'
#: upstream/_guides/rabbitmq.adoc:32
#, fuzzy, no-wrap
msgid "Producer"
msgstr "プロデューサー"

#. type: Target for macro image
#: upstream/_guides/rabbitmq.adoc:32
#, no-wrap
msgid "amqp-qs-app-screenshot.png"
msgstr ""

#. type: Plain text
#: upstream/_guides/rabbitmq.adoc:35
#, fuzzy
msgid "The second application, the `processor`, in turn, will read from the `quote-requests` queue put a random price to the quote, and send it to an exchange named `quotes`."
msgstr "2 番目のアプリケーションである `processor` は、 `quote-requests` のキューから読み取った気配値にランダムな価格を付けて、 `quotes` という名前の取引所に送信します。"

#. type: Plain text
#: upstream/_guides/rabbitmq.adoc:38
#, fuzzy
msgid "Lastly, the `producer` will read the quotes and send them to the browser using server-sent events.  The user will therefore see the quote price updated from _pending_ to the received price in real-time."
msgstr "最後に、 `producer` が気配値を読み取り、サーバーが送信するイベントを使ってブラウザに送信します。そのため、ユーザーは気配値が _保留_から受信した価格にリアルタイムで更新されるのを見ることができます。"

#. type: Title ==
#: upstream/_guides/rabbitmq.adoc:39
#, no-wrap
msgid "Solution"
msgstr "ソリューション"

#. type: Plain text
#: upstream/_guides/rabbitmq.adoc:43
#, fuzzy
msgid "We recommend that you follow the instructions in the next sections and create applications step by step.  However, you can go right to the completed example."
msgstr "次のセクションの説明に沿って、段階的にアプリケーションを作成することをお勧めします。しかし、完成した例をすぐに見ることもできます。"

#. type: Plain text
#: upstream/_guides/rabbitmq.adoc:45
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Gitレポジトリをクローンするか `git clone {quickstarts-clone-url}` 、 {quickstarts-archive-url}[アーカイブ] をダウンロードします。"

#. type: Plain text
#: upstream/_guides/rabbitmq.adoc:47
#, fuzzy
msgid "The solution is located in the `rabbitmq-quickstart` {quickstarts-tree-url}/rabbitmq-quickstart[directory]."
msgstr "このソリューションは `rabbitmq-quickstart` {quickstarts-tree-url}/rabbitmq-quickstart[directory]にあります。"

#. type: Title ==
#: upstream/_guides/rabbitmq.adoc:48
#, fuzzy, no-wrap
msgid "Creating the Maven Project"
msgstr "Mavenプロジェクトの作成"

#. type: Plain text
#: upstream/_guides/rabbitmq.adoc:51
#, fuzzy
msgid "First, we need to create two projects: the _producer_ and the _processor_."
msgstr "まず、 _プロデューサー_と _プロセッサー_の2つのプロジェクトを作成する必要があります。"

#. type: Plain text
#: upstream/_guides/rabbitmq.adoc:53
#, fuzzy
msgid "To create the _producer_ project, in a terminal run:"
msgstr "_プロデューサー・_プロジェクトを作成するには、ターミナルで次のように実行します。"

#. type: Plain text
#: upstream/_guides/rabbitmq.adoc:60
#, fuzzy
msgid "This command creates the project structure and select the two Quarkus extensions we will be using:"
msgstr "このコマンドは、プロジェクト構造を作成し、使用する2つのQuarkusエクステンションを選択します。"

#. type: Plain text
#: upstream/_guides/rabbitmq.adoc:62
#, fuzzy
msgid "The Reactive Messaging RabbitMQ connector"
msgstr "Reactive MessagingのRabbitMQコネクタ"

#. type: Plain text
#: upstream/_guides/rabbitmq.adoc:63
#, fuzzy
msgid "RESTEasy Reactive and it's Jackson support to handle JSON payloads"
msgstr "RESTEasy Reactiveとit's JacksonがJSONペイロードを扱うためにサポートしています。"

#. type: Plain text
#: upstream/_guides/rabbitmq.adoc:65
#, fuzzy
msgid "To create the _processor_ project, from the same directory, run:"
msgstr "_プロセッサ・_プロジェクトを作成するには、同じディレクトリから、次のように実行します。"

#. type: Plain text
#: upstream/_guides/rabbitmq.adoc:72
#, fuzzy
msgid "At that point you should have the following structure:"
msgstr "この時点では、以下のような構成になっているはずです。"

#. type: delimited block -
#: upstream/_guides/rabbitmq.adoc:98
#, no-wrap
msgid ""
".\n"
"├── rabbitmq-quickstart-processor\n"
"│  ├── README.md\n"
"│  ├── mvnw\n"
"│  ├── mvnw.cmd\n"
"│  ├── pom.xml\n"
"│  └── src\n"
"│     └── main\n"
"│        ├── docker\n"
"│        ├── java\n"
"│        └── resources\n"
"│           └── application.properties\n"
"└── rabbitmq-quickstart-producer\n"
"   ├── README.md\n"
"   ├── mvnw\n"
"   ├── mvnw.cmd\n"
"   ├── pom.xml\n"
"   └── src\n"
"      └── main\n"
"         ├── docker\n"
"         ├── java\n"
"         └── resources\n"
"            └── application.properties\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/rabbitmq.adoc:101
#, fuzzy
msgid "Open the two projects in your favorite IDE."
msgstr "2つのプロジェクトをお好きなIDEで開きます。"

#. type: Title ==
#: upstream/_guides/rabbitmq.adoc:102
#, fuzzy, no-wrap
msgid "The Quote object"
msgstr "Quoteオブジェクト"

#. type: Plain text
#: upstream/_guides/rabbitmq.adoc:107
#, fuzzy
msgid "The `Quote` class will be used in both `producer` and `processor` projects.  For the sake of simplicity we will duplicate the class.  In both projects, create the `src/main/java/org/acme/rabbitmq/model/Quote.java` file, with the following content:"
msgstr "`Quote` クラスは、 `producer` と `processor` の両方のプロジェクトで使用されます。簡単にするために、このクラスを複製します。両方のプロジェクトで、次のような内容の `src/main/java/org/acme/rabbitmq/model/Quote.java` ファイルを作成します。"

#. type: delimited block -
#: upstream/_guides/rabbitmq.adoc:111
#, no-wrap
msgid "package org.acme.rabbitmq.model;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rabbitmq.adoc:113
#, no-wrap
msgid "import io.quarkus.runtime.annotations.RegisterForReflection;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rabbitmq.adoc:116
#, no-wrap
msgid ""
"@RegisterForReflection\n"
"public class Quote {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rabbitmq.adoc:119
#, no-wrap
msgid ""
"    public String id;\n"
"    public int price;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rabbitmq.adoc:124
#, no-wrap
msgid ""
"    /**\n"
"    * Default constructor required for Jackson serializer\n"
"    */\n"
"    public Quote() { }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rabbitmq.adoc:129
#, no-wrap
msgid ""
"    public Quote(String id, int price) {\n"
"        this.id = id;\n"
"        this.price = price;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rabbitmq.adoc:138
#, no-wrap
msgid ""
"    @Override\n"
"    public String toString() {\n"
"        return \"Quote{\" +\n"
"                \"id='\" + id + '\\'' +\n"
"                \", price=\" + price +\n"
"                '}';\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/rabbitmq.adoc:142
#, fuzzy
msgid "JSON representation of `Quote` objects will be used in messages sent to the RabbitMQ queues and also in the server-sent events sent to browser clients."
msgstr "`Quote` オブジェクトのJSON表現は、RabbitMQキューに送信されるメッセージや、ブラウザクライアントに送信されるサーバー送信イベントで使用されます。"

#. type: Plain text
#: upstream/_guides/rabbitmq.adoc:144
#, fuzzy
msgid "Quarkus has built-in capabilities to deal with JSON RabbitMQ messages."
msgstr "Quarkusには、JSONのRabbitMQメッセージを処理する機能が組み込まれています。"

#. type: Block title
#: upstream/_guides/rabbitmq.adoc:146
#, fuzzy, no-wrap
msgid "@RegisterForReflection"
msgstr "@RegisterForReflection"

#. type: delimited block =
#: upstream/_guides/rabbitmq.adoc:151
#, fuzzy
msgid "The `@RegisterForReflection` annotation instructs Quarkus to include the class (including fields and methods) when building the native executable.  This will be useful later when we run the applications as native executables inside containers.  Without, the native compilation would remove the fields and methods during the dead-code elimination phase."
msgstr "`@RegisterForReflection` アノテーションは、ネイティブ実行可能ファイルをビルドする際に、クラス（フィールドとメソッドを含む）を含めるようにQuarkusに指示します。これは、後でアプリケーションをコンテナ内のネイティブ実行可能ファイルとして実行する際に役立ちます。これがないと、ネイティブのコンパイル時にデッドコードの除去段階でフィールドやメソッドが削除されてしまいます。"

#. type: Title ==
#: upstream/_guides/rabbitmq.adoc:153
#, fuzzy, no-wrap
msgid "Sending quote request"
msgstr "見積もり依頼の送信"

#. type: Plain text
#: upstream/_guides/rabbitmq.adoc:156
#, fuzzy
msgid "Inside the `producer` project locate the generated `src/main/java/org/acme/rabbitmq/producer/QuotesResource.java` file, and update the content to be:"
msgstr "`producer` プロジェクト内で、生成された `src/main/java/org/acme/rabbitmq/producer/QuotesResource.java` ファイルを探し、コンテンツを次のように更新します。"

#. type: delimited block -
#: upstream/_guides/rabbitmq.adoc:160
#, no-wrap
msgid "package org.acme.rabbitmq.producer;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rabbitmq.adoc:162
#, no-wrap
msgid "import java.util.UUID;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rabbitmq.adoc:168
#, no-wrap
msgid ""
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.POST;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rabbitmq.adoc:172
#, no-wrap
msgid ""
"import org.acme.rabbitmq.model.Quote;\n"
"import org.eclipse.microprofile.reactive.messaging.Channel;\n"
"import org.eclipse.microprofile.reactive.messaging.Emitter;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rabbitmq.adoc:174
#, no-wrap
msgid "import io.smallrye.mutiny.Multi;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rabbitmq.adoc:177
#, no-wrap
msgid ""
"@Path(\"/quotes\")\n"
"public class QuotesResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rabbitmq.adoc:179
#, no-wrap
msgid "    @Channel(\"quote-requests\") Emitter<String> quoteRequestEmitter; // <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rabbitmq.adoc:193
#, no-wrap
msgid ""
"    /**\n"
"     * Endpoint to generate a new quote request id and send it to \"quote-requests\" channel (which\n"
"     * maps to the \"quote-requests\" RabbitMQ exchange) using the emitter.\n"
"     */\n"
"    @POST\n"
"    @Path(\"/request\")\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String createRequest() {\n"
"        UUID uuid = UUID.randomUUID();\n"
"        quoteRequestEmitter.send(uuid.toString()); // <2>\n"
"        return uuid.toString();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/rabbitmq.adoc:195
#, fuzzy
msgid "Inject a Reactive Messaging `Emitter` to send messages to the `quote-requests` channel."
msgstr "Reactive Messaging `Emitter` をインジェクトして、 `quote-requests` チャンネルにメッセージを送信します。"

#. type: Plain text
#: upstream/_guides/rabbitmq.adoc:196
#, fuzzy
msgid "On a post request, generate a random UUID and send it to the RabbitMQ queue using the emitter."
msgstr "投稿リクエストで、ランダムなUUIDを生成し、エミッターを使ってRabbitMQのキューに送信します。"

#. type: Plain text
#: upstream/_guides/rabbitmq.adoc:199
#, fuzzy
msgid "This channel is mapped to a RabbitMQ exchange using the configuration we will add to the `application.properties` file.  Open the `src/main/resource/application.properties` file and add:"
msgstr "このチャンネルは、 `application.properties` ファイルに追加する設定を使用して、RabbitMQ のエクスチェンジにマッピングされます。 `src/main/resource/application.properties` ファイルを開き、次のように追加します。"

#. type: delimited block -
#: upstream/_guides/rabbitmq.adoc:205
#, no-wrap
msgid ""
"# Configure the outgoing RabbitMQ exchange `quote-requests`\n"
"mp.messaging.outgoing.quote-requests.connector=smallrye-rabbitmq\n"
"mp.messaging.outgoing.quote-requests.exchange.name=quote-requests\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/rabbitmq.adoc:209
#, fuzzy
msgid "All we need to specify is the `smallrye-rabbitmq` connector.  By default, reactive messaging maps the channel name `quote-requests` to the same RabbitMQ exchange name."
msgstr "指定する必要があるのは、 `smallrye-rabbitmq` のコネクタだけです。デフォルトでは、リアクティブ・メッセージングは、チャネル名 `quote-requests` を同じ RabbitMQ の交換名にマッピングします。"

#. type: Title ==
#: upstream/_guides/rabbitmq.adoc:210
#, fuzzy, no-wrap
msgid "Processing quote requests"
msgstr "見積もり依頼の処理"

#. type: Plain text
#: upstream/_guides/rabbitmq.adoc:214
#, fuzzy
msgid "Now let's consume the quote request and give out a price.  Inside the `processor` project, locate the `src/main/java/org/acme/rabbitmq/processor/QuoteProcessor.java` file and add the following:"
msgstr "それでは、見積依頼を消費して、価格を出してみましょう。 `processor` プロジェクト内で、 `src/main/java/org/acme/rabbitmq/processor/QuoteProcessor.java` ファイルを探し、以下を追加します。"

#. type: delimited block -
#: upstream/_guides/rabbitmq.adoc:218
#, no-wrap
msgid "package org.acme.rabbitmq.processor;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rabbitmq.adoc:220
#, no-wrap
msgid "import java.util.Random;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rabbitmq.adoc:222
#, no-wrap
msgid "import javax.enterprise.context.ApplicationScoped;\n"
msgstr "import javax.enterprise.context.ApplicationScoped;\n"

#. type: delimited block -
#: upstream/_guides/rabbitmq.adoc:226
#, no-wrap
msgid ""
"import org.acme.rabbitmq.model.Quote;\n"
"import org.eclipse.microprofile.reactive.messaging.Incoming;\n"
"import org.eclipse.microprofile.reactive.messaging.Outgoing;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rabbitmq.adoc:228
#, no-wrap
msgid "import io.smallrye.reactive.messaging.annotations.Blocking;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rabbitmq.adoc:235
#, no-wrap
msgid ""
"/**\n"
" * A bean consuming data from the \"quote-requests\" RabbitMQ queue and giving out a random quote.\n"
" * The result is pushed to the \"quotes\" RabbitMQ exchange.\n"
" */\n"
"@ApplicationScoped\n"
"public class QuoteProcessor {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rabbitmq.adoc:237
#, no-wrap
msgid "    private Random random = new Random();\n"
msgstr "    private Random random = new Random();\n"

#. type: delimited block -
#: upstream/_guides/rabbitmq.adoc:247
#, no-wrap
msgid ""
"    @Incoming(\"requests\")       // <1>\n"
"    @Outgoing(\"quotes\")         // <2>\n"
"    @Blocking                   // <3>\n"
"    public Quote process(String quoteRequest) throws InterruptedException {\n"
"        // simulate some hard-working task\n"
"        Thread.sleep(1000);\n"
"        return new Quote(quoteRequest, random.nextInt(100));\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/rabbitmq.adoc:249
#, fuzzy
msgid "Indicates that the method consumes the items from the `requests` channel"
msgstr "メソッドが `requests` チャンネルのアイテムを消費することを示します。"

#. type: Plain text
#: upstream/_guides/rabbitmq.adoc:250
#, fuzzy
msgid "Indicates that the objects returned by the method are sent to the `quotes` channel"
msgstr "メソッドが返すオブジェクトが `quotes` チャンネルに送信されることを示す。"

#. type: Plain text
#: upstream/_guides/rabbitmq.adoc:251
#, fuzzy
msgid "Indicates that the processing is _blocking_ and cannot be run on the caller thread."
msgstr "処理が _ブロック_化されており、呼び出し元のスレッドでは実行できないことを示す。"

#. type: Plain text
#: upstream/_guides/rabbitmq.adoc:253
#, fuzzy
msgid "The `process` method is called for every RabbitMQ message from the `quote-requests` queue, and will send a `Quote` object to the `quotes` exchange."
msgstr "`process` メソッドは、 `quote-requests` キューからの RabbitMQ メッセージごとに呼び出され、 `Quote` オブジェクトを `quotes` エクスチェンジに送信します。"

#. type: Plain text
#: upstream/_guides/rabbitmq.adoc:256
#, fuzzy
msgid "As with the previous example we need to configure the connectors in the `application.properties` file.  Open the `src/main/resources/application.properties` file and add:"
msgstr "前述の例と同様に、 `application.properties` ファイルでコネクタを設定する必要があります。 `src/main/resources/application.properties` ファイルを開き、次のように追加します。"

#. type: delimited block -
#: upstream/_guides/rabbitmq.adoc:263
#, no-wrap
msgid ""
"# Configure the incoming RabbitMQ queue `quote-requests`\n"
"mp.messaging.incoming.requests.connector=smallrye-rabbitmq\n"
"mp.messaging.incoming.requests.queue.name=quote-requests\n"
"mp.messaging.incoming.requests.exchange.name=quote-requests\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rabbitmq.adoc:267
#, no-wrap
msgid ""
"# Configure the outgoing RabbitMQ exchange `quotes`\n"
"mp.messaging.outgoing.quotes.connector=smallrye-rabbitmq\n"
"mp.messaging.outgoing.quotes.exchange.name=quotes\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/rabbitmq.adoc:271
#, fuzzy
msgid "Note that in this case we have one incoming and one outgoing connector configuration, each one distinctly named.  The configuration keys are structured as follows:"
msgstr "この場合、着信用と発信用のコネクタ構成がそれぞれ1つずつあり、それぞれに明確な名前がついていることに注意してください。コンフィギュレーションのキーは以下のように構成されています。"

#. type: Plain text
#: upstream/_guides/rabbitmq.adoc:273
msgid "`mp.messaging.[outgoing|incoming].{channel-name}.property=value`"
msgstr "`mp.messaging.[outgoing|incoming].{channel-name}.property=value`"

#. type: Plain text
#: upstream/_guides/rabbitmq.adoc:275
msgid "The `channel-name` segment must match the value set in the `@Incoming` and `@Outgoing` annotation:"
msgstr "`channel-name` セグメントは、 `@Incoming` および `@Outgoing` アノテーションで設定された値と一致する必要があります。"

#. type: Plain text
#: upstream/_guides/rabbitmq.adoc:277
#, fuzzy
msgid "`quote-requests` -> RabbitMQ queue from which we read the quote requests"
msgstr "`quote-requests` → 見積もり依頼を読み出すRabbitMQのキュー"

#. type: Plain text
#: upstream/_guides/rabbitmq.adoc:278
#, fuzzy
msgid "`quotes` -> RabbitMQ exchange in which we write the quotes"
msgstr "`quotes` → 気配値を書き込むRabbitMQの取引所"

#. type: Title ==
#: upstream/_guides/rabbitmq.adoc:279
#, fuzzy, no-wrap
msgid "Receiving quotes"
msgstr "見積もりを受け取る"

#. type: Plain text
#: upstream/_guides/rabbitmq.adoc:283
#, fuzzy
msgid "Back to our `producer` project.  Let's modify the `QuotesResource` to consume quotes, bind it to an HTTP endpoint to send events to clients:"
msgstr "`producer` プロジェクトに戻ります。 `QuotesResource` を変更して引用符を消費し、HTTPエンドポイントにバインドしてクライアントにイベントを送信してみましょう。"

#. type: delimited block -
#: upstream/_guides/rabbitmq.adoc:288
#, no-wrap
msgid ""
"import io.smallrye.mutiny.Multi;\n"
"//...\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rabbitmq.adoc:290
#, no-wrap
msgid "@Channel(\"quotes\") Multi<Quote> quotes;     // <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rabbitmq.adoc:299
#, no-wrap
msgid ""
"/**\n"
" * Endpoint retrieving the \"quotes\" queue and sending the items to a server sent event.\n"
" */\n"
"@GET\n"
"@Produces(MediaType.SERVER_SENT_EVENTS) // <2>\n"
"public Multi<Quote> stream() {\n"
"    return quotes; // <3>\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/rabbitmq.adoc:301
#, fuzzy
msgid "Injects the `quotes` channel using the `@Channel` qualifier"
msgstr "`@Channel` の修飾子を使用して `quotes` のチャネルを注入します。"

#. type: Plain text
#: upstream/_guides/rabbitmq.adoc:302
msgid "Indicates that the content is sent using `Server Sent Events`"
msgstr "`Server Sent Events` を使用してコンテンツが送信されたことを示します。"

#. type: Plain text
#: upstream/_guides/rabbitmq.adoc:303
msgid "Returns the stream (_Reactive Stream_)"
msgstr "ストリーム (_Reactive Stream_) を返します。"

#. type: Plain text
#: upstream/_guides/rabbitmq.adoc:306
#, fuzzy
msgid "Again we need to configure the incoming `quotes` channel inside `producer` project.  Add the following inside `application.properties` file:"
msgstr "再度、 `producer` プロジェクト内で `quotes` の受信チャンネルを設定する必要があります。 `application.properties` ファイル内に以下を追加します。"

#. type: delimited block -
#: upstream/_guides/rabbitmq.adoc:311
#, no-wrap
msgid ""
"# Configure the outgoing `quote-requests` queue\n"
"mp.messaging.outgoing.quote-requests.connector=smallrye-rabbitmq\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rabbitmq.adoc:314
#, no-wrap
msgid ""
"# Configure the incoming `quotes` queue\n"
"mp.messaging.incoming.quotes.connector=smallrye-rabbitmq\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/rabbitmq.adoc:316
#, fuzzy, no-wrap
msgid "The HTML page"
msgstr "HTMLページ"

#. type: Plain text
#: upstream/_guides/rabbitmq.adoc:319
msgid "Final touch, the HTML page reading the converted prices using SSE."
msgstr "最後に、SSE を使って変換された価格を読み込む HTML ページです。"

#. type: Plain text
#: upstream/_guides/rabbitmq.adoc:321
#, fuzzy
msgid "Create inside the `producer` project `src/main/resources/META-INF/resources/quotes.html` file, with the following content:"
msgstr "`producer` プロジェクト `src/main/resources/META-INF/resources/quotes.html` の中に、以下の内容のファイルを作成します。"

#. type: delimited block -
#: upstream/_guides/rabbitmq.adoc:325
#, no-wrap
msgid "<!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Quotes</title>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rabbitmq.adoc:361
#, no-wrap
msgid ""
"    <link rel=\"stylesheet\" type=\"text/css\"\n"
"          href=\"https://cdnjs.cloudflare.com/ajax/libs/patternfly/3.24.0/css/patternfly.min.css\">\n"
"    <link rel=\"stylesheet\" type=\"text/css\"\n"
"          href=\"https://cdnjs.cloudflare.com/ajax/libs/patternfly/3.24.0/css/patternfly-additions.min.css\">\n"
"</head>\n"
"<body>\n"
"<div class=\"container\">\n"
"    <div class=\"card\">\n"
"        <div class=\"card-body\">\n"
"            <h2 class=\"card-title\">Quotes</h2>\n"
"            <button class=\"btn btn-info\" id=\"request-quote\">Request Quote</button>\n"
"            <div class=\"quotes\"></div>\n"
"        </div>\n"
"    </div>\n"
"</div>\n"
"</body>\n"
"<script src=\"https://code.jquery.com/jquery-3.6.0.min.js\"></script>\n"
"<script>\n"
"    $(\"#request-quote\").click((event) => {\n"
"        fetch(\"/quotes/request\", {method: \"POST\"})\n"
"        .then(res => res.text())\n"
"        .then(qid => {\n"
"            var row = $(`<h4 class='col-md-12' id='${qid}'>Quote # <i>${qid}</i> | <strong>Pending</strong></h4>`);\n"
"            $(\".quotes\").append(row);\n"
"        });\n"
"    });\n"
"    var source = new EventSource(\"/quotes\");\n"
"    source.onmessage = (event) => {\n"
"      var json = JSON.parse(event.data);\n"
"      $(`#${json.id}`).html(function(index, html) {\n"
"        return html.replace(\"Pending\", `\\$\\xA0${json.price}`);\n"
"      });\n"
"    };\n"
"</script>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/rabbitmq.adoc:365
#, fuzzy
msgid "Nothing spectacular here.  On each received quote, it updates the page."
msgstr "目を見張るものはありません。受け取った見積書の内容が更新されていきます。"

#. type: Title ==
#: upstream/_guides/rabbitmq.adoc:366
#, no-wrap
msgid "Get it running"
msgstr "実行"

#. type: Plain text
#: upstream/_guides/rabbitmq.adoc:369
#, fuzzy
msgid "You just need to run both applications using:"
msgstr "を使って両方のアプリケーションを実行する必要があります。"

#. type: delimited block -
#: upstream/_guides/rabbitmq.adoc:373
#, no-wrap
msgid "> mvn -f rabbitmq-quickstart-producer quarkus:dev\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/rabbitmq.adoc:376
#, fuzzy
msgid "And, in a separate terminal:"
msgstr "そして、別の端末で"

#. type: delimited block -
#: upstream/_guides/rabbitmq.adoc:380
#, no-wrap
msgid "> mvn -f rabbitmq-quickstart-processor quarkus:dev\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/rabbitmq.adoc:384
#, fuzzy
msgid "Quarkus starts a RabbitMQ broker automatically, configures the application and shares the broker instance between different applications.  See xref:rabbitmq-dev-services.adoc[Dev Services for RabbitMQ] for more details."
msgstr "Quarkusは、RabbitMQブローカーを自動的に起動し、アプリケーションを構成し、異なるアプリケーション間でブローカーインスタンスを共有します。詳細は、 link:rabbitmq-dev-services.html[RabbitMQ用のDev Services]を参照してください。"

#. type: Plain text
#: upstream/_guides/rabbitmq.adoc:387
#, fuzzy
msgid "Open `http://localhost:8080/quotes.html` in your browser and request some quotes by clicking the button."
msgstr "開く `<a href=\"http://localhost:8080/quotes.html\" class=\"bare\">http://localhost:8080/quotes.html</a>`をブラウザで開き、ボタンをクリックして見積もりを依頼してください。"

#. type: Title ==
#: upstream/_guides/rabbitmq.adoc:388
#, fuzzy, no-wrap
msgid "Running in JVM or Native mode"
msgstr "JVMまたはNativeモードでの実行"

#. type: Plain text
#: upstream/_guides/rabbitmq.adoc:392
#, fuzzy
msgid "When not running in dev or test mode, you will need to start your RabbitMQ broker.  You can follow the instructions from the https://hub.docker.com/_/rabbitmq[RabbitMQ Docker website] or create a `docker-compose.yaml` file with the following content:"
msgstr "開発モードやテストモードで実行していないときは、RabbitMQブローカーを起動する必要があります。 link:https://hub.docker.com/_/rabbitmq[RabbitMQ Dockerウェブサイト]の指示に従うか、以下の内容の `docker-compose.yaml` ファイルを作成します。"

#. type: delimited block -
#: upstream/_guides/rabbitmq.adoc:396
#, no-wrap
msgid "version: '2'\n"
msgstr "version: '2'\n"

#. type: delimited block -
#: upstream/_guides/rabbitmq.adoc:398
#, no-wrap
msgid "services:\n"
msgstr "services:\n"

#. type: delimited block -
#: upstream/_guides/rabbitmq.adoc:405
#, no-wrap
msgid ""
"  rabbit:\n"
"    image: rabbitmq:3.9-management\n"
"    ports:\n"
"      - \"5672:5672\"\n"
"    networks:\n"
"      - rabbitmq-quickstart-network\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rabbitmq.adoc:418
#, no-wrap
msgid ""
"  producer:\n"
"    image: quarkus-quickstarts/rabbitmq-quickstart-producer:1.0-${QUARKUS_MODE:-jvm}\n"
"    build:\n"
"      context: rabbitmq-quickstart-producer\n"
"      dockerfile: src/main/docker/Dockerfile.${QUARKUS_MODE:-jvm}\n"
"    environment:\n"
"      RABBITMQ_HOST: rabbit\n"
"      RABBITMQ_PORT: 5672\n"
"    ports:\n"
"      - \"8080:8080\"\n"
"    networks:\n"
"      - rabbitmq-quickstart-network\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rabbitmq.adoc:429
#, no-wrap
msgid ""
"  processor:\n"
"    image: quarkus-quickstarts/rabbitmq-quickstart-processor:1.0-${QUARKUS_MODE:-jvm}\n"
"    build:\n"
"      context: rabbitmq-quickstart-processor\n"
"      dockerfile: src/main/docker/Dockerfile.${QUARKUS_MODE:-jvm}\n"
"    environment:\n"
"      RABBITMQ_HOST: rabbit\n"
"      RABBITMQ_PORT: 5672\n"
"    networks:\n"
"      - rabbitmq-quickstart-network\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rabbitmq.adoc:433
#, no-wrap
msgid ""
"networks:\n"
"  rabbitmq-quickstart-network:\n"
"    name: rabbitmq-quickstart\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/rabbitmq.adoc:437
#, fuzzy
msgid "Note how the RabbitMQ broker location is configured.  The `rabbitmq-host` and `rabbitmq-port` (`AMQP_HOST` and `AMQP_PORT` environment variables) properties configure location."
msgstr "RabbitMQ ブローカーのロケーションがどのように構成されているかに注意してください。 `rabbitmq-host` と `rabbitmq-port` ( `AMQP_HOST` と `AMQP_PORT` 環境変数) のプロパティで場所を設定します。"

#. type: Plain text
#: upstream/_guides/rabbitmq.adoc:440
#, fuzzy
msgid "First, make sure you stopped the applications, and build both applications in JVM mode with:"
msgstr "まず、アプリケーションが停止していることを確認し、両方のアプリケーションをJVMモードでビルドします。"

#. type: delimited block -
#: upstream/_guides/rabbitmq.adoc:445
#, no-wrap
msgid ""
"> mvn -f rabbitmq-quickstart-producer clean package\n"
"> mvn -f rabbitmq-quickstart-processor clean package\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/rabbitmq.adoc:449
#, fuzzy
msgid "Once packaged, run `docker compose up --build`.  The UI is exposed on http://localhost:8080/quotes.html"
msgstr "パッケージングされたら、 `docker compose up --build` を実行します。UI は http://localhost:8080/quotes.html で公開されます。"

#. type: Plain text
#: upstream/_guides/rabbitmq.adoc:451
#, fuzzy
msgid "To run your applications as native, first we need to build the native executables:"
msgstr "アプリケーションをネイティブで動作させるには、まず、ネイティブ実行可能ファイルをビルドする必要があります。"

#. type: delimited block -
#: upstream/_guides/rabbitmq.adoc:456
#, no-wrap
msgid ""
"> mvn -f rabbitmq-quickstart-producer package -Pnative  -Dquarkus.native.container-build=true\n"
"> mvn -f rabbitmq-quickstart-processor package -Pnative -Dquarkus.native.container-build=true\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/rabbitmq.adoc:460
#, fuzzy
msgid "The `-Dquarkus.native.container-build=true` instructs Quarkus to build Linux 64bits native executables, who can run inside containers.  Then, run the system using:"
msgstr "`-Dquarkus.native.container-build=true` は、Quarkusにコンテナ内で実行可能なLinux 64ビットのネイティブ実行可能ファイルを構築するよう指示しています。その後、システムを使用して実行します。"

#. type: delimited block -
#: upstream/_guides/rabbitmq.adoc:465
#, no-wrap
msgid ""
"> export QUARKUS_MODE=native\n"
"> docker compose up --build\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/rabbitmq.adoc:468
#, fuzzy
msgid "As before, the UI is exposed on http://localhost:8080/quotes.html"
msgstr "従来通り、UIは http://localhost:8080/quotes.html で公開されています。"

#. type: Title ==
#: upstream/_guides/rabbitmq.adoc:469
#, no-wrap
msgid "Going further"
msgstr "さらに詳しく"

#. type: Plain text
#: upstream/_guides/rabbitmq.adoc:473
#, fuzzy
msgid "This guide has shown how you can interact with RabbitMQ using Quarkus.  It utilizes https://smallrye.io/smallrye-reactive-messaging[SmallRye Reactive Messaging] to build data streaming applications."
msgstr "このガイドでは、Quarkusを使ってRabbitMQと対話する方法を紹介しました。 link:https://smallrye.io/smallrye-reactive-messaging[SmallRye Reactive Messaging]を利用して、データストリーミングアプリケーションを構築しています。"

#. type: Plain text
#: upstream/_guides/rabbitmq.adoc:475
#, fuzzy
msgid "If you did the Kafka, you have realized that it's the same code.  The only difference is the connector configuration and the JSON mapping."
msgstr "Kafkaをやった方は、同じコードであることに気づいたと思います。唯一の違いは、コネクタの設定とJSONのマッピングです。"

#~ msgid "To complete this guide, you need:"
#~ msgstr "このガイドを完成させるには、以下が必要です:"

#, fuzzy
#~ msgid "less than 15 minutes"
#~ msgstr "15分未満"

#~ msgid "an IDE"
#~ msgstr "IDE"

#~ msgid "JDK 11+ installed with `JAVA_HOME` configured appropriately"
#~ msgstr "JDK 11+ がインストールされ、 `JAVA_HOME`  が適切に設定されていること"

#~ msgid "Apache Maven {maven-version}"
#~ msgstr "Apache Maven {maven-version}"

#, fuzzy
#~ msgid "docker and docker-compose"
#~ msgstr "dockerとdocker-compose"

#~ msgid "GraalVM installed if you want to run in native mode."
#~ msgstr "ネイティブモードで実行する場合は、GraalVM がインストールされていること"

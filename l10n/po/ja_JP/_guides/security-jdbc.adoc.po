# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: \n"
"POT-Creation-Date: 2022-02-08 17:12+0000\n"
"PO-Revision-Date: 2022-04-12 11:29+0900\n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 3.0.1\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/security-jdbc.adoc:6
#, no-wrap
msgid "Using Security with JDBC"
msgstr "JDBCでセキュリティーを使用する"

#. type: Plain text
#: upstream/_guides/security-jdbc.adoc:11
msgid "This guide demonstrates how your Quarkus application can use a database to store your user identities."
msgstr "このガイドでは、Quarkusアプリケーションがデータベースを使用してユーザーIDを保存する方法を説明します。"

#. type: Title ==
#: upstream/_guides/security-jdbc.adoc:13
#, no-wrap
msgid "Prerequisites"
msgstr "前提条件"

#. type: Title ==
#: upstream/_guides/security-jdbc.adoc:17
#, no-wrap
msgid "Architecture"
msgstr "アーキテクチャ"

#. type: Plain text
#: upstream/_guides/security-jdbc.adoc:20
msgid "In this example, we build a very simple microservice which offers three endpoints:"
msgstr "この例では、3つのエンドポイントを提供する非常にシンプルなマイクロサービスを構築します:"

#. type: Plain text
#: upstream/_guides/security-jdbc.adoc:22
msgid "`/api/public`"
msgstr "`/api/public`"

#. type: Plain text
#: upstream/_guides/security-jdbc.adoc:23
msgid "`/api/users/me`"
msgstr "`/api/users/me`"

#. type: Plain text
#: upstream/_guides/security-jdbc.adoc:24
msgid "`/api/admin`"
msgstr "`/api/admin`"

#. type: Plain text
#: upstream/_guides/security-jdbc.adoc:28
msgid "The `/api/public` endpoint can be accessed anonymously.  The `/api/admin` endpoint is protected with RBAC (Role-Based Access Control) where only users granted with the `admin` role can access. At this endpoint, we use the `@RolesAllowed` annotation to declaratively enforce the access constraint.  The `/api/users/me` endpoint is also protected with RBAC (Role-Based Access Control) where only users granted with the `user` role can access. As a response, it returns a JSON document with details about the user."
msgstr "`/api/public` エンドポイントは匿名でアクセスできます。 `/api/admin` エンドポイントは RBAC (Role-Based Access Control) で保護されており、 `admin` の役割を与えられたユーザーのみがアクセスできます。このエンドポイントでは、 `@RolesAllowed` アノテーションを使用して、アクセス制約を宣言的に強制します。 `/api/users/me` エンドポイントも RBAC (Role-Based Access Control) で保護されており、 `user` ロールで付与されたユーザーのみがアクセスできます。レスポンスとして、ユーザーに関する詳細を含むJSONドキュメントを返します。"

#. type: Title ==
#: upstream/_guides/security-jdbc.adoc:29
#, no-wrap
msgid "Solution"
msgstr "ソリューション"

#. type: Plain text
#: upstream/_guides/security-jdbc.adoc:33
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the completed example."
msgstr "次のセクションで紹介する手順に沿って、ステップを踏んでアプリを作成することをお勧めします。ただし、完成した例にそのまま進んでも構いません。"

#. type: Plain text
#: upstream/_guides/security-jdbc.adoc:35
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Gitレポジトリをクローンするか `git clone {quickstarts-clone-url}` 、 {quickstarts-archive-url}[アーカイブ] をダウンロードします。"

#. type: Plain text
#: upstream/_guides/security-jdbc.adoc:37
msgid "The solution is located in the `security-jdbc-quickstart` {quickstarts-tree-url}/security-jdbc-quickstart[directory]."
msgstr "ソリューションは `security-jdbc-quickstart` {quickstarts-tree-url}/security-jdbc-quickstart[ディレクトリ] にあります。"

#. type: Title ==
#: upstream/_guides/security-jdbc.adoc:38
#, no-wrap
msgid "Creating the Maven Project"
msgstr "Mavenプロジェクトの作成"

#. type: Plain text
#: upstream/_guides/security-jdbc.adoc:41
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "まず、新しいプロジェクトが必要です。以下のコマンドで新規プロジェクトを作成します。"

#. type: delimited block =
#: upstream/_guides/security-jdbc.adoc:49
msgid "Don't forget to add the database connector library of choice. Here we are using PostgreSQL as identity store."
msgstr "選択したデータベースコネクタライブラリを追加することを忘れないでください。ここでは、PostgreSQLをIDストアとして使用しています。"

#. type: Plain text
#: upstream/_guides/security-jdbc.adoc:53
msgid "This command generates a new project, importing the `elytron-security-jdbc` extension which is an https://docs.wildfly.org/17/WildFly_Elytron_Security.html#jdbc-security-realm[`wildfly-elytron-realm-jdbc`] adapter for Quarkus applications."
msgstr "このコマンドは新しいプロジェクトを生成し、 `elytron-security-jdbc` エクステンションをインポートします。これはQuarkusアプリケーション用の link:https://docs.wildfly.org/17/WildFly_Elytron_Security.html#jdbc-security-realm[`wildfly-elytron-realm-jdbc`] アダプターです。"

#. type: Plain text
#: upstream/_guides/security-jdbc.adoc:56
msgid "If you already have your Quarkus project configured, you can add the `elytron-security-jdbc` extension to your project by running the following command in your project base directory:"
msgstr "すでにQuarkusプロジェクトが設定されている場合は、プロジェクトのベースディレクトリーで以下のコマンドを実行することで、プロジェクトに `elytron-security-jdbc` エクステンションを追加することができます:"

#. type: Plain text
#: upstream/_guides/security-jdbc.adoc:61
msgid "This will add the following to your build file:"
msgstr "これにより、ビルドファイルに以下が追加されます:"

#. type: Block title
#: upstream/_guides/security-jdbc.adoc:63
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_guides/security-jdbc.adoc:69
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-elytron-security-jdbc</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_guides/security-jdbc.adoc:72
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_guides/security-jdbc.adoc:75
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-elytron-security-jdbc\")\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/security-jdbc.adoc:77
#, no-wrap
msgid "Writing the application"
msgstr "アプリケーションの記述"

#. type: Plain text
#: upstream/_guides/security-jdbc.adoc:80
msgid "Let's start by implementing the `/api/public` endpoint. As you can see from the source code below, it is just a regular JAX-RS resource:"
msgstr "`/api/public` エンドポイントの実装から始めましょう。以下のソースコードから分かるように、通常のJAX-RSリソースです:"

#. type: delimited block -
#: upstream/_guides/security-jdbc.adoc:84
#: upstream/_guides/security-jdbc.adoc:109
#: upstream/_guides/security-jdbc.adoc:134
#, no-wrap
msgid "package org.acme.security.jdbc;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-jdbc.adoc:90
#, no-wrap
msgid ""
"import javax.annotation.security.PermitAll;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-jdbc.adoc:93
#, no-wrap
msgid ""
"@Path(\"/api/public\")\n"
"public class PublicResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-jdbc.adoc:101
#, no-wrap
msgid ""
"    @GET\n"
"    @PermitAll\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String publicResource() {\n"
"        return \"public\";\n"
"   }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-jdbc.adoc:104
msgid "The source code for the `/api/admin` endpoint is also very simple. The main difference here is that we are using a `@RolesAllowed` annotation to make sure that only users granted with the `admin` role can access the endpoint:"
msgstr "`/api/admin` エンドポイントのソースコードも非常にシンプルです。ここでの主な違いは、 `admin` ロールで付与されたユーザーだけがエンドポイントにアクセスできるように `@RolesAllowed` アノテーションを使用していることです:"

#. type: delimited block -
#: upstream/_guides/security-jdbc.adoc:115
#, no-wrap
msgid ""
"import javax.annotation.security.RolesAllowed;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-jdbc.adoc:118
#, no-wrap
msgid ""
"@Path(\"/api/admin\")\n"
"public class AdminResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-jdbc.adoc:126
#, no-wrap
msgid ""
"    @GET\n"
"    @RolesAllowed(\"admin\")\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String adminResource() {\n"
"         return \"admin\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-jdbc.adoc:130
msgid "Finally, let's consider the `/api/users/me` endpoint. As you can see from the source code below, we are trusting only users with the `user` role.  We are using `SecurityContext` to get access to the current authenticated Principal and we return the user's name. This information is loaded from the database."
msgstr "最後に、 `/api/users/me` エンドポイントを考えてみましょう。下のソースコードを見ればわかるように、 `user` の役割を持つユーザのみを信頼しています。現在認証されているプリンシパルへのアクセスを得るために `SecurityContext` を使用しており、ユーザーの名前を返します。この情報はデータベースから読み込まれます。"

#. type: delimited block -
#: upstream/_guides/security-jdbc.adoc:141
#, no-wrap
msgid ""
"import javax.annotation.security.RolesAllowed;\n"
"import javax.inject.Inject;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.core.Context;\n"
"import javax.ws.rs.core.SecurityContext;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-jdbc.adoc:144
#, no-wrap
msgid ""
"@Path(\"/api/users\")\n"
"public class UserResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-jdbc.adoc:152
#, no-wrap
msgid ""
"    @GET\n"
"    @RolesAllowed(\"user\")\n"
"    @Path(\"/me\")\n"
"    public String me(@Context SecurityContext securityContext) {\n"
"        return securityContext.getUserPrincipal().getName();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/security-jdbc.adoc:154
#, no-wrap
msgid "Configuring the Application"
msgstr "アプリケーションの設定"

#. type: Plain text
#: upstream/_guides/security-jdbc.adoc:157
msgid "The `elytron-security-jdbc` extension requires at least one datasource to access to your database."
msgstr "`elytron-security-jdbc` エクステンションは、データベースにアクセスするために少なくとも一つのデータソースが必要です。"

#. type: delimited block -
#: upstream/_guides/security-jdbc.adoc:164
#, no-wrap
msgid ""
"quarkus.datasource.db-kind=postgresql\n"
"quarkus.datasource.username=quarkus\n"
"quarkus.datasource.password=quarkus\n"
"quarkus.datasource.jdbc.url=jdbc:postgresql:elytron-security-jdbc\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-jdbc.adoc:167
msgid "In our context, we are using PostgreSQL as identity store and we initialize the database with users and roles."
msgstr "私たちのコンテキストでは、PostgreSQLをアイデンティティストアとして使用しており、ユーザーとロールでデータベースを初期化しています。"

#. type: delimited block -
#: upstream/_guides/security-jdbc.adoc:176
#, no-wrap
msgid ""
"CREATE TABLE test_user (\n"
"  id INT,\n"
"  username VARCHAR(255),\n"
"  password VARCHAR(255),\n"
"  role VARCHAR(255)\n"
");\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-jdbc.adoc:179
#, no-wrap
msgid ""
"INSERT INTO test_user (id, username, password, role) VALUES (1, 'admin', 'admin', 'admin');\n"
"INSERT INTO test_user (id, username, password, role) VALUES (2, 'user','user', 'user');\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/security-jdbc.adoc:185
msgid "It is probably useless but we kindly remind you that you must not store clear-text passwords in production environment ;-).  The `elytron-security-jdbc` offers a built-in bcrypt password mapper."
msgstr "おそらく無用と思いますが、本番環境ではクリアテキストのパスワードを保存してはいけないことをご注意ください ;-)。 `elytron-security-jdbc` は組み込みの bcrypt パスワードマッパーを提供しています。"

#. type: Plain text
#: upstream/_guides/security-jdbc.adoc:188
msgid "We can now configure the Elytron JDBC Realm."
msgstr "これで、Elytron JDBC Realmを設定することができます。"

#. type: delimited block -
#: upstream/_guides/security-jdbc.adoc:197
#, no-wrap
msgid ""
"quarkus.security.jdbc.enabled=true\n"
"quarkus.security.jdbc.principal-query.sql=SELECT u.password, u.role FROM test_user u WHERE u.username=? <1>\n"
"quarkus.security.jdbc.principal-query.clear-password-mapper.enabled=true <2>\n"
"quarkus.security.jdbc.principal-query.clear-password-mapper.password-index=1\n"
"quarkus.security.jdbc.principal-query.attribute-mappings.0.index=2 <3>\n"
"quarkus.security.jdbc.principal-query.attribute-mappings.0.to=groups\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-jdbc.adoc:200
msgid "The `elytron-security-jdbc` extension requires at least one principal query to authenticate the user and its identity."
msgstr "`elytron-security-jdbc` エクステンションは、ユーザーとそのアイデンティティを認証するために、少なくとも一つのプリンシパルのクエリを必要とします。"

#. type: Plain text
#: upstream/_guides/security-jdbc.adoc:202
msgid "We define a parameterized SQL statement (with exactly 1 parameter) which should return the user's password plus any additional information you want to load."
msgstr "ユーザーのパスワードと、ロードしたい追加情報を返却するパラメーター化されたSQL文(単一のパラメーター付)を定義しています。"

#. type: Plain text
#: upstream/_guides/security-jdbc.adoc:203
msgid "We configure the password mapper with the position of the password field in the `SELECT` fields and other information like salt, hash encoding, etc."
msgstr "`SELECT` フィールドのパスワードフィールドの位置や、ソルト、ハッシュエンコードなどの情報を使って、パスワードマッパーを設定します。"

#. type: Plain text
#: upstream/_guides/security-jdbc.adoc:204
msgid "We use `attribute-mappings` to bind the `SELECT` projection fields (ie. `u.role` here) to the target Principal representation attributes."
msgstr "`attribute-mappings` を使用して、 `SELECT` の投影フィールド(例:ここでは `u.role` )をターゲットの Principal 表現属性にバインドしています。"

#. type: delimited block =
#: upstream/_guides/security-jdbc.adoc:208
msgid "In the `principal-query` configuration all the `index` properties start at 1 (rather than 0)."
msgstr "`principal-query` の設定では、 `index` のプロパティーはすべて 1 から始まります (0 ではなく)。"

#. type: Title ==
#: upstream/_guides/security-jdbc.adoc:210
#, no-wrap
msgid "Testing the Application"
msgstr "アプリケーションのテスト"

#. type: Plain text
#: upstream/_guides/security-jdbc.adoc:214
msgid "The application is now protected and the identities are provided by our database.  The very first thing to check is to ensure the anonymous access works."
msgstr "アプリケーションが保護され、アイデンティティがデータベースから提供されるようになりました。非常に最初に確認しなければならないことは、匿名アクセスが機能することを確認することです。"

#. type: delimited block -
#: upstream/_guides/security-jdbc.adoc:221
#, no-wrap
msgid ""
"$ curl -i -X GET http://localhost:8080/api/public\n"
"HTTP/1.1 200 OK\n"
"Content-Length: 6\n"
"Content-Type: text/plain;charset=UTF-8\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-jdbc.adoc:223
#, no-wrap
msgid "public%\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-jdbc.adoc:226
msgid "Now, let's try a to hit a protected resource anonymously."
msgstr "では、匿名で保護されたリソースを攻撃してみましょう。"

#. type: delimited block -
#: upstream/_guides/security-jdbc.adoc:233
#, no-wrap
msgid ""
"$ curl -i -X GET http://localhost:8080/api/admin\n"
"HTTP/1.1 401 Unauthorized\n"
"Content-Length: 14\n"
"Content-Type: text/html;charset=UTF-8\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-jdbc.adoc:235
#, no-wrap
msgid "Not authorized%\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-jdbc.adoc:238
msgid "So far so good, now let's try with an allowed user."
msgstr "ここまでは順調ですが、今度は許可されたユーザーで試してみましょう。"

#. type: delimited block -
#: upstream/_guides/security-jdbc.adoc:245
#, no-wrap
msgid ""
"$ curl -i -X GET -u admin:admin http://localhost:8080/api/admin\n"
"HTTP/1.1 200 OK\n"
"Content-Length: 5\n"
"Content-Type: text/plain;charset=UTF-8\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-jdbc.adoc:247
#, no-wrap
msgid "admin%\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-jdbc.adoc:250
msgid "By providing the `admin:admin` credentials, the extension authenticated the user and loaded their roles.  The `admin` user is authorized to access to the protected resources."
msgstr "`admin:admin` 資格情報を提供することで、エクステンションはユーザーを認証し、そのロールをロードしました。 `admin` ユーザーは、保護されたリソースへのアクセスを許可されています。"

#. type: Plain text
#: upstream/_guides/security-jdbc.adoc:252
msgid "The user `admin` should be forbidden to access a resource protected with `@RolesAllowed(\"user\")` because it doesn't have this role."
msgstr "ユーザー `admin` は、この役割を持っていないので、 `@RolesAllowed(\"user\")` で保護されたリソースへのアクセスを禁止する必要があります。"

#. type: delimited block -
#: upstream/_guides/security-jdbc.adoc:259
#, no-wrap
msgid ""
"$ curl -i -X GET -u admin:admin http://localhost:8080/api/users/me\n"
"HTTP/1.1 403 Forbidden\n"
"Content-Length: 34\n"
"Content-Type: text/html;charset=UTF-8\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-jdbc.adoc:261
#, no-wrap
msgid "Forbidden%\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-jdbc.adoc:264
msgid "Finally, using the user `user` works and the security context contains the principal details (username for instance)."
msgstr "最後に、ユーザー `user` を使用すると動作し、セキュリティーコンテキストには主要な詳細(例えばユーザー名)が含まれています。"

#. type: delimited block -
#: upstream/_guides/security-jdbc.adoc:271
#, no-wrap
msgid ""
"$ curl -i -X GET -u user:user http://localhost:8080/api/users/me\n"
"HTTP/1.1 200 OK\n"
"Content-Length: 4\n"
"Content-Type: text/plain;charset=UTF-8\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-jdbc.adoc:273
#, no-wrap
msgid "user%\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/security-jdbc.adoc:275
#, no-wrap
msgid "Advanced Configuration"
msgstr "高度な設定"

#. type: Plain text
#: upstream/_guides/security-jdbc.adoc:278
msgid "This guide only covered an easy use case, the extension offers multiple datasources, multiple principal queries configuration as well as a bcrypt password mapper."
msgstr "このガイドでは、簡単な使用例のみを取り上げていますが、このエクステンションは複数のデータソース、複数のプリンシパルクエリの設定、および bcrypt パスワードマッパーを提供しています。"

#. type: Plain text
#: upstream/_guides/security-jdbc.adoc:285
msgid "quarkus.datasource.db-kind=postgresql quarkus.datasource.username=quarkus quarkus.datasource.password=quarkus quarkus.datasource.jdbc.url=jdbc:postgresql:multiple-data-sources-users"
msgstr "quarkus.datasource.db-kind=postgresql quarkus.datasource.username=quarkus quarkus.datasource.password=quarkus quarkus.datasource.jdbc.url=jdbc:postgresql:multiple-data-sources-users"

#. type: Plain text
#: upstream/_guides/security-jdbc.adoc:290
msgid "quarkus.datasource.permissions.db-kind=postgresql quarkus.datasource.permissions.username=quarkus quarkus.datasource.permissions.password=quarkus quarkus.datasource.permissions.jdbc.url=jdbc:postgresql:multiple-data-sources-permissions"
msgstr "quarkus.datasource.permissions.db-kind=postgresql quarkus.datasource.permissions.username=quarkus quarkus.datasource.permissions.password=quarkus quarkus.datasource.permissions.jdbc.url=jdbc:postgresql:multiple-data-sources-permissions"

#. type: Plain text
#: upstream/_guides/security-jdbc.adoc:295
msgid "quarkus.security.jdbc.enabled=true quarkus.security.jdbc.principal-query.sql=SELECT u.password FROM test_user u WHERE u.username=? quarkus.security.jdbc.principal-query.clear-password-mapper.enabled=true quarkus.security.jdbc.principal-query.clear-password-mapper.password-index=1"
msgstr "quarkus.security.jdbc.enabled=true quarkus.security.jdbc.principal-query.sql=SELECT u.password FROM test_user u WHERE u.username=? quarkus.security.jdbc.principal-query.clear-password-mapper.enabled=true quarkus.security.jdbc.principal-query.clear-password-mapper.password-index=1"

#. type: Plain text
#: upstream/_guides/security-jdbc.adoc:300
msgid "quarkus.security.jdbc.principal-query.roles.sql=SELECT r.role_name FROM test_role r, test_user_role ur WHERE ur.username=? AND ur.role_id = r.id quarkus.security.jdbc.principal-query.roles.datasource=permissions quarkus.security.jdbc.principal-query.roles.attribute-mappings.0.index=1 quarkus.security.jdbc.principal-query.roles.attribute-mappings.0.to=groups"
msgstr "quarkus.security.jdbc.principal-query.roles.sql=SELECT r.role_name FROM test_role r, test_user_role ur WHERE ur.username=? AND ur.role_id = r.id quarkus.security.jdbc.principal-query.roles.datasource=permissions quarkus.security.jdbc.principal-query.roles.attribute-mappings.0.index=1 quarkus.security.jdbc.principal-query.roles.attribute-mappings.0.to=groups"

#. type: Title ==
#: upstream/_guides/security-jdbc.adoc:303
#, no-wrap
msgid "Configuration Reference"
msgstr "設定リファレンス"

#. type: Title ==
#: upstream/_guides/security-jdbc.adoc:307
#, no-wrap
msgid "References"
msgstr "参照"

#. type: Plain text
#: upstream/_guides/security-jdbc.adoc:309
msgid "xref:security.adoc[Quarkus Security]"
msgstr "xref:security.adoc[Quarkus Security]"

#~ msgid "To complete this guide, you need:"
#~ msgstr "このガイドを完成させるには、以下が必要です:"

#~ msgid "less than 15 minutes"
#~ msgstr "15 分未満"

#~ msgid "an IDE"
#~ msgstr "IDE"

#~ msgid "JDK 11+ installed with `JAVA_HOME` configured appropriately"
#~ msgstr "JDK 11+ がインストールされ、 `JAVA_HOME` が適切に設定されていること"

#~ msgid "Apache Maven {maven-version}"
#~ msgstr "Apache Maven {maven-version}"

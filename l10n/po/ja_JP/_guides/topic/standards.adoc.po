# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: \n"
"POT-Creation-Date: 2022-04-29 21:25+0900\n"
"PO-Revision-Date: 2022-05-06 11:22+0900\n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 3.0.1\n"

#. type: YAML Front Matter: layout
#: upstream/_guides/topic/standards.adoc:1
#, no-wrap
msgid "vision"
msgstr "ビジョン"

#. type: YAML Front Matter: permalink
#: upstream/_guides/topic/standards.adoc:1
#, no-wrap
msgid "/vision/standards"
msgstr "/vision/standards"

#. type: Title =
#: upstream/_guides/topic/standards.adoc:7
#, no-wrap
msgid "{project-name} - Our View on Standards"
msgstr "{project-name} - 標準に対するスタンス"

#. type: Plain text
#: upstream/_guides/topic/standards.adoc:16
msgid "Let's go to the quark of things.  We don't want you to spend hours learning new technologies.  Instead, {project-name} provides leading frameworks and technologies from open source projects, such as https://vertx.io[Vert.x], https://camel.apache.org[Camel], http://hibernate.org[Hibernate] and https://resteasy.github.io[RESTEasy]. You can also find innovative community projects, such as https://smallrye.io[SmallRye]. If you are looking for standards you can find https://microprofile.io[MicroProfile] and selected specifications from https://jakarta.ee[Jakarta EE]."
msgstr "物事の核心に迫りましょう。私たちは、新しい技術の習得に何時間も費やしてほしくありません。その代わり、{project-name} では、 link:https://vertx.io[Vert.x]、 link:https://camel.apache.org[Camel]、 link:http://hibernate.org[Hibernate]、 link:https://resteasy.github.io[RESTEasy]などのオープンソースプロジェクトの主要なフレームワークや技術を提供しています。また、 link:https://smallrye.io[SmallRye]のような革新的なコミュニティプロジェクトもあります。標準仕様を探している場合は、 link:https://jakarta.ee[Jakarta EE]の link:https://microprofile.io[MicroProfile] や選りすぐりの仕様を見つけることができます。"

#. type: Plain text
#: upstream/_guides/topic/standards.adoc:18
msgid "Our dependency injection solution is based on CDI with Arc."
msgstr "我々の依存性注入ソリューションは、ArcによるCDIに基づいています。"

#. type: Plain text
#: upstream/_guides/topic/standards.adoc:20
msgid "You can use JAX-RS annotations to define the REST endpoints with https://resteasy.github.io[RESTEasy]."
msgstr "link:https://resteasy.github.io[RESTEasy]では、JAX-RSアノテーションを使ってRESTエンドポイントを定義することができます。"

#. type: Plain text
#: upstream/_guides/topic/standards.adoc:23
msgid "You can use JPA annotations to map your persistent entities and JTA annotations to declare the transaction boundaries with http://hibernate.org[Hibernate]"
msgstr "JPAアノテーションを使って永続的なエンティティをマッピングし、JTAアノテーションを使って link:http://hibernate.org[Hibernate]でトランザクション境界を宣言することができます。"

#. type: Plain text
#: upstream/_guides/topic/standards.adoc:25
msgid "You can use https://smallrye.io[SmallRye] to configure, secure, document and monitor your application."
msgstr "link:https://smallrye.io[SmallRye]を使用して、アプリケーションの設定、セキュア化、文書化、監視を行うことができます。"

#. type: Plain text
#: upstream/_guides/topic/standards.adoc:27
msgid "You can use https://vertx.io[Vert.x] or https://camel.apache.org[Camel], and we support much more."
msgstr "link:https://vertx.io[Vert.x]や link:https://camel.apache.org[Camel]を使用することができ、さらに多くのものをサポートしています。"

#. type: Plain text
#: upstream/_guides/topic/standards.adoc:29
msgid "Of course, {project-name} is not a passive consumer. Our goal is to improve and innovate the technologies we use and contribute back to the open source projects and standards we rely on."
msgstr "勿論、我々は標準に限定されない為、あなたの可能性を広げることが可能です。 もちろん、{project-name} は受動的な消費者ではありません。 私たちのゴールは、使用する技術を改善、革新し、私たちが頼りにしているオープンソースプロジェクトと標準に貢献することです。"

#~ msgid "---\n"
#~ msgstr "---\n"

#~ msgid ""
#~ "layout: vision\n"
#~ "permalink: /vision/standards\n"
#~ "---\n"
#~ msgstr ""
#~ "layout: vision\n"
#~ "permalink: /vision/standards\n"
#~ "---\n"

#~ msgid "Our dependency injection solution is based on CDI.  You can use JAX-RS annotations to define the REST endpoints.  You can use JPA annotations to map your persistent entities and JTA annotations to declare the transaction boundaries.  You can use Eclipse MicroProfile to configure and monitor your application.  You can use Vert.x, Apache Camel and we support much more."
#~ msgstr "我々の依存性注入ソリューションはCDIに基づいています。 JAX-RS アノテーションを使用して REST エンドポイントを定義できます。 JPA アノテーションを使用して、永続エンティティーをマップし、 JTA アノテーションを使用してトランザクション境界を宣言することができます。 Eclipse MicroProfileを使用して、アプリケーションを構成およびモニターできます。 Vert.x、Apache Camelを使用することが出来、そして更に多くをサポートしています。"

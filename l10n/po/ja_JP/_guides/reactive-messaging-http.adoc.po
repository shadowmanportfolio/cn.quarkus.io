# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: \n"
"POT-Creation-Date: 2022-02-04 01:50+0900\n"
"PO-Revision-Date: 2021-04-21 14:53+0900\n"
"Last-Translator: Nobuhiro Sue <nobuhiro.sue@gmail.com>\n"
"Language-Team: \n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 2.4.2\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/reactive-messaging-http.adoc:6
#, fuzzy, no-wrap
msgid "Using HTTP with Reactive Messaging"
msgstr "リアクティブメッセージング"

#. type: Plain text
#: upstream/_guides/reactive-messaging-http.adoc:12
msgid "This guide demonstrates how your Quarkus application can utilize SmallRye Reactive Messaging to consume and produce HTTP messages."
msgstr "このガイドでは、Quarkus アプリケーションが MicroProfile Reactive Messaging を使用して HTTP メッセージを消費および生成する方法を説明します。"

#. type: Title ==
#: upstream/_guides/reactive-messaging-http.adoc:13
#, no-wrap
msgid "Prerequisites"
msgstr "前提条件"

#. type: Plain text
#: upstream/_guides/reactive-messaging-http.adoc:16
msgid "To complete this guide, you need:"
msgstr "このガイドを完成させるには、以下が必要です:"

#. type: Plain text
#: upstream/_guides/reactive-messaging-http.adoc:18
msgid "less than 15 minutes"
msgstr "15分未満"

#. type: Plain text
#: upstream/_guides/reactive-messaging-http.adoc:19
msgid "an IDE"
msgstr "IDE"

#. type: Plain text
#: upstream/_guides/reactive-messaging-http.adoc:20
msgid "JDK 11+ installed with `JAVA_HOME` configured appropriately"
msgstr "JDK 11+ がインストールされ、 `JAVA_HOME`  が適切に設定されていること"

#. type: Plain text
#: upstream/_guides/reactive-messaging-http.adoc:21
msgid "Apache Maven {maven-version}"
msgstr "Apache Maven {maven-version}"

#. type: Plain text
#: upstream/_guides/reactive-messaging-http.adoc:22
msgid "GraalVM, Docker or Podman installed if you want to run in native mode."
msgstr "ネイティブモードで実行したい場合は、GraalVM、Docker、Podman がインストールされていること"

#. type: Title ==
#: upstream/_guides/reactive-messaging-http.adoc:23
#, no-wrap
msgid "Architecture"
msgstr "アーキテクチャ"

#. type: Plain text
#: upstream/_guides/reactive-messaging-http.adoc:27
msgid "In this guide we will implement a service, namely `CostConverter` that consumes HTTP messages with costs in multiple currencies and converts each cost to its value in Euro."
msgstr "このガイドでは、複数の通貨のコストを持つ HTTP メッセージを消費し、各コストをユーロの値に変換するサービス、すなわち `CostConverter` を実装します。"

#. type: Plain text
#: upstream/_guides/reactive-messaging-http.adoc:30
msgid "To let a user easily try out the service, we will implement an HTTP resource summing up the costs (`CostCollector`), and a simple web page to add new costs and watch the sum."
msgstr "ユーザーが簡単にサービスを試すことができるように、コストを合計したHTTPリソース( `CostCollector` )と、新しいコストを追加して合計を見るためのシンプルなWebページを実装します。"

#. type: Title ==
#: upstream/_guides/reactive-messaging-http.adoc:32
#, no-wrap
msgid "Solution"
msgstr "ソリューション"

#. type: Plain text
#: upstream/_guides/reactive-messaging-http.adoc:36
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the completed example."
msgstr "次のセクションで紹介する手順に沿って、ステップを踏んでアプリを作成することをお勧めします。ただし、完成した例にそのまま進んでも構いません。"

#. type: Plain text
#: upstream/_guides/reactive-messaging-http.adoc:38
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Gitレポジトリをクローンするか `git clone {quickstarts-clone-url}` 、 {quickstarts-archive-url}[アーカイブ] をダウンロードします。"

#. type: Plain text
#: upstream/_guides/reactive-messaging-http.adoc:40
msgid "The solution is located in the `reactive-messaging-http-quickstart` {quickstarts-tree-url}/reactive-messaging-http-quickstart[directory]."
msgstr "ソリューションは `reactive-messaging-http-quickstart` {quickstarts-tree-url}/reactive-messaging-http-quickstart[ディレクトリ] にあります。"

#. type: Title ==
#: upstream/_guides/reactive-messaging-http.adoc:41
#, no-wrap
msgid "Creating the Maven Project"
msgstr "Mavenプロジェクトの作成"

#. type: Plain text
#: upstream/_guides/reactive-messaging-http.adoc:44
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "まず、新しいプロジェクトが必要です。以下のコマンドで新規プロジェクトを作成します。"

#. type: delimited block -
#: upstream/_guides/reactive-messaging-http.adoc:53
#, no-wrap
msgid ""
"mvn io.quarkus.platform:quarkus-maven-plugin:{quarkus-version}:create \\\n"
"    -DprojectGroupId=org.acme \\\n"
"    -DprojectArtifactId=reactive-messaging-http-quickstart \\\n"
"    -Dextensions=\"reactive-messaging-http\" \\\n"
"    -DnoExamples\n"
"cd reactive-messaging-http-quickstart\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-messaging-http.adoc:56
msgid "This command generates a Maven project, importing the Reactive Messaging and HTTP connector extensions."
msgstr "このコマンドは、Reactive MessagingとHTTPコネクタエクステンションをインポートしてMavenプロジェクトを生成します。"

#. type: Title ==
#: upstream/_guides/reactive-messaging-http.adoc:57
#, no-wrap
msgid "The Converter"
msgstr "コンバーター"

#. type: Plain text
#: upstream/_guides/reactive-messaging-http.adoc:60
msgid "Create the `src/main/java/org/acme/reactivehttp/CostConverter.java` file, with the following content:"
msgstr "以下の内容の `src/main/java/org/acme/reactivehttp/CostConverter.java` ファイルを作成します。"

#. type: delimited block -
#: upstream/_guides/reactive-messaging-http.adoc:64
#: upstream/_guides/reactive-messaging-http.adoc:113
#: upstream/_guides/reactive-messaging-http.adoc:186
#, no-wrap
msgid "package org.acme.reactivehttp;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-messaging-http.adoc:68
#, no-wrap
msgid ""
"import org.eclipse.microprofile.reactive.messaging.Incoming;\n"
"import org.eclipse.microprofile.reactive.messaging.Outgoing;\n"
"import org.jboss.logging.Logger;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-messaging-http.adoc:72
#, no-wrap
msgid ""
"import javax.enterprise.context.ApplicationScoped;\n"
"import java.util.HashMap;\n"
"import java.util.Map;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-messaging-http.adoc:78
#, no-wrap
msgid ""
"/**\n"
" * A bean consuming costs in multiple currencies and producing prices in EUR from them\n"
" */\n"
"@ApplicationScoped\n"
"public class CostConverter {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-messaging-http.adoc:80
#, no-wrap
msgid "    private static final Logger log = Logger.getLogger(CostConverter.class);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-messaging-http.adoc:82
#, no-wrap
msgid "    private static final Map<String, Double> conversionRatios = new HashMap<>();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-messaging-http.adoc:89
#, no-wrap
msgid ""
"    static {\n"
"        conversionRatios.put(\"CHF\", 0.93);\n"
"        conversionRatios.put(\"USD\", 0.84);\n"
"        conversionRatios.put(\"PLN\", 0.22);\n"
"        conversionRatios.put(\"EUR\", 1.);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-messaging-http.adoc:100
#, no-wrap
msgid ""
"    @Incoming(\"incoming-costs\") // <1>\n"
"    @Outgoing(\"outgoing-costs\") // <2>\n"
"    double convert(Cost cost) { // <3>\n"
"        Double conversionRatio = conversionRatios.get(cost.getCurrency().toUpperCase());\n"
"        if (conversionRatio == null) {\n"
"            return 0.;\n"
"        }\n"
"        return conversionRatio * cost.getValue();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-messaging-http.adoc:104
msgid "Consume messages from the `incoming-costs` stream."
msgstr "`incoming-costs` ストリームからメッセージを消費します。"

#. type: Plain text
#: upstream/_guides/reactive-messaging-http.adoc:105
msgid "Dispatch returned values to the `outgoing-costs` stream."
msgstr "返された値を `outgoing-costs` ストリームにディスパッチします。"

#. type: Plain text
#: upstream/_guides/reactive-messaging-http.adoc:108
#, fuzzy
msgid "Consume an event with payload of type `Cost` and produce a `double`.  In the case of consuming an arbitrary object, the reactive-messaging-http extension will attempt to deserialize the request body as a JSON object."
msgstr "`Cost` タイプのペイロードを持つイベントを消費して、 `double` を生成します。任意のオブジェクトを消費する場合、reactive-messaging-http extensionは、リクエストボディをJSONオブジェクトとしてデシリアライズしようとします。"

#. type: Plain text
#: upstream/_guides/reactive-messaging-http.adoc:110
msgid "Let's define the `Cost` class:"
msgstr "`Cost` クラスを定義してみましょう。"

#. type: delimited block -
#: upstream/_guides/reactive-messaging-http.adoc:117
#, no-wrap
msgid ""
"public class Cost {\n"
"    private double value;\n"
"    private String currency;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-messaging-http.adoc:121
#, no-wrap
msgid ""
"    public double getValue() {\n"
"        return value;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-messaging-http.adoc:125
#, no-wrap
msgid ""
"    public void setValue(double value) {\n"
"        this.value = value;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-messaging-http.adoc:129
#, no-wrap
msgid ""
"    public String getCurrency() {\n"
"        return currency;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-messaging-http.adoc:134
#, no-wrap
msgid ""
"    public void setCurrency(String currency) {\n"
"        this.currency = currency;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-messaging-http.adoc:140
msgid "In the next step, we will create configurations for both streams in the `application.properties` file."
msgstr "次のステップでは、 `application.properties` ファイルに両方のストリームの設定を作成します。"

#. type: Title ==
#: upstream/_guides/reactive-messaging-http.adoc:141
#, no-wrap
msgid "Configuring the HTTP connector"
msgstr "HTTPコネクタの設定"

#. type: Plain text
#: upstream/_guides/reactive-messaging-http.adoc:145
msgid "We need to configure the HTTP connector. This is done in the `application.properties` file.  The keys are structured as follows:"
msgstr "HTTP コネクタを設定する必要があります。これは `application.properties` ファイルで行います。キーは以下のように構成されています。"

#. type: Plain text
#: upstream/_guides/reactive-messaging-http.adoc:147
msgid "`mp.messaging.[outgoing|incoming].{channel-name}.{property}=value`"
msgstr "`mp.messaging.[outgoing|incoming].{channel-name}.{property}=value`"

#. type: Plain text
#: upstream/_guides/reactive-messaging-http.adoc:149
msgid "The `channel-name` segment must match the value set in the `@Incoming` and `@Outgoing` annotation:"
msgstr "`channel-name` セグメントは、 `@Incoming` および `@Outgoing` アノテーションで設定された値と一致する必要があります。"

#. type: Plain text
#: upstream/_guides/reactive-messaging-http.adoc:151
msgid "`incoming-costs` -> a source that receives costs"
msgstr "`incoming-costs` → コストを受け取るソース"

#. type: Plain text
#: upstream/_guides/reactive-messaging-http.adoc:152
msgid "`outgoing-costs` -> a sink that receives converted costs"
msgstr "`outgoing-costs` → 換算されたコストを受け取るシンク"

#. type: delimited block -
#: upstream/_guides/reactive-messaging-http.adoc:156
#, no-wrap
msgid "mp.messaging.outgoing.outgoing-costs.connector=quarkus-http\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-messaging-http.adoc:160
#, no-wrap
msgid ""
"# here we are using a URL pointing to an endpoint\n"
"# you can use e.g. an environment variable to change it\n"
"mp.messaging.outgoing.outgoing-costs.url=http://localhost:${quarkus.http.port}/cost-collector\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-messaging-http.adoc:163
#, no-wrap
msgid ""
"# we need to use a different port for tests:\n"
"%test.mp.messaging.outgoing.outgoing-costs.url=http://localhost:${quarkus.http.test-port}/cost-collector\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-messaging-http.adoc:166
#, no-wrap
msgid ""
"# POST is the default method. Another possibility is PUT\n"
"mp.messaging.outgoing.outgoing-costs.method=POST\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-messaging-http.adoc:169
#, no-wrap
msgid "mp.messaging.incoming.incoming-costs.connector=quarkus-http\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-messaging-http.adoc:172
#, no-wrap
msgid ""
"# the incoming-costs channel will be fed via an endpoint on the `/costs` path\n"
"mp.messaging.incoming.incoming-costs.path=/costs\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-messaging-http.adoc:175
#, no-wrap
msgid ""
"# POST is the default method. Another possibility is PUT\n"
"mp.messaging.incoming.incoming-costs.method=POST\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/reactive-messaging-http.adoc:178
#, no-wrap
msgid "The CostCollector"
msgstr "コストコレクター"

#. type: Plain text
#: upstream/_guides/reactive-messaging-http.adoc:182
msgid "To illustrate that converting messages and passing them through works, let's add an endpoint that will receive the outgoing costs and sum them up.  This is a usual JAX-RS endpoint."
msgstr "メッセージを変換して受け渡す様子を説明するために、送信コストを受け取って集計するエンドポイントを追加してみましょう。これは通常のJAX-RSエンドポイントです。"

#. type: delimited block -
#: upstream/_guides/reactive-messaging-http.adoc:191
#, no-wrap
msgid ""
"import javax.enterprise.context.ApplicationScoped;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.POST;\n"
"import javax.ws.rs.Path;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-messaging-http.adoc:195
#, no-wrap
msgid ""
"@Path(\"/cost-collector\")\n"
"@ApplicationScoped\n"
"public class CostCollector {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-messaging-http.adoc:197
#, no-wrap
msgid "    private double sum = 0;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-messaging-http.adoc:202
#, no-wrap
msgid ""
"    @POST\n"
"    public void consumeCost(String valueAsString) {\n"
"        sum += Double.parseDouble(valueAsString);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-messaging-http.adoc:207
#, no-wrap
msgid ""
"    @GET\n"
"    public double getSum() {\n"
"        return sum;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-messaging-http.adoc:209
#, no-wrap
msgid "}\n"
msgstr "}\n"

#. type: Title ==
#: upstream/_guides/reactive-messaging-http.adoc:212
#, no-wrap
msgid "The HTML page"
msgstr "HTMLページ"

#. type: Plain text
#: upstream/_guides/reactive-messaging-http.adoc:215
msgid "To conveniently interact with the application, let's create a simple web page."
msgstr "アプリケーションと便利にやりとりするために、簡単なWebページを作成してみましょう。"

#. type: Plain text
#: upstream/_guides/reactive-messaging-http.adoc:218
msgid "The page will provide a form to add costs, and an info of the current sum of costs.  The page periodically updates the sum by requesting the current sum from `/cost-collector`."
msgstr "このページでは、コストを追加するためのフォームと、現在のコストの合計の情報を提供します。ページは定期的に `/cost-collector` から現在の合計を要求することによって合計を更新します。"

#. type: Plain text
#: upstream/_guides/reactive-messaging-http.adoc:220
msgid "Create the `src/main/resources/META-INF/resources/index.html` file, with the following content:"
msgstr "以下の内容の `src/main/resources/META-INF/resources/index.html` ファイルを作成します。"

#. type: delimited block -
#: upstream/_guides/reactive-messaging-http.adoc:228
#, no-wrap
msgid ""
"<!DOCTYPE html>\n"
"<html lang=\"en\">\n"
"<head>\n"
"    <meta charset=\"UTF-8\">\n"
"    <title>Costs</title>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-messaging-http.adoc:236
#, no-wrap
msgid ""
"    <link rel=\"stylesheet\" type=\"text/css\"\n"
"          href=\"https://cdnjs.cloudflare.com/ajax/libs/patternfly/3.24.0/css/patternfly.min.css\">\n"
"    <link rel=\"stylesheet\" type=\"text/css\"\n"
"          href=\"https://cdnjs.cloudflare.com/ajax/libs/patternfly/3.24.0/css/patternfly-additions.min.css\">\n"
"</head>\n"
"<body>\n"
"<div class=\"container\">\n"
msgstr ""
"    <link rel=\"stylesheet\" type=\"text/css\"\n"
"          href=\"https://cdnjs.cloudflare.com/ajax/libs/patternfly/3.24.0/css/patternfly.min.css\">\n"
"    <link rel=\"stylesheet\" type=\"text/css\"\n"
"          href=\"https://cdnjs.cloudflare.com/ajax/libs/patternfly/3.24.0/css/patternfly-additions.min.css\">\n"
"</head>\n"
"<body>\n"
"<div class=\"container\">\n"

#. type: delimited block -
#: upstream/_guides/reactive-messaging-http.adoc:253
#, no-wrap
msgid ""
"    <h2>Add a cost</h2>\n"
"    <div>\n"
"        <div>\n"
"            <label for=\"value\">Value</label>\n"
"            <input type=\"text\" id=\"value\">\n"
"        </div>\n"
"        <div>\n"
"            <label for=\"currency\">Currency</label>\n"
"            <select id=\"currency\">\n"
"                <option value=\"CHF\">Swiss franc</option>\n"
"                <option value=\"USD\">United States dollar</option>\n"
"                <option value=\"CHF\">Polish złoty</option>\n"
"            </select>\n"
"        </div>\n"
"        <input type=\"button\" onclick=\"add()\" value=\"Add\">\n"
"    </div>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-messaging-http.adoc:265
#, no-wrap
msgid ""
"    <h2>Last cost</h2>\n"
"    <div class=\"row\">\n"
"        <p class=\"col-md-12\">The total cost is <strong><span id=\"content\">N/A</span>&nbsp;&euro;</strong>.</p>\n"
"    </div>\n"
"</div>\n"
"</body>\n"
"<script>\n"
"    add = function() {\n"
"        var value = document.getElementById('value').value;\n"
"        var currency = document.getElementById('currency').value;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-messaging-http.adoc:270
#, no-wrap
msgid ""
"        var cost = {\n"
"            value: document.getElementById('value').value,\n"
"            currency: document.getElementById('currency').value\n"
"        };\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-messaging-http.adoc:273
#, no-wrap
msgid ""
"        fetch('costs', { method: 'POST', body: JSON.stringify(cost) });\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-messaging-http.adoc:279
#, no-wrap
msgid ""
"    updateCost = function() {\n"
"        fetch('cost-collector').then(response => response.text()).then(sum =>\n"
"            document.getElementById('content').textContent=sum\n"
"        );\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-messaging-http.adoc:283
#, no-wrap
msgid ""
"    window.setInterval(updateCost, 500);\n"
"</script>\n"
"</html>\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/reactive-messaging-http.adoc:285
#, no-wrap
msgid "Get it running"
msgstr "実行"

#. type: Plain text
#: upstream/_guides/reactive-messaging-http.adoc:288
msgid "Run the application using:"
msgstr "以下でアプリケーションを実行します。"

#. type: delimited block -
#: upstream/_guides/reactive-messaging-http.adoc:292
#, no-wrap
msgid "./mvnw quarkus:dev\n"
msgstr "./mvnw quarkus:dev\n"

#. type: Plain text
#: upstream/_guides/reactive-messaging-http.adoc:295
msgid "Open `http://localhost:8080/index.html` in your browser."
msgstr "ブラウザで `http://localhost:8080/index.html` を開いてください。"

#. type: Title ==
#: upstream/_guides/reactive-messaging-http.adoc:297
#, no-wrap
msgid "Running Native"
msgstr "ネイティブ実行"

#. type: Plain text
#: upstream/_guides/reactive-messaging-http.adoc:300
msgid "You can build the native executable with:"
msgstr "以下ででネイティブ実行可能ファイルをビルドすることができます。"

#. type: delimited block -
#: upstream/_guides/reactive-messaging-http.adoc:304
#, no-wrap
msgid "./mvnw package -Pnative\n"
msgstr "./mvnw package -Pnative\n"

#. type: Title ==
#: upstream/_guides/reactive-messaging-http.adoc:306
#, no-wrap
msgid "Going further"
msgstr "さらに詳しく"

#. type: Title ===
#: upstream/_guides/reactive-messaging-http.adoc:308
#, no-wrap
msgid "HTTP connector options"
msgstr "HTTP コネクタのオプション"

#. type: Plain text
#: upstream/_guides/reactive-messaging-http.adoc:310
msgid "All `quarkus-http` connector options:"
msgstr "`quarkus-http` コネクタの全オプション。"

#. type: delimited block -
#: upstream/_guides/reactive-messaging-http.adoc:314
#, no-wrap
msgid "# OUTGOING\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-messaging-http.adoc:317
#, no-wrap
msgid ""
"# The target URL\n"
"mp.messaging.outgoing.<channelName>.url=http://localhost:8213\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-messaging-http.adoc:320
#, no-wrap
msgid ""
"# Message payload serializer, optional, implementation of `io.quarkus.reactivemessaging.http.runtime.serializers.Serializer`\n"
"mp.messaging.outgoing.<channelName>.serializer=com.example.MySerializer\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-messaging-http.adoc:324
#, no-wrap
msgid ""
"# The number of attempts to make for sending a request to a remote endpoint. Must not be less than zero\n"
"# Zero by default\n"
"mp.messaging.outgoing.<channelName>.maxRetries=3\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-messaging-http.adoc:327
#, no-wrap
msgid ""
"# Configures the random factor when using back-off with maxRetries > 0. 0.5 by default\n"
"mp.messaging.outgoing.<channelName>.jitter=0.3\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-messaging-http.adoc:331
#, no-wrap
msgid ""
"# Configures a back-off delay between attempts to send a request.\n"
"# A random factor (jitter) is applied to increase the delay when several failures happen.\n"
"mp.messaging.outgoing.<channelName>.delay=1s\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-messaging-http.adoc:334
#, no-wrap
msgid ""
"#The HTTP method (either `POST` or `PUT`), `POST` by default\n"
"mp.messaging.outgoing.<channelName>.method=PUT\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-messaging-http.adoc:338
#, no-wrap
msgid ""
"#INCOMING\n"
"# The HTTP method (either `POST` or `PUT`, `POST` by default\n"
"mp.messaging.incoming.<channelName>.method=POST\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-messaging-http.adoc:341
#, no-wrap
msgid ""
"# The path of the endpoint\n"
"mp.messaging.incoming.<channelName>.path=/my-reactive-ws-endpoint\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-messaging-http.adoc:345
#, no-wrap
msgid ""
"# HTTP endpoint buffers messages if a consumer is not able to keep up. This setting specifies the size of the buffer.\n"
"# 8 by default.\n"
"mp.messaging.incoming.<channelName>.buffer-size=13\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/reactive-messaging-http.adoc:349
#, no-wrap
msgid "Reactive Messaging"
msgstr "リアクティブメッセージング"

#. type: Plain text
#: upstream/_guides/reactive-messaging-http.adoc:351
msgid "This extension utilizes SmallRye Reactive Messaging to build data streaming applications."
msgstr "このエクステンションは、MicroProfile Reactive Messaging を利用してデータストリーミングアプリケーションを構築します。"

#. type: Plain text
#: upstream/_guides/reactive-messaging-http.adoc:352
msgid "If you want to go further check the documentation of https://smallrye.io/smallrye-reactive-messaging[SmallRye Reactive Messaging], the implementation used in Quarkus."
msgstr "さらに詳しく知りたい場合は、Quarkusで使用されている実装である link:https://smallrye.io/smallrye-reactive-messaging[SmallRye Reactive Messaging] のドキュメントを確認してください。"

#~ msgid "WebSockets"
#~ msgstr "WebSocket"

#~ msgid "Except of the `quarkus-http` connector, the `quarkus-reactive-messaging-http` extension also brings in `quarkus-websocket` - a connector for exposing and feeding WebSockets.  At the moment only binary data is supported."
#~ msgstr "`quarkus-http` コネクタ以外に、 `quarkus-reactive-messaging-http` エクステンションには `quarkus-websocket` - WebSocket を公開して供給するためのコネクタ - が組み込まれています。現時点ではバイナリーデータのみサポートされています。"

#~ msgid "While the sink of the HTTP connector checks if the message is consumed by the remote endpoint, the WebSocket sink does not. It may happen that a failure to receive a message is not reported, e.g. if the remote side closes the WebSocket connection in a crucial moment."
#~ msgstr "HTTP コネクタのシンクは、メッセージがリモートエンドポイントによって消費されるかどうかをチェックしますが、WebSocket シンクはチェックしません。例えば、リモート側が肝心な時に WebSocket 接続を閉じた場合など、メッセージの受信に失敗したことが報告されないことがあるかもしれません。"

#~ msgid "The `quarkus-websocket` connector is configured with the following properties:"
#~ msgstr "`quarkus-websocket` コネクタは、以下のプロパティーで構成されています。"

#~ msgid "If you did the Kafka or AMQP quickstart, you have realized that it's the same code.  The only difference is the connector configuration."
#~ msgstr "KafkaやAMQPのクイックスタートをした人は、同じコードであることに気づいたはずです。違いはコネクタの設定だけです。"

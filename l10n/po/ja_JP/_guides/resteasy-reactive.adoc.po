# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: \n"
"POT-Creation-Date: 2022-05-11 10:12+0000\n"
"PO-Revision-Date: 2022-05-08 10:30+0900\n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 3.0.1\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/resteasy-reactive.adoc:6
#, no-wrap
msgid "Writing REST Services with RESTEasy Reactive"
msgstr "RESTEasy ReactiveによるRESTサービスの作成"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:20
msgid "This guide explains how to write REST Services with RESTEasy Reactive in Quarkus."
msgstr "このガイドでは、QuarkusでRESTEasy Reactiveを使用してRESTサービスを記述する方法を説明します。"

#. type: delimited block =
#: upstream/_guides/resteasy-reactive.adoc:25
msgid "This is the reference guide for RESTEasy Reactive.  For a more lightweight introduction, please refer to the xref:rest-json.adoc[Writing JSON REST services guides]."
msgstr "本書は、RESTEasy Reactiveのリファレンスガイドです。よりライトな紹介は、 link:rest-json.html[Writing JSON REST servicesのガイド] を参照してください。"

#. type: Title ==
#: upstream/_guides/resteasy-reactive.adoc:27
#, no-wrap
msgid "What is RESTEasy Reactive?"
msgstr "RESTEasy Reactiveとは？"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:33
msgid "RESTEasy Reactive is a new link:{jaxrsspec}[JAX-RS] implementation written from the ground up to work on our common https://vertx.io/[Vert.x] layer and is thus fully reactive, while also being very tightly integrated with Quarkus and consequently moving a lot of work to build time."
msgstr "RESTEasy Reactiveは、 link:https://vertx.io/[Vert.x] の共通レイヤー上で動作するように一から書かれた新しい link:{jaxrsspec}[JAX-RS]実装で、完全なリアクティブ性を備えています。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:37
msgid "You should be able to use it in place of any JAX-RS implementation, but on top of that it has great performance for both blocking and non-blocking endpoints, and a lot of new features on top of what JAX-RS provides."
msgstr "JAX-RSの実装の代わりに使うことができるはずですが、それに加えて、ブロッキングエンドポイントとノンブロッキングエンドポイントの両方で優れたパフォーマンスを発揮し、JAX-RSが提供する機能に加えて多くの新機能を備えています。"

#. type: Title ==
#: upstream/_guides/resteasy-reactive.adoc:38
#, no-wrap
msgid "Writing endpoints"
msgstr "エンドポイントの作成"

#. type: Title ===
#: upstream/_guides/resteasy-reactive.adoc:40
#, no-wrap
msgid "Getting started"
msgstr "はじめに"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:43
msgid "Add the following import to your build file:"
msgstr "次のインポートをビルドファイルに追加します:"

#. type: Block title
#: upstream/_guides/resteasy-reactive.adoc:45
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:51
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-resteasy-reactive</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_guides/resteasy-reactive.adoc:54
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:57
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-resteasy-reactive\")\n"
msgstr "implementation(\"io.quarkus:quarkus-resteasy-reactive\")\n"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:60
msgid "You can now write your first endpoint in the `org.acme.rest.Endpoint` class:"
msgstr "これで、 `org.acme.rest.Endpoint` クラスで最初のエンドポイントを書くことができます:"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:64
#: upstream/_guides/resteasy-reactive.adoc:104
#: upstream/_guides/resteasy-reactive.adoc:126
#: upstream/_guides/resteasy-reactive.adoc:178
#: upstream/_guides/resteasy-reactive.adoc:286
#: upstream/_guides/resteasy-reactive.adoc:338
#: upstream/_guides/resteasy-reactive.adoc:578
#: upstream/_guides/resteasy-reactive.adoc:621
#: upstream/_guides/resteasy-reactive.adoc:655
#: upstream/_guides/resteasy-reactive.adoc:691
#: upstream/_guides/resteasy-reactive.adoc:730
#: upstream/_guides/resteasy-reactive.adoc:838
#: upstream/_guides/resteasy-reactive.adoc:863
#: upstream/_guides/resteasy-reactive.adoc:891
#: upstream/_guides/resteasy-reactive.adoc:955
#: upstream/_guides/resteasy-reactive.adoc:990
#: upstream/_guides/resteasy-reactive.adoc:1196
#: upstream/_guides/resteasy-reactive.adoc:1222
#: upstream/_guides/resteasy-reactive.adoc:1264
#: upstream/_guides/resteasy-reactive.adoc:1297
#: upstream/_guides/resteasy-reactive.adoc:1360
#: upstream/_guides/resteasy-reactive.adoc:1598
#: upstream/_guides/resteasy-reactive.adoc:1632
#: upstream/_guides/resteasy-reactive.adoc:1696
#: upstream/_guides/resteasy-reactive.adoc:1750
#: upstream/_guides/resteasy-reactive.adoc:1775
#: upstream/_guides/resteasy-reactive.adoc:1840
#: upstream/_guides/resteasy-reactive.adoc:1943
#: upstream/_guides/resteasy-reactive.adoc:2068
#, no-wrap
msgid "package org.acme.rest;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:67
#: upstream/_guides/resteasy-reactive.adoc:107
#: upstream/_guides/resteasy-reactive.adoc:341
#: upstream/_guides/resteasy-reactive.adoc:628
#: upstream/_guides/resteasy-reactive.adoc:658
#: upstream/_guides/resteasy-reactive.adoc:993
#: upstream/_guides/resteasy-reactive.adoc:1199
#: upstream/_guides/resteasy-reactive.adoc:1227
#, no-wrap
msgid ""
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:70
#: upstream/_guides/resteasy-reactive.adoc:192
#: upstream/_guides/resteasy-reactive.adoc:593
#: upstream/_guides/resteasy-reactive.adoc:631
#, no-wrap
msgid ""
"@Path(\"\")\n"
"public class Endpoint {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:76
#, no-wrap
msgid ""
"    @GET\n"
"    public String hello() {\n"
"        return \"Hello, World!\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/resteasy-reactive.adoc:78
#, no-wrap
msgid "Terminology"
msgstr "用語解説"

#. type: Labeled list
#: upstream/_guides/resteasy-reactive.adoc:80
#, no-wrap
msgid "REST"
msgstr "REST"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:81
msgid "https://en.wikipedia.org/wiki/Representational_state_transfer[REpresentational State Transfer]"
msgstr "https://en.wikipedia.org/wiki/Representational_state_transfer[REpresentational State Transfer]"

#. type: Labeled list
#: upstream/_guides/resteasy-reactive.adoc:81
#, no-wrap
msgid "Endpoint"
msgstr "エンドポイント"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:82
msgid "Java method which is called to serve a REST call"
msgstr "RESTの呼び出しに対応するために呼び出されるJavaメソッド"

#. type: Labeled list
#: upstream/_guides/resteasy-reactive.adoc:82
#, no-wrap
msgid "URL / URI (Uniform Resource Locator / Identifier)"
msgstr "URL / URI (Uniform Resource Locator / Identifier)"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:83
msgid "Used to identify the location of REST resources (https://tools.ietf.org/html/rfc7230#section-2.7[specification])"
msgstr "RESTリソースの場所の特定に使用される(https://tools.ietf.org/html/rfc7230#section-2.7[仕様])"

#. type: Labeled list
#: upstream/_guides/resteasy-reactive.adoc:83
#, no-wrap
msgid "Resource"
msgstr "リソース"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:84
#, fuzzy
msgid "Represents your domain object. This is what your API serves and modifies. Also called an `entity` in JAX-RS."
msgstr "あなたのドメイン・オブジェクトを表します。これは、あなたのAPIが提供したり変更したりするものです。JAX-RSでは `entity` とも呼ばれます。"

#. type: Labeled list
#: upstream/_guides/resteasy-reactive.adoc:84
#, no-wrap
msgid "Representation"
msgstr "表現"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:85
msgid "How your resource is represented on the wire, can vary depending on content types"
msgstr "通信上でのリソースの表現方法は、Content typeによって異なります。"

#. type: Labeled list
#: upstream/_guides/resteasy-reactive.adoc:85
#, no-wrap
msgid "Content type"
msgstr "Content type"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:86
#, fuzzy
msgid "Designates a particular representation (also called a media type), for example `text/plain` or `application/json`"
msgstr "特定の表現（メディアタイプとも呼ばれる）を指定します。例えば、 `text/plain` や `application/json`"

#. type: Labeled list
#: upstream/_guides/resteasy-reactive.adoc:86
#, no-wrap
msgid "HTTP"
msgstr "HTTP"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:87
#, fuzzy
msgid "Underlying wire protocol for routing REST calls (see https://tools.ietf.org/html/rfc7230[HTTP specifications])"
msgstr "RESTコールをルーティングするための基礎となるワイヤプロトコル（ link:https://tools.ietf.org/html/rfc7230[HTTP仕様]参照）"

#. type: Labeled list
#: upstream/_guides/resteasy-reactive.adoc:87
#, no-wrap
msgid "HTTP request"
msgstr "HTTPリクエスト"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:88
#, fuzzy
msgid "the request part of the HTTP call, consisting of an HTTP method, a target URI, headers and an optional message body"
msgstr "HTTPメソッド、ターゲットURI、ヘッダ、およびオプションのメッセージボディで構成される、HTTPコールのリクエスト部分です。"

#. type: Labeled list
#: upstream/_guides/resteasy-reactive.adoc:88
#, no-wrap
msgid "HTTP response"
msgstr "HTTPレスポンス"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:89
#, fuzzy
msgid "the response part of the HTTP call, consisting of an HTTP response status, headers and an optional message body"
msgstr "HTTPコールのレスポンス部分で、HTTPレスポンスステータス、ヘッダ、およびオプションのメッセージボディで構成されます。"

#. type: Title ===
#: upstream/_guides/resteasy-reactive.adoc:90
#, fuzzy, no-wrap
msgid "Declaring endpoints: URI mapping"
msgstr "エンドポイントを宣言する。URIマッピング"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:94
#, fuzzy
msgid "Any class annotated with a link:{jaxrsapi}/javax/ws/rs/Path.html[`@Path`] annotation can have its methods exposed as REST endpoints, provided they have an HTTP method annotation (see below)."
msgstr "でアノテーションされたクラスは、そのメソッドをRESTエンドポイントとして公開できます。  link:{jaxrsapi}/javax/ws/rs/Path.html[`@Path`]アノテーションが付与されたクラスは、HTTPメソッドアノテーション（以下参照）が付与されていれば、そのメソッドをRESTエンドポイントとして公開することができます。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:97
#, fuzzy
msgid "That link:{jaxrsapi}/javax/ws/rs/Path.html[`@Path`] annotation defines the URI prefix under which those methods will be exposed. It can be empty, or contain a prefix such as `rest` or `rest/V1`."
msgstr "その  link:{jaxrsapi}/javax/ws/rs/Path.html[`@Path`]アノテーションは、これらのメソッドを公開するためのURIプレフィックスを定義します。空の場合もあれば、 `rest` や `rest/V1` のようなプレフィックスを含む場合もあります。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:100
#, fuzzy
msgid "Each exposed endpoint method can in turn have another link:{jaxrsapi}/javax/ws/rs/Path.html[`@Path`] annotation which adds to its containing class annotation. For example, this defines a `rest/hello` endpoint:"
msgstr "公開されている各エンドポイント・メソッドには、それぞれ別の  link:{jaxrsapi}/javax/ws/rs/Path.html[`@Path`]アノテーションを追加することができます。例えば、これは `rest/hello` のエンドポイントを定義しています。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:110
#, no-wrap
msgid ""
"@Path(\"rest\")\n"
"public class Endpoint {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:117
#, no-wrap
msgid ""
"    @Path(\"hello\")\n"
"    @GET\n"
"    public String hello() {\n"
"        return \"Hello, World!\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:120
#, fuzzy
msgid "See <<uri-parameters,URI parameters>> for more information about URI mapping."
msgstr "URIマッピングの詳細については、「 link:#uri-parameters[URIパラメータ]」を参照してください。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:122
#, fuzzy
msgid "You can set the root path for all rest endpoints using the `@ApplicationPath` annotation, as shown below."
msgstr "以下のように、 `@ApplicationPath` アノテーションを使用して、すべてのレストエンドポイントのルートパスを設定することができます。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:129
#, no-wrap
msgid ""
"import javax.ws.rs.ApplicationPath;\n"
"import javax.ws.rs.core.Application;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:132
#, no-wrap
msgid ""
"@ApplicationPath(\"/api\")\n"
"public static class MyApplication extends Application {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:134
#: upstream/_guides/resteasy-reactive.adoc:1686
#: upstream/_guides/resteasy-reactive.adoc:1867
#: upstream/_guides/resteasy-reactive.adoc:1882
#, no-wrap
msgid "}\n"
msgstr "}\n"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:139
#, fuzzy
msgid "This will cause all rest endpoints to be resolve relative to `/api`, so the endpoint above with `@Path(\"rest\")` would be accessible at `/api/rest/. You can also set the `quarkus.rest.path` build time property to set the root path if you don't want to use an annotation."
msgstr "これにより、すべてのレストエンドポイントは `/api` からの相対的な解決となり、上記の `@Path(\"rest\")` のエンドポイントは `/api/rest/. You can also set the `quarkus.rest.path` でアクセスできるようになります。 アノテーションを使用したくない場合は、ビルドタイムプロパティでルートパスを設定してください。"

#. type: Title ===
#: upstream/_guides/resteasy-reactive.adoc:140
#, fuzzy, no-wrap
msgid "Declaring endpoints: HTTP methods"
msgstr "エンドポイントの宣言HTTPメソッド"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:144
#, fuzzy
msgid "Each endpoint method must be annotated with one of the following annotations, which defines which HTTP method will be mapped to the method:"
msgstr "各エンドポイントのメソッドには、以下のいずれかのアノテーションを付ける必要があります。このアノテーションによって、どのHTTPメソッドがメソッドにマッピングされるかが定義されます。"

#. type: Block title
#: upstream/_guides/resteasy-reactive.adoc:145
#, fuzzy, no-wrap
msgid "Table HTTP method annotations"
msgstr "表 HTTPメソッドのアノテーション"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:147
#: upstream/_guides/resteasy-reactive.adoc:237
#, no-wrap
msgid "Annotation"
msgstr "アノテーション"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:149
#: upstream/_guides/resteasy-reactive.adoc:239
#: upstream/_guides/resteasy-reactive.adoc:373
#: upstream/_guides/resteasy-reactive.adoc:548
#: upstream/_guides/resteasy-reactive.adoc:789
#: upstream/_guides/resteasy-reactive.adoc:926
#: upstream/_guides/resteasy-reactive.adoc:1132
#: upstream/_guides/resteasy-reactive.adoc:1380
#: upstream/_guides/resteasy-reactive.adoc:1397
#: upstream/_guides/resteasy-reactive.adoc:1485
#: upstream/_guides/resteasy-reactive.adoc:1505
#, no-wrap
msgid "Usage"
msgstr "使用方法"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:150
#, no-wrap
msgid "link:{jaxrsapi}/javax/ws/rs/GET.html[`@GET`]"
msgstr "link:{jaxrsapi}/javax/ws/rs/GET.html[`@GET`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:152
#, fuzzy, no-wrap
msgid "Obtain a resource representation, should not modify state, link:{httpspec}#section-4.2.2[idempotent] (link:{httpspec}#section-4.3.1[HTTP docs])"
msgstr "リソース表現の取得、状態を変更してはならない、冪等 link:{httpspec}#section-4.2.2[性] link:{httpspec}#section-4.3.1[(HTTPドキュメント)]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:153
#, no-wrap
msgid "link:{jaxrsapi}/javax/ws/rs/HEAD.html[`@HEAD`]"
msgstr "link:{jaxrsapi}/javax/ws/rs/HEAD.html[`@HEAD`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:155
#, fuzzy, no-wrap
msgid "Obtain metadata about a resource, similar to `GET` with no body (link:{httpspec}#section-4.3.2[HTTP docs])"
msgstr "リソースのメタデータを取得する。 `GET` のようにボディがない場合。"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:156
#, no-wrap
msgid "link:{jaxrsapi}/javax/ws/rs/POST.html[`@POST`]"
msgstr "link:{jaxrsapi}/javax/ws/rs/POST.html[`@POST`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:158
#, fuzzy, no-wrap
msgid "Create a resource and obtain a link to it (link:{httpspec}#section-4.3.3[HTTP docs])"
msgstr "リソースの作成とそのリンクの取得 link:{httpspec}#section-4.3.3[（HTTPドキュメント）]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:159
#, no-wrap
msgid "link:{jaxrsapi}/javax/ws/rs/PUT.html[`@PUT`]"
msgstr "link:{jaxrsapi}/javax/ws/rs/PUT.html[`@PUT`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:161
#, fuzzy, no-wrap
msgid "Replace a resource or create one, should be link:{httpspec}#section-4.2.2[idempotent] (link:{httpspec}#section-4.3.4[HTTP docs])"
msgstr "リソースの交換または作成を行いますが、 link:{httpspec}#section-4.2.2[非]推奨です。"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:162
#, no-wrap
msgid "link:{jaxrsapi}/javax/ws/rs/DELETE.html[`@DELETE`]"
msgstr "link:{jaxrsapi}/javax/ws/rs/DELETE.html[`@DELETE`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:164
#, fuzzy, no-wrap
msgid "Delete an existing resource, link:{httpspec}#section-4.2.2[idempotent]  (link:{httpspec}#section-4.3.5[HTTP docs])"
msgstr "既存のリソースを削除する link:{httpspec}#section-4.2.2[（] link:{httpspec}#section-4.3.5[HTTP]ドキュメント）"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:165
#, no-wrap
msgid "link:{jaxrsapi}/javax/ws/rs/OPTIONS.html[`@OPTIONS`]"
msgstr "link:{jaxrsapi}/javax/ws/rs/OPTIONS.html[`@OPTIONS`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:167
#, fuzzy, no-wrap
msgid "Obtain information about a resource, link:{httpspec}#section-4.2.2[idempotent] (link:{httpspec}#section-4.3.7[HTTP docs])"
msgstr "リソースに関する情報を取得する、 link:{httpspec}#section-4.2.2[冪等性] link:{httpspec}#section-4.3.7[(HTTPドキュメント)]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:168
#, no-wrap
msgid "link:{jaxrsapi}/javax/ws/rs/PATCH.html[`@PATCH`]"
msgstr "link:{jaxrsapi}/javax/ws/rs/PATCH.html[`@PATCH`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:170
#, fuzzy, no-wrap
msgid "Update a resource, or create one, not link:{httpspec}#section-4.2.2[idempotent] (https://tools.ietf.org/html/rfc5789#section-2[HTTP docs])"
msgstr "リソース link:{httpspec}#section-4.2.2[の]更新、または作成。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:174
#, fuzzy
msgid "You can also declare other HTTP methods by declaring them as an annotation with the link:{jaxrsapi}/javax/ws/rs/HttpMethod.html[`@HttpMethod`] annotation:"
msgstr "他のHTTPメソッドを宣言するには、以下のようにアノテーションとして宣言します。  link:{jaxrsapi}/javax/ws/rs/HttpMethod.html[`@HttpMethod`]アノテーションを使用しています。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:181
#, no-wrap
msgid ""
"import java.lang.annotation.Retention;\n"
"import java.lang.annotation.RetentionPolicy;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:184
#, no-wrap
msgid ""
"import javax.ws.rs.HttpMethod;\n"
"import javax.ws.rs.Path;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:189
#, no-wrap
msgid ""
"@Retention(RetentionPolicy.RUNTIME)\n"
"@HttpMethod(\"CHEESE\")\n"
"@interface CHEESE {\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:198
#, no-wrap
msgid ""
"    @CHEESE\n"
"    public String hello() {\n"
"        return \"Hello, Cheese World!\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/resteasy-reactive.adoc:200
#, fuzzy, no-wrap
msgid "Declaring endpoints: representation / content types"
msgstr "エンドポイントの宣言：表現／コンテンツタイプ"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:205
#, fuzzy
msgid "Each endpoint method may consume or produce specific resource representations, which are indicated by the HTTP link:{httpspec}#section-3.1.1.5[`Content-Type`] header, which in turn contains link:{httpspec}#section-3.1.1.1[MIME (Media Type)] values, such as the following:"
msgstr "各エンドポイントメソッドは、特定のリソース表現を消費したり生成したりすることができ、それらはHTTP  link:{httpspec}#section-3.1.1.5[`Content-Type`]ヘッダーで示されます。このヘッダーには、次のような link:{httpspec}#section-3.1.1.1[MIME（メディアタイプ）]の値が含まれます。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:207
#, fuzzy
msgid "`text/plain` which is the default for any endpoint returning a `String`."
msgstr "`text/plain` 。これは、 `String` を返すエンドポイントのデフォルトです。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:208
#, fuzzy
msgid "`text/html` for HTML (such as with xref:qute.adoc[Qute templating])"
msgstr "`text/html` HTMLのための（ link:qute.html[Quteによるテンプレート化]など）"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:209
#, fuzzy
msgid "`application/json` for a <<json,JSON REST endpoint>>"
msgstr "`application/json`  link:#json[JSON RESTエンドポイント]の場合"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:210
#, fuzzy
msgid "`text/*` which is a sub-type wildcard for any text media type"
msgstr "`text/*` これはあらゆるテキストメディアタイプのサブタイプワイルドカードです。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:211
#, fuzzy
msgid "`\\*/*` which is a wildcard for any media type"
msgstr "`*/*` これはあらゆるメディアタイプのワイルドカードです。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:216
#, fuzzy
msgid "You may annotate your endpoint class with the link:{jaxrsapi}/javax/ws/rs/Produces.html[`@Produces`] or link:{jaxrsapi}/javax/ws/rs/Consumes.html[`@Consumes`] annotations, which allow you to specify one or more media types that your endpoint may accept as HTTP request body or produce as HTTP response body. Those class annotations apply to each method."
msgstr "エンドポイントクラスのアノテーションには  link:{jaxrsapi}/javax/ws/rs/Produces.html[`@Produces`]または  link:{jaxrsapi}/javax/ws/rs/Consumes.html[`@Consumes`]アノテーションでは、エンドポイントがHTTPリクエストボディとして受け入れたり、HTTPレスポンスボディとして生成したりするメディアタイプを1つまたは複数指定できます。これらのクラスアノテーションは、各メソッドに適用されます。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:220
#, fuzzy
msgid "Any method may also be annotated with the link:{jaxrsapi}/javax/ws/rs/Produces.html[`@Produces`] or link:{jaxrsapi}/javax/ws/rs/Consumes.html[`@Consumes`] annotations, in which case they override any eventual class annotation."
msgstr "また、どのメソッドにもアノテーションとして  link:{jaxrsapi}/javax/ws/rs/Produces.html[`@Produces`]または  link:{jaxrsapi}/javax/ws/rs/Consumes.html[`@Consumes`]アノテーションを付けることができ、その場合は最終的なクラスアノテーションを上書きします。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:223
#, fuzzy
msgid "The link:{jaxrsapi}/javax/ws/rs/core/MediaType.html[`MediaType`] class has many constants you can use to point to specific pre-defined media types."
msgstr "クラスには多くの定数があります。  link:{jaxrsapi}/javax/ws/rs/core/MediaType.html[`MediaType`]クラスには、あらかじめ定義された特定のメディアタイプを指定するために使用できる多くの定数があります。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:225
#, fuzzy
msgid "See <<negotiation>> for more information."
msgstr "詳しくは link:#negotiation[[negotiation]]をご覧ください。"

#. type: Title ===
#: upstream/_guides/resteasy-reactive.adoc:226
#, fuzzy, no-wrap
msgid "Accessing request parameters"
msgstr "リクエストパラメーターへのアクセス"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:232
#, fuzzy
msgid "don't forget to configure your compiler to generate parameter name information with `-parameters` (javac)  or `<parameters>` or `<maven.compiler.parameters>` (https://maven.apache.org/plugins/maven-compiler-plugin/compile-mojo.html#parameters[Maven])."
msgstr "`-parameters` (javac) または `<parameters>` または `<maven.compiler.parameters>`  link:https://maven.apache.org/plugins/maven-compiler-plugin/compile-mojo.html#parameters[(Maven]) でパラメータ名の情報を生成するようにコンパイラを設定することを忘れないでください。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:234
#, fuzzy
msgid "The following HTTP request elements may be obtained by your endpoint method:"
msgstr "以下のHTTPリクエストエレメントは、エンドポイントメソッドで取得することができます。"

#. type: Block title
#: upstream/_guides/resteasy-reactive.adoc:235
#, fuzzy, no-wrap
msgid "Table HTTP request parameter annotations"
msgstr "表 HTTPリクエストパラメータのアノテーション"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:237
#, fuzzy, no-wrap
msgid "HTTP element"
msgstr "HTTP要素"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:240
#, fuzzy, no-wrap
msgid "[[path-parameter]]Path parameter"
msgstr "link:[, id=path-parameter]パスパラメーター"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:241
#, fuzzy, no-wrap
msgid "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestPath.html[`@RestPath`] (or nothing)"
msgstr "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestPath.html[`@RestPath`](または何もしない)"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:244
#, fuzzy, no-wrap
msgid ""
"URI template parameter (simplified version of the https://tools.ietf.org/html/rfc6570[URI Template specification]), \n"
"see <<uri-parameters,URI parameters>> for more information."
msgstr "URIテンプレートパラメータ（ link:https://tools.ietf.org/html/rfc6570[URI Template仕様]の簡易版）。詳細は「 link:#uri-parameters[URIパラメータ」]を参照してください。"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:245
#, no-wrap
msgid "Query parameter"
msgstr "クエリーパラメーター"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:246
#, no-wrap
msgid "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestQuery.html[`@RestQuery`]"
msgstr "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestQuery.html[`@RestQuery`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:248
#, fuzzy, no-wrap
msgid "The value of an https://tools.ietf.org/html/rfc3986#section-3.4[URI query parameter]"
msgstr "link:https://tools.ietf.org/html/rfc3986#section-3.4[URIのクエリパラメータ]の値"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:249
#, fuzzy, no-wrap
msgid "Header"
msgstr "ヘッダー"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:250
#, no-wrap
msgid "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestHeader.html[`@RestHeader`]"
msgstr "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestHeader.html[`@RestHeader`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:252
#, fuzzy, no-wrap
msgid "The value of an https://tools.ietf.org/html/rfc7230#section-3.2[HTTP header]"
msgstr "link:https://tools.ietf.org/html/rfc7230#section-3.2[HTTPヘッダ]の値"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:253
#, fuzzy, no-wrap
msgid "Cookie"
msgstr "クッキー"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:254
#, no-wrap
msgid "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestCookie.html[`@RestCookie`]"
msgstr "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestCookie.html[`@RestCookie`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:256
#, fuzzy, no-wrap
msgid "The value of an https://tools.ietf.org/html/rfc6265#section-4.2[HTTP cookie]"
msgstr "link:https://tools.ietf.org/html/rfc6265#section-4.2[HTTPクッキー]の値"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:257
#, fuzzy, no-wrap
msgid "Form parameter"
msgstr "フォームパラメータ"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:258
#, fuzzy, no-wrap
msgid "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestForm.html[`@RestForm`]"
msgstr "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestForm.html[`@RestForm`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:260
#, fuzzy, no-wrap
msgid "The value of an https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/POST[HTTP URL-encoded FORM]"
msgstr "link:https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/POST[HTTPのURLエンコードされたFORM]の値"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:261
#, fuzzy, no-wrap
msgid "Matrix parameter"
msgstr "マトリックスパラメータ"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:262
#, fuzzy, no-wrap
msgid "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestMatrix.html[`@RestMatrix`]"
msgstr "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestMatrix.html[`@RestMatrix`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:264
#, fuzzy, no-wrap
msgid "The value of an https://tools.ietf.org/html/rfc3986#section-3.3[URI path segment parameter]"
msgstr "link:https://tools.ietf.org/html/rfc3986#section-3.3[URIパスセグメントパラメータ]の値"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:268
#, fuzzy
msgid "For each of those annotations, you may specify the name of the element they refer to, otherwise they will use the name of the annotated method parameter."
msgstr "これらのアノテーションのそれぞれについて、参照する要素の名前を指定することができますが、そうでない場合は、アノテーションされたメソッドのパラメータの名前が使用されます。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:270
#, fuzzy
msgid "If a client made the following HTTP call:"
msgstr "クライアントが以下のようなHTTPコールを行ったとします。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:277
#, no-wrap
msgid ""
"POST /cheeses;variant=goat/tomme?age=matured HTTP/1.1\n"
"Content-Type: application/x-www-form-urlencoded\n"
"Cookie: level=hardcore\n"
"X-Cheese-Secret-Handshake: fist-bump\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:279
#, no-wrap
msgid "smell=strong\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:282
#, fuzzy
msgid "Then you could obtain all the various parameters with this endpoint method:"
msgstr "そうすれば、このエンドポイントメソッドで各種パラメータをすべて取得することができます。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:289
#, no-wrap
msgid ""
"import javax.ws.rs.POST;\n"
"import javax.ws.rs.Path;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:296
#, no-wrap
msgid ""
"import org.jboss.resteasy.reactive.RestCookie;\n"
"import org.jboss.resteasy.reactive.RestForm;\n"
"import org.jboss.resteasy.reactive.RestHeader;\n"
"import org.jboss.resteasy.reactive.RestMatrix;\n"
"import org.jboss.resteasy.reactive.RestPath;\n"
"import org.jboss.resteasy.reactive.RestQuery;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:299
#, no-wrap
msgid ""
"@Path(\"/cheeses/{type}\")\n"
"public class Endpoint {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:311
#, no-wrap
msgid ""
"    @POST\n"
"    public String allParams(@RestPath String type,\n"
"                            @RestMatrix String variant,\n"
"                            @RestQuery String age,\n"
"                            @RestCookie String level,\n"
"                            @RestHeader(\"X-Cheese-Secret-Handshake\")\n"
"                            String secretHandshake,\n"
"                            @RestForm String smell) {\n"
"        return type + \"/\" + variant + \"/\" + age + \"/\" + level + \"/\" + secretHandshake + \"/\" + smell;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:316
#, fuzzy
msgid "the link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestPath.html[`@RestPath`] annotation is optional: any parameter whose name matches an existing URI template variable will be automatically assumed to have link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestPath.html[`@RestPath`]."
msgstr "ザ  link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestPath.html[`@RestPath`]アノテーションはオプションです。既存のURIテンプレート変数と名前が一致するパラメータは，自動的に  link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestPath.html[`@RestPath`]."

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:324
#, fuzzy
msgid "You can also use any of the JAX-RS annotations link:{jaxrsapi}/javax/ws/rs/PathParam.html[`@PathParam`], link:{jaxrsapi}/javax/ws/rs/QueryParam.html[`@QueryParam`], link:{jaxrsapi}/javax/ws/rs/HeaderParam.html[`@HeaderParam`], link:{jaxrsapi}/javax/ws/rs/CookieParam.html[`@CookieParam`], link:{jaxrsapi}/javax/ws/rs/FormParam.html[`@FormParam`] or link:{jaxrsapi}/javax/ws/rs/MatrixParam.html[`@MatrixParam`] for this, but they require you to specify the parameter name."
msgstr "JAX-RSアノテーションのいずれかを使用することもできます。  link:{jaxrsapi}/javax/ws/rs/PathParam.html[`@PathParam`],  link:{jaxrsapi}/javax/ws/rs/QueryParam.html[`@QueryParam`],  link:{jaxrsapi}/javax/ws/rs/HeaderParam.html[`@HeaderParam`],  link:{jaxrsapi}/javax/ws/rs/CookieParam.html[`@CookieParam`],  link:{jaxrsapi}/javax/ws/rs/FormParam.html[`@FormParam`]または  link:{jaxrsapi}/javax/ws/rs/MatrixParam.html[`@MatrixParam`]のように、パラメータ名を指定する必要があります。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:326
#, fuzzy
msgid "See <<parameter-mapping>> for more advanced use-cases."
msgstr "より高度な使用例については、 link:#parameter-mapping[[parameter-mapping]]を参照してください。"

#. type: Title ===
#: upstream/_guides/resteasy-reactive.adoc:327
#, fuzzy, no-wrap
msgid "Declaring URI parameters"
msgstr "URIパラメータの宣言"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:334
#, fuzzy
msgid "You can declare URI parameters and use regular expressions in your path, so for instance the following endpoint will serve requests for `/hello/stef/23` and `/hello` but not `/hello/stef/0x23`:"
msgstr "URIパラメータを宣言したり、パスに正規表現を使用することができます。例えば、以下のエンドポイントは、 `/hello/stef/23` と `/hello` のリクエストに対応しますが、 `/hello/stef/0x23` は対応しません。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:344
#: upstream/_guides/resteasy-reactive.adoc:1912
#, no-wrap
msgid ""
"@Path(\"hello\")\n"
"public class Endpoint {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:350
#, no-wrap
msgid ""
"    @Path(\"{name}/{age:\\\\d+}\")\n"
"    @GET\n"
"    public String personalisedHello(String name, int age) {\n"
"        return \"Hello \" + name + \" is your age really \" + age + \"?\";\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:356
#, no-wrap
msgid ""
"    @GET\n"
"    public String genericHello() {\n"
"        return \"Hello stranger\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/resteasy-reactive.adoc:359
#, fuzzy, no-wrap
msgid "Accessing the request body"
msgstr "リクエストボディへのアクセス"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:364
#, fuzzy
msgid "Any method parameter with no annotation will receive the method body.footnote:[Unless it is a <<path-parameter,URI template parameter>> or a <<context-objects,context object>>.], after it has been mapped from its HTTP representation to the Java type of the parameter."
msgstr "アノテーションがないメソッドパラメーターは、メソッドボディを受け取ります。HTTP表現からパラメータのJava型にマッピングされた後、<sup class=\"footnote\">[ link:#_footnotedef_1[1, id=_footnoteref_1, role=footnote, title=View footnote.]</sup>]を受け取ることになります。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:366
#, fuzzy
msgid "The following parameter types will be supported out of the box:"
msgstr "以下のパラメータタイプがサポートされます（初期状態）。"

#. type: Block title
#: upstream/_guides/resteasy-reactive.adoc:369
#, fuzzy, no-wrap
msgid "Table Request body parameter type"
msgstr "表 リクエストボディのパラメータタイプ"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:371
#: upstream/_guides/resteasy-reactive.adoc:546
#: upstream/_guides/resteasy-reactive.adoc:787
#: upstream/_guides/resteasy-reactive.adoc:1378
#: upstream/_guides/resteasy-reactive.adoc:1395
#: upstream/_guides/resteasy-reactive.adoc:1483
#: upstream/_guides/resteasy-reactive.adoc:1503
#, fuzzy, no-wrap
msgid "Typ"
msgstr "タイプ"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:374
#, fuzzy, no-wrap
msgid "link:{jdkapi}/java/io/File.html[`File`]"
msgstr "link:{jdkapi}/java/io/File.html[`File`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:376
#, fuzzy, no-wrap
msgid "The entire request body in a temporary file"
msgstr "リクエストボディ全体を一時ファイルに保存"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:377
#, fuzzy, no-wrap
msgid "`byte[]`"
msgstr "`byte[]`"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:379
#, fuzzy, no-wrap
msgid "The entire request body, not decoded"
msgstr "デコードされていない、リクエストボディ全体"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:380
#, fuzzy, no-wrap
msgid "`char[]`"
msgstr "`char[]`"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:382
#: upstream/_guides/resteasy-reactive.adoc:385
#, fuzzy, no-wrap
msgid "The entire request body, decoded"
msgstr "リクエストボディ全体をデコードしたもの"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:383
#, fuzzy, no-wrap
msgid "link:{jdkapi}/java/lang/String.html[`String`]"
msgstr "link:{jdkapi}/java/lang/String.html[`String`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:386
#, fuzzy, no-wrap
msgid "link:{jdkapi}/java/io/InputStream.html[`InputStream`]"
msgstr "link:{jdkapi}/java/io/InputStream.html[`InputStream`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:388
#: upstream/_guides/resteasy-reactive.adoc:391
#, fuzzy, no-wrap
msgid "The request body in a blocking stream"
msgstr "ブロッキングストリームでのリクエストボディ"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:389
#, fuzzy, no-wrap
msgid "link:{jdkapi}/java/io/Reader.html[`Reader`]"
msgstr "link:{jdkapi}/java/io/Reader.html[`Reader`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:392
#, fuzzy, no-wrap
msgid "All Java primitives and their wrapper classes"
msgstr "すべてのJavaプリミティブとそのラッパークラス"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:394
#, fuzzy, no-wrap
msgid "Java primitive types"
msgstr "Javaのプリミティブタイプ"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:395
#, fuzzy, no-wrap
msgid "link:{jdkapi}/java/math/BigDecimal.html[`BigDecimal`], link:{jdkapi}/java/math/BigInteger.html[`BigInteger`]"
msgstr "link:{jdkapi}/java/math/BigDecimal.html[`BigDecimal`],  link:{jdkapi}/java/math/BigInteger.html[`BigInteger`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:397
#, fuzzy, no-wrap
msgid "Large integers and decimals."
msgstr "大きな整数と小数。"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:399
#, fuzzy, no-wrap
msgid ""
"link:{jsonpapi}/javax/json/JsonArray.html[`JsonArray`], link:{jsonpapi}/javax/json/JsonArray.html[`JsonObject`],\n"
"link:{jsonpapi}/javax/json/JsonArray.html[`JsonStructure`], link:{jsonpapi}/javax/json/JsonArray.html[`JsonValue`]"
msgstr "link:{jsonpapi}/javax/json/JsonArray.html[`JsonArray`],  link:{jsonpapi}/javax/json/JsonArray.html[`JsonObject`],  link:{jsonpapi}/javax/json/JsonArray.html[`JsonStructure`],  link:{jsonpapi}/javax/json/JsonArray.html[`JsonValue`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:401
#, fuzzy, no-wrap
msgid "JSON value types"
msgstr "JSONの値の種類"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:402
#, fuzzy, no-wrap
msgid "link:{vertxapi}io/vertx/core/buffer/Buffer.html[`Buffer`]"
msgstr "link:{vertxapi}io/vertx/core/buffer/Buffer.html[`Buffer`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:404
#, fuzzy, no-wrap
msgid "Vert.x Buffer"
msgstr "Vert.x バッファ"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:405
#, fuzzy, no-wrap
msgid "any other type"
msgstr "その他のタイプ"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:407
#, fuzzy, no-wrap
msgid "Will be <<json,mapped from JSON to that type>>"
msgstr "link:#json[JSONからそのタイプ]にマッピングされます。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:410
#, fuzzy
msgid "You can add support for more <<readers-writers,body parameter types>>."
msgstr "より多くの link:#readers-writers[ボディパラメータタイプ]のサポートを追加できます。"

#. type: Title ===
#: upstream/_guides/resteasy-reactive.adoc:412
#, fuzzy, no-wrap
msgid "Handling Multipart Form data"
msgstr "マルチパートのフォームデータを扱う"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:417
#, fuzzy
msgid "To handle HTTP requests that have `multipart/form-data` as their content type, RESTEasy Reactive introduces the link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/MultipartForm.html[`@MultipartForm`] annotation.  Let us look at an example of its use."
msgstr "`multipart/form-data` をコンテンツタイプとする HTTP リクエストを処理するために、RESTEasy Reactive は  link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/MultipartForm.html[`@MultipartForm`]アノテーションを導入しています。その使い方の例を見てみましょう。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:420
#, fuzzy
msgid "Assuming an HTTP request containing a file upload and a form value containing a string description need to be handled, we could write a POJO that will hold this information like so:"
msgstr "ファイルのアップロードを含むHTTPリクエストと、文字列の説明を含むフォームの値を処理する必要があるとすると、これらの情報を保持するPOJOを次のように書くことができます。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:424
#: upstream/_guides/resteasy-reactive.adoc:495
#, no-wrap
msgid "import javax.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:428
#, no-wrap
msgid ""
"import org.jboss.resteasy.reactive.PartType;\n"
"import org.jboss.resteasy.reactive.RestForm;\n"
"import org.jboss.resteasy.reactive.multipart.FileUpload;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:430
#, no-wrap
msgid "public class FormData {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:434
#, no-wrap
msgid ""
"    @RestForm\n"
"    @PartType(MediaType.TEXT_PLAIN)\n"
"    public String description;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:438
#, no-wrap
msgid ""
"    @RestForm(\"image\")\n"
"    public FileUpload file;\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:443
#, fuzzy
msgid "The `name` field will contain the data contained in the part of HTTP request called `description` (because link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestForm.html[`@RestForm`] does not define a value, the field name is used), while the `file` field will contain data about the uploaded file in the `image` part of HTTP request."
msgstr "`name` フィールドには、HTTP リクエストの `description` と呼ばれる部分に含まれるデータが格納されます (フィールド名が定義されていないため)。  link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestForm.html[`@RestForm`] `file` フィールドには、HTTPリクエストの `image` の部分にあるアップロードされたファイルに関するデータが含まれます。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:446
#, fuzzy
msgid "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/multipart/FileUpload.html[`FileUpload`] provides access to various metadata of the uploaded file. If however all you need is a handle to the uploaded file, `java.nio.file.Path` or `java.io.File` could be used."
msgstr "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/multipart/FileUpload.html[`FileUpload`]は、アップロードされたファイルのさまざまなメタデータにアクセスできます。ただし、アップロードされたファイルのハンドルが必要な場合は、 `java.nio.file.Path` または `java.io.File` を使用できます。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:448
#, fuzzy
msgid "When access to all uploaded files without specifying the form names is needed, RESTEasy Reactive allows the use of `@RestForm List<FileUpload>`, where it is important to **not** set a name for the link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestForm.html[`@RestForm`] annotation."
msgstr "フォーム名を指定せずにアップロードされたすべてのファイルにアクセスする必要がある場合、RESTEasy Reactiveでは、 `@RestForm List<FileUpload>` を使用することができます。  link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestForm.html[`@RestForm`]アノテーションに名前を設定しないことが重要です。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:452
#, fuzzy
msgid "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/PartType.html[`@PartType`] is used to aid in deserialization of the corresponding part of the request into the desired Java type. It is very useful when for example the corresponding body part is JSON and needs to be converted to a POJO."
msgstr "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/PartType.html[`@PartType`]は、リクエストの対応する部分を望ましいJavaタイプにデシリアライズするために使用されます。例えば、対応するボディ部分がJSONで、POJOに変換する必要がある場合などに非常に便利です。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:454
#, fuzzy
msgid "This POJO could be used in a Resource method like so:"
msgstr "このPOJOは、Resourceメソッドで次のように使用できます。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:462
#, no-wrap
msgid ""
"import javax.ws.rs.Consumes;\n"
"import javax.ws.rs.POST;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:464
#, no-wrap
msgid "import org.jboss.resteasy.reactive.MultipartForm;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:467
#: upstream/_guides/resteasy-reactive.adoc:521
#, no-wrap
msgid ""
"@Path(\"multipart\")\n"
"public class Endpoint {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:476
#, no-wrap
msgid ""
"    @POST\n"
"    @Produces(MediaType.APPLICATION_JSON)\n"
"    @Consumes(MediaType.MULTIPART_FORM_DATA)\n"
"    @Path(\"form\")\n"
"    public String form(@MultipartForm FormData formData) {\n"
"        // return something\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:480
#, fuzzy
msgid "The use of link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/MultipartForm.html[`@MultipartForm`] as method parameter makes RESTEasy Reactive handle the request as a multipart form request."
msgstr "をメソッドのパラメータとして使用すると  link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/MultipartForm.html[`@MultipartForm`]を使用すると、RESTEasy Reactiveはそのリクエストをマルチパートのフォーム・リクエストとして処理します。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:482
#, fuzzy
msgid "The use of `@MultipartForm` is actually unnecessary as RESTEasy Reactive can infer this information from the use of `@Consumes(MediaType.MULTIPART_FORM_DATA)`"
msgstr "`@MultipartForm` の使用は実際には不要で、RESTEasy Reactive がこの情報を推測して `@Consumes(MediaType.MULTIPART_FORM_DATA)`"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:488
#, fuzzy
msgid "When handling file uploads, it is very important to move the file to permanent storage (like a database, a dedicated file system or a cloud storage) in your code that handles the POJO.  Otherwise, the file will no longer be accessible when the request terminates.  Moreoever if `quarkus.http.body.delete-uploaded-files-on-end` is set to true, Quarkus will delete the uploaded file when the HTTP response is sent. If the setting is disabled, the file will reside on the file system of the server (in the directory defined by the `quarkus.http.body.uploads-directory` configuration option), but as the uploaded files are saved with a UUID file name and no additional metadata is saved, these files are essentially a random dump of files."
msgstr "ファイルのアップロードを処理する際には、POJOを処理するコードの中で、ファイルを恒久的なストレージ（データベース、専用ファイルシステム、クラウドストレージなど）に移動させることが非常に重要です。そうしないと、リクエストが終了したときに、ファイルにアクセスできなくなります。また、 `quarkus.http.body.delete-uploaded-files-on-end` がtrueに設定されている場合、QuarkusはHTTPレスポンスが送信されたときにアップロードされたファイルを削除します。この設定を無効にした場合、ファイルはサーバーのファイルシステム（ `quarkus.http.body.uploads-directory` 設定オプションで定義されたディレクトリ）に存在しますが、アップロードされたファイルはUUIDファイル名で保存され、追加のメタデータは保存されないため、これらのファイルは基本的にファイルのランダムなダンプとなります。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:491
#, fuzzy
msgid "Similarly, RESTEasy Reactive can produce Multipart Form data to allow users download files from the server. For example, we could write a POJO that will hold the information we want to expose as:"
msgstr "同様に、RESTEasy Reactiveでは、ユーザーがサーバーからファイルをダウンロードできるように、マルチパートのフォームデータを生成することができます。例えば、公開したい情報を保持するPOJOを、次のように書くことができます。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:498
#, no-wrap
msgid ""
"import org.jboss.resteasy.reactive.PartType;\n"
"import org.jboss.resteasy.reactive.RestForm;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:500
#, no-wrap
msgid "public class DownloadFormData {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:503
#, no-wrap
msgid ""
"    @RestForm\n"
"    String name;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:508
#, no-wrap
msgid ""
"    @RestForm\n"
"    @PartType(MediaType.APPLICATION_OCTET_STREAM)\n"
"    File file;\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:511
#, fuzzy
msgid "And then expose this POJO via a Resource like so:"
msgstr "そして、このPOJOをResource経由で公開します。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:518
#, no-wrap
msgid ""
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"
msgstr ""
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:529
#, no-wrap
msgid ""
"    @GET\n"
"    @Produces(MediaType.MULTIPART_FORM_DATA)\n"
"    @Path(\"file\")\n"
"    public DownloadFormData getFile() {\n"
"        // return something\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:532
#, fuzzy
msgid "For the time being, returning Multipart data is limited to be blocking endpoints."
msgstr "当面の間、Multipartデータを返すのは、ブロックエンドポイントに限定されます。"

#. type: Title ===
#: upstream/_guides/resteasy-reactive.adoc:533
#, fuzzy, no-wrap
msgid "Returning a response body"
msgstr "レスポンスボディを返す"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:538
#, fuzzy
msgid "In order to return an HTTP response, simply return the resource you want from your method. The method return type and its optional content type will be used to decide how to serialise it to the HTTP response (see <<negotiation>> for more advanced information)."
msgstr "HTTP レスポンスを返すには、メソッドから必要なリソースを返すだけです。メソッドのリターンタイプとオプションのコンテントタイプを使って、HTTP レスポンスへのシリアライズ方法を決定します (より詳細な情報は link:#negotiation[[negotiation]]を参照してください)。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:541
#, fuzzy
msgid "You can return any of the pre-defined types that you can read from the <<resource-types,HTTP response>>, and any other type will be mapped <<json,from that type to JSON>>."
msgstr "link:#resource-types[HTTPレスポンス]から読み取れる、あらかじめ定義された任意のタイプを返すことができ、それ以外のタイプは link:#json[そのタイプからJSONに]マッピングされます。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:543
#, fuzzy
msgid "In addition, the following return types are also supported:"
msgstr "また、以下のようなリターンタイプにも対応しています。"

#. type: Block title
#: upstream/_guides/resteasy-reactive.adoc:544
#, fuzzy, no-wrap
msgid "Table Additional response body parameter type"
msgstr "表 追加のレスポンスボディパラメータタイプ"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:549
#, fuzzy, no-wrap
msgid "link:{jdkapi}/java/nio/file/Path.html[`Path`]"
msgstr "link:{jdkapi}/java/nio/file/Path.html[`Path`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:551
#, fuzzy, no-wrap
msgid "The contents of the file specified by the given path"
msgstr "与えられたパスで指定されたファイルの内容"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:552
#, fuzzy, no-wrap
msgid "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/PathPart.html[`PathPart`]"
msgstr "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/PathPart.html[`PathPart`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:554
#, fuzzy, no-wrap
msgid "The partial contents of the file specified by the given path"
msgstr "与えられたパスで指定されたファイルの部分的なコンテンツ"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:555
#, fuzzy, no-wrap
msgid "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/FilePart.html[`FilePart`]"
msgstr "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/FilePart.html[`FilePart`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:557
#, fuzzy, no-wrap
msgid "The partial contents of a file"
msgstr "ファイルの部分的な内容"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:558
#, fuzzy, no-wrap
msgid "link:{vertxapi}/io/vertx/core/file/AsyncFile.html[`AsyncFile`]"
msgstr "link:{vertxapi}/io/vertx/core/file/AsyncFile.html[`AsyncFile`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:560
#, fuzzy, no-wrap
msgid "Vert.x AsyncFile, which can be in full, or partial"
msgstr "Vert.x AsyncFile、これは完全なものでも、部分的なものでも構いません。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:566
#, fuzzy
msgid "Alternately, you can also return a <<reactive,reactive type>> such as link:{mutinyapi}/io/smallrye/mutiny/Uni.html[`Uni`], link:{mutinyapi}/io/smallrye/mutiny/Multi.html[`Multi`] or link:{jdkapi}/java/util/concurrent/CompletionStage.html[`CompletionStage`] that resolve to one of the mentioned return types."
msgstr "また、次のような link:#reactive[リアクティブタイプ]を返すこともできます。  link:{mutinyapi}/io/smallrye/mutiny/Uni.html[`Uni`],  link:{mutinyapi}/io/smallrye/mutiny/Multi.html[`Multi`]や  link:{jdkapi}/java/util/concurrent/CompletionStage.html[`CompletionStage`]のような反応型を返すこともできますが，これは前述の戻り値のいずれかに解決されます．"

#. type: Title ===
#: upstream/_guides/resteasy-reactive.adoc:567
#, fuzzy, no-wrap
msgid "Setting other response properties"
msgstr "その他のレスポンスプロパティの設定"

#. type: Title ====
#: upstream/_guides/resteasy-reactive.adoc:569
#, fuzzy, no-wrap
msgid "Manually setting the response"
msgstr "手動でのレスポンス設定"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:574
#, fuzzy
msgid "If you need to set more properties on the HTTP response than just the body, such as the status code or headers, you can make your method return `org.jboss.resteasy.reactive.RestResponse` from a resource method.  An example of this could look like:"
msgstr "ステータスコードやヘッダーなど、ボディ以外のプロパティをHTTPレスポンスに設定する必要がある場合は、メソッドがリソースメソッドから `org.jboss.resteasy.reactive.RestResponse` を返すようにすることができます。この例は次のようになります。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:582
#, no-wrap
msgid ""
"import java.time.Duration;\n"
"import java.time.Instant;\n"
"import java.util.Date;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:587
#, no-wrap
msgid ""
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.core.MediaType;\n"
"import javax.ws.rs.core.NewCookie;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:590
#, no-wrap
msgid ""
"import org.jboss.resteasy.reactive.RestResponse;\n"
"import org.jboss.resteasy.reactive.RestResponse.ResponseBuilder;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:608
#, no-wrap
msgid ""
"    @GET\n"
"    public RestResponse<String> hello() {\n"
"        // HTTP OK status with text/plain content type\n"
"        return ResponseBuilder.ok(\"Hello, World!\", MediaType.TEXT_PLAIN_TYPE)\n"
"         // set a response header\n"
"         .header(\"X-Cheese\", \"Camembert\")\n"
"         // set the Expires response header to two days from now\n"
"         .expires(Date.from(Instant.now().plus(Duration.ofDays(2))))\n"
"         // send a new cookie\n"
"         .cookie(new NewCookie(\"Flavour\", \"chocolate\"))\n"
"         // end of builder API\n"
"         .build();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:612
#, fuzzy
msgid "You can also use the JAX-RS type link:{jaxrsapi}/javax/ws/rs/core/Response.html[`Response`] but it is not strongly typed to your entity."
msgstr "また、JAX-RS型を使用することもできます。  link:{jaxrsapi}/javax/ws/rs/core/Response.html[`Response`]を使用することもできますが、それはあなたのエンティティに強く型付けされていません。"

#. type: Title ====
#: upstream/_guides/resteasy-reactive.adoc:613
#, fuzzy, no-wrap
msgid "Using annotations"
msgstr "アノテーションの使用"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:617
#, fuzzy
msgid "Alternatively, if you only need to set the status code and / or HTTP headers with static values, you can use `@org.jboss.resteasy.reactive.ResponseStatus` and /or `ResponseHeader` respectively.  An example of this could look like:"
msgstr "また、ステータスコードおよび／またはHTTPヘッダーに静的な値を設定するだけでよい場合は、それぞれ `@org.jboss.resteasy.reactive.ResponseStatus` および／または `ResponseHeader` を使用します。この例は次のようになります。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:625
#, no-wrap
msgid ""
"import org.jboss.resteasy.reactive.Header;\n"
"import org.jboss.resteasy.reactive.ResponseHeaders;\n"
"import org.jboss.resteasy.reactive.ResponseStatus;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:639
#, no-wrap
msgid ""
"    @ResponseStatus(201)\n"
"    @ResponseHeader(name = \"X-Cheese\", value = \"Camembert\")\n"
"    @GET\n"
"    public String hello() {\n"
"        return \"Hello, World!\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/resteasy-reactive.adoc:641
#, fuzzy, no-wrap
msgid "Async/reactive support"
msgstr "非同期/反応のサポート"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:651
#, fuzzy
msgid "If your endpoint method needs to accomplish an asynchronous or reactive task before being able to answer, you can declare your method to return the link:{mutinyapi}/io/smallrye/mutiny/Uni.html[`Uni`] type (from https://smallrye.io/smallrye-mutiny/[Mutiny]), in which case the current HTTP request will be automatically suspended after your method, until the returned link:{mutinyapi}/io/smallrye/mutiny/Uni.html[`Uni`] instance resolves to a value, which will be mapped to a response exactly according to the previously described rules:"
msgstr "もしあなたのエンドポイントメソッドが、応答する前に非同期または反応型のタスクを実行する必要があるなら、あなたのメソッドが  link:{mutinyapi}/io/smallrye/mutiny/Uni.html[`Uni`]タイプを返すようにメソッドを宣言することができます（ link:https://smallrye.io/smallrye-mutiny/[Mutiny]から）。この場合、現在のHTTPリクエストは、返された  link:{mutinyapi}/io/smallrye/mutiny/Uni.html[`Uni`]インスタンスが値に解決するまで、現在のHTTPリクエストはあなたのメソッドの後で自動的に中断され、それは先に説明したルールに正確に従ったレスポンスにマッピングされます。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:660
#: upstream/_guides/resteasy-reactive.adoc:1229
#, no-wrap
msgid "import io.smallrye.mutiny.Uni;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:663
#: upstream/_guides/resteasy-reactive.adoc:746
#, no-wrap
msgid ""
"@Path(\"escoffier\")\n"
"public class Endpoint {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:669
#, no-wrap
msgid ""
"    @GET\n"
"    public Uni<Book> culinaryGuide() {\n"
"        return Book.findByIsbn(\"978-2081229297\");\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:675
#, fuzzy
msgid "This allows you to not block the event-loop thread while the book is being fetched from the database, and allows Quarkus to serve more requests until your book is ready to be sent to the client and terminate this request. Check out our <<execution-model,Execution Model documentation>> for more information."
msgstr "これにより、データベースからブックを取得している間にイベントループスレッドをブロックすることなく、ブックをクライアントに送信する準備が整うまでQuarkusがより多くのリクエストに対応し、このリクエストを終了させることができます。詳細については、 link:#execution-model[実行モデルのドキュメント]をご覧ください。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:678
#, fuzzy
msgid "The link:{jdkapi}/java/util/concurrent/CompletionStage.html[`CompletionStage`] return type is also supported."
msgstr "という  link:{jdkapi}/java/util/concurrent/CompletionStage.html[`CompletionStage`]リターンタイプもサポートされています。"

#. type: Title ===
#: upstream/_guides/resteasy-reactive.adoc:679
#, fuzzy, no-wrap
msgid "Streaming support"
msgstr "ストリーミング対応"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:684
#, fuzzy
msgid "If you want to stream your response element by element, you can make your endpoint method return a link:{mutinyapi}/io/smallrye/mutiny/Multi.html[`Multi`] type (from https://smallrye.io/smallrye-mutiny/[Mutiny]).  This is especially useful for streaming text or binary data."
msgstr "レスポンスを要素ごとにストリーミングしたい場合は、エンドポイントメソッドが  link:{mutinyapi}/io/smallrye/mutiny/Multi.html[`Multi`]型を返すようにできます（ link:https://smallrye.io/smallrye-mutiny/[Mutiny]より）。これは特にテキストやバイナリデータのストリーミングに便利です。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:687
#, fuzzy
msgid "This example, using https://github.com/quarkiverse/quarkus-reactive-messaging-http[Reactive Messaging HTTP] shows how to stream text data:"
msgstr "この例では、 link:https://github.com/quarkiverse/quarkus-reactive-messaging-http[Reactive Messaging HTTP]を使って、テキストデータをストリームする方法を示しています。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:695
#, no-wrap
msgid ""
"import javax.inject.Inject;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:697
#, no-wrap
msgid "import org.eclipse.microprofile.reactive.messaging.Channel;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:699
#, no-wrap
msgid "import io.smallrye.mutiny.Multi;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:702
#, no-wrap
msgid ""
"@Path(\"logs\")\n"
"public class Endpoint {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:706
#, no-wrap
msgid ""
"    @Inject\n"
"    @Channel(\"log-out\")\n"
"    Multi<String> logs;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:712
#, no-wrap
msgid ""
"    @GET\n"
"    public Multi<String> streamLogs() {\n"
"        return logs;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:717
#, fuzzy
msgid "Response filters are not invoked on streamed responses, because they would give a false impression that you can set headers or HTTP status codes, which is not true after the initial response."
msgstr "レスポンスフィルターは、ストリームされたレスポンスに対しては呼び出されません。これは、ヘッダーやHTTPステータスコードを設定できるという誤った印象を与えてしまうからですが、最初のレスポンス以降はそうではありません。"

#. type: Title ===
#: upstream/_guides/resteasy-reactive.adoc:718
#, fuzzy, no-wrap
msgid "Server-Sent Event (SSE) support"
msgstr "SSE（Server-Sent Event）のサポート"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:726
#, fuzzy
msgid "If you want to stream JSON objects in your response, you can use https://html.spec.whatwg.org/multipage/server-sent-events.html[Server-Sent Events] by just annotating your endpoint method with link:{jaxrsapi}/javax/ws/rs/Produces.html[`@Produces(MediaType.SERVER_SENT_EVENTS)`] and specifying that each element should be <<json,serialised to JSON>> with `@RestStreamElementType(MediaType.APPLICATION_JSON)`."
msgstr "レスポンスにJSONオブジェクトをストリームしたい場合は、 link:https://html.spec.whatwg.org/multipage/server-sent-events.html[Server-Sent Events]を使うことができます。エンドポイントメソッドに  link:{jaxrsapi}/javax/ws/rs/Produces.html[`@Produces(MediaType.SERVER_SENT_EVENTS)`]でアノテーションし、各要素を `@RestSseElementType(MediaType.APPLICATION_JSON)` で link:#json[JSONにシリアライズ]するように指定します。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:736
#, no-wrap
msgid ""
"import javax.inject.Inject;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:738
#, no-wrap
msgid "import org.jboss.resteasy.reactive.RestStreamElementType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:741
#, no-wrap
msgid ""
"import io.smallrye.mutiny.Multi;\n"
"import io.smallrye.mutiny.Uni;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:743
#, no-wrap
msgid "import io.smallrye.reactive.messaging.annotations.Channel;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:751
#, no-wrap
msgid ""
"    // Inject our Book channel\n"
"    @Inject\n"
"    @Channel(\"book-out\")\n"
"    Multi<Book> books;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:761
#, no-wrap
msgid ""
"    @GET\n"
"    // Send the stream over SSE\n"
"    @Produces(MediaType.SERVER_SENT_EVENTS)\n"
"    // Each element will be sent as JSON\n"
"    @RestStreamElementType(MediaType.APPLICATION_JSON)\n"
"    public Multi<Book> stream() {\n"
"        return books;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/resteasy-reactive.adoc:763
#, fuzzy, no-wrap
msgid "Controlling HTTP Caching features"
msgstr "HTTPキャッシング機能の制御"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:768
#, fuzzy
msgid "RESTEasy Reactive provides the link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/Cache.html[`@Cache`] and link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/NoCache.html[`@NoCache`] annotations to facilitate handling HTTP caching semantics, i.e. setting the 'Cache-Control' HTTP header."
msgstr "RESTEasy Reactiveが提供するのは  link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/Cache.html[`@Cache`]と  link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/NoCache.html[`@NoCache`]アノテーションが用意されており、HTTPキャッシュセマンティクスの処理、すなわち「Cache-Control」HTTPヘッダーの設定を容易にしています。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:771
#, fuzzy
msgid "These annotations can be placed either on a Resource Method or a Resource Class (in which case it applies to all Resource Methods of the class that do *not* contain the same annotation) and allow users to return domain objects and not have to deal with building up the `Cache-Control` HTTP header explicitly."
msgstr "これらのアノテーションは、リソースメソッドまたはリソースクラス（この場合、同じアノテーションを含ま *ない*クラスのすべてのリソースメソッドに適用される）に配置することができ、ユーザーはドメインオブジェクトを返すことができ、 `Cache-Control` HTTPヘッダーを明示的に構築する必要がありません。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:775
#, fuzzy
msgid "While link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/Cache.html[`@Cache`] builds a complex `Cache-Control` header, link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/NoCache.html[`@NoCache`] is a simplified notation to say that you don't want anything cached; i.e. `Cache-Control: nocache`."
msgstr "一方  link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/Cache.html[`@Cache`]は、複雑な `Cache-Control` ヘッダを構築します。  link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/NoCache.html[`@NoCache`]は、何もキャッシュしたくないことを示す簡略化された表記です。すなわち、 `Cache-Control: nocache`."

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:777
#, fuzzy
msgid "More information on the `Cache-Control` header and be found in link:https://datatracker.ietf.org/doc/html/rfc7234[RFC 7234]"
msgstr "`Cache-Control` ヘッダーの詳細については、 link:https://datatracker.ietf.org/doc/html/rfc7234[RFC 7234]に記載されています。"

#. type: Title ===
#: upstream/_guides/resteasy-reactive.adoc:778
#, fuzzy, no-wrap
msgid "Accessing context objects"
msgstr "コンテキストオブジェクトへのアクセス"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:784
#, fuzzy
msgid "There are a number of contextual objects that the framework will give you, if your endpoint method takes parameters of the following type:"
msgstr "エンドポイントメソッドが以下のタイプのパラメータを取る場合、フレームワークが与えてくれるコンテキストオブジェクトがいくつかあります。"

#. type: Block title
#: upstream/_guides/resteasy-reactive.adoc:785
#: upstream/_guides/resteasy-reactive.adoc:922
#: upstream/_guides/resteasy-reactive.adoc:1128
#, fuzzy, no-wrap
msgid "Table Context object"
msgstr "表 コンテキストオブジェクト"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:790
#, fuzzy, no-wrap
msgid "link:{jaxrsapi}/javax/ws/rs/core/HttpHeaders.html[`HttpHeaders`]"
msgstr "link:{jaxrsapi}/javax/ws/rs/core/HttpHeaders.html[`HttpHeaders`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:792
#, fuzzy, no-wrap
msgid "All the request headers"
msgstr "すべてのリクエストヘッダー"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:793
#, fuzzy, no-wrap
msgid "link:{jaxrsapi}/javax/ws/rs/container/ResourceInfo.html[`ResourceInfo`]"
msgstr "link:{jaxrsapi}/javax/ws/rs/container/ResourceInfo.html[`ResourceInfo`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:795
#, fuzzy, no-wrap
msgid "Information about the current endpoint method and class (requires reflection)"
msgstr "現在のエンドポイントのメソッドとクラスに関する情報（リフレクションが必要）"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:796
#, fuzzy, no-wrap
msgid "link:{jaxrsapi}/javax/ws/rs/core/SecurityContext.html[`SecurityContext`]"
msgstr "link:{jaxrsapi}/javax/ws/rs/core/SecurityContext.html[`SecurityContext`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:798
#, fuzzy, no-wrap
msgid "Access to the current user and roles"
msgstr "現在のユーザーとロールへのアクセス"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:799
#, fuzzy, no-wrap
msgid "link:{resteasy-reactive-api}/org/jboss/resteasy/reactive/server/SimpleResourceInfo.html[`SimpleResourceInfo`]"
msgstr "link:{resteasy-reactive-api}/org/jboss/resteasy/reactive/server/SimpleResourceInfo.html[`SimpleResourceInfo`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:801
#, fuzzy, no-wrap
msgid "Information about the current endpoint method and class (no reflection required)"
msgstr "現在のエンドポイントのメソッドとクラスに関する情報（リフレクションは必要ありません）"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:802
#, fuzzy, no-wrap
msgid "link:{jaxrsapi}/javax/ws/rs/core/UriInfo.html[`UriInfo`]"
msgstr "link:{jaxrsapi}/javax/ws/rs/core/UriInfo.html[`UriInfo`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:804
#, fuzzy, no-wrap
msgid "Provides information about the current endpoint and application URI"
msgstr "現在のエンドポイントとアプリケーションのURIに関する情報を提供する"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:805
#, fuzzy, no-wrap
msgid "link:{jaxrsapi}/javax/ws/rs/core/Application.html[`Application`]"
msgstr "link:{jaxrsapi}/javax/ws/rs/core/Application.html[`Application`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:807
#, fuzzy, no-wrap
msgid "Advanced: Current JAX-RS application class"
msgstr "上級者向け。現在のJAX-RSアプリケーションクラス"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:808
#, fuzzy, no-wrap
msgid "link:{jaxrsapi}/javax/ws/rs/core/Configuration.html[`Configuration`]"
msgstr "link:{jaxrsapi}/javax/ws/rs/core/Configuration.html[`Configuration`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:810
#, fuzzy, no-wrap
msgid "Advanced: Configuration about the deployed JAX-RS application"
msgstr "アドバンスト。デプロイされたJAX-RSアプリケーションに関する設定"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:811
#, fuzzy, no-wrap
msgid "link:{jaxrsapi}/javax/ws/rs/ext/Providers.html[`Providers`]"
msgstr "link:{jaxrsapi}/javax/ws/rs/ext/Providers.html[`Providers`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:813
#, fuzzy, no-wrap
msgid "Advanced: Runtime access to JAX-RS providers"
msgstr "Advanced:JAX-RSプロバイダへのランタイムアクセス"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:814
#, fuzzy, no-wrap
msgid "link:{jaxrsapi}/javax/ws/rs/core/Request.html[`Request`]"
msgstr "link:{jaxrsapi}/javax/ws/rs/core/Request.html[`Request`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:816
#, fuzzy, no-wrap
msgid "Advanced: Access to the current HTTP method and <<preconditions>>"
msgstr "高度な現在のHTTPメソッドと link:#preconditions[[前提条件]]へのアクセス"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:817
#, fuzzy, no-wrap
msgid "link:{jaxrsapi}/javax/ws/rs/core/ResourceContext.html[`ResourceContext`]"
msgstr "link:{jaxrsapi}/javax/ws/rs/core/ResourceContext.html[`ResourceContext`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:819
#, fuzzy, no-wrap
msgid "Advanced: access to instances of endpoints"
msgstr "アドバンスト：エンドポイントのインスタンスへのアクセス"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:820
#, fuzzy, no-wrap
msgid "link:{resteasy-reactive-api}/org/jboss/resteasy/reactive/server/spi/ServerRequestContext.html[`ServerRequestContext`]"
msgstr "link:{resteasy-reactive-api}/org/jboss/resteasy/reactive/server/spi/ServerRequestContext.html[`ServerRequestContext`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:822
#, fuzzy, no-wrap
msgid "Advanced: RESTEasy Reactive access to the current request/response"
msgstr "進化しました。RESTEasy 現在のリクエスト/レスポンスへのリアクティブなアクセス"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:823
#, fuzzy, no-wrap
msgid "link:{jaxrsapi}/javax/ws/rs/sse/Sse.html[`Sse`]"
msgstr "link:{jaxrsapi}/javax/ws/rs/sse/Sse.html[`Sse`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:825
#, fuzzy, no-wrap
msgid "Advanced: Complex SSE use-cases"
msgstr "先進的。複雑なSSEのユースケース"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:826
#, fuzzy, no-wrap
msgid "link:{vertxapi}/io/vertx/core/http/HttpServerRequest.html[`HttpServerRequest`]"
msgstr "link:{vertxapi}/io/vertx/core/http/HttpServerRequest.html[`HttpServerRequest`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:828
#, fuzzy, no-wrap
msgid "Advanced: Vert.x HTTP Request"
msgstr "高度なVert.xのHTTPリクエスト"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:829
#, fuzzy, no-wrap
msgid "link:{vertxapi}/io/vertx/core/http/HttpServerResponse.html[`HttpServerResponse`]"
msgstr "link:{vertxapi}/io/vertx/core/http/HttpServerResponse.html[`HttpServerResponse`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:831
#, fuzzy, no-wrap
msgid "Advanced: Vert.x HTTP Response"
msgstr "アドバンスドVert.x HTTPレスポンス"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:834
#, fuzzy
msgid "For example, here is how you can return the name of the currently logged-in user:"
msgstr "例えば、現在ログインしているユーザーの名前を返す方法は以下の通りです。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:840
#: upstream/_guides/resteasy-reactive.adoc:865
#: upstream/_guides/resteasy-reactive.adoc:893
#, no-wrap
msgid "import java.security.Principal;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:844
#: upstream/_guides/resteasy-reactive.adoc:871
#: upstream/_guides/resteasy-reactive.adoc:897
#, no-wrap
msgid ""
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.core.SecurityContext;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:847
#: upstream/_guides/resteasy-reactive.adoc:874
#: upstream/_guides/resteasy-reactive.adoc:900
#, no-wrap
msgid ""
"@Path(\"user\")\n"
"public class Endpoint {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:854
#, no-wrap
msgid ""
"    @GET\n"
"    public String userName(SecurityContext security) {\n"
"        Principal user = security.getUserPrincipal();\n"
"        return user != null ? user.getName() : \"<NOT LOGGED IN>\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:859
#, fuzzy
msgid "You can also inject those context objects using https://javadoc.io/static/javax.inject/javax.inject/1/javax/inject/Inject.html[`@Inject`] on fields of the same type:"
msgstr "また，これらのコンテキスト・オブジェクトを  link:https://javadoc.io/static/javax.inject/javax.inject/1/javax/inject/Inject.html[`@Inject`]を使って、同じ型のフィールドに注入することもできます。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:867
#, no-wrap
msgid "import javax.inject.Inject;\n"
msgstr "import javax.inject.Inject;\n"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:877
#, no-wrap
msgid ""
"    @Inject\n"
"    SecurityContext security;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:884
#: upstream/_guides/resteasy-reactive.adoc:913
#, no-wrap
msgid ""
"    @GET\n"
"    public String userName() {\n"
"        Principal user = security.getUserPrincipal();\n"
"        return user != null ? user.getName() : \"<NOT LOGGED IN>\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:887
#, fuzzy
msgid "Or even on your endpoint constructor:"
msgstr "あるいは、エンドポイントのコンストラクタでも。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:902
#, no-wrap
msgid "    SecurityContext security;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:906
#, no-wrap
msgid ""
"    Endpoint(SecurityContext security) {\n"
"        this.security = security;\n"
"    }\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/resteasy-reactive.adoc:916
#, no-wrap
msgid "JSON serialisation"
msgstr "JSONのシリアル化"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:921
msgid "Instead of importing `io.quarkus:quarkus-resteasy-reactive`, you can import either of the following modules to get support for JSON:"
msgstr "`io.quarkus:quarkus-resteasy-reactive` をインポートする代わりに、以下のモジュールのいずれかをインポートすることで、JSON のサポートを受けることができます。"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:924
#: upstream/_guides/resteasy-reactive.adoc:1130
#, no-wrap
msgid "GAV"
msgstr "GAV"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:927
#, no-wrap
msgid "`io.quarkus:quarkus-resteasy-reactive-jackson`"
msgstr "`io.quarkus:quarkus-resteasy-reactive-jackson`"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:929
#, no-wrap
msgid "https://github.com/FasterXML/jackson[Jackson support]"
msgstr "https://github.com/FasterXML/jackson[Jacksonサポート]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:930
#, no-wrap
msgid "`io.quarkus:quarkus-resteasy-reactive-jsonb`"
msgstr "`io.quarkus:quarkus-resteasy-reactive-jsonb`"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:932
#, no-wrap
msgid "https://eclipse-ee4j.github.io/jsonb-api/[JSON-B support]"
msgstr "link:https://eclipse-ee4j.github.io/jsonb-api/[JSON-Bサポート]"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:937
msgid "In both cases, importing those modules will allow HTTP message bodies to be read from JSON and serialised to JSON, for <<resource-types,all the types not already registered with a more specific serialisation>>."
msgstr "いずれの場合も、これらのモジュールをインポートすることで、HTTPメッセージボディをJSONから読み取ったり、<<resource-types,より具体的なシリアライズ方法が登録されていない型>> に JSONをシリアライズできるようになります。"

#. type: Title ====
#: upstream/_guides/resteasy-reactive.adoc:938
#, no-wrap
msgid "Advanced Jackson-specific features"
msgstr "Jackson固有の高度な機能"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:941
msgid "When using the `quarkus-resteasy-reactive-jackson` extension there are some advanced features that RESTEasy Reactive supports."
msgstr "`quarkus-resteasy-reactive-jackson` エクステンションを使用する場合、RESTEasy Reactive がサポートするいくつかの高度な機能があります。"

#. type: Title =====
#: upstream/_guides/resteasy-reactive.adoc:943
#, no-wrap
msgid "Secure serialization"
msgstr "セキュア・シリアライゼーション"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:947
msgid "When used with Jackson to perform JSON serialization, RESTEasy Reactive provides the ability to limit the set of fields that are serialized based on the roles of the current user.  This is achieved by simply annotating the fields (or getters) of the POJO being returned with `@io.quarkus.resteasy.reactive.jackson.SecureField`."
msgstr "JSON をシリアライズするために Jackson を使用する場合、RESTEasy Reactive は、現在のユーザのroleに基づいてシリアライズされるフィールドのセットを制限する機能を提供します。これは、返されるPOJOのフィールド（またはゲッター）を `@io.quarkus.resteasy.reactive.jackson.SecureField` でアノテーションするだけで実現できます。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:949
msgid "A simple example could be the following:"
msgstr "簡単な例を挙げると、次のようになります:"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:951
msgid "Assume we have a POJO named `Person` which looks like so:"
msgstr "`Person` という名前のPOJOがあり、以下のようになっているとします:"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:957
#, no-wrap
msgid "import io.quarkus.resteasy.reactive.jackson.SecureField;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:959
#, no-wrap
msgid "public class Person {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:964
#, no-wrap
msgid ""
"    @SecureField(rolesAllowed = \"admin\")\n"
"    private final Long id;\n"
"    private final String first;\n"
"    private final String last;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:970
#, no-wrap
msgid ""
"    public Person(Long id, String first, String last) {\n"
"        this.id = id;\n"
"        this.first = first;\n"
"        this.last = last;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:974
#, no-wrap
msgid ""
"    public Long getId() {\n"
"        return id;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:978
#, no-wrap
msgid ""
"    public String getFirst() {\n"
"        return first;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:983
#, no-wrap
msgid ""
"    public String getLast() {\n"
"        return last;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:986
msgid "A very simple JAX-RS Resource that uses `Person` could be:"
msgstr "`Person` を使用する非常にシンプルな JAX-RS Resource は次のようになります:"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:996
#, no-wrap
msgid ""
"@Path(\"person\")\n"
"public class Person {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1003
#, no-wrap
msgid ""
"    @Path(\"{id}\")\n"
"    @GET\n"
"    public Person getPerson(Long id) {\n"
"        return new Person(id, \"foo\", \"bar\");\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1007
#, fuzzy
msgid "Assuming security has been set up for the application (see our xref:security.adoc[guide] for more details), when a user with the `admin` role performs an HTTP GET on `/person/1` they will receive:"
msgstr "アプリケーションにセキュリティが設定されている場合（詳細は link:security.html[ガイド]を参照）、 `admin` ロールを持つユーザーが `/person/1` に対して HTTP GET を実行すると、次のようなメッセージが表示されます。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1015
#, no-wrap
msgid ""
"{\n"
"  \"id\": 1,\n"
"  \"first\": \"foo\",\n"
"  \"last\": \"bar\"\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1018
#, fuzzy
msgid "as the response."
msgstr "と回答しています。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1020
#, fuzzy
msgid "Any user however that does not have the `admin` role will receive:"
msgstr "しかし、 `admin` ロールを持っていないすべてのユーザーが受信します。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1027
#, no-wrap
msgid ""
"{\n"
"  \"first\": \"foo\",\n"
"  \"last\": \"bar\"\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1031
#, fuzzy
msgid "No additional configuration needs to be applied for this secure serialization to take place. However, users can use the `@io.quarkus.resteasy.reactive.jackson.EnableSecureSerialization` and `@io.quarkus.resteasy.reactive.jackson.DisableSecureSerialization` annotation to opt-in or out for specific JAX-RS Resource classes or methods."
msgstr "この安全なシリアル化を行うために、追加の構成を適用する必要はありません。ただし、ユーザーは `@io.quarkus.resteasy.reactive.jackson.EnableSecureSerialization` および `@io.quarkus.resteasy.reactive.jackson.DisableSecureSerialization` アノテーションを使用して、特定の JAX-RS Resource クラスまたはメソッドに対してオプトインまたはアウトすることができます。"

#. type: Title =====
#: upstream/_guides/resteasy-reactive.adoc:1032
#, fuzzy, no-wrap
msgid "@JsonView support"
msgstr "JsonViewのサポート"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1036
#, fuzzy
msgid "JAX-RS methods can be annotated with https://fasterxml.github.io/jackson-annotations/javadoc/2.10/com/fasterxml/jackson/annotation/JsonView.html[@JsonView] in order to customize the serialization of the returned POJO, on a per method-basis. This is best explained with an example."
msgstr "JAX-RSメソッドに link:https://fasterxml.github.io/jackson-annotations/javadoc/2.10/com/fasterxml/jackson/annotation/JsonView.html[@JsonView]をアノテーションすることで、返されるPOJOのシリアライズをメソッドごとにカスタマイズすることができます。これについては、例を挙げて説明します。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1038
#, fuzzy
msgid "A typical use of `@JsonView` is to hide certain fields on certain methods. In that vein, let's define two views:"
msgstr "`@JsonView` の典型的な使い方は、特定のメソッドの特定のフィールドを隠すことです。そのような意味で、2つのビューを定義してみましょう。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1042
#, no-wrap
msgid "public class Views {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1045
#, no-wrap
msgid ""
"    public static class Public {\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1049
#, no-wrap
msgid ""
"    public static class Private extends Public {\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1052
#, fuzzy
msgid "Let's assume we have the `User` POJO on which we want to hide some field during serialization. A simple example of this is:"
msgstr "`User` POJOがあって、シリアル化の際にあるフィールドを隠したいとします。その簡単な例として"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1056
#, no-wrap
msgid "public class User {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1059
#, no-wrap
msgid ""
"    @JsonView(Views.Private.class)\n"
"    public int id;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1063
#, no-wrap
msgid ""
"    @JsonView(Views.Public.class)\n"
"    public String name;\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1067
#, fuzzy
msgid "Depending on the JAX-RS method that returns this user, we might want to exclude the `id` field from serialization - for example you might want an insecure method to not expose this field. The way we can achieve that in RESTEasy Reactive is shown in the following example:"
msgstr "このユーザを返すJAX-RSメソッドによっては、 `id` フィールドをシリアライズから除外したい場合があります。例えば、安全でないメソッドではこのフィールドを公開しないようにしたい場合があります。RESTEasy Reactiveでそれを実現する方法は、以下の例のようになります。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1076
#, no-wrap
msgid ""
"@JsonView(Views.Public.class)\n"
"@GET\n"
"@Path(\"/public\")\n"
"public User userPublic() {\n"
"    return testUser();\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1083
#, no-wrap
msgid ""
"@JsonView(Views.Private.class)\n"
"@GET\n"
"@Path(\"/private\")\n"
"public User userPrivate() {\n"
"    return testUser();\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1087
#, fuzzy
msgid "When the result the `userPublic` method is serialized, the `id` field will not be contained in the response as the `Public` view does not include it.  The result of `userPrivate` however will include the `id` as expected when serialized."
msgstr "`userPublic` メソッドの結果をシリアル化すると、 `Public` ビューには `id` フィールドが含まれていないため、レスポンスには含まれません。しかし、 `userPrivate` の結果がシリアル化されると、予想通り `id` が含まれます。"

#. type: Title =====
#: upstream/_guides/resteasy-reactive.adoc:1088
#, fuzzy, no-wrap
msgid "Completely customized per method serialization"
msgstr "メソッドごとに完全にカスタマイズされたシリアライゼーション"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1092
#, fuzzy
msgid "There are times when you need to completely customize the serialization of a POJO on a per JAX-RS method basis. For such use cases, the `@io.quarkus.resteasy.reactive.jackson.CustomSerialization` annotation is a great tool, as it allows you to configure a per-method `com.fasterxml.jackson.databind.ObjectWriter` which can be configured at will."
msgstr "POJOのシリアライズをJAX-RSメソッドごとに完全にカスタマイズする必要がある場合があります。そのようなユースケースでは、メソッドごとに `com.fasterxml.jackson.databind.ObjectWriter` を自由に設定できる `@io.quarkus.resteasy.reactive.jackson.CustomSerialization` アノテーションが威力を発揮します。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1094
#, fuzzy
msgid "Here is an example use case:"
msgstr "ここでは、使用例をご紹介します。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1103
#, no-wrap
msgid ""
"@CustomSerialization(UnquotedFields.class)\n"
"@GET\n"
"@Path(\"/invalid-use-of-custom-serializer\")\n"
"public User invalidUseOfCustomSerializer() {\n"
"    return testUser();\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1106
#, fuzzy
msgid "where `UnquotedFields` is a `BiFunction` defined as so:"
msgstr "ここで、 `UnquotedFields` は、そのように定義された `BiFunction` です。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1110
#, no-wrap
msgid "public static class UnquotedFields implements BiFunction<ObjectMapper, Type, ObjectWriter> {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1116
#, no-wrap
msgid ""
"    @Override\n"
"    public ObjectWriter apply(ObjectMapper objectMapper, Type type) {\n"
"        return objectMapper.writer().without(JsonWriteFeature.QUOTE_FIELD_NAMES);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1119
#, fuzzy
msgid "Essentially what this class does is force Jackson to not include quotes in the field names."
msgstr "基本的にこのクラスは、Jacksonがフィールド名に引用符を含まないようにするためのものです。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1121
#, fuzzy
msgid "It is important to note that this customization is only performed for the serialization of the JAX-RS methods that use `@CustomSerialization(UnquotedFields.class)`."
msgstr "このカスタマイズは、 `@CustomSerialization(UnquotedFields.class)` を使用する JAX-RS メソッドのシリアライゼーションに対してのみ実行されることに注意してください。"

#. type: Title ===
#: upstream/_guides/resteasy-reactive.adoc:1122
#, fuzzy, no-wrap
msgid "XML serialisation"
msgstr "XMLシリアライゼーション"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1127
#, fuzzy
msgid "To enable XML support, add the `quarkus-resteasy-reactive-jaxb` extension to your project."
msgstr "XMLサポートを有効にするには、プロジェクトに `quarkus-resteasy-reactive-jaxb` 拡張機能を追加します。"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:1133
#, fuzzy, no-wrap
msgid "`io.quarkus:quarkus-resteasy-reactive-jaxb`"
msgstr "`io.quarkus:quarkus-resteasy-reactive-jaxb`"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:1135
#, fuzzy, no-wrap
msgid "https://javaee.github.io/jaxb-v2/[XML support]"
msgstr "link:https://javaee.github.io/jaxb-v2/[XMLサポート]"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1140
#, fuzzy
msgid "Importing this module will allow HTTP message bodies to be read from XML and serialised to XML, for <<resource-types,all the types not already registered with a more specific serialisation>>."
msgstr "このモジュールをインポートすると、HTTPメッセージボディをXMLから読み取ってXMLにシリアライズできるようになります。"

#. type: Title ==
#: upstream/_guides/resteasy-reactive.adoc:1141
#, fuzzy, no-wrap
msgid "CORS filter"
msgstr "CORSフィルタ"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1146
msgid "link:https://en.wikipedia.org/wiki/Cross-origin_resource_sharing[Cross-origin resource sharing] (CORS) is a mechanism that allows restricted resources on a web page to be requested from another domain outside the domain from which the first resource was served."
msgstr "link:https://en.wikipedia.org/wiki/Cross-origin_resource_sharing[クロスオリジンリソース共有] (CORS)は、ウェブページ上の制限されたリソースを、最初のリソースが提供されたドメイン以外の別のドメインから要求できるようにするメカニズムです。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1150
#, fuzzy
msgid "Quarkus comes with a CORS filter at the HTTP layer level.  Read the xref:http-reference.adoc#cors-filter[HTTP Reference Documentation] to learn how to use it."
msgstr "Quarkusには、HTTPレイヤーレベルのCORSフィルタが付属しています。使用方法については、『 link:http-reference.html#cors-filter[HTTP Reference Documentation]』を参照してください。"

#. type: Title ==
#: upstream/_guides/resteasy-reactive.adoc:1151
#, fuzzy, no-wrap
msgid "More advanced usage"
msgstr "より高度な使い方"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1155
#, fuzzy
msgid "Here are some more advanced topics that you may not need to know about initially, but could prove useful for more complex use cases."
msgstr "ここでは、最初は必要ないかもしれませんが、より複雑なユースケースに役立つかもしれない、より高度なトピックをご紹介します。"

#. type: Title ===
#: upstream/_guides/resteasy-reactive.adoc:1156
#, fuzzy, no-wrap
msgid "Execution model, blocking, non-blocking"
msgstr "実行モデル、ブロッキング、ノンブロッキング"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1161
#, fuzzy
msgid "RESTEasy Reactive is implemented using two main thread types:"
msgstr "RESTEasy Reactiveは、主に2つのスレッドタイプを使って実装されています。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1163
#, fuzzy
msgid "Event-loop threads: which are responsible, among other things, for reading bytes from the HTTP request and"
msgstr "イベントループ・スレッド：HTTPリクエストからのバイトの読み取りや"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1164
#, fuzzy
msgid "writing bytes back to the HTTP response"
msgstr "バイトをHTTPレスポンスに書き戻す"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1165
#, fuzzy
msgid "Worker threads: they are pooled and can be used to offload long-running operations"
msgstr "ワーカースレッド：プールされており、長時間の処理をオフロードするために使用することができます。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1169
#, fuzzy
msgid "The event-loop threads (also called IO threads) are responsible for actually performing all the IO operations in an asynchronous way, and to trigger any listener interested in the completion of those IO operations."
msgstr "イベントループスレッド（IOスレッドとも呼ばれる）は、非同期的にすべてのIO操作を実際に実行し、それらのIO操作の完了に関心のあるリスナーをトリガする責任があります。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1173
#, fuzzy
msgid "By default, the thread RESTEasy Reactive will run endpoint methods on depends on the signature of the method.  If a method returns one of the following types then it is considered non-blocking, and will be run on the IO thread by default:"
msgstr "デフォルトでは、RESTEasy Reactiveがエンドポイント・メソッドを実行するスレッドは、メソッドのシグネチャに依存します。メソッドが以下のタイプのいずれかを返す場合、それはノンブロッキングとみなされ、デフォルトではIOスレッドで実行されます。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1175
msgid "`io.smallrye.mutiny.Uni`"
msgstr "`io.smallrye.mutiny.Uni`"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1176
msgid "`io.smallrye.mutiny.Multi`"
msgstr "`io.smallrye.mutiny.Multi`"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1177
msgid "`java.util.concurrent.CompletionStage`"
msgstr "`java.util.concurrent.CompletionStage`"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1178
msgid "`org.reactivestreams.Publisher`"
msgstr "`org.reactivestreams.Publisher`"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1179
msgid "Kotlin `suspended` methods"
msgstr "Kotlin `suspended` メソッド"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1184
#, fuzzy
msgid "This 'best guess' approach means that the majority of operations will run on the correct thread by default. If you are writing reactive code then your method will generally return one of these types, and will be executed on the IO thread.  If you are writing blocking code your methods will generally return the result directly, and these will be run on a worker thread."
msgstr "この「最善の推測」アプローチにより、大部分の処理はデフォルトで正しいスレッドで実行されます。リアクティブなコードを書いている場合、メソッドは通常これらのタイプのいずれかを返し、IOスレッドで実行されます。ブロッキングコードを書いている場合、メソッドは通常、結果を直接返し、これらはワーカースレッドで実行されます。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1190
#, fuzzy
msgid "You can override this behaviour using the https://javadoc.io/doc/io.smallrye.common/smallrye-common-annotation/1.5.0/io/smallrye/common/annotation/Blocking.html[`@Blocking`] and https://javadoc.io/doc/io.smallrye.common/smallrye-common-annotation/1.5.0/io/smallrye/common/annotation/NonBlocking.html[`@NonBlocking`] annotations. This can be applied at the method, class or `javax.ws.rs.core.Application` level."
msgstr "この動作をオーバーライドするには  link:https://javadoc.io/doc/io.smallrye.common/smallrye-common-annotation/1.5.0/io/smallrye/common/annotation/Blocking.html[`@Blocking`]と  link:https://javadoc.io/doc/io.smallrye.common/smallrye-common-annotation/1.5.0/io/smallrye/common/annotation/NonBlocking.html[`@NonBlocking`]アノテーションを使用して、この動作をオーバーライドできます。これは、メソッド、クラス、 `javax.ws.rs.core.Application` レベルで適用できます。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1192
#, fuzzy
msgid "The example below will override the default behaviour and always run on a worker thread, even though it returns a `Uni`."
msgstr "以下の例では、デフォルトの動作を上書きして、 `Uni` を返しても、常にワーカースレッドで実行します。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1201
#, no-wrap
msgid "import io.smallrye.common.annotation.Blocking;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1204
#: upstream/_guides/resteasy-reactive.adoc:1232
#, no-wrap
msgid ""
"@Path(\"yawn\")\n"
"public class Endpoint {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1213
#, no-wrap
msgid ""
"    @Blocking\n"
"    @GET\n"
"    public Uni<String> blockingHello() throws InterruptedException {\n"
"        // do a blocking operation\n"
"        Thread.sleep(1000);\n"
"        return Uni.createFrom().item(\"Yaaaawwwwnnnnnn…\");\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1218
#, fuzzy
msgid "Most of the time, there are ways to achieve the same blocking operations in an asynchronous/reactive way, using https://smallrye.io/smallrye-mutiny/[Mutiny], http://hibernate.org/reactive/[Hibernate Reactive] or any of the xref:quarkus-reactive-architecture.adoc#quarkus-extensions-enabling-reactive[Quarkus Reactive extensions] for example:"
msgstr "ほとんどの場合、 link:https://smallrye.io/smallrye-mutiny/[Mutiny]、 link:http://hibernate.org/reactive/[Hibernate Reactive]、 link:quarkus-reactive-architecture.html#quarkus-extensions-enabling-reactive[Quarkus Reactive拡張]などを使って、非同期/反応型の方法で同じブロック操作を実現する方法があります。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1224
#, no-wrap
msgid "import java.time.Duration;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1240
#, no-wrap
msgid ""
"    @GET\n"
"    public Uni<String> blockingHello() throws InterruptedException {\n"
"        return Uni.createFrom().item(\"Yaaaawwwwnnnnnn…\")\n"
"                // do a non-blocking sleep\n"
"                .onItem().delayIt().by(Duration.ofSeconds(2));\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1245
#, fuzzy
msgid "If a method or class is annotated with `javax.transaction.Transactional` then it will also be treated as a blocking method. This is because JTA is a blocking technology, and is generally used with other blocking technology such as Hibernate and JDBC. An explicit `@Blocking` or `@NonBlocking` on the class will override this behaviour."
msgstr "メソッドやクラスが `javax.transaction.Transactional` でアノテーションされている場合、そのメソッドはブロッキングメソッドとしても扱われます。これは、JTAがブロッキング技術であり、一般的にHibernateやJDBCなどの他のブロッキング技術と一緒に使用されるためです。クラスに明示的に `@Blocking` または `@NonBlocking` を付けると、この動作が上書きされます。"

#. type: Title ====
#: upstream/_guides/resteasy-reactive.adoc:1246
#, no-wrap
msgid "Overriding the default behaviour"
msgstr "デフォルトの動作のオーバーライド"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1250
#, fuzzy
msgid "If you want to override the default behaviour you can annotate a `javax.ws.rs.core.Application` subclass in your application with `@Blocking` or `@NonBlocking`, and this will set the default for every method that does not have an explicit annotation."
msgstr "デフォルトの動作をオーバーライドしたい場合は、アプリケーション内の `javax.ws.rs.core.Application` サブクラスに `@Blocking` または `@NonBlocking` をアノテーションすることで、明示的なアノテーションを持たないすべてのメソッドのデフォルトが設定されます。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1253
#, fuzzy
msgid "Behaviour can still be overridden on a class or method level by annotating them directly, however all endpoints without an annotation will now follow the default, no matter their method signature."
msgstr "しかし、アノテーションのないすべてのエンドポイントは、そのメソッドのシグネチャに関係なく、デフォルトに従います。"

#. type: Title ===
#: upstream/_guides/resteasy-reactive.adoc:1255
#, no-wrap
msgid "Exception mapping"
msgstr "例外のマッピング"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1260
#, fuzzy
msgid "If your application needs to return non-nominal HTTP codes in error cases, the best is to throw exceptions that will result in the proper HTTP response being sent by the framework using link:{jaxrsapi}/javax/ws/rs/WebApplicationException.html[`WebApplicationException`] or any of its subtypes:"
msgstr "アプリケーションがエラー時に非正規の HTTP コードを返す必要がある場合は、フレームワークが適切な HTTP レスポンスを送信するように例外をスローするのが最善です。  link:{jaxrsapi}/javax/ws/rs/WebApplicationException.html[`WebApplicationException`]またはそのサブタイプのいずれかを使用して、フレームワークから適切なHTTPレスポンスが送信されるようになります。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1269
#, no-wrap
msgid ""
"import javax.ws.rs.BadRequestException;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.NotFoundException;\n"
"import javax.ws.rs.Path;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1272
#: upstream/_guides/resteasy-reactive.adoc:1334
#, no-wrap
msgid ""
"@Path(\"cheeses/{cheese}\")\n"
"public class Endpoint {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1284
#, no-wrap
msgid ""
"    @GET\n"
"    public String findCheese(String cheese) {\n"
"        if(cheese == null)\n"
"            // send a 400\n"
"            throw new BadRequestException();\n"
"        if(!cheese.equals(\"camembert\"))\n"
"            // send a 404\n"
"            throw new NotFoundException(\"Unknown cheese: \" + cheese);\n"
"        return \"Camembert is a very nice cheese\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1293
#, fuzzy
msgid "If your endpoint method is delegating calls to another service layer which does not know of JAX-RS, you need a way to turn service exceptions to an HTTP response, and you can do that using the link:{resteasy-reactive-api}/org/jboss/resteasy/reactive/server/ServerExceptionMapper.html[`@ServerExceptionMapper`] annotation on a method, with one parameter of the exception type you want to handle, and turning that exception into a link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestResponse.html[`RestResponse`] (or a link:{mutinyapi}/io/smallrye/mutiny/Uni.html[`Uni<RestResponse<?>>`]):"
msgstr "エンドポイント・メソッドが、JAX-RSを知らない別のサービス・レイヤーにコールを委譲している場合、サービス例外をHTTPレスポンスに変換する方法が必要です。  link:{resteasy-reactive-api}/org/jboss/resteasy/reactive/server/ServerExceptionMapper.html[`@ServerExceptionMapper`]アノテーションを使用して、処理したい例外タイプのパラメータを1つ持つメソッドを作成し、その例外を  link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestResponse.html[`RestResponse`](または  link:{mutinyapi}/io/smallrye/mutiny/Uni.html[`Uni<RestResponse<?>>`]):"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1299
#, no-wrap
msgid "import java.util.Map;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1306
#, no-wrap
msgid ""
"import javax.enterprise.context.ApplicationScoped;\n"
"import javax.inject.Inject;\n"
"import javax.ws.rs.BadRequestException;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.core.Response;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1309
#: upstream/_guides/resteasy-reactive.adoc:1363
#, no-wrap
msgid ""
"import org.jboss.resteasy.reactive.server.ServerExceptionMapper;\n"
"import org.jboss.resteasy.reactive.RestResponse;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1312
#, no-wrap
msgid ""
"class UnknownCheeseException extends RuntimeException {\n"
"    public final String name;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1317
#, no-wrap
msgid ""
"    public UnknownCheeseException(String name) {\n"
"        this.name = name;\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1323
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"class CheeseService {\n"
"    private static final Map<String, String> cheeses = \n"
"            Map.of(\"camembert\", \"Camembert is a very nice cheese\",\n"
"                   \"gouda\", \"Gouda is acceptable too, especially with cumin\");\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1331
#, no-wrap
msgid ""
"    public String findCheese(String name) {\n"
"        String ret = cheeses.get(name);\n"
"        if(ret != null)\n"
"            return ret;\n"
"        throw new UnknownCheeseException(name);\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1337
#, no-wrap
msgid ""
"    @Inject\n"
"    CheeseService cheeses;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1342
#, no-wrap
msgid ""
"    @ServerExceptionMapper\n"
"    public RestResponse<String> mapException(UnknownCheeseException x) {\n"
"        return RestResponse.status(Response.Status.NOT_FOUND, \"Unknown cheese: \" + x.name);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1351
#, no-wrap
msgid ""
"    @GET\n"
"    public String findCheese(String cheese) {\n"
"        if(cheese == null)\n"
"            // send a 400\n"
"            throw new BadRequestException();\n"
"        return cheeses.findCheese(cheese);\n"
"    }\n"
"} \n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1356
#, fuzzy
msgid "exception mappers defined in REST endpoint classes will only be called if the exception is thrown in the same class. If you want to define global exception mappers, simply define them outside a REST endpoint class:"
msgstr "REST エンドポイント・クラスで定義された例外マッパーは、同じクラスで例外がスローされた場合にのみ呼び出されます。グローバルな例外マッパーを定義したい場合は、単純にRESTエンドポイント・クラスの外で定義してください。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1370
#, no-wrap
msgid ""
"class ExceptionMappers {\n"
"    @ServerExceptionMapper\n"
"    public RestResponse<String> mapException(UnknownCheeseException x) {\n"
"        return RestResponse.status(Response.Status.NOT_FOUND, \"Unknown cheese: \" + x.name);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1373
#, fuzzy
msgid "You can also declare link:{jaxrsspec}#exceptionmapper[exception mappers in the JAX-RS way]."
msgstr "link:{jaxrsspec}#exceptionmapper[JAX-RSの方法で例外マッパー]を宣言することもできます。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1375
#, fuzzy
msgid "Your exception mapper may declare any of the following parameter types:"
msgstr "例外マッパーは、以下のいずれかのパラメータタイプを宣言することができます。"

#. type: Block title
#: upstream/_guides/resteasy-reactive.adoc:1376
#, fuzzy, no-wrap
msgid "Table Exception mapper parameters"
msgstr "Table Exception マッパーパラメータ"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:1381
#, fuzzy, no-wrap
msgid "An exception type"
msgstr "例外タイプ"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:1383
#, fuzzy, no-wrap
msgid "Defines the exception type you want to handle"
msgstr "処理したい例外の種類を定義する"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:1384
#: upstream/_guides/resteasy-reactive.adoc:1486
#, fuzzy, no-wrap
msgid "Any of the <<context-objects,Context objects>>"
msgstr "いずれかの link:#context-objects[Contextオブジェクト]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:1387
#: upstream/_guides/resteasy-reactive.adoc:1489
#, fuzzy, no-wrap
msgid "link:{jaxrsapi}/javax/ws/rs/container/ContainerRequestContext.html[`ContainerRequestContext`]"
msgstr "link:{jaxrsapi}/javax/ws/rs/container/ContainerRequestContext.html[`ContainerRequestContext`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:1389
#: upstream/_guides/resteasy-reactive.adoc:1491
#, fuzzy, no-wrap
msgid "A context object to access the current request"
msgstr "現在のリクエストにアクセスするためのコンテキストオブジェクト"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1392
#: upstream/_guides/resteasy-reactive.adoc:1500
#, fuzzy
msgid "It may declare any of the following return types:"
msgstr "以下のいずれかのリターンタイプを宣言することができます。"

#. type: Block title
#: upstream/_guides/resteasy-reactive.adoc:1393
#, fuzzy, no-wrap
msgid "Table Exception mapper return types"
msgstr "表 例外的なマッパーのリターンタイプ"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:1398
#, fuzzy, no-wrap
msgid "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestResponse.html[`RestResponse`] or link:{jaxrsapi}/javax/ws/rs/core/Response.html[`Response`]"
msgstr "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestResponse.html[`RestResponse`]または  link:{jaxrsapi}/javax/ws/rs/core/Response.html[`Response`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:1400
#, fuzzy, no-wrap
msgid "The response to send to the client when the exception occurs"
msgstr "例外が発生したときにクライアントに送信するレスポンス"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:1401
#, fuzzy, no-wrap
msgid "link:{mutinyapi}/io/smallrye/mutiny/Uni.html[`Uni<RestResponse>`] or link:{mutinyapi}/io/smallrye/mutiny/Uni.html[`Uni<Response>`]"
msgstr "link:{mutinyapi}/io/smallrye/mutiny/Uni.html[`Uni<RestResponse>`]または  link:{mutinyapi}/io/smallrye/mutiny/Uni.html[`Uni<Response>`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:1403
#, fuzzy, no-wrap
msgid "An asynchronous response to send to the client when the exception occurs"
msgstr "例外発生時にクライアントに送信する非同期レスポンス"

#. type: Title ===
#: upstream/_guides/resteasy-reactive.adoc:1405
#, fuzzy, no-wrap
msgid "Request or response filters"
msgstr "リクエストまたはレスポンスフィルター"

#. type: Title ====
#: upstream/_guides/resteasy-reactive.adoc:1407
#, fuzzy, no-wrap
msgid "Via annotations"
msgstr "アノテーションの使用"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1410
#, fuzzy
msgid "You can declare functions which are invoked in the following phases of the request processing:"
msgstr "リクエスト処理の次のフェーズで呼び出される関数を宣言することができます。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1412
#, fuzzy
msgid "Before the endpoint method is identified: pre-routing request filter"
msgstr "エンドポイント・メソッドが特定される前に：プリルーティング・リクエスト・フィルター"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1413
#, fuzzy
msgid "After routing, but before the endpoint method is called: normal request filter"
msgstr "ルーティング後、エンドポイントメソッドが呼び出される前に、通常のリクエストフィルター"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1414
#, fuzzy
msgid "After the endpoint method is called: response filter"
msgstr "エンドポイントメソッドが呼び出された後：レスポンスフィルター"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1418
#, fuzzy
msgid "These filters allow you to do various things such as examine the request URI, HTTP method, influence routing, look or change request headers, abort the request, or modify the response."
msgstr "これらのフィルターは、リクエストのURI、HTTPメソッド、ルーティングへの影響、リクエストヘッダーの確認や変更、リクエストの中断、レスポンスの変更など、さまざまなことを可能にします。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1422
#, fuzzy
msgid "Request filters can be declared with the link:{resteasy-reactive-api}/org/jboss/resteasy/reactive/server/ServerRequestFilter.html[`@ServerRequestFilter`] annotation:"
msgstr "リクエストフィルターの宣言には  link:{resteasy-reactive-api}/org/jboss/resteasy/reactive/server/ServerRequestFilter.html[`@ServerRequestFilter`]アノテーションで宣言できます。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1426
#, fuzzy, no-wrap
msgid "import java.util.Optional;\n"
msgstr "import javax.inject.Inject;\n"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1428
#, no-wrap
msgid "class Filters {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1436
#, no-wrap
msgid ""
"    @ServerRequestFilter(preMatching = true)\n"
"    public void preMatchingFilter(ContainerRequestContext requestContext) {\n"
"        // make sure we don't lose cheese lovers\n"
"        if(\"yes\".equals(requestContext.getHeaderString(\"Cheese\"))) {\n"
"            requestContext.setRequestUri(URI.create(\"/cheese\"));\n"
"        }\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1446
#, no-wrap
msgid ""
"    @ServerRequestFilter\n"
"    public Optional<RestResponse<Void>> getFilter(ContainerRequestContext ctx) {\n"
"        // only allow GET methods for now\n"
"        if(ctx.getMethod().equals(HttpMethod.GET)) {\n"
"            return Optional.of(RestResponse.status(Response.Status.METHOD_NOT_ALLOWED));\n"
"        }\n"
"        return Optional.empty();\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/resteasy-reactive.adoc:1455
#, fuzzy
msgid "Request filters are usually executed on the same thread that the method that handles the request will be executed.  That means that if the method servicing the request is annotated with `@Blocking`, then the filters will also be run on the worker thread.  If the method is annotated with `@NonBlocking` (or is not annotated at all), then the filters will also be run on the same event-loop thread."
msgstr "リクエストフィルターは通常、リクエストを処理するメソッドが実行されるのと同じスレッドで実行されます。つまり、リクエストを処理するメソッドが `@Blocking` でアノテーションされている場合は、フィルターもワーカースレッドで実行されます。メソッドが `@NonBlocking` でアノテーションされている場合（または全くアノテーションされていない場合）、フィルターも同じイベントループのスレッドで実行されます。"

#. type: delimited block =
#: upstream/_guides/resteasy-reactive.adoc:1459
#, fuzzy
msgid "If however a filter needs to be run on the event-loop despite the fact that the method servicing the request will be run on a worker thread, then `@ServerRequestFilter(nonBlocking=true)` can be used.  Note however, that these filters need to be run before **any** filter that does not use that setting and would run on a worker thread."
msgstr "しかし、リクエストを処理するメソッドがワーカースレッドで実行されるにもかかわらず、フィルタをイベントループで実行する必要がある場合、 `@ServerRequestFilter(nonBlocking=true)` を使用することができます。ただし、これらのフィルターは、その設定を使用せず、ワーカースレッドで実行されるフィルター *の*前に実行される必要があることに注意してください。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1464
#, fuzzy
msgid "Similarly, response filters can be declared with the link:{resteasy-reactive-api}/org/jboss/resteasy/reactive/server/ServerResponseFilter.html[`@ServerResponseFilter`] annotation:"
msgstr "同様に、レスポンス・フィルターの宣言には  link:{resteasy-reactive-api}/org/jboss/resteasy/reactive/server/ServerResponseFilter.html[`@ServerResponseFilter`]アノテーションで宣言できます。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1477
#, no-wrap
msgid ""
"class Filters {\n"
"    @ServerResponseFilter\n"
"    public void getFilter(ContainerResponseContext responseContext) {\n"
"        Object entity = responseContext.getEntity();\n"
"        if(entity instanceof String) {\n"
"            // make it shout\n"
"            responseContext.setEntity(((String)entity).toUpperCase());\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1480
#, fuzzy
msgid "Your filters may declare any of the following parameter types:"
msgstr "フィルターは、以下のパラメータタイプを宣言することができます。"

#. type: Block title
#: upstream/_guides/resteasy-reactive.adoc:1481
#, fuzzy, no-wrap
msgid "Table Filter parameters"
msgstr "表 フィルターパラメータ"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:1492
#, fuzzy, no-wrap
msgid "link:{jaxrsapi}/javax/ws/rs/container/ContainerResponseContext.html[`ContainerResponseContext`]"
msgstr "link:{jaxrsapi}/javax/ws/rs/container/ContainerResponseContext.html[`ContainerResponseContext`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:1494
#, fuzzy, no-wrap
msgid "A context object to access the current response"
msgstr "現在のレスポンスにアクセスするためのコンテキストオブジェクト"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:1495
#, fuzzy, no-wrap
msgid "link:{jdkapi}/java/lang/Throwable.html[`Throwable`]"
msgstr "link:{jdkapi}/java/lang/Throwable.html[`Throwable`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:1497
#, fuzzy, no-wrap
msgid "Any thrown exception, or `null` (only for response filters)"
msgstr "スローされた例外、または `null` (レスポンスフィルターの場合のみ)"

#. type: Block title
#: upstream/_guides/resteasy-reactive.adoc:1501
#, fuzzy, no-wrap
msgid "Table Filter return types"
msgstr "表 フィルターのリターンタイプ"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:1506
#, fuzzy, no-wrap
msgid "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestResponse.html[`RestResponse<?>`] or link:{jaxrsapi}/javax/ws/rs/core/Response.html[`Response`]"
msgstr "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestResponse.html[`RestResponse<?>`]または  link:{jaxrsapi}/javax/ws/rs/core/Response.html[`Response`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:1508
#, fuzzy, no-wrap
msgid "The response to send to the client instead of continuing the filter chain, or `null` if the filter chain should proceed"
msgstr "フィルターチェーンを続行する代わりにクライアントに送信するレスポンス、またはフィルターチェーンを続行する場合は `null` 。"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:1509
#, fuzzy, no-wrap
msgid "link:{jdkapi}/java/util/Optional.html[`Optional<RestResponse<?>>`] or link:{jdkapi}/java/util/Optional.html[`Optional<Response>`]"
msgstr "link:{jdkapi}/java/util/Optional.html[`Optional<RestResponse<?>>`]または  link:{jdkapi}/java/util/Optional.html[`Optional<Response>`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:1511
#, fuzzy, no-wrap
msgid "An optional response to send to the client instead of continuing the filter chain, or an empty value if the filter chain should proceed"
msgstr "フィルターチェーンを続行する代わりに、クライアントに送信するオプションのレスポンス、またはフィルターチェーンを続行する場合は空の値"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:1512
#, fuzzy, no-wrap
msgid "link:{mutinyapi}/io/smallrye/mutiny/Uni.html[`Uni<RestResponse<?>>`] or link:{mutinyapi}/io/smallrye/mutiny/Uni.html[`Uni<Response>`]"
msgstr "link:{mutinyapi}/io/smallrye/mutiny/Uni.html[`Uni<RestResponse<?>>`]または  link:{mutinyapi}/io/smallrye/mutiny/Uni.html[`Uni<Response>`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:1514
#, fuzzy, no-wrap
msgid "An asynchronous response to send to the client instead of continuing the filter chain, or `null` if the filter chain should proceed"
msgstr "フィルターチェーンを続行する代わりに、クライアントに送信する非同期レスポンス、またはフィルターチェーンを続行する場合は、 `null` 。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1517
#, fuzzy
msgid "You can restrict the Resource methods for which a filter runs, by using link:{jaxrsapi}/javax/ws/rs/NameBinding.html[`@NameBinding`] meta-annotations."
msgstr "フィルタを実行するResourceメソッドを制限するには、以下の方法があります。  link:{jaxrsapi}/javax/ws/rs/NameBinding.html[`@NameBinding`]メタアノテーション"

#. type: Title ====
#: upstream/_guides/resteasy-reactive.adoc:1518
#, fuzzy, no-wrap
msgid "The JAX-RS way"
msgstr "JAX-RSの方法"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1521
#, fuzzy
msgid "You can also link:{jaxrsspec}#filters[declare request and response filters in the JAX-RS way]."
msgstr "また、 link:{jaxrsspec}#filters[JAX-RSの方法で、リクエストとレスポンスのフィルター]を宣言することもできます。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1526
msgid "Both HTTP request and response can be intercepted by providing `ContainerRequestFilter` or `ContainerResponseFilter` implementations respectively. These filters are suitable for processing the metadata associated with a message: HTTP headers, query parameters, media type, and other metadata. They also have the capability to abort the request processing, for instance when the user does not have the permissions to access the endpoint."
msgstr "HTTP リクエストとレスポンスの両方とも、それぞれ `ContainerRequestFilter` または `ContainerResponseFilter` の実装を提供することで、 インターセプトすることができます。これらのフィルタは、メッセージに関連付けられたメタデータを処理するのに適しています。HTTP ヘッダ、クエリパラメーター、メディアタイプ、その他のメタデータです。また、ユーザーがエンドポイントにアクセスする権限を持っていない場合など、リクエスト処理を中止する機能も持っています。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1529
msgid "Let's use `ContainerRequestFilter` to add logging capability to our service. We can do that by implementing `ContainerRequestFilter` and annotating it with the `@Provider` annotation:"
msgstr "`ContainerRequestFilter` を使用して、サービスにロギング機能を追加してみましょう。 `ContainerRequestFilter` を実装して、 `@Provider` アノテーションをつけることで実現できます。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1533
#, no-wrap
msgid "package org.acme.rest.json;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1536
#, no-wrap
msgid ""
"import io.vertx.core.http.HttpServerRequest;\n"
"import org.jboss.logging.Logger;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1542
#, fuzzy, no-wrap
msgid ""
"import javax.ws.rs.container.ContainerRequestContext;\n"
"import javax.ws.rs.container.ContainerRequestFilter;\n"
"import javax.ws.rs.core.Context;\n"
"import javax.ws.rs.core.UriInfo;\n"
"import javax.ws.rs.ext.Provider;\n"
msgstr ""
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1545
#, no-wrap
msgid ""
"@Provider\n"
"public class LoggingFilter implements ContainerRequestFilter {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1547
#, no-wrap
msgid "    private static final Logger LOG = Logger.getLogger(LoggingFilter.class);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1550
#, no-wrap
msgid ""
"    @Context\n"
"    UriInfo info;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1553
#, no-wrap
msgid ""
"    @Context\n"
"    HttpServerRequest request;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1556
#, no-wrap
msgid ""
"    @Override\n"
"    public void filter(ContainerRequestContext context) {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1560
#, no-wrap
msgid ""
"        final String method = context.getMethod();\n"
"        final String path = info.getPath();\n"
"        final String address = request.remoteAddress().toString();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1564
#, no-wrap
msgid ""
"        LOG.infof(\"Request %s %s from IP %s\", method, path, address);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1567
msgid "Now, whenever a REST method is invoked, the request will be logged into the console:"
msgstr "これで、RESTメソッドが呼び出されるたびに、リクエストがコンソールにログとして記録されるようになりました。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1574
#, no-wrap
msgid ""
"2019-06-05 12:44:26,526 INFO  [org.acm.res.jso.LoggingFilter] (executor-thread-1) Request GET /legumes from IP 127.0.0.1\n"
"2019-06-05 12:49:19,623 INFO  [org.acm.res.jso.LoggingFilter] (executor-thread-1) Request GET /fruits from IP 0:0:0:0:0:0:0:1\n"
"2019-06-05 12:50:44,019 INFO  [org.acm.res.jso.LoggingFilter] (executor-thread-1) Request POST /fruits from IP 0:0:0:0:0:0:0:1\n"
"2019-06-05 12:51:04,485 INFO  [org.acm.res.jso.LoggingFilter] (executor-thread-1) Request GET /fruits from IP 127.0.0.1\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/resteasy-reactive.adoc:1576
#, fuzzy, no-wrap
msgid "Readers and Writers: mapping entities and HTTP bodies"
msgstr "リーダーとライター：エンティティとHTTPボディのマッピング"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1584
#, fuzzy
msgid "Whenever your endpoint methods return a object (of when they return a link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestResponse.html[`RestResponse<?>`] or link:{jaxrsapi}/javax/ws/rs/core/Response.html[`Response`] with an entity), RESTEasy Reactive will look for a way to map that into an HTTP response body."
msgstr "エンドポイントのメソッドがオブジェクトを返すときには、必ず（または  link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestResponse.html[`RestResponse<?>`]または  link:{jaxrsapi}/javax/ws/rs/core/Response.html[`Response`]を返した場合）、RESTEasy ReactiveはそのオブジェクトをHTTPレスポンス・ボディにマッピングする方法を探します。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1587
#, fuzzy
msgid "Similarly, whenever your endpoint method takes an object as parameter, we will look for a way to map the HTTP request body into that object."
msgstr "同様に、エンドポイントメソッドがパラメータとしてオブジェクトを取る場合は、HTTPリクエストボディをそのオブジェクトにマッピングする方法を探します。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1592
#, fuzzy
msgid "This is done via a pluggable system of link:{jaxrsapi}/javax/ws/rs/ext/MessageBodyReader.html[`MessageBodyReader`] and link:{jaxrsapi}/javax/ws/rs/ext/MessageBodyWriter.html[`MessageBodyWriter`] interfaces, which are responsible for defining which Java type they map from/to, for which media types, and how they turn HTTP bodies to/from Java instances of that type."
msgstr "のプラガブルなシステムを介して行われます。  link:{jaxrsapi}/javax/ws/rs/ext/MessageBodyReader.html[`MessageBodyReader`]と  link:{jaxrsapi}/javax/ws/rs/ext/MessageBodyWriter.html[`MessageBodyWriter`]インターフェースは、どのメディアタイプに対して、どのJavaタイプとの間でマッピングするか、また、そのタイプのJavaインスタンスとの間でどのようにHTTPボディを変換するかを定義する役割を担っています。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1594
#, fuzzy
msgid "For example, if we have our own `Cheese` type on our endpoint:"
msgstr "例えば、エンドポイントに独自の `FroMage` タイプがあったとします。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1602
#: upstream/_guides/resteasy-reactive.adoc:1754
#, no-wrap
msgid ""
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.PUT;\n"
"import javax.ws.rs.Path;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1605
#, no-wrap
msgid ""
"class Cheese {\n"
"    public String name;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1610
#, no-wrap
msgid ""
"    public Cheese(String name) {\n"
"        this.name = name;\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1613
#: upstream/_guides/resteasy-reactive.adoc:1757
#, no-wrap
msgid ""
"@Path(\"cheese\")\n"
"public class Endpoint {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1618
#, no-wrap
msgid ""
"    @GET\n"
"    public Cheese sayCheese() {\n"
"        return new Cheese(\"Cheeeeeese\");\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1624
#, no-wrap
msgid ""
"    @PUT\n"
"    public void addCheese(Cheese cheese) {\n"
"        System.err.println(\"Received a new cheese: \" + cheese.name);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1628
#, fuzzy
msgid "Then we can define how to read and write it with our body reader/writers, annotated with link:{jaxrsapi}/javax/ws/rs/ext/Provider.html[`@Provider`]:"
msgstr "そして、それをどのように読み書きするかを、ボディリーダー／ライターを使って定義し、次のようにアノテーションします。  link:{jaxrsapi}/javax/ws/rs/ext/Provider.html[`@Provider`]:"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1639
#: upstream/_guides/resteasy-reactive.adoc:1703
#, no-wrap
msgid ""
"import java.io.IOException;\n"
"import java.io.InputStream;\n"
"import java.io.OutputStream;\n"
"import java.lang.annotation.Annotation;\n"
"import java.lang.reflect.Type;\n"
"import java.nio.charset.StandardCharsets;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1646
#, no-wrap
msgid ""
"import javax.ws.rs.WebApplicationException;\n"
"import javax.ws.rs.core.MediaType;\n"
"import javax.ws.rs.core.MultivaluedMap;\n"
"import javax.ws.rs.ext.MessageBodyReader;\n"
"import javax.ws.rs.ext.MessageBodyWriter;\n"
"import javax.ws.rs.ext.Provider;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1650
#, no-wrap
msgid ""
"@Provider\n"
"public class CheeseBodyHandler implements MessageBodyReader<Cheese>, \n"
"                                           MessageBodyWriter<Cheese> {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1656
#, no-wrap
msgid ""
"    @Override\n"
"    public boolean isWriteable(Class<?> type, Type genericType, \n"
"                               Annotation[] annotations, MediaType mediaType) {\n"
"        return type == Cheese.class;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1666
#, no-wrap
msgid ""
"    @Override\n"
"    public void writeTo(Cheese t, Class<?> type, Type genericType, \n"
"                        Annotation[] annotations, MediaType mediaType,\n"
"                        MultivaluedMap<String, Object> httpHeaders, \n"
"                        OutputStream entityStream)\n"
"            throws IOException, WebApplicationException {\n"
"        entityStream.write((\"[CheeseV1]\" + t.name)\n"
"                           .getBytes(StandardCharsets.UTF_8));\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1672
#, no-wrap
msgid ""
"    @Override\n"
"    public boolean isReadable(Class<?> type, Type genericType, \n"
"                              Annotation[] annotations, MediaType mediaType) {\n"
"        return type == Cheese.class;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1684
#, no-wrap
msgid ""
"    @Override\n"
"    public Cheese readFrom(Class<Cheese> type, Type genericType, \n"
"                            Annotation[] annotations, MediaType mediaType,\n"
"                            MultivaluedMap<String, String> httpHeaders,\n"
"                            InputStream entityStream)\n"
"            throws IOException, WebApplicationException {\n"
"        String body = new String(entityStream.readAllBytes(), StandardCharsets.UTF_8);\n"
"        if(body.startsWith(\"[CheeseV1]\"))\n"
"            return new Cheese(body.substring(11));\n"
"        throw new IOException(\"Invalid cheese: \" + body);\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1692
#, fuzzy
msgid "If you want to get the most performance our of your writer, you can extend the link:{resteasy-reactive-api}/org/jboss/resteasy/reactive/server/spi/ServerMessageBodyWriter.html[`ServerMessageBodyWriter`] instead of link:{jaxrsapi}/javax/ws/rs/ext/MessageBodyWriter.html[`MessageBodyWriter`] where you will be able to use less reflection and bypass the blocking IO layer:"
msgstr "ライターのパフォーマンスを最大限に発揮させたい場合には  link:{resteasy-reactive-api}/org/jboss/resteasy/reactive/server/spi/ServerMessageBodyWriter.html[`ServerMessageBodyWriter`]ではなく  link:{jaxrsapi}/javax/ws/rs/ext/MessageBodyWriter.html[`MessageBodyWriter`]を拡張することができます。ここでは、より少ないリフレクションを使用し、ブロック化されたIOレイヤーをバイパスすることができます。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1709
#, no-wrap
msgid ""
"import javax.ws.rs.WebApplicationException;\n"
"import javax.ws.rs.core.MediaType;\n"
"import javax.ws.rs.core.MultivaluedMap;\n"
"import javax.ws.rs.ext.MessageBodyReader;\n"
"import javax.ws.rs.ext.Provider;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1713
#, no-wrap
msgid ""
"import org.jboss.resteasy.reactive.server.spi.ResteasyReactiveResourceInfo;\n"
"import org.jboss.resteasy.reactive.server.spi.ServerMessageBodyWriter;\n"
"import org.jboss.resteasy.reactive.server.spi.ServerRequestContext;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1717
#, no-wrap
msgid ""
"@Provider\n"
"public class CheeseBodyHandler implements MessageBodyReader<Cheese>, \n"
"                                           ServerMessageBodyWriter<Cheese> {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1719
#, no-wrap
msgid "    // …\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1725
#, no-wrap
msgid ""
"    @Override\n"
"    public boolean isWriteable(Class<?> type, ResteasyReactiveResourceInfo target, \n"
"                               MediaType mediaType) {\n"
"        return type == Cheese.class;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1732
#, no-wrap
msgid ""
"    @Override\n"
"    public void writeResponse(Cheese t, ServerRequestContext context) \n"
"      throws WebApplicationException, IOException {\n"
"        context.serverResponse().end(\"[CheeseV1]\" + t.name);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1737
#, fuzzy
msgid "You can restrict which content-types your reader/writer apply to by adding link:{jaxrsapi}/javax/ws/rs/Consumes.html[`Consumes`]/link:{jaxrsapi}/javax/ws/rs/Produces.html[`Produces`] annotations on your provider class."
msgstr "を追加することで、リーダー/ライターが適用するコンテンツタイプを制限することができます。  link:{jaxrsapi}/javax/ws/rs/Consumes.html[`Consumes`]/ link:{jaxrsapi}/javax/ws/rs/Produces.html[`Produces`]アノテーションを追加することで、リーダ/ライタが適用するコンテンツタイプを制限することができます。"

#. type: Title ===
#: upstream/_guides/resteasy-reactive.adoc:1738
#, fuzzy, no-wrap
msgid "Reader and Writer interceptors"
msgstr "リーダーとライターのインターセプター"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1744
#, fuzzy
msgid "Just as you can intercept requests and responses, you can also intercept readers and writers, by extending the link:{jaxrsapi}/javax/ws/rs/ext/ReaderInterceptor.html[`ReaderInterceptor`] or link:{jaxrsapi}/javax/ws/rs/ext/WriterInterceptor.html[`WriterInterceptor`] on a class annotated with link:{jaxrsapi}/javax/ws/rs/ext/Provider.html[`@Provider`]."
msgstr "リクエストとレスポンスを傍受できるのと同様に、リーダーとライターを傍受することもできます。  link:{jaxrsapi}/javax/ws/rs/ext/ReaderInterceptor.html[`ReaderInterceptor`]または  link:{jaxrsapi}/javax/ws/rs/ext/WriterInterceptor.html[`WriterInterceptor`]でアノテーションされたクラスに  link:{jaxrsapi}/javax/ws/rs/ext/Provider.html[`@Provider`]."

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1746
#, fuzzy
msgid "If we look at this endpoint:"
msgstr "このエンドポイントを見てみると"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1762
#, no-wrap
msgid ""
"    @GET\n"
"    public String sayCheese() {\n"
"        return \"Cheeeeeese\";\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1768
#, no-wrap
msgid ""
"    @PUT\n"
"    public void addCheese(String cheese) {\n"
"        System.err.println(\"Received a new cheese: \" + cheese);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1771
#, fuzzy
msgid "We can add reader and writer interceptors like this:"
msgstr "このようにリーダーとライターのインターセプターを追加することができます。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1777
#, no-wrap
msgid "import java.io.IOException;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1784
#, no-wrap
msgid ""
"import javax.ws.rs.WebApplicationException;\n"
"import javax.ws.rs.ext.Provider;\n"
"import javax.ws.rs.ext.ReaderInterceptor;\n"
"import javax.ws.rs.ext.ReaderInterceptorContext;\n"
"import javax.ws.rs.ext.WriterInterceptor;\n"
"import javax.ws.rs.ext.WriterInterceptorContext;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1787
#, no-wrap
msgid ""
"@Provider\n"
"public class CheeseIOInterceptor implements ReaderInterceptor, WriterInterceptor {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1795
#, no-wrap
msgid ""
"    @Override\n"
"    public void aroundWriteTo(WriterInterceptorContext context)\n"
"      throws IOException, WebApplicationException {\n"
"        System.err.println(\"Before writing \" + context.getEntity());\n"
"        context.proceed();\n"
"        System.err.println(\"After writing \" + context.getEntity());\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1805
#, no-wrap
msgid ""
"    @Override\n"
"    public Object aroundReadFrom(ReaderInterceptorContext context)\n"
"      throws IOException, WebApplicationException {\n"
"        System.err.println(\"Before reading \" + context.getGenericType());\n"
"        Object entity = context.proceed();\n"
"        System.err.println(\"After reading \" + entity);\n"
"        return entity;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/resteasy-reactive.adoc:1807
#, fuzzy, no-wrap
msgid "RESTEasy Reactive and REST Client Reactive interactions"
msgstr "RESTEasy ReactiveとREST Client Reactiveの相互作用"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1811
#, fuzzy
msgid "In Quarkus, the RESTEasy Reactive extension and xref:rest-client-reactive.adoc[the REST Client Reactive extension] share the same infrastructure.  One important consequence of this consideration is that they share the same list of providers (in the JAX-RS meaning of the word)."
msgstr "Quarkusでは、RESTEasy Reactive拡張と link:rest-client-reactive.html[REST Client Reactive拡張は]、同じインフラストラクチャを共有しています。この考慮の重要な結果の1つは、（JAX-RSの意味での）プロバイダのリストを共有することです。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1814
msgid "For instance, if you declare a `WriterInterceptor`, it will by default intercept both the servers calls and the client calls, which might not be the desired behavior."
msgstr "例えば、 `WriterInterceptor` を宣言した場合、デフォルトではサーバーの呼び出しとクライアントの呼び出しの両方をインターセプトしますが、これは望ましい動作ではないかもしれません。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1816
msgid "However, you can change this default behavior and constrain a provider to:"
msgstr "しかし、このデフォルトの動作を変更してプロバイダを制約することができます。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1818
msgid "only consider *server* calls by adding the `@ConstrainedTo(RuntimeType.SERVER)` annotation to your provider;"
msgstr "プロバイダに `@ConstrainedTo(RuntimeType.SERVER)` アノテーションを追加することで、 *サーバー* コールのみを考慮します。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1819
msgid "only consider *client* calls by adding the `@ConstrainedTo(RuntimeType.CLIENT)` annotation to your provider."
msgstr "プロバイダに `@ConstrainedTo(RuntimeType.CLIENT)` アノテーションを追加することで、 *クライアント* コールのみを考慮します。"

#. type: Title ===
#: upstream/_guides/resteasy-reactive.adoc:1820
#, no-wrap
msgid "Parameter mapping"
msgstr "パラメータマッピング"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1824
#, fuzzy
msgid "All <<request-parameters,Request Parameters>> can be declared as link:{jdkapi}/java/lang/String.html[`String`], but also any of the following types:"
msgstr "すべての link:#request-parameters[リクエストパラメーター]は、次のように宣言できます。  link:{jdkapi}/java/lang/String.html[`String`]だけでなく、以下のいずれかのタイプもあります。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1827
#, fuzzy
msgid "Types for which a link:{jaxrsapi}/javax/ws/rs/ext/ParamConverter.html[`ParamConverter`] is available via a registered link:{jaxrsapi}/javax/ws/rs/ext/ParamConverterProvider.html[`ParamConverterProvider`]."
msgstr "のあるタイプ。  link:{jaxrsapi}/javax/ws/rs/ext/ParamConverter.html[`ParamConverter`]が登録されているタイプ  link:{jaxrsapi}/javax/ws/rs/ext/ParamConverterProvider.html[`ParamConverterProvider`]."

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1828
#, fuzzy
msgid "Primitive types."
msgstr "プリミティブタイプ。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1829
#, fuzzy
msgid "Types that have a constructor that accepts a single link:{jdkapi}/java/lang/String.html[`String`] argument."
msgstr "1つの引数を受け入れるコンストラクタを持つタイプ。  link:{jdkapi}/java/lang/String.html[`String`]引数を受け取るコンストラクタを持つタイプです。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1832
#, fuzzy
msgid "Types that have a static method named `valueOf` or `fromString` with a single link:{jdkapi}/java/lang/String.html[`String`] argument that return an instance of the type. If both methods are present then `valueOf` will be used unless the type is an `enum` in which case `fromString` will be used."
msgstr "`valueOf` または `fromString` という名前のスタティック・メソッドを持ち、単一の引数を持つタイプ。  link:{jdkapi}/java/lang/String.html[`String`]という名前のスタティック・メソッドか、その型のインスタンスを返す単一の引数を持つ という名前のスタティック・メソッドを持つ型です。両方のメソッドが存在する場合、 `valueOf` が使用されます。ただし、その型が `enum` の場合は `fromString` が使用されます。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1834
#, fuzzy
msgid "link:{jdkapi}/java/util/List.html[`List<T>`], link:{jdkapi}/java/util/Set.html[`Set<T>`], or link:{jdkapi}/java/util/SortedSet.html[`SortedSet<T>`], where `T` satisfies any above criterion."
msgstr "link:{jdkapi}/java/util/List.html[`List<T>`],  link:{jdkapi}/java/util/Set.html[`Set<T>`]または  link:{jdkapi}/java/util/SortedSet.html[`SortedSet<T>`]ここで、 `T` は上記のいずれかの基準を満たします。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1836
#, fuzzy
msgid "The following example illustrates all those possibilities:"
msgstr "次の例では、それらの可能性をすべて示しています。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1844
#, no-wrap
msgid ""
"import java.lang.annotation.Annotation;\n"
"import java.lang.reflect.Type;\n"
"import java.util.List;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1850
#, no-wrap
msgid ""
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.ext.ParamConverter;\n"
"import javax.ws.rs.ext.ParamConverterProvider;\n"
"import javax.ws.rs.ext.Provider;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1852
#, no-wrap
msgid "import org.jboss.resteasy.reactive.RestQuery;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1855
#, no-wrap
msgid ""
"@Provider\n"
"class MyConverterProvider implements ParamConverterProvider {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1865
#, no-wrap
msgid ""
"    @Override\n"
"    public <T> ParamConverter<T> getConverter(Class<T> rawType, Type genericType,\n"
"                                              Annotation[] annotations) {\n"
"        // declare a converter for this type\n"
"        if(rawType == Converter.class) {\n"
"            return (ParamConverter<T>) new MyConverter();\n"
"        }\n"
"        return null;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1870
#, no-wrap
msgid ""
"// this is my custom converter\n"
"class MyConverter implements ParamConverter<Converter> {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1875
#, no-wrap
msgid ""
"    @Override\n"
"    public Converter fromString(String value) {\n"
"        return new Converter(value);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1880
#, no-wrap
msgid ""
"    @Override\n"
"    public String toString(Converter value) {\n"
"        return value.value;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1890
#, no-wrap
msgid ""
"// this uses a converter\n"
"class Converter {\n"
"    String value;\n"
"    Converter(String value) {\n"
"        this.value = value;\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1898
#, no-wrap
msgid ""
"class Constructor {\n"
"    String value;\n"
"    // this will use the constructor\n"
"    public Constructor(String value) {\n"
"        this.value = value;\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1909
#, no-wrap
msgid ""
"class ValueOf {\n"
"    String value;\n"
"    private ValueOf(String value) {\n"
"        this.value = value;\n"
"    }\n"
"    // this will use the valueOf method\n"
"    public static ValueOf valueOf(String value) {\n"
"        return new ValueOf(value);\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1922
#, no-wrap
msgid ""
"    @Path(\"{converter}/{constructor}/{primitive}/{valueOf}\")\n"
"    @GET\n"
"    public String convertions(Converter converter, Constructor constructor,\n"
"                              int primitive, ValueOf valueOf, \n"
"                              @RestQuery List<Constructor> list) {\n"
"        return converter + \"/\" + constructor + \"/\" + primitive \n"
"               + \"/\" + valueOf + \"/\" + list;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/resteasy-reactive.adoc:1924
#, no-wrap
msgid "Handling dates"
msgstr "日付の取り扱い"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1928
msgid "RESTEasy Reactive supports the use of the implementations of `java.time.Temporal` (like `java.time.LocalDateTime`) as query, path or form params. Furthermore it provides the `@org.jboss.resteasy.reactive.DateFormat` annotation which can be used to set a custom expected pattern (otherwise the JDK's default format for each type is used implicitly)."
msgstr "RESTEasy Reactiveは、 `java.time.Temporal` の実装（ `java.time.LocalDateTime` のような）を、クエリ、パス、フォームのパラメータとして使用することをサポートしています。さらに、 `@org.jboss.resteasy.reactive.DateFormat` アノテーションを提供しており、これを使用してカスタムの期待されるパターンを設定することができます（そうしないと、各タイプに対する JDK のデフォルトフォーマットが暗黙のうちに使用されます）。"

#. type: Title ===
#: upstream/_guides/resteasy-reactive.adoc:1929
#, no-wrap
msgid "Preconditions"
msgstr "前提条件"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1933
msgid "https://tools.ietf.org/html/rfc7232[HTTP allows requests to be conditional], based on a number of conditions, such as:"
msgstr "以下のようないくつかの条件の下で、link:https://tools.ietf.org/html/rfc7232[HTTPでは条件付きのリクエストが可能です] :"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1935
msgid "Date of last resource modification"
msgstr "リソースの最終変更日"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1936
#, fuzzy
msgid "A resource tag, similar to a hash code of the resource to designate its state or version"
msgstr "リソースの状態やバージョンを指定するためのリソースのハッシュコードのようなリソースタグ"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1939
#, fuzzy
msgid "Let's see how you can do conditional request validation using the link:{jaxrsapi}/javax/ws/rs/core/Request.html[`Request`] context object:"
msgstr "を使って、条件付きのリクエスト検証を行う方法を見てみましょう。  link:{jaxrsapi}/javax/ws/rs/core/Request.html[`Request`]コンテキストオブジェクトを使って、条件付きのリクエスト検証を行う方法を見てみましょう。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1948
#, no-wrap
msgid ""
"import java.time.Instant;\n"
"import java.time.temporal.ChronoUnit;\n"
"import java.time.temporal.TemporalUnit;\n"
"import java.util.Date;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1956
#, no-wrap
msgid ""
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.PUT;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.core.EntityTag;\n"
"import javax.ws.rs.core.Request;\n"
"import javax.ws.rs.core.Response;\n"
"import javax.ws.rs.core.Response.ResponseBuilder;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1959
#, no-wrap
msgid ""
"@Path(\"conditional\")\n"
"public class Endpoint {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1966
#, no-wrap
msgid ""
"    // It's important to keep our date on seconds because that's how it's sent to the\n"
"    // user in the Last-Modified header\n"
"    private Date date = Date.from(Instant.now().truncatedTo(ChronoUnit.SECONDS));\n"
"    private int version = 1;\n"
"    private EntityTag tag = new EntityTag(\"v1\");\n"
"    private String resource = \"Some resource\";\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1979
#, no-wrap
msgid ""
"    @GET\n"
"    public Response get(Request request) {\n"
"        // first evaluate preconditions\n"
"        ResponseBuilder conditionalResponse = request.evaluatePreconditions(date, tag);\n"
"        if(conditionalResponse != null)\n"
"            return conditionalResponse.build();\n"
"        // preconditions are OK\n"
"        return Response.ok(resource)\n"
"                .lastModified(date)\n"
"                .tag(tag)\n"
"                .build();\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1997
#, no-wrap
msgid ""
"    @PUT\n"
"    public Response put(Request request, String body) {\n"
"        // first evaluate preconditions\n"
"        ResponseBuilder conditionalResponse = request.evaluatePreconditions(date, tag);\n"
"        if(conditionalResponse != null)\n"
"            return conditionalResponse.build();\n"
"        // preconditions are OK, we can update our resource\n"
"        resource = body;\n"
"        date = Date.from(Instant.now().truncatedTo(ChronoUnit.SECONDS));\n"
"        version++;\n"
"        tag = new EntityTag(\"v\" + version);\n"
"        return Response.ok(resource)\n"
"                .lastModified(date)\n"
"                .tag(tag)\n"
"                .build();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:2000
msgid "When we call `GET /conditional` the first time, we will get this response:"
msgstr "`GET /conditional` を初めて呼び出すと、このようなレスポンスが返ってきます。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:2008
#, no-wrap
msgid ""
"HTTP/1.1 200 OK\n"
"Content-Type: text/plain;charset=UTF-8\n"
"ETag: \"v1\"\n"
"Last-Modified: Wed, 09 Dec 2020 16:10:19 GMT\n"
"Content-Length: 13\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:2010
#, no-wrap
msgid "Some resource\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:2013
msgid "So now if we want to check if we need to fetch a new version, we can make the following request:"
msgstr "これで、新しいバージョンを取得する必要があるかどうかを確認したい場合は、次のようなリクエストを行うことができます:"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:2019
#, no-wrap
msgid ""
"GET /conditional HTTP/1.1\n"
"Host: localhost:8080\n"
"If-Modified-Since: Wed, 09 Dec 2020 16:10:19 GMT\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:2022
msgid "And we would get the following response:"
msgstr "そして、次のようなレスポンスが返ってきます:"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:2026
#, no-wrap
msgid "HTTP/1.1 304 Not Modified\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:2032
#, fuzzy
msgid "Because the resource has not been modified since that date. This saves on sending the resource, but can also help your users detect concurrent modification, for example, let's suppose that one client wants to update the resource, but another user has modified it since. You can follow the previous `GET` request with this update:"
msgstr "なぜなら、その日以降、リソースは修正されていないからです。これは、リソースを送信する手間を省くだけでなく、ユーザーが同時修正を検知するのにも役立ちます。例えば、あるクライアントがリソースの更新を希望しているのに、別のユーザーがそれ以降に修正したとします。前回の `GET` の要求に続いて、今回の更新を行うことができます。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:2041
#, no-wrap
msgid ""
"PUT /conditional HTTP/1.1\n"
"Host: localhost:8080\n"
"If-Unmodified-Since: Wed, 09 Dec 2020 16:25:43 GMT\n"
"If-Match: v1\n"
"Content-Length: 8\n"
"Content-Type: text/plain\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:2043
#, no-wrap
msgid "newstuff\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:2047
#, fuzzy
msgid "And if some other user has modified the resource between your `GET` and your `PUT` you would get this answer back:"
msgstr "また、他のユーザーがあなたの `GET` と `PUT` の間のリソースを変更した場合、このような回答が返されます。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:2053
#, no-wrap
msgid ""
"HTTP/1.1 412 Precondition Failed\n"
"ETag: \"v2\"\n"
"Content-Length: 0\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/resteasy-reactive.adoc:2055
#, no-wrap
msgid "Negotiation"
msgstr "ネゴシエーション"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:2062
#, fuzzy
msgid "One of the main ideas of REST (https://tools.ietf.org/html/rfc7231#section-3.4[and HTTP]) is that your resource is independent from its representation, and that both the client and server are free to represent their resources in as many media types as they want. This allows the server to declare support for multiple representations and let the client declare which ones it supports and get served something appropriate."
msgstr "REST link:https://tools.ietf.org/html/rfc7231#section-3.4[（およびHTTP]）の主な考え方のひとつに、「リソースはその表現から独立している」というものがあります。そして、クライアントもサーバーも、リソースを好きなだけ多くのメディアタイプで表現することができます。これにより、サーバーは複数の表現をサポートしていることを宣言し、クライアントはサポートしている表現を宣言することで、適切なものを提供することができます。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:2064
#, fuzzy
msgid "The following endpoint supports serving cheese in plain text or JSON:"
msgstr "以下のエンドポイントは、プレーンテキストまたはJSONでのチーズの提供に対応しています。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:2075
#, no-wrap
msgid ""
"import javax.ws.rs.Consumes;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.PUT;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:2077
#, no-wrap
msgid "import com.fasterxml.jackson.annotation.JsonCreator;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:2089
#, no-wrap
msgid ""
"class Cheese {\n"
"    public String name;\n"
"    @JsonCreator\n"
"    public Cheese(String name) {\n"
"        this.name = name;\n"
"    }\n"
"    @Override\n"
"    public String toString() {\n"
"        return \"Cheese: \" + name;\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:2092
#, no-wrap
msgid ""
"@Path(\"negotiated\")\n"
"public class Endpoint {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:2098
#, no-wrap
msgid ""
"    @Produces({MediaType.APPLICATION_JSON, MediaType.TEXT_PLAIN})\n"
"    @GET\n"
"    public Cheese get() {\n"
"        return new Cheese(\"Morbier\");\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:2104
#, no-wrap
msgid ""
"    @Consumes(MediaType.TEXT_PLAIN)\n"
"    @PUT\n"
"    public Cheese putString(String cheese) {\n"
"        return new Cheese(cheese);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:2111
#, no-wrap
msgid ""
"    @Consumes(MediaType.APPLICATION_JSON)\n"
"    @PUT\n"
"    public Cheese putJson(Cheese cheese) {\n"
"        return cheese;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:2115
#, fuzzy
msgid "The user will be able to select which representation it gets with the link:{httpspec}#section-5.3.2[`Accept`] header, in the case of JSON:"
msgstr "でどの表現を取得するかを選択できるようになります。  link:{httpspec}#section-5.3.2[`Accept`]JSONの場合は"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:2121
#, no-wrap
msgid ""
"> GET /negotiated HTTP/1.1\n"
"> Host: localhost:8080\n"
"> Accept: application/json\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:2127
#, no-wrap
msgid ""
"< HTTP/1.1 200 OK\n"
"< Content-Type: application/json\n"
"< Content-Length: 18\n"
"< \n"
"< {\"name\":\"Morbier\"} \n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:2130
#, fuzzy
msgid "And for text:"
msgstr "そして、テキスト用。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:2142
#, no-wrap
msgid ""
"> GET /negotiated HTTP/1.1\n"
"> Host: localhost:8080\n"
"> Accept: text/plain\n"
"> \n"
"< HTTP/1.1 200 OK\n"
"< Content-Type: text/plain\n"
"< Content-Length: 15\n"
"< \n"
"< Cheese: Morbier \n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:2145
#, fuzzy
msgid "Similarly, you can `PUT` two different representations. JSON:"
msgstr "同様に、 `PUT` 2つの異なる表現が可能です。JSONです。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:2154
#, no-wrap
msgid ""
"> PUT /negotiated HTTP/1.1\n"
"> Host: localhost:8080\n"
"> Content-Type: application/json\n"
"> Content-Length: 16\n"
"> \n"
"> {\"name\": \"brie\"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:2160
#, no-wrap
msgid ""
"< HTTP/1.1 200 OK\n"
"< Content-Type: application/json;charset=UTF-8\n"
"< Content-Length: 15\n"
"< \n"
"< {\"name\":\"brie\"} \n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:2163
#, fuzzy
msgid "Or plain text:"
msgstr "あるいはプレーンテキスト。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:2172
#, no-wrap
msgid ""
"> PUT /negotiated HTTP/1.1\n"
"> Host: localhost:8080\n"
"> Content-Type: text/plain\n"
"> Content-Length: 9\n"
">\n"
"> roquefort\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:2178
#, no-wrap
msgid ""
"< HTTP/1.1 200 OK\n"
"< Content-Type: application/json;charset=UTF-8\n"
"< Content-Length: 20\n"
"< \n"
"< {\"name\":\"roquefort\"} \n"
msgstr ""

#. type: Title ===
#: upstream/_guides/resteasy-reactive.adoc:2180
#, fuzzy, no-wrap
msgid "HTTP Compression"
msgstr "HTTPレスポンス"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:2184
#, fuzzy
msgid "The body of an HTTP response is not compressed by default.  You can enable the HTTP compression support by means of `quarkus.http.enable-compression=true`."
msgstr "HTTPレスポンスのボディは、デフォルトでは圧縮されません。HTTP 圧縮のサポートは、 `quarkus.http.enable-compression=true` で有効にすることができます。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:2186
#, fuzzy
msgid "If compression support is enabled then the response body is compressed if:"
msgstr "圧縮サポートが有効な場合、レスポンスボディは以下の場合に圧縮されます。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:2188
#, fuzzy
msgid "the resource method is annotated with `@io.quarkus.vertx.http.Compressed`, or"
msgstr "リソースメソッドが `@io.quarkus.vertx.http.Compressed` でアノテーションされている、または"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:2189
#, fuzzy
msgid "the `Content-Type` header is set and the value is a compressed media type as configured via `quarkus.http.compress-media-types`."
msgstr " `Content-Type` ヘッダが設定され、その値は `quarkus.http.compress-media-types` を介して設定された圧縮メディアタイプである。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:2191
#, fuzzy
msgid "The response body is never compressed if:"
msgstr "の場合、レスポンスボディは決して圧縮されません。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:2193
#, fuzzy
msgid "the resource method is annotated with `@io.quarkus.vertx.http.Uncompressed`, or"
msgstr "リソースメソッドが `@io.quarkus.vertx.http.Uncompressed` でアノテーションされている、または"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:2194
#, fuzzy
msgid "the `Content-Type` header is not set."
msgstr "は、 `Content-Type` ヘッダーが設定されていません。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:2196
#, fuzzy
msgid "By default, the following list of media types is compressed: `text/html`, `text/plain`, `text/xml`, `text/css`, `text/javascript` and `application/javascript`."
msgstr "デフォルトでは、以下のメディアタイプのリストが圧縮されています。 `text/html` , `text/plain` , `text/xml` , `text/css` , `text/javascript` , `application/javascript` ."

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:2198
#, fuzzy
msgid "If the client does not support HTTP compression then the response body is not compressed."
msgstr "クライアントが HTTP 圧縮に対応していない場合、レスポンスボディは圧縮されません。"

#. type: Title ==
#: upstream/_guides/resteasy-reactive.adoc:2200
#, no-wrap
msgid "Include/Exclude JAX-RS classes with build time conditions"
msgstr "ビルド時条件でJAX-RSクラスを含める/除外する"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:2204
msgid "Quarkus enables the inclusion or exclusion of JAX-RS Resources, Providers and Features directly thanks to build time conditions in the same that it does for CDI beans.  Thus, the various JAX-RS classes can be annotated with profile conditions (`@io.quarkus.arc.profile.IfBuildProfile` or `@io.quarkus.arc.profile.UnlessBuildProfile`) and/or with property conditions (`io.quarkus.arc.properties.IfBuildProperty` or `io.quarkus.arc.properties.UnlessBuildProperty`) to indicate to Quarkus at build time under which conditions these JAX-RS classes should be included."
msgstr "Quarkusでは、CDI Beanの場合と同様に、ビルド時の条件に応じて、JAX-RSリソース、プロバイダー、および機能を直接包含または除外することができます。したがって、さまざまなJAX-RSクラスは、プロファイル条件（ `@io.quarkus.arc.profile.IfBuildProfile` または `@io.quarkus.arc.profile.UnlessBuildProfile` ）および／またはプロパティ条件（ `io.quarkus.arc.properties.IfBuildProperty` または `io.quarkus.arc.properties.UnlessBuildProperty` ）でアノテーションすることができ、構築時にどの条件でこれらのJAX-RSクラスが含まれるべきかをQuarkusに示すことができます。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:2206
msgid "In the following example, Quarkus includes the endpoint `sayHello` if and only if the build profile `app1` has been enabled."
msgstr "次の例では、Quarkusは、ビルドプロファイル `app1` が有効になっている場合に限り、エンドポイント `sayHello` を含めます。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:2211
#, no-wrap
msgid ""
"@IfBuildProfile(\"app1\")\n"
"public class ResourceForApp1Only {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:2218
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"sayHello\")\n"
"    public String sayHello() {\n"
"        return \"hello\";\n"
"     }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:2221
msgid "Please note that if a JAX-RS Application has been detected and the method `getClasses()` and/or `getSingletons()` has/have been overridden, Quarkus will ignore the build time conditions and consider only what has been defined in the JAX-RS Application."
msgstr "JAX-RSアプリケーションが検出され、メソッド `getClasses()` および／または `getSingletons()` がオーバーライドされている／されている場合、Quarkusはビルド時の条件を無視し、JAX-RSアプリケーションで定義されているもののみを考慮することに注意してください。"

#. type: Title ==
#: upstream/_guides/resteasy-reactive.adoc:2223
#, no-wrap
msgid "RESTEasy Reactive client"
msgstr "RESTEasy Reactiveクライアント"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:2226
msgid "In addition to the Server side, RESTEasy Reactive comes with a new MicroProfile REST Client implementation that is non-blocking at its core."
msgstr "RESTEasy Reactiveには、サーバー側に加えて、ノンブロッキングを核とした新しいMicroProfile Rest Clientの実装が搭載されています。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:2228
msgid "Please note that the `quarkus-rest-client` extension may not be used with RESTEasy Reactive, use `quarkus-rest-client-reactive` instead."
msgstr "なお、RESTEasy Reactiveでは、 `quarkus-rest-client` エクステンションが正常に動作しない場合があります。 `quarkus-rest-client-reactive` を代わりに使用して下さい。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:2229
msgid "See the xref:rest-client-reactive.adoc[REST Client Reactive Guide] for more information about the reactive REST client."
msgstr "リアクティブ・クライアントの詳細については、link:rest-client-reactive.html[REST Client Reactiveガイド] を参照してください。"

# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: \n"
"POT-Creation-Date: 2022-04-12 10:10+0000\n"
"PO-Revision-Date: 2021-11-15 17:08+0900\n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 3.0\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/kogito-drl.adoc:6
#, no-wrap
msgid "Using Kogito to add rule engine capabilities to an application"
msgstr "Kogitoを使用してアプリケーションにルール・エンジン機能を追加する"

#. type: Plain text
#: upstream/_guides/kogito-drl.adoc:11
msgid "This guide demonstrates how your Quarkus application can use Kogito to add DRL files with rules."
msgstr "このガイドでは、QuarkusアプリケーションがKogitoを使用してルール付きのDRLファイルを追加する方法を説明します。"

#. type: Plain text
#: upstream/_guides/kogito-drl.adoc:16
msgid "Kogito is a next generation business automation toolkit that originates from well known Open Source projects Drools (for business rules) and jBPM (for business processes). Kogito aims at providing another approach to business automation where the main message is to expose your business knowledge (processes, rules and decisions)  in a domain specific way."
msgstr "Kogitoは、よく知られたオープンソース・プロジェクトであるDrools（ビジネス・ルール用）とjBPM（ビジネス・プロセス用）から生まれた、次世代のビジネス・オートメーション・ツールキットです。Kogitoは、ビジネス・オートメーションに別のアプローチを提供することを目的としており、主なメッセージは、ビジネス・ナレッジ（プロセス、ルール、決定）をドメイン固有の方法で公開することです。"

#. type: Title ==
#: upstream/_guides/kogito-drl.adoc:17
#, no-wrap
msgid "Prerequisites"
msgstr "前提条件"

#. type: Title ==
#: upstream/_guides/kogito-drl.adoc:22
#, no-wrap
msgid "Architecture"
msgstr "アーキテクチャ"

#. type: Plain text
#: upstream/_guides/kogito-drl.adoc:25
msgid "In this example, we build a very simple microservice which offers one REST endpoint:"
msgstr "この例では、1つのRESTエンドポイントを提供する非常にシンプルなマイクロサービスを構築します。"

#. type: Plain text
#: upstream/_guides/kogito-drl.adoc:27
#, fuzzy
msgid "`/find-approved`"
msgstr "`/find-approved`"

#. type: Plain text
#: upstream/_guides/kogito-drl.adoc:31
msgid "This endpoint will be automatically generated based on the query inserted in the Rule Unit of the DRL file.  It's an example of a stateless invocation (also called \"pure function invocation\") in which the execution of our business rules doesn't have any side effects.  The output value returned is based uniquely on the input provided."
msgstr "このエンドポイントは、DRLファイルのRule Unitに挿入されたクエリに基づいて自動的に生成されます。これは、ビジネス・ルールの実行が副作用を伴わないステートレス呼び出し（「純粋な関数呼び出し」とも呼ばれる）の例です。返される出力値は、提供された入力に一意に基づいています。"

#. type: Title ===
#: upstream/_guides/kogito-drl.adoc:32
#, no-wrap
msgid "Business rule"
msgstr "ビジネスルール"

#. type: Plain text
#: upstream/_guides/kogito-drl.adoc:38
msgid "A business rule allows to externalise decision logic into reusable pieces that can be easily used in declarative way. There are multiple ways of writing rules like https://drools.org/learn/dmn.html[DMN models], decision tables, decision trees, rules, etc. For this example we focus on the rule format backed by DRL (Drools Rule Language)."
msgstr "ビジネスルールとは、意思決定ロジックを再利用可能なパーツに外部化し、宣言的な方法で簡単に使用できるようにするものです。ルールの書き方には、デシジョンテーブル、デシジョンツリー、ルールなど、さまざまな方法があります。この例では、DRL (Drools Rule Language)によるルール形式に注目します。"

#. type: Title ==
#: upstream/_guides/kogito-drl.adoc:39
#, no-wrap
msgid "Solution"
msgstr "ソリューション"

#. type: Plain text
#: upstream/_guides/kogito-drl.adoc:43
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the complete example."
msgstr "次のセクションで紹介する手順に沿って、ステップを踏んでアプリを作成することをお勧めします。ただし、完成した例にそのまま進んでも構いません。"

#. type: Plain text
#: upstream/_guides/kogito-drl.adoc:45
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Gitリポジトリをクローンする： `git clone {quickstarts-clone-url}` 、または {quickstarts-archive-url}[archive] をダウンロードする。"

#. type: Plain text
#: upstream/_guides/kogito-drl.adoc:47
msgid "The solution is located in the `kogito-drl-quickstart` {quickstarts-tree-url}/kogito-quickstart[directory]."
msgstr "このソリューションは `kogito-drl-quickstart` {quickstarts-tree-url}/kogito-quickstart[directory] にあります。"

#. type: Title ==
#: upstream/_guides/kogito-drl.adoc:48
#, no-wrap
msgid "Creating the Maven Project"
msgstr "Mavenプロジェクトの作成"

#. type: Plain text
#: upstream/_guides/kogito-drl.adoc:51
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "まず、新しいプロジェクトを用意します。以下のコマンドで新しいプロジェクトを作成します。"

#. type: Plain text
#: upstream/_guides/kogito-drl.adoc:60
#, fuzzy
msgid "This command generates a Maven project, importing the `kogito-quarkus-rules` extension that comes with all needed dependencies and configuration to equip your application with business automation.  It also imports the `resteasy-reactive-jackson` extension that is needed for Kogito to expose REST services."
msgstr "このコマンドはMavenプロジェクトを生成し、アプリケーションにビジネス・オートメーションを装備するために必要な依存関係と構成をすべて備えた `kogito-quarkus-rules` 拡張をインポートします。また、KogitoがRESTサービスを公開するために必要な `resteasy-jackson` 拡張をインポートします。"

#. type: Plain text
#: upstream/_guides/kogito-drl.adoc:63
msgid "If you already have your Quarkus project configured, you can add the `kogito-quarkus-rules` extension to your project by running the following command in your project base directory:"
msgstr "すでにQuarkusプロジェクトが設定されている場合は、プロジェクトのベースディレクトリで以下のコマンドを実行することで、 `kogito-quarkus-rules` エクステンションをプロジェクトに追加することができます。"

#. type: Plain text
#: upstream/_guides/kogito-drl.adoc:68
msgid "This will add the following to your build file:"
msgstr "これにより、 `pom.xml` に以下が追加されます:"

#. type: Block title
#: upstream/_guides/kogito-drl.adoc:70
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:76
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>org.kie.kogito</groupId>\n"
"    <artifactId>kogito-quarkus-rules</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_guides/kogito-drl.adoc:79
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:82
#, no-wrap
msgid "implementation(\"org.kie.kogito:kogito-quarkus-rules\")\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/kogito-drl.adoc:84
#, no-wrap
msgid "Writing the application"
msgstr "アプリケーションの作成"

#. type: Plain text
#: upstream/_guides/kogito-drl.adoc:88
msgid "Let's start from the application domain model.  This application will approve Loan Applications so we have a class with all the details of the wanted Loan:"
msgstr "まず、アプリケーションのドメインモデルから始めましょう。このアプリケーションはローンの申請を承認するものなので、希望するローンのすべての詳細を持つクラスを用意します。"

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:92 upstream/_guides/kogito-drl.adoc:162
#, no-wrap
msgid "package org.acme.kogito.model;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:94
#, no-wrap
msgid "public class LoanApplication {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:100
#, no-wrap
msgid ""
"   private String id;\n"
"   private Applicant applicant;\n"
"   private int amount;\n"
"   private int deposit;\n"
"   private boolean approved = false;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:102
#, no-wrap
msgid "   public LoanApplication() {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:104
#, no-wrap
msgid "   }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:112
#, no-wrap
msgid ""
"   public LoanApplication(String id, Applicant applicant,\n"
"                      \tint amount, int deposit) {\n"
"       this.id = id;\n"
"       this.applicant = applicant;\n"
"       this.amount = amount;\n"
"       this.deposit = deposit;\n"
"   }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:116
#, no-wrap
msgid ""
"    public String getId() {\n"
"        return id;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:120
#, no-wrap
msgid ""
"    public void setId(String id) {\n"
"        this.id = id;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:124
#, no-wrap
msgid ""
"    public Applicant getApplicant() {\n"
"        return applicant;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:128
#, no-wrap
msgid ""
"    public void setApplicant(Applicant applicant) {\n"
"        this.applicant = applicant;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:132
#, no-wrap
msgid ""
"    public int getAmount() {\n"
"        return amount;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:136
#, no-wrap
msgid ""
"    public void setAmount(int amount) {\n"
"        this.amount = amount;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:140
#, no-wrap
msgid ""
"    public int getDeposit() {\n"
"        return deposit;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:144
#, no-wrap
msgid ""
"    public void setDeposit(int deposit) {\n"
"        this.deposit = deposit;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:148
#, no-wrap
msgid ""
"    public boolean isApproved() {\n"
"        return approved;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:153
#, no-wrap
msgid ""
"    public void setApproved(boolean approved) {\n"
"        this.approved = approved;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kogito-drl.adoc:158
msgid "And another class with the details of the Applicant:"
msgstr "そして、申請者の詳細を記載した別のクラスを用意します。"

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:164
#, no-wrap
msgid "public class Applicant {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:167
#, no-wrap
msgid ""
"   private String name;\n"
"   private int age;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:170
#, no-wrap
msgid ""
"   public Applicant() {\n"
"   }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:175
#, no-wrap
msgid ""
"   public Applicant(String name, int age) {\n"
"       this.name = name;\n"
"       this.age = age;\n"
"   }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:179
#, no-wrap
msgid ""
"   public String getName() {\n"
"       return name;\n"
"   }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:183
#, no-wrap
msgid ""
"   public void setName(String name) {\n"
"       this.name = name;\n"
"   }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:187
#, no-wrap
msgid ""
"   public int getAge() {\n"
"       return age;\n"
"   }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:192
#, no-wrap
msgid ""
"   public void setAge(int age) {\n"
"       this.age = age;\n"
"   }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kogito-drl.adoc:197
msgid "Next, we create a rule file `loan-rules.drl` inside the `src/main/resources/org/acme/kogito/queries` folder of the generated project."
msgstr "次に、生成されたプロジェクトの `src/main/resources/org/acme/kogito/queries` フォルダ内にルールファイル `loan-rules.drl` を作成します。"

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:201 upstream/_guides/kogito-drl.adoc:238
#, no-wrap
msgid "package org.acme.kogito.queries;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:203
#, no-wrap
msgid "unit LoanUnit; // no need to using globals, all variables and facts are stored in the rule unit\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:206
#, no-wrap
msgid ""
"import org.acme.kogito.model.Applicant;\n"
"import org.acme.kogito.model.LoanApplication;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:212
#, no-wrap
msgid ""
"rule LargeDepositApprove when\n"
"   $l: /loanApplications[ applicant.age >= 20, deposit >= 1000, amount <= maxAmount ] // oopath style\n"
"then\n"
"   modify($l) { setApproved(true) };\n"
"end\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:218
#, no-wrap
msgid ""
"rule LargeDepositReject when\n"
"   $l: /loanApplications[ applicant.age >= 20, deposit >= 1000, amount > maxAmount ]\n"
"then\n"
"   modify($l) { setApproved(false) };\n"
"end\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:220
#, no-wrap
msgid "// ... more loans approval/rejections business rules ...\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:225
#, no-wrap
msgid ""
"// approved loan applications are now retrieved through a query\n"
"query FindApproved\n"
"   $l: /loanApplications[ approved ]\n"
"end\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kogito-drl.adoc:230
msgid "In this file there are some example rules to decide whether the Loan should be approved or not. The service wants the Applicant to have an age equal or greater than 20 and more than 1000 currency on their bank account.  The amount of the Loan shouldn't be more than the `maxAmount`."
msgstr "このファイルには、ローンが承認されるべきかどうかを決定するためのルールの例があります。このサービスでは、申請者の年齢が20歳以上で、銀行口座に1,000通貨以上の預金があることを求めています。ローンの金額は `maxAmount` を超えてはいけません。"

#. type: Plain text
#: upstream/_guides/kogito-drl.adoc:232
msgid "This example uses Rule Units, a new concept introduced in Kogito that helps users to encapsulate the set of rules and the facts against which those rules will be matched."
msgstr "この例では、Kogitoに導入された新しい概念であるルール・ユニットを使用しています。これは、ルールのセットと、それらのルールが照合されるファクトをカプセル化するのに役立ちます。"

#. type: Plain text
#: upstream/_guides/kogito-drl.adoc:234
msgid "The facts inserted will be inserted into a `DataStore`, a type-safe entry point. To make everything work, we need to define both the RuleUnit and the DataStore."
msgstr "挿入されたファクトは、タイプセーフのエントリーポイントである `DataStore` に挿入されます。すべてを機能させるには、RuleUnitとDataStoreの両方を定義する必要があります。"

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:243
#, no-wrap
msgid ""
"import org.acme.kogito.model.LoanApplication;\n"
"import org.kie.kogito.rules.DataSource;\n"
"import org.kie.kogito.rules.DataStore;\n"
"import org.kie.kogito.rules.RuleUnitData;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:245
#, no-wrap
msgid "public class LoanUnit implements RuleUnitData {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:248
#, no-wrap
msgid ""
"   private int maxAmount;\n"
"   private DataStore<LoanApplication> loanApplications;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:252
#, no-wrap
msgid ""
"   public LoanUnit() {\n"
"   \tthis(DataSource.createStore(), 0);\n"
"   }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:257
#, no-wrap
msgid ""
"   public LoanUnit(DataStore<LoanApplication> loanApplications, int maxAmount) {\n"
"   \tthis.loanApplications = loanApplications;\n"
"   \tthis.maxAmount = maxAmount;\n"
"   }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:259
#, no-wrap
msgid "   public DataStore<LoanApplication> getLoanApplications() { return loanApplications; }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:263
#, no-wrap
msgid ""
"   public void setLoanApplications(DataStore<LoanApplication> loanApplications) {\n"
"   \tthis.loanApplications = loanApplications;\n"
"   }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:267
#, no-wrap
msgid ""
"   public int getMaxAmount() { return maxAmount; }\n"
"   public void setMaxAmount(int maxAmount) { this.maxAmount = maxAmount; }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kogito-drl.adoc:272
msgid "And that's it: REST endpoint to validate Loan Applications will be automatically generated from this Rule Unit."
msgstr "これで完了です。ローン申請を検証するためのRESTエンドポイントが、このRule Unitから自動的に生成されます。"

#. type: Title ==
#: upstream/_guides/kogito-drl.adoc:274
#, no-wrap
msgid "Running and Using the Application"
msgstr "アプリケーションの実行と使用"

#. type: Title ===
#: upstream/_guides/kogito-drl.adoc:276
#, fuzzy, no-wrap
msgid "Running in Dev Mode"
msgstr "JVMモードでの動作"

#. type: Plain text
#: upstream/_guides/kogito-drl.adoc:279
#, fuzzy
msgid "To run the microservice in dev mode, use:"
msgstr "マイクロサービスを開発モードで実行するには"

#. type: Title ===
#: upstream/_guides/kogito-drl.adoc:282
#, no-wrap
msgid "Running in JVM Mode"
msgstr "JVMモードでの動作"

#. type: Plain text
#: upstream/_guides/kogito-drl.adoc:285
msgid "When you're done playing with dev mode you can run it as a standard Java application."
msgstr "「開発モード」で遊び終わったら、標準のJavaアプリケーションとして実行することができます。"

#. type: Plain text
#: upstream/_guides/kogito-drl.adoc:287
msgid "First compile it:"
msgstr "まず、コンパイルします。"

#. type: Plain text
#: upstream/_guides/kogito-drl.adoc:291
msgid "Then run it:"
msgstr "それから実行してください。"

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:295
#, no-wrap
msgid "java -jar target/quarkus-app/quarkus-run.jar\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/kogito-drl.adoc:297
#, no-wrap
msgid "Running in Native Mode"
msgstr "ネイティブモードでの実行"

#. type: Plain text
#: upstream/_guides/kogito-drl.adoc:300
msgid "This same demo can be compiled into native code: no modifications required."
msgstr "同じデモをネイティブコードにコンパイルすることができます。修正は必要ありません。"

#. type: Plain text
#: upstream/_guides/kogito-drl.adoc:304
msgid "This implies that you no longer need to install a JVM on your production environment, as the runtime technology is included in the produced binary, and optimized to run with minimal resource overhead."
msgstr "これは、生成されたバイナリーにランタイム技術が含まれており、最小限のリソースオーバーヘッドで実行できるように最適化されているため、本番環境にJVMをインストールする必要がないことを意味します。"

#. type: Plain text
#: upstream/_guides/kogito-drl.adoc:307
#, fuzzy
msgid "Compilation will take a bit longer, so this step is disabled by default; let's build a native executable with the following command:"
msgstr "コンパイルには少し時間がかかるので、このステップはデフォルトでは無効になっています。以下のコマンドでネイティブ実行可能ファイルをビルドしてみましょう。"

#. type: Plain text
#: upstream/_guides/kogito-drl.adoc:311
msgid "After getting a cup of coffee, you'll be able to run this binary directly:"
msgstr "コーヒーを飲み終わると、このバイナリーは以下のように直接実行出来るようになります:"

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:315
#, no-wrap
msgid "target/kogito-drl-quickstart-1.0.0-SNAPSHOT-runner\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/kogito-drl.adoc:317
#, no-wrap
msgid "Testing the Application"
msgstr "アプリケーションのテスト"

#. type: Plain text
#: upstream/_guides/kogito-drl.adoc:321
msgid "To test your application, just send a request to the service with giving the person as JSON payload."
msgstr "アプリケーションをテストするには、人をJSONペイロードとして指定してサービスにリクエストを送信するだけです。"

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:337
#, no-wrap
msgid ""
"curl -X POST http://localhost:8080/find-approved \\\n"
"    -H 'Content-Type: application/json'\\\n"
"    -H 'Accept: application/json' \\\n"
"    -d '{\"maxAmount\":5000,\n"
"          \"loanApplications\":[\n"
"          {\"id\":\"ABC10001\",\"amount\":2000,\"deposit\":1000,\n"
"            \"applicant\":{\"age\":45,\"name\":\"John\"}},\n"
"          {\"id\":\"ABC10002\",\"amount\":5000,\"deposit\":100,\n"
"            \"applicant\":{\"age\":25,\"name\":\"Paul\"}},\n"
"          {\"id\":\"ABC10015\",\"amount\":1000,\"deposit\":100,\n"
"            \"applicant\":{\"age\":12,\"name\":\"George\"}}\n"
"]}'\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kogito-drl.adoc:340
msgid "In the response, the list of the approved applications will be returned:"
msgstr "応答では、承認されたアプリケーションのリストが返されます。"

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:347
#, no-wrap
msgid ""
"[{\"id\":\"ABC10001\",\n"
"    \"applicant\":{\"name\":\"John\",\"age\":45},\n"
"    \"amount\":2000,\"deposit\":100,\"approved\":true}]\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/kogito-drl.adoc:349
#, no-wrap
msgid "References"
msgstr "リファレンス"

#. type: Plain text
#: upstream/_guides/kogito-drl.adoc:352
msgid "https://kogito.kie.org[Kogito Website]"
msgstr "https://kogito.kie.org[Kogito ウェブサイト]"

#. type: Plain text
#: upstream/_guides/kogito-drl.adoc:352
msgid "https://docs.jboss.org/kogito/release/latest/html_single[Kogito Documentation]"
msgstr "link:https://docs.jboss.org/kogito/release/latest/html_single[Kogito ドキュメンテーション]"

#~ msgid "To complete this guide, you need:"
#~ msgstr "このガイドを完成させるには、以下が必要です:"

#~ msgid "less than 15 minutes"
#~ msgstr "15分未満"

#~ msgid "an IDE"
#~ msgstr "IDE"

#~ msgid "JDK 11+ installed with `JAVA_HOME` configured appropriately"
#~ msgstr "JDK 11+ がインストールされ、 `JAVA_HOME` が適切に設定されていること"

#~ msgid "Apache Maven {maven-version}"
#~ msgstr "Apache Maven {maven-version}"

#~ msgid "Docker"
#~ msgstr "Docker"

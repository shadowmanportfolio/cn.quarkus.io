# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: \n"
"POT-Creation-Date: 2022-04-12 10:10+0000\n"
"PO-Revision-Date: 2021-03-26 23:17+0900\n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 2.4.2\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/spring-security.adoc:6
#, fuzzy, no-wrap
msgid "Quarkus Extension for Spring Security API"
msgstr "Spring Security APIのためのQuarkus Extension"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:11
#, fuzzy
msgid "While users are encouraged to use xref:security.adoc#standard-security-annotations[Java standard annotations for security authorizations], Quarkus provides a compatibility layer for Spring Security in the form of the `spring-security` extension."
msgstr ""
"ユーザーは、 link:security.html#standard-security-annotations[セキュリティ認"
"証にJava標準のアノテーション]を使用することが推奨されますが、Quarkusでは、 "
"`spring-security` エクステンションの形でSpring "
"Securityのための互換レイヤーを提供しています。"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:13
#, fuzzy
msgid "This guide explains how a Quarkus application can leverage the well known Spring Security annotations to define authorizations on RESTful services using roles."
msgstr ""
"このガイドでは、Quarkusアプリケーションで、よく知られているSpring Securityア"
"ノテーションを活用し、ロールを使用してRESTfulサービスの認証を定義する方法を説"
"明します。"

#. type: Title ==
#: upstream/_guides/spring-security.adoc:14
#, no-wrap
msgid "Prerequisites"
msgstr "前提条件"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:18
#, fuzzy
msgid "Some familiarity with the Spring Web extension"
msgstr "Spring Webエクステンションに精通していること"

#. type: Title ==
#: upstream/_guides/spring-security.adoc:19
#, no-wrap
msgid "Solution"
msgstr "ソリューション"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:23
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the completed example."
msgstr "次のセクションで紹介する手順に沿って、ステップを踏んでアプリを作成することをお勧めします。ただし、完成した例にそのまま進んでも構いません。"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:25
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Gitレポジトリをクローンするか `git clone {quickstarts-clone-url}` 、 {quickstarts-archive-url}[アーカイブ] をダウンロードします。"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:27
#, fuzzy
msgid "The solution is located in the `spring-security-quickstart` {quickstarts-tree-url}/spring-security-quickstart[directory]."
msgstr ""
"このソリューションは、 `spring-security-quickstart` {quickstarts-tree-url"
"}/spring-security-quickstart[directory]にあります。"

#. type: Title ==
#: upstream/_guides/spring-security.adoc:28
#, no-wrap
msgid "Creating the Maven project"
msgstr "Mavenプロジェクトの作成"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:31
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "まず、新しいプロジェクトが必要です。以下のコマンドで新規プロジェクトを作成します。"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:37
#, fuzzy
msgid "This command generates a project which imports the `spring-web`, `spring-security` and `security-properties-file` extensions."
msgstr ""
"このコマンドは、RESTエンドポイントを持つMavenプロジェクトを生成し、 `spring-"
"web`, `spring-security`, `security-properties-file` "
"のエクステンションをインポートします。"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:40
#, fuzzy
msgid "If you already have your Quarkus project configured, you can add the `spring-web`, `spring-security` and `security-properties-file` extensions to your project by running the following command in your project base directory:"
msgstr ""
"すでにQuarkusプロジェクトが設定されている場合は、プロジェクトのベースディレク"
"トリで以下のコマンドを実行することで、 `spring-web`, `spring-security`, "
"`security-properties-file` "
"のエクステンションをプロジェクトに追加することができます。"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:45
#, fuzzy
msgid "This will add the following to your build file:"
msgstr "これにより、 `pom.xml` に以下が追加されます:"

#. type: Block title
#: upstream/_guides/spring-security.adoc:47
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:65
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-spring-web</artifactId>\n"
"</dependency>\n"
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-spring-security</artifactId>\n"
"</dependency>\n"
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-elytron-security-properties-file</artifactId>\n"
"</dependency>\n"
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-resteasy-reactive-jackson</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_guides/spring-security.adoc:68
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:74
#, no-wrap
msgid ""
"implementation(\"io.quarkus:quarkus-spring-web\")\n"
"implementation(\"io.quarkus:quarkus-spring-security\")\n"
"implementation(\"io.quarkus:quarkus-elytron-security-properties-file\")\n"
"implementation(\"io.quarkus:quarkus-resteasy-reactive-jackson\")\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/spring-security.adoc:77
#, fuzzy
msgid "For more information about `security-properties-file`, you can check out the guide of the xref:security-properties.adoc[quarkus-elytron-security-properties-file] extension."
msgstr ""
"`security-properties-file` の詳細については、エクステンション link:security-"
"properties.html[quarkus-elytron-security-properties-"
"file]のガイドをご覧ください。"

#. type: Title ==
#: upstream/_guides/spring-security.adoc:78
#, no-wrap
msgid "GreetingController"
msgstr "GreetingController"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:82
#, fuzzy
msgid "The Quarkus Maven plugin automatically generated a controller with the Spring Web annotations to define our REST endpoint (instead of the JAX-RS ones used by default).  First create a `src/main/java/org/acme/spring/web/GreetingController.java`, a controller with the Spring Web annotations to define our REST endpoint, as follows:"
msgstr ""
"Quarkus Mavenプラグインは、RESTエンドポイントを定義するためのSpring "
"Webアノテーションを持つコントローラを自動的に生成しました"
"（デフォルトで使用されているJAX-RSの代わりにね）。 `src/main/java/org/acme/"
"spring/web/GreetingController.java` のファイルは以下のようになっています。"

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:86
#: upstream/_guides/spring-security.adoc:109
#: upstream/_guides/spring-security.adoc:149
#: upstream/_guides/spring-security.adoc:188
#, no-wrap
msgid "package org.acme.spring.security;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:90
#, no-wrap
msgid ""
"import org.springframework.web.bind.annotation.GetMapping;\n"
"import org.springframework.web.bind.annotation.RequestMapping;\n"
"import org.springframework.web.bind.annotation.RestController;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:94
#: upstream/_guides/spring-security.adoc:158
#, no-wrap
msgid ""
"@RestController\n"
"@RequestMapping(\"/greeting\")\n"
"public class GreetingController {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:100
#, no-wrap
msgid ""
"    @GetMapping\n"
"    public String hello() {\n"
"        return \"hello\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/spring-security.adoc:102
#: upstream/_guides/spring-security.adoc:183
#, fuzzy, no-wrap
msgid "GreetingControllerTest"
msgstr "GreetingControllerTest"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:105
#, fuzzy
msgid "Note that a test for the controller has been created as well:"
msgstr "なお、コントローラのテストも作成されています。"

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:112
#: upstream/_guides/spring-security.adoc:191
#, no-wrap
msgid ""
"import io.quarkus.test.junit.QuarkusTest;\n"
"import org.junit.jupiter.api.Test;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:115
#: upstream/_guides/spring-security.adoc:194
#, no-wrap
msgid ""
"import static io.restassured.RestAssured.given;\n"
"import static org.hamcrest.CoreMatchers.is;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:118
#: upstream/_guides/spring-security.adoc:197
#, no-wrap
msgid ""
"@QuarkusTest\n"
"public class GreetingControllerTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:127
#, no-wrap
msgid ""
"    @Test\n"
"    public void testHelloEndpoint() {\n"
"        given()\n"
"          .when().get(\"/greeting\")\n"
"          .then()\n"
"             .statusCode(200)\n"
"             .body(is(\"hello\"));\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:129
#: upstream/_guides/spring-security.adoc:216
#, no-wrap
msgid "}\n"
msgstr "}\n"

#. type: Title ==
#: upstream/_guides/spring-security.adoc:131
#, no-wrap
msgid "Package and run the application"
msgstr "アプリケーションをパッケージ化して実行する"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:134
#, fuzzy
msgid "Run the application with:"
msgstr "アプリケーションをネイティブ実行可能ファイルとして実行する"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:138
#, fuzzy
msgid "Open your browser to http://localhost:8080/greeting."
msgstr "再度ブラウザを開き、 http://localhost:8080/greeting "
"、表示されたダイアログを空にします。"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:140
#, fuzzy
msgid "The result should be: `{\"message\": \"hello\"}`."
msgstr "結果は次のようになります： `{\"message\": \"hello\"}`."

#. type: Title ==
#: upstream/_guides/spring-security.adoc:141
#, fuzzy, no-wrap
msgid "Modify the controller to secure the `hello` method"
msgstr "`hello` メソッドを確保するためのコントローラの変更"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:145
#, fuzzy
msgid "In order to restrict access to the `hello` method to users with certain roles, the `@Secured` annotation will be utilized.  The updated controller will be:"
msgstr ""
"`hello` メソッドへのアクセスを特定のロールを持つユーザーに制限するために、 "
"`@Secured` "
"アノテーションを利用します。更新されたコントローラは次のようになります。"

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:154
#, no-wrap
msgid ""
"import org.springframework.security.access.annotation.Secured;\n"
"import org.springframework.web.bind.annotation.GetMapping;\n"
"import org.springframework.web.bind.annotation.RequestMapping;\n"
"import org.springframework.web.bind.annotation.RestController;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:165
#, no-wrap
msgid ""
"    @Secured(\"admin\")\n"
"    @GetMapping\n"
"    public String hello() {\n"
"        return \"hello\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/spring-security.adoc:170
#, fuzzy
msgid "The easiest way to setup users and roles for our example is to use the `security-properties-file` extension. This extension essentially allows users and roles to be defined in the main Quarkus configuration file - `application.properties`.  For more information about this extension check xref:security-properties.adoc[the associated guide].  An example configuration would be the following:"
msgstr ""
"この例でユーザーとロールを設定する最も簡単な方法は、 `security-properties-"
"file` エクステンションを使用することです。このエクステンションは、基本的にユ"
"ーザーとロールをメインのQuarkus設定ファイル（ `application.properties` "
"）で定義できるようにします。このエクステンションの詳細については、 link"
":security-properties."
"html[関連するガイド]を確認してください。設定例は以下のようになります。"

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:179
#, no-wrap
msgid ""
"quarkus.security.users.embedded.enabled=true\n"
"quarkus.security.users.embedded.plain-text=true\n"
"quarkus.security.users.embedded.users.scott=jb0ss\n"
"quarkus.security.users.embedded.roles.scott=admin,user\n"
"quarkus.security.users.embedded.users.stuart=test\n"
"quarkus.security.users.embedded.roles.stuart=user\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/spring-security.adoc:182
#, fuzzy
msgid "Note that the test also needs to be updated. It could look like:"
msgstr "テストも更新する必要があることに注意してください。以下のようになるかもしれま"
"せん。"

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:205
#, no-wrap
msgid ""
"    @Test\n"
"    public void testHelloEndpointForbidden() {\n"
"        given().auth().preemptive().basic(\"stuart\", \"test\")\n"
"                .when().get(\"/greeting\")\n"
"                .then()\n"
"                .statusCode(403);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:214
#, no-wrap
msgid ""
"    @Test\n"
"    public void testHelloEndpoint() {\n"
"        given().auth().preemptive().basic(\"scott\", \"jb0ss\")\n"
"                .when().get(\"/greeting\")\n"
"                .then()\n"
"                .statusCode(200)\n"
"                .body(is(\"hello\"));\n"
"    }\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/spring-security.adoc:218
#, fuzzy, no-wrap
msgid "Test the changes"
msgstr "変更点のテスト"

#. type: Labeled list
#: upstream/_guides/spring-security.adoc:220
#, fuzzy, no-wrap
msgid "Access allowed"
msgstr "アクセス許可"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:223
#, fuzzy
msgid "Open your browser again to http://localhost:8080/greeting and introduce `scott` and `jb0ss` in the dialog displayed."
msgstr ""
"http://localhost:8080/greeting に再度ブラウザを開き、表示されたダイアログで "
"`scott` と `jb0ss` を紹介します。"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:225
#, fuzzy
msgid "The word `hello` should be displayed."
msgstr "`hello` という文字が表示されるはずです。"

#. type: Labeled list
#: upstream/_guides/spring-security.adoc:226
#, fuzzy, no-wrap
msgid "Access forbidden"
msgstr "アクセス禁止"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:229
#, fuzzy
msgid "Open your browser again to http://localhost:8080/greeting and let empty the dialog displayed."
msgstr "再度ブラウザを開き、 http://localhost:8080/greeting "
"、表示されたダイアログを空にします。"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:231
#, fuzzy
msgid "The result should be:"
msgstr "という結果になるはずです。"

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:237
#, no-wrap
msgid ""
"Access to localhost was denied\n"
"You don't have authorization to view this page.\n"
"HTTP ERROR 403\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/spring-security.adoc:239
#, no-wrap
msgid "Run the application as a native executable"
msgstr "アプリケーションをネイティブ実行可能ファイルとして実行する"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:242
#, fuzzy
msgid "You can generate the native executable with:"
msgstr "アプリケーションをネイティブ実行可能ファイルとして実行する"

#. type: Title ==
#: upstream/_guides/spring-security.adoc:245
#, fuzzy, no-wrap
msgid "Supported Spring Security functionalities"
msgstr "サポートされているSpring Securityアノテーション"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:249
#, fuzzy
msgid "Quarkus currently only supports a subset of the functionalities that Spring Security provides with more features being planned. More specifically, Quarkus supports the security related features of role-based authorization semantics (think of `@Secured` instead of `@RolesAllowed`)."
msgstr ""
"現在、QuarkusはSpring Securityが提供する機能のサブセットのみをサポートしてお"
"り、さらなる機能追加が計画されています。より具体的には、Quarkusはロールベース"
"の認可セマンティクスのセキュリティ関連機能をサポートしています（ "
"`@RolesAllowed` の代わりに `@Secured` を考えてください）。"

#. type: Title ===
#: upstream/_guides/spring-security.adoc:250
#, no-wrap
msgid "Annotations"
msgstr "アノテーション"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:253
msgid "The table below summarizes the supported annotations:"
msgstr "下の表は、サポートされているアノテーションをまとめたものです。"

#. type: Block title
#: upstream/_guides/spring-security.adoc:254
#, no-wrap
msgid "Supported Spring Security annotations"
msgstr "サポートされているSpring Securityアノテーション"

#. type: Table
#: upstream/_guides/spring-security.adoc:256
#, no-wrap
msgid "Nam"
msgstr "Nam"

#. type: Table
#: upstream/_guides/spring-security.adoc:258
#: upstream/_guides/spring-security.adoc:424
#, no-wrap
msgid "Comments"
msgstr "Comments"

#. type: Table
#: upstream/_guides/spring-security.adoc:259
#, no-wrap
msgid "@Secured"
msgstr "@Secured"

#. type: Title ====
#: upstream/_guides/spring-security.adoc:262
#: upstream/_guides/spring-security.adoc:266
#, no-wrap
msgid "@PreAuthorize"
msgstr "@PreAuthorize"

#. type: Table
#: upstream/_guides/spring-security.adoc:264
#, fuzzy, no-wrap
msgid "See next section for more details"
msgstr "詳細は次項参照"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:270
#, fuzzy
msgid "Quarkus provides support for some of the most used features of Spring Security's `@PreAuthorize` annotation.  The expressions that are supported are the following:"
msgstr ""
"Quarkusは、Spring Securityの `@PreAuthorize` アノテーションで最も使用される機"
"能の一部をサポートしています。サポートされている表現は以下の通りです。"

#. type: Labeled list
#: upstream/_guides/spring-security.adoc:271
#, fuzzy, no-wrap
msgid "hasRole"
msgstr "hasRole"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:274
#, fuzzy
msgid "To test if the current user has a specific role, the `hasRole` expression can be used inside `@PreAuthorize`."
msgstr ""
"現在のユーザーが特定の役割を持っているかどうかをテストするには、 "
"`@PreAuthorize` の中で `hasRole` 式を使用することができます。"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:276
#, fuzzy
msgid "Some examples are: `@PreAuthorize(\"hasRole('admin')\")`, `@PreAuthorize(\"hasRole(@roles.USER)\")` where the `roles` is a bean that could be defined like so:"
msgstr ""
"いくつかの例を示します。 `@PreAuthorize(\"hasRole('admin')\")`, "
"`@PreAuthorize(\"hasRole(@roles.USER)\")` ここで、 `roles` "
"は次のように定義できるビーンです。"

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:280
#, no-wrap
msgid "import org.springframework.stereotype.Component;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:283
#, no-wrap
msgid ""
"@Component\n"
"public class Roles {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:287
#, no-wrap
msgid ""
"    public final String ADMIN = \"admin\";\n"
"    public final String USER = \"user\";\n"
"}\n"
msgstr ""

#. type: Labeled list
#: upstream/_guides/spring-security.adoc:289
#, fuzzy, no-wrap
msgid "hasAnyRole"
msgstr "hasAnyRole"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:292
#, fuzzy
msgid "In the same fashion as `hasRole`, users can use `hasAnyRole` to check if the logged in user has any of the specified roles."
msgstr ""
"`hasRole` と同様に、ユーザーは `hasAnyRole` を使用して、ログインしているユー"
"ザーが指定されたロールのいずれかを持っているかどうかを確認できます。"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:294
#, fuzzy
msgid "Some examples are: `@PreAuthorize(\"hasAnyRole('admin')\")`, `@PreAuthorize(\"hasAnyRole(@roles.USER, 'view')\")`"
msgstr ""
"いくつかの例を挙げます。 `@PreAuthorize(\"hasAnyRole('admin')\")` 。 "
"`@PreAuthorize(\"hasAnyRole(@roles.USER, 'view')\")`"

#. type: Labeled list
#: upstream/_guides/spring-security.adoc:295
#, fuzzy, no-wrap
msgid "permitAll"
msgstr "パーミットオール"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:297
#, fuzzy
msgid "Adding `@PreAuthorize(\"permitAll()\")` to a method will ensure that that method is accessible by any user (including anonymous users). Adding it to a class will ensure that all public methods of the class that are not annotated with any other Spring Security annotation will be accessible."
msgstr ""
"`@PreAuthorize(\"permitAll()\")` をメソッドに追加すると、そのメソッドがどのユ"
"ーザ（匿名ユーザを含む）からもアクセス可能になります。クラスに追加すると、"
"他のSpring Securityアノテーションが付いていないクラスの全てのパブリックメソッ"
"ドがアクセス可能になります。"

#. type: Labeled list
#: upstream/_guides/spring-security.adoc:298
#, fuzzy, no-wrap
msgid "denyAll"
msgstr "denyAll"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:300
#, fuzzy
msgid "Adding `@PreAuthorize(\"denyAll()\")` to a method will ensure that that method is not accessible by any user. Adding it to a class will ensure that all public methods of the class that are not annotated with any other Spring Security annotation will not be accessible to any user."
msgstr ""
"`@PreAuthorize(\"denyAll()\")` をメソッドに追加すると、そのメソッドはいかなる"
"ユーザからもアクセスできなくなります。クラスに追加すると、他のSpring Security"
"アノテーションが付いていないクラスの全てのパブリックメソッドが、どのユーザか"
"らもアクセスできなくなります。"

#. type: Labeled list
#: upstream/_guides/spring-security.adoc:301
#, fuzzy, no-wrap
msgid "isAnonymous"
msgstr "isAnonymous"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:302
#, fuzzy
msgid "When annotating a bean method with `@PreAuthorize(\"isAnonymous()\")` the method will only be accessible if the current user is anonymous - i.e. a non logged in user."
msgstr ""
"Beanメソッドに `@PreAuthorize(\"isAnonymous()\")` をアノテーションすると、現"
"在のユーザーが匿名、つまりログインしていないユーザーの場合にのみ、メソッドに"
"アクセスできるようになります。"

#. type: Labeled list
#: upstream/_guides/spring-security.adoc:303
#, fuzzy, no-wrap
msgid "isAuthenticated"
msgstr "isAuthenticated"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:305
#, fuzzy
msgid "When annotating a bean method with `@PreAuthorize(\"isAuthenticated()\")` the method will only be accessible if the current user is a logged in user. Essentially the method is only unavailable for anonymous users."
msgstr ""
"Beanメソッドに `@PreAuthorize(\"isAuthenticated()\")` とアノテーションすると"
"、現在のユーザーがログインしている場合にのみメソッドにアクセスできます。基本"
"的に、このメソッドは匿名のユーザーにしか利用できません。"

#. type: Labeled list
#: upstream/_guides/spring-security.adoc:306
#, fuzzy, no-wrap
msgid "#paramName == authentication.principal.username"
msgstr "#paramName == authentication.principal.username"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:307
#, fuzzy
msgid "This syntax allows users to check if a parameter (or a field of the parameter) of the secured method is equal to the logged in username."
msgstr ""
"この構文では、セキュリティで保護されたメソッドのパラメータ（またはパラメータ"
"のフィールド）が、ログインしたユーザ名と等しいかどうかをチェックすることがで"
"きます。"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:309
#, fuzzy
msgid "Examples of this use case are:"
msgstr "このユースケースの例は"

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:313
#, no-wrap
msgid "public class Person {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:315
#, no-wrap
msgid "    private final String name;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:319
#, no-wrap
msgid ""
"    public Person(String name) {\n"
"        this.name = name;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:324
#, no-wrap
msgid ""
"    public String getName() {\n"
"        return name;\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:327
#: upstream/_guides/spring-security.adoc:355
#, no-wrap
msgid ""
"@Component\n"
"public class MyComponent {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:330
#, no-wrap
msgid ""
"    @PreAuthorize(\"#username == authentication.principal.username\") <1>\n"
"    public void doSomething(String username, String other){\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:332
#: upstream/_guides/spring-security.adoc:396
#: upstream/_guides/spring-security.adoc:401
#: upstream/_guides/spring-security.adoc:406
#, no-wrap
msgid "    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:335
#, no-wrap
msgid ""
"    @PreAuthorize(\"#person.name == authentication.principal.username\") <2>\n"
"    public void doSomethingElse(Person person){\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:338
#: upstream/_guides/spring-security.adoc:361
#, no-wrap
msgid ""
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/spring-security.adoc:340
#, fuzzy
msgid "`doSomething` can be executed if the current logged in user is the same as the `username` method parameter"
msgstr "`doSomething` は、現在ログインしているユーザーが `username` "
"メソッドのパラメーターと同じ場合に実行できます。"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:341
#, fuzzy
msgid "`doSomethingElse` can be executed if the current logged in user is the same as the `name` field of `person` method parameter"
msgstr ""
"`doSomethingElse` は、現在ログインしているユーザーが `person` "
"メソッドパラメーターの `name` フィールドと同じ場合に実行できます。"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:343
#, fuzzy
msgid "the use of `authentication.` is optional, so using `principal.username` has the same result."
msgstr "`authentication.` の使用は任意なので、 `principal.username` "
"を使用しても結果は同じです。"

#. type: Labeled list
#: upstream/_guides/spring-security.adoc:344
#, fuzzy, no-wrap
msgid "#paramName != authentication.principal.username"
msgstr "#paramName != authentication.principal.username"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:345
#, fuzzy
msgid "This is similar to the previous expression with the difference being that the method parameter must be different than the logged in username."
msgstr "これは先ほどの表現と似ていますが、メソッドのパラメータがログインしたユーザー"
"名とは異なるものでなければならないという違いがあります。"

#. type: Labeled list
#: upstream/_guides/spring-security.adoc:346
#, fuzzy, no-wrap
msgid "@beanName.method()"
msgstr "@beanName.method()"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:347
#, fuzzy
msgid "This syntax allows developers to specify that the execution of method of a specific bean will determine if the current user can access the secured method."
msgstr ""
"この構文により，開発者は，特定のBeanのメソッドの実行により，現在のユーザが保"
"護されたメソッドにアクセスできるかどうかを決定することを指定することができる"
"。"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:350
#, fuzzy
msgid "The syntax is best explained with an example.  Let's assume that a `MyComponent` bean has been created like so:"
msgstr "この構文は、例を挙げて説明するのが一番わかりやすいでしょう。 `MyComponent` "
"ビーンが次のように作成されているとします。"

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:358
#, no-wrap
msgid ""
"    @PreAuthorize(\"@personChecker.check(#person, authentication.principal.username)\")\n"
"    public void doSomething(Person person){\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/spring-security.adoc:365
#, fuzzy
msgid "The `doSomething` method has been annotated with `@PreAuthorize` using an expression that indicates that method `check` of a bean named `personChecker` needs to be invoked to determine whether the current user is authorized to invoke the `doSomething` method."
msgstr ""
"`doSomething` メソッドは、現在のユーザーが `doSomething` "
"メソッドを呼び出すことを許可されているかどうかを判断するために、 "
"`personChecker` という名前のBeanのメソッド `check` "
"を呼び出す必要があることを示す式を使用して、 `@PreAuthorize` "
"でアノテーションされています。"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:367
#, fuzzy
msgid "An example of the `PersonChecker` could be:"
msgstr "`PersonChecker` の例は、次のようになります。"

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:372
#, no-wrap
msgid ""
"@Component\n"
"public class PersonChecker {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:378
#, no-wrap
msgid ""
"    @Override\n"
"    public boolean check(Person person, String username) {\n"
"        return person.getName().equals(username);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/spring-security.adoc:381
#, fuzzy
msgid "Note that for the `check` method the parameter types must match what is specified in `@PreAuthorize` and that the return type must be a `boolean`."
msgstr ""
"なお、 `check` のメソッドでは、パラメータの型は `@PreAuthorize` "
"で指定されたものと一致しなければならず、戻り値の型は `boolean` "
"でなければなりません。"

#. type: Title =====
#: upstream/_guides/spring-security.adoc:382
#, fuzzy, no-wrap
msgid "Combining expressions"
msgstr "表現の組み合わせ"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:386
#, fuzzy
msgid "The `@PreAuthorize` annotations allows for the combination of expressions using logical `AND` / `OR`. Currently there is a limitation where only a single logical operation can be used (meaning mixing `AND` and `OR` isn't allowed)."
msgstr ""
"`@PreAuthorize` のアノテーションでは、論理的な `AND` / `OR` を使用した式の組"
"み合わせが可能です。現在のところ、1つの論理演算しか使用できないという制限があ"
"ります（つまり、 `AND` と `OR` を混ぜることはできません）。"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:388
#, fuzzy
msgid "Some examples of allowed expressions are:"
msgstr "許可される表現の例としては"

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:394
#, no-wrap
msgid ""
"    @PreAuthorize(\"hasAnyRole('user', 'admin') AND #user == principal.username\")\n"
"    public void allowedForUser(String user) {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:399
#, no-wrap
msgid ""
"    @PreAuthorize(\"hasRole('user') OR hasRole('admin')\")\n"
"    public void allowedForUserOrAdmin() {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:404
#, no-wrap
msgid ""
"    @PreAuthorize(\"hasAnyRole('view1', 'view2') OR isAnonymous() OR hasRole('test')\")\n"
"    public void allowedForAdminOrAnonymous() {\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/spring-security.adoc:409
#, fuzzy
msgid "Also to be noted that currently parentheses are not supported and expressions are evaluated from left to right when needed."
msgstr "また、現在は括弧がサポートされておらず、式は必要に応じて左から右へと評価され"
"ることにも注意が必要です。"

#. type: Title ==
#: upstream/_guides/spring-security.adoc:410
#, fuzzy, no-wrap
msgid "Important Technical Note"
msgstr "重要なテクニカルノート"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:416
#, fuzzy
msgid "Please note that the Spring support in Quarkus does not start a Spring Application Context nor are any Spring infrastructure classes run.  Spring classes and annotations are only used for reading metadata and / or are used as user code method return types or parameter types.  What that means for end users, is that adding arbitrary Spring libraries will not have any effect. Moreover Spring infrastructure classes (like `org.springframework.beans.factory.config.BeanPostProcessor` for example) will not be executed."
msgstr ""
"QuarkusのSpringサポートでは、Spring Application Contextは起動せず、Springイン"
"フラストラクチャクラスも実行されないことに注意してください。Springのクラスや"
"アノテーションは、メタデータを読み込んだり、ユーザーコードのメソッドの戻り値"
"の型やパラメータの型として使用されるだけです。エンドユーザーにとっての意味は"
"、任意のSpringライブラリを追加しても何の効果もないということです。さらに、Spr"
"ingのインフラクラス（例えば `org.springframework.beans.factory.config."
"BeanPostProcessor` ）は実行されません。"

#. type: Title ==
#: upstream/_guides/spring-security.adoc:417
#, no-wrap
msgid "Conversion Table"
msgstr "変換テーブル"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:420
msgid "The following table shows how Spring Security annotations can be converted to JAX-RS annotations."
msgstr "次の表は、Spring SecurityアノテーションをJAX-RSアノテーションに変換する方法を示しています。"

#. type: Table
#: upstream/_guides/spring-security.adoc:422
#, no-wrap
msgid "Spring"
msgstr "Spring"

#. type: Table
#: upstream/_guides/spring-security.adoc:422
#, no-wrap
msgid "JAX-RS"
msgstr "JAX-RS"

#. type: Table
#: upstream/_guides/spring-security.adoc:425
#, no-wrap
msgid "@Secured(\"admin\")"
msgstr "@Secured(\"admin\")"

#. type: Table
#: upstream/_guides/spring-security.adoc:426
#, no-wrap
msgid "@RolesAllowed(\"admin\")"
msgstr "@RolesAllowed(\"admin\")"

#. type: Title ==
#: upstream/_guides/spring-security.adoc:430
#, no-wrap
msgid "More Spring guides"
msgstr "その他のSpringガイド"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:433
msgid "Quarkus has more Spring compatibility features. See the following guides for more details:"
msgstr "Quarkusには、より多くのSpring互換機能があります。詳細については、以下のガイドを参照してください。"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:435
#, fuzzy
msgid "xref:spring-di.adoc[Quarkus - Extension for Spring DI]"
msgstr "link:spring-di.html[Quarkus - Spring DIのエクステンション]"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:436
#, fuzzy
msgid "xref:spring-web.adoc[Quarkus - Extension for Spring Web]"
msgstr "link:spring-web.html[Quarkus - Spring Webのエクステンション]"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:437
#, fuzzy
msgid "xref:spring-data-jpa.adoc[Quarkus - Extension for Spring Data JPA]"
msgstr "link:spring-data-jpa.html[Quarkus - Spring Data JPAのエクステンション]"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:438
#, fuzzy
msgid "xref:spring-data-rest.adoc[Quarkus - Extension for Spring Data REST]"
msgstr "link:spring-data-rest.html[Quarkus - Spring Data RESTのエクステンション]"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:439
#, fuzzy
msgid "xref:spring-cloud-config-client.adoc[Quarkus - Reading properties from Spring Cloud Config Server]"
msgstr ""
"link:spring-cloud-config-client.html[Quarkus - Spring Cloud Config "
"Serverからプロパティを読み込む]"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:440
#, fuzzy
msgid "xref:spring-boot-properties.adoc[Quarkus - Extension for Spring Boot properties]"
msgstr "link:spring-boot-properties.html[Quarkus - Spring "
"Bootプロパティ用のエクステンション]"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:441
#, fuzzy
msgid "xref:spring-cache.adoc[Quarkus - Extension for Spring Cache]"
msgstr "link:spring-cache.html[Quarkus - Spring Cacheのエクステンション]"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:441
#, fuzzy
msgid "xref:spring-scheduled.adoc[Quarkus - Extension for Spring Scheduled]"
msgstr "link:spring-scheduled.html[Quarkus - 春のエクステンションの予定]"

#~ msgid "To complete this guide, you need:"
#~ msgstr "このガイドを完成させるには、以下が必要です:"

#~ msgid "less than 15 minutes"
#~ msgstr "15分未満"

#~ msgid "an IDE"
#~ msgstr "IDE"

#~ msgid "JDK 11+ installed with `JAVA_HOME` configured appropriately"
#~ msgstr "JDK 11+ がインストールされ、 `JAVA_HOME`  が適切に設定されていること"

#~ msgid "Apache Maven {maven-version}"
#~ msgstr "Apache Maven {maven-version}"

#, fuzzy
#~ msgid "Run the application with: `./mvnw quarkus:dev`.  Open your browser to http://localhost:8080/greeting."
#~ msgstr "`./mvnw quarkus:dev` でアプリケーションを実行してください。ブラウザを開いて、 http://localhost:8080/greeting 。"

#, fuzzy
#~ msgid "You can of course create a native image using the instructions of the xref:building-native-image.adoc[Building a native executable guide]."
#~ msgstr "もちろん、 link:building-native-image.html[「Building a native executable」]の手順でネイティブイメージを作成することもできます。"

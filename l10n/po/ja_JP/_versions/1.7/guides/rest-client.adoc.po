# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-08-31 10:09+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/1.7/guides/rest-client.adoc:6
#, no-wrap
msgid "Quarkus - Using the REST Client"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/rest-client.adoc:12
msgid "This guide explains how to use the MicroProfile REST Client in order to interact with REST APIs with very little effort."
msgstr "このガイドでは、MicroProfile REST Clientを使用して、ほとんど手間をかけずにREST APIとやりとりする方法を説明します。"

#. type: Plain text
#: upstream/_versions/1.7/guides/rest-client.adoc:14
msgid "there is another guide if you need to write server link:rest-json[JSON REST APIs]."
msgstr "サーバー link:rest-json[JSON REST API] を書く必要がある場合は、別のガイドがあります。"

#. type: Title ==
#: upstream/_versions/1.7/guides/rest-client.adoc:15
#, no-wrap
msgid "Prerequisites"
msgstr "前提条件"

#. type: Plain text
#: upstream/_versions/1.7/guides/rest-client.adoc:18
msgid "To complete this guide, you need:"
msgstr "このガイドを完成させるには、以下が必要です:"

#. type: Plain text
#: upstream/_versions/1.7/guides/rest-client.adoc:20
msgid "less than 15 minutes"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/rest-client.adoc:21
msgid "an IDE"
msgstr "IDE"

#. type: Plain text
#: upstream/_versions/1.7/guides/rest-client.adoc:22
msgid "JDK 1.8+ installed with `JAVA_HOME` configured appropriately"
msgstr "JDK 1.8+ がインストールされ、 `JAVA_HOME`  が適切に設定されていること"

#. type: Plain text
#: upstream/_versions/1.7/guides/rest-client.adoc:23
msgid "Apache Maven {maven-version}"
msgstr "Apache Maven {maven-version}"

#. type: Title ==
#: upstream/_versions/1.7/guides/rest-client.adoc:24
#, no-wrap
msgid "Solution"
msgstr "ソリューション"

#. type: Plain text
#: upstream/_versions/1.7/guides/rest-client.adoc:28
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the completed example."
msgstr "次のセクションで紹介する手順に沿って、ステップを踏んでアプリを作成することをお勧めします。ただし、完成した例にそのまま進んでも構いません。"

#. type: Plain text
#: upstream/_versions/1.7/guides/rest-client.adoc:30
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Gitレポジトリをクローンするか `git clone {quickstarts-clone-url}` 、 {quickstarts-archive-url}[アーカイブ] をダウンロードします。"

#. type: Plain text
#: upstream/_versions/1.7/guides/rest-client.adoc:32
msgid "The solution is located in the `rest-client-quickstart` {quickstarts-tree-url}/rest-client-quickstart[directory]."
msgstr "ソリューションは `rest-client-quickstart` {quickstarts-tree-url}/rest-client-quickstart[directory] にあります。"

#. type: Title ==
#: upstream/_versions/1.7/guides/rest-client.adoc:33
#, no-wrap
msgid "Creating the Maven project"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/rest-client.adoc:36
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "まず、新しいプロジェクトが必要です。以下のコマンドで新規プロジェクトを作成します。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/rest-client.adoc:46
#, no-wrap
msgid ""
"mvn io.quarkus:quarkus-maven-plugin:{quarkus-version}:create \\\n"
"    -DprojectGroupId=org.acme \\\n"
"    -DprojectArtifactId=rest-client-quickstart \\\n"
"    -DclassName=\"org.acme.rest.client.CountriesResource\" \\\n"
"    -Dpath=\"/country\" \\\n"
"    -Dextensions=\"rest-client, resteasy-jsonb\"\n"
"cd rest-client-quickstart\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/rest-client.adoc:49
msgid "This command generates the Maven project with a REST endpoint and imports the `rest-client` and `resteasy-jsonb` extensions."
msgstr ""

#. type: delimited block =
#: upstream/_versions/1.7/guides/rest-client.adoc:53
msgid "If your application does not expose any JAX-RS endpoints (eg. a link:command-mode-reference[command mode application]), use the `rest-client-jsonb` or the `rest-client-jackson` extension instead."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/rest-client.adoc:57
msgid "If you already have your Quarkus project configured, you can add the `rest-client` and the `rest-client-jsonb` extensions to your project by running the following command in your project base directory:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/rest-client.adoc:61
#, no-wrap
msgid "./mvnw quarkus:add-extension -Dextensions=\"rest-client,resteasy-jsonb\"\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/rest-client.adoc:64
msgid "This will add the following to your `pom.xml`:"
msgstr "これにより、 `pom.xml` に以下が追加されます:"

#. type: delimited block -
#: upstream/_versions/1.7/guides/rest-client.adoc:75
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-rest-client</artifactId>\n"
"</dependency>\n"
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-resteasy-jsonb</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/rest-client.adoc:77
#, no-wrap
msgid "Setting up the model"
msgstr "モデルのセットアップ"

#. type: Plain text
#: upstream/_versions/1.7/guides/rest-client.adoc:81
msgid "In this guide we will be demonstrating how to consume part of the REST API supplied by the link:https://restcountries.eu[restcountries.eu] service.  Our first order of business is to setup the model we will be using, in the form of a `Country` POJO."
msgstr "このガイドでは、 link:https://restcountries.eu[restcountries.eu] サービスが提供するREST APIの一部を利用する方法をデモします。まず最初に、 `Country` POJO の形式で使用するモデルをセットアップします。"

#. type: Plain text
#: upstream/_versions/1.7/guides/rest-client.adoc:83
msgid "Create a `src/main/java/org/acme/rest/client/Country.java` file and set the following content:"
msgstr "`src/main/java/org/acme/rest/client/Country.java` ファイルを作成し、以下の内容を設定します。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/rest-client.adoc:87
#: upstream/_versions/1.7/guides/rest-client.adoc:114
#: upstream/_versions/1.7/guides/rest-client.adoc:232
#: upstream/_versions/1.7/guides/rest-client.adoc:270
#: upstream/_versions/1.7/guides/rest-client.adoc:301
#: upstream/_versions/1.7/guides/rest-client.adoc:360
#: upstream/_versions/1.7/guides/rest-client.adoc:388
#: upstream/_versions/1.7/guides/rest-client.adoc:488
#, no-wrap
msgid "package org.acme.rest.client;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/rest-client.adoc:89
#, no-wrap
msgid "import java.util.List;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/rest-client.adoc:91
#, no-wrap
msgid "public class Country {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/rest-client.adoc:96
#, no-wrap
msgid ""
"    public String name;\n"
"    public String alpha2Code;\n"
"    public String capital;\n"
"    public List<Currency> currencies;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/rest-client.adoc:103
#, no-wrap
msgid ""
"    public static class Currency {\n"
"        public String code;\n"
"        public String name;\n"
"        public String symbol;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/rest-client.adoc:106
msgid "The model above is only a subset of the fields provided by the service, but it suffices for the purposes of this guide."
msgstr "上記のモデルは、サービスによって提供されるフィールドのサブセットに過ぎませんが、このガイドの目的には十分です。"

#. type: Title ==
#: upstream/_versions/1.7/guides/rest-client.adoc:107
#, no-wrap
msgid "Create the interface"
msgstr "インターフェースの作成"

#. type: Plain text
#: upstream/_versions/1.7/guides/rest-client.adoc:110
msgid "Using the MicroProfile REST Client is as simple as creating an interface using the proper JAX-RS and MicroProfile annotations. In our case the interface should be created at `src/main/java/org/acme/rest/client/CountriesService.java` and have the following content:"
msgstr "MicroProfile REST Client を使うのは、適切な JAX-RS と MicroProfile アノテーションを使ってインターフェースを作成するのと同じくらい簡単です。私たちの場合、インターフェイスは `src/main/java/org/acme/rest/client/CountriesService.java` で作成され、次のような内容になっていなければなりません。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/rest-client.adoc:117
#: upstream/_versions/1.7/guides/rest-client.adoc:273
#: upstream/_versions/1.7/guides/rest-client.adoc:363
#, no-wrap
msgid ""
"import org.eclipse.microprofile.rest.client.inject.RegisterRestClient;\n"
"import org.jboss.resteasy.annotations.jaxrs.PathParam;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/rest-client.adoc:122
#, no-wrap
msgid ""
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import java.util.Set;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/rest-client.adoc:126
#: upstream/_versions/1.7/guides/rest-client.adoc:283
#: upstream/_versions/1.7/guides/rest-client.adoc:373
#, no-wrap
msgid ""
"@Path(\"/v2\")\n"
"@RegisterRestClient\n"
"public interface CountriesService {\n"
msgstr ""
"@Path(\"/v2\")\n"
"@RegisterRestClient\n"
"public interface CountriesService {\n"

#. type: delimited block -
#: upstream/_versions/1.7/guides/rest-client.adoc:132
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/name/{name}\")\n"
"    @Produces(\"application/json\")\n"
"    Set<Country> getByName(@PathParam String name);\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/rest-client.adoc:135
msgid "The `getByName` method gives our code the ability to query a country by name from the REST Countries API. The client will handle all the networking and marshalling leaving our code clean of such technical details."
msgstr "`getByName` メソッドは、私たちのコードに、REST Countries API から名前を指定して国を問い合わせる機能を与えます。クライアントがすべてのネットワーキングとマーシャリングを処理してくれるので、このような技術的な詳細は一切ありません。"

#. type: Plain text
#: upstream/_versions/1.7/guides/rest-client.adoc:137
msgid "The purpose of the annotations in the code above is the following:"
msgstr "上のコードのアノテーションの目的は以下の通りです。"

#. type: Plain text
#: upstream/_versions/1.7/guides/rest-client.adoc:140
msgid "`@RegisterRestClient` allows Quarkus to know that this interface is meant to be available for CDI injection as a REST Client"
msgstr "`@RegisterRestClient` により、Quarkusは、このインターフェイスがRESTクライアントとしてCDIインジェクションに利用可能であることを知ることができます。"

#. type: Plain text
#: upstream/_versions/1.7/guides/rest-client.adoc:141
msgid "`@Path`, `@GET` and `@PathParam` are the standard JAX-RS annotations used to define how to access the service"
msgstr "`@Path` 、 `@GET` 、 `@PathParam` は、サービスへのアクセス方法を定義するために使用される標準的な JAX-RS アノテーションです。"

#. type: Plain text
#: upstream/_versions/1.7/guides/rest-client.adoc:142
msgid "`@Produces` defines the expected content-type"
msgstr "`@Produces` は、期待されるコンテンツタイプを定義しています。"

#. type: delimited block =
#: upstream/_versions/1.7/guides/rest-client.adoc:147
msgid "While `@Consumes` and `@Produces` are optional as auto-negotiation is supported, it is heavily recommended to annotate your endpoints with them to define precisely the expected content-types."
msgstr ""

#. type: delimited block =
#: upstream/_versions/1.7/guides/rest-client.adoc:149
msgid "It will allow to narrow down the number of JAX-RS providers (which can be seen as converters) included in the native executable."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/rest-client.adoc:151
#, no-wrap
msgid "Create the configuration"
msgstr "コンフィグレーションの作成"

#. type: Plain text
#: upstream/_versions/1.7/guides/rest-client.adoc:155
msgid "In order to determine the base URL to which REST calls will be made, the REST Client uses configuration from `application.properties`.  The name of the property needs to follow a certain convention which is best displayed in the following code:"
msgstr "REST 呼び出しが行われるベース URL を決定するために、REST クライアントは `application.properties` からの設定を使用します。プロパティーの名前は、以下のコードで表示される特定の規則に従う必要があります。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/rest-client.adoc:161
#, no-wrap
msgid ""
"# Your configuration properties\n"
"org.acme.rest.client.CountriesService/mp-rest/url=https://restcountries.eu/rest # // <1>\n"
"org.acme.rest.client.CountriesService/mp-rest/scope=javax.inject.Singleton # // <2>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/rest-client.adoc:165
msgid "Having this configuration means that all requests performed using `org.acme.rest.client.CountriesService` will use `https://restcountries.eu/rest` as the base URL.  Using the configuration above, calling the `getByName` method of `CountriesService` with a value of `France` would result in an HTTP GET request being made to `https://restcountries.eu/rest/v2/name/France`."
msgstr "この設定をすると、 `org.acme.rest.client.CountriesService` を使用して実行されるすべてのリクエストが `https://restcountries.eu/rest` をベースURLとして使用します。上記の設定を使用して、 `CountriesService` の `getByName` メソッドを `France` の値で呼び出すと、HTTP GET リクエストが `https://restcountries.eu/rest/v2/name/France` に対して実行されます。"

#. type: Plain text
#: upstream/_versions/1.7/guides/rest-client.adoc:167
msgid "Having this configuration means that the default scope of `org.acme.rest.client.CountriesService` will be `@Singleton`. Supported scope values are `@Singleton`, `@Dependent`, `@ApplicationScoped` and `@RequestScoped`. The default scope is `@Dependent`.  The default scope can also be defined on the interface."
msgstr "この設定をすると、 `org.acme.rest.client.CountriesService` のデフォルトのスコープは `@Singleton` になります。サポートされているスコープの値は `@Singleton` , `@Dependent` , `@ApplicationScoped` および `@RequestScoped` です。既定のスコープは `@Dependent` です。デフォルトのスコープはインターフェイス上で定義することもできます。"

#. type: Plain text
#: upstream/_versions/1.7/guides/rest-client.adoc:169
msgid "Note that `org.acme.rest.client.CountriesService` _must_ match the fully qualified name of the `CountriesService` interface we created in the previous section."
msgstr "`org.acme.rest.client.CountriesService` は、前のセクションで作成した `CountriesService` インターフェイスの完全修飾名と _一致しなければならない_ ことに注意してください。"

#. type: Plain text
#: upstream/_versions/1.7/guides/rest-client.adoc:171
msgid "To facilitate the configuration, you can use the `@RegisterRestClient` `configKey` property that allows to use another configuration root than the fully qualified name of your interface."
msgstr "構成を容易にするために、 `@RegisterRestClient` `configKey` プロパティーを使用して、インターフェイスの完全修飾名とは別の構成ルートを使用することができます。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/rest-client.adoc:179
#, no-wrap
msgid ""
"@RegisterRestClient(configKey=\"country-api\")\n"
"public interface CountriesService {\n"
"    [...]\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/rest-client.adoc:186
#, no-wrap
msgid ""
"# Your configuration properties\n"
"country-api/mp-rest/url=https://restcountries.eu/rest #\n"
"country-api/mp-rest/scope=javax.inject.Singleton # /\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/rest-client.adoc:188
#, no-wrap
msgid "Update the JAX-RS resource"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/rest-client.adoc:191
#: upstream/_versions/1.7/guides/rest-client.adoc:297
msgid "Open the `src/main/java/org/acme/rest/client/CountriesResource.java` file and update it with the following content:"
msgstr "`src/main/java/org/acme/rest/client/CountriesResource.java` ファイルを開き、以下の内容で更新してください。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/rest-client.adoc:196
#: upstream/_versions/1.7/guides/rest-client.adoc:304
#: upstream/_versions/1.7/guides/rest-client.adoc:391
#, no-wrap
msgid ""
"import org.eclipse.microprofile.rest.client.inject.RestClient;\n"
"import org.jboss.resteasy.annotations.jaxrs.PathParam;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/rest-client.adoc:203
#, no-wrap
msgid ""
"import javax.inject.Inject;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"
"import java.util.Set;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/rest-client.adoc:206
#: upstream/_versions/1.7/guides/rest-client.adoc:315
#: upstream/_versions/1.7/guides/rest-client.adoc:402
#, no-wrap
msgid ""
"@Path(\"/country\")\n"
"public class CountriesResource {\n"
msgstr ""
"@Path(\"/country\")\n"
"public class CountriesResource {\n"

#. type: delimited block -
#: upstream/_versions/1.7/guides/rest-client.adoc:210
#: upstream/_versions/1.7/guides/rest-client.adoc:319
#: upstream/_versions/1.7/guides/rest-client.adoc:406
#, no-wrap
msgid ""
"    @Inject\n"
"    @RestClient\n"
"    CountriesService countriesService;\n"
msgstr ""
"    @Inject\n"
"    @RestClient\n"
"    CountriesService countriesService;\n"

#. type: delimited block -
#: upstream/_versions/1.7/guides/rest-client.adoc:219
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/name/{name}\")\n"
"    @Produces(MediaType.APPLICATION_JSON)\n"
"    public Set<Country> name(@PathParam String name) {\n"
"        return countriesService.getByName(name);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/rest-client.adoc:222
msgid "Note that in addition to the standard CDI `@Inject` annotation, we also need to use the MicroProfile `@RestClient` annotation to inject `CountriesService`."
msgstr "標準の CDI `@Inject` アノテーションに加えて、MicroProfile `@RestClient` アノテーションを使用して `CountriesService` を注入する必要があることに注意してください。"

#. type: Title ==
#: upstream/_versions/1.7/guides/rest-client.adoc:223
#, no-wrap
msgid "Update the test"
msgstr "テストの更新"

#. type: Plain text
#: upstream/_versions/1.7/guides/rest-client.adoc:227
msgid "We also need to update the functional test to reflect the changes made to the endpoint.  Edit the `src/test/java/org/acme/rest/client/CountriesResourceTest.java` file and change the content of the `testCountryNameEndpoint` method to:"
msgstr "また、エンドポイントに加えられた変更を反映させるために、機能テストを更新する必要があります。 `src/test/java/org/acme/rest/client/CountriesResourceTest.java` ファイルを編集し、 `testCountryNameEndpoint` メソッドの内容を変更します。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/rest-client.adoc:235
#, no-wrap
msgid ""
"import io.quarkus.test.junit.QuarkusTest;\n"
"import org.junit.jupiter.api.Test;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/rest-client.adoc:238
#, no-wrap
msgid ""
"import static io.restassured.RestAssured.given;\n"
"import static org.hamcrest.CoreMatchers.is;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/rest-client.adoc:241
#, no-wrap
msgid ""
"@QuarkusTest\n"
"public class CountriesResourceTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/rest-client.adoc:255
#, no-wrap
msgid ""
"    @Test\n"
"    public void testCountryNameEndpoint() {\n"
"        given()\n"
"          .when().get(\"/country/name/greece\")\n"
"          .then()\n"
"             .statusCode(200)\n"
"             .body(\"$.size()\", is(1),\n"
"                     \"[0].alpha2Code\", is(\"GR\"),\n"
"                     \"[0].capital\", is(\"Athens\"),\n"
"                     \"[0].currencies.size()\", is(1),\n"
"                     \"[0].currencies[0].name\", is(\"Euro\")\n"
"             );\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/rest-client.adoc:257
#: upstream/_versions/1.7/guides/rest-client.adoc:549
#, no-wrap
msgid "}\n"
msgstr "}\n"

#. type: Plain text
#: upstream/_versions/1.7/guides/rest-client.adoc:260
msgid "The code above uses link:http://rest-assured.io/[REST Assured]'s link:https://github.com/rest-assured/rest-assured/wiki/GettingStarted#jsonpath[json-path] capabilities."
msgstr "上のコードでは、 link:http://rest-assured.io/[REST Assured] の link:https://github.com/rest-assured/rest-assured/wiki/GettingStarted#jsonpath[json-path] 機能を使用しています。"

#. type: Title ==
#: upstream/_versions/1.7/guides/rest-client.adoc:262
#, no-wrap
msgid "Async Support"
msgstr "非同期サポート"

#. type: Plain text
#: upstream/_versions/1.7/guides/rest-client.adoc:266
msgid "The rest client supports asynchronous rest calls.  Async support comes in 2 flavors: you can return a `CompletionStage` or a `Uni` (requires the `quarkus-resteasy-mutiny` extension).  Let's see it in action by adding a `getByNameAsync` method in our `CountriesService` REST interface. The code should look like:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/rest-client.adoc:279
#: upstream/_versions/1.7/guides/rest-client.adoc:369
#, no-wrap
msgid ""
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import java.util.concurrent.CompletionStage;\n"
"import java.util.Set;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/rest-client.adoc:288
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/name/{name}\")\n"
"    @Produces(\"application/json\")\n"
"    Set<Country> getByName(@PathParam String name);\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/rest-client.adoc:294
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/name/{name}\")\n"
"    @Produces(\"application/json\")\n"
"    CompletionStage<Set<Country>> getByNameAsync(@PathParam String name);\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/rest-client.adoc:312
#: upstream/_versions/1.7/guides/rest-client.adoc:399
#, no-wrap
msgid ""
"import javax.inject.Inject;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"
"import java.util.concurrent.CompletionStage;\n"
"import java.util.Set;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/rest-client.adoc:327
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/name/{name}\")\n"
"    @Produces(MediaType.APPLICATION_JSON)\n"
"    public Set<Country> name(@PathParam String name) {\n"
"        return countriesService.getByName(name);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/rest-client.adoc:335
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/name-async/{name}\")\n"
"    @Produces(MediaType.APPLICATION_JSON)\n"
"    public CompletionStage<Set<Country>> nameAsync(@PathParam String name) {\n"
"        return countriesService.getByNameAsync(name);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/rest-client.adoc:338
msgid "To test asynchronous methods, add the test method below in `CountriesResourceTest`:"
msgstr "非同期メソッドをテストするには、`CountriesResourceTest` に以下のテストメソッドを追加します。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/rest-client.adoc:353
#, no-wrap
msgid ""
"@Test\n"
"public void testCountryNameAsyncEndpoint() {\n"
"    given()\n"
"    .when().get(\"/country/name-async/greece\")\n"
"    .then()\n"
"        .statusCode(200)\n"
"        .body(\"$.size()\", is(1),\n"
"             \"[0].alpha2Code\", is(\"GR\"),\n"
"             \"[0].capital\", is(\"Athens\"),\n"
"             \"[0].currencies.size()\", is(1),\n"
"             \"[0].currencies[0].name\", is(\"Euro\")\n"
"        );\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/rest-client.adoc:356
msgid "The `Uni` version is very similar:"
msgstr "`Uni` 版は非常に似ています。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/rest-client.adoc:375
#: upstream/_versions/1.7/guides/rest-client.adoc:409
#, no-wrap
msgid "    // ...\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/rest-client.adoc:381
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/name/{name}\")\n"
"    @Produces(\"application/json\")\n"
"    Uni<Set<Country>> getByNameAsUni(@PathParam String name);\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/rest-client.adoc:384
msgid "The `CountriesResource` becomes:"
msgstr "`CountriesResource` は次のようになります。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/rest-client.adoc:417
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/name-uni/{name}\")\n"
"    @Produces(MediaType.APPLICATION_JSON)\n"
"    public Uni<Set<Country>> nameAsync(@PathParam String name) {\n"
"        return countriesService.getByNameAsUni(name);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Block title
#: upstream/_versions/1.7/guides/rest-client.adoc:420
#, no-wrap
msgid "Mutiny"
msgstr "Mutiny"

#. type: delimited block =
#: upstream/_versions/1.7/guides/rest-client.adoc:423
msgid "The previous snippet uses Mutiny reactive types, if you're not familiar with them, read the link:getting-started-reactive#mutiny[Getting Started with Reactive guide] first."
msgstr "前のスニペットでは、Mutinyのリアクティブタイプを使用していますが、もし慣れていない場合は、まず link:getting-started-reactive#mutiny[Getting Started with Reactiveガイド] を読んでください。"

#. type: Plain text
#: upstream/_versions/1.7/guides/rest-client.adoc:427
msgid "When returning a `Uni`, every _subscription_ invokes the remote service.  It means you can re-send the request by re-subscribing on the `Uni`, or use a `retry` as follow:"
msgstr "`Uni` を返すとき、すべての _サブスクリプション_ は 、リモートサービスを呼び出します。つまり、 `Uni` で再購読してリクエストを再送信するか、以下のように `retry` を使用することができます。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/rest-client.adoc:432
#, no-wrap
msgid "@Inject @RestClient CountriesResource service;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/rest-client.adoc:434
#, no-wrap
msgid "// ...\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/rest-client.adoc:437
#, no-wrap
msgid ""
"service.nameAsync(\"Greece\")\n"
"   .onFailure().retry().atMost(10);\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/rest-client.adoc:443
msgid "If you use a `CompletionStage`, you would need to call the service's method to retry.  This difference comes from the laziness aspect of Mutiny and its subscription protocol.  More details about this can be found in https://smallrye.io/smallrye-mutiny/#_uni_and_multi[the Mutiny documentation]."
msgstr "`CompletionStage` を使用する場合は、サービスのメソッドを呼び出して再試行する必要があります。この違いは、Mutinyとそのサブスクリプションプロトコルの lazy 性の側面から来ています。これについての詳細は Mutiny の link:https://smallrye.io/smallrye-mutiny/#_uni_and_multi[ドキュメント] を参照してください。"

#. type: Title ==
#: upstream/_versions/1.7/guides/rest-client.adoc:444
#, no-wrap
msgid "Package and run the application"
msgstr "アプリケーションをパッケージ化して実行する"

#. type: Plain text
#: upstream/_versions/1.7/guides/rest-client.adoc:448
msgid "Run the application with: `./mvnw compile quarkus:dev`.  Open your browser to http://localhost:8080/country/name/greece."
msgstr "`./mvnw compile quarkus:dev` でアプリケーションを実行します。ブラウザで http://localhost:8080/country/name/greece を開きます。"

#. type: Plain text
#: upstream/_versions/1.7/guides/rest-client.adoc:450
msgid "You should see a JSON object containing some basic information about Greece."
msgstr "ギリシャに関する基本情報を含む JSON オブジェクトが表示されます。"

#. type: Plain text
#: upstream/_versions/1.7/guides/rest-client.adoc:453
msgid "As usual, the application can be packaged using `./mvnw clean package` and executed using the `-runner.jar` file.  You can also generate the native executable with `./mvnw clean package -Pnative`."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/rest-client.adoc:454
#, no-wrap
msgid "Using a Mock HTTP Server for tests"
msgstr "テストにモックHTTPサーバーを使用する"

#. type: Plain text
#: upstream/_versions/1.7/guides/rest-client.adoc:459
msgid "Setting up a mock HTTP server, against which tests are run, is a common testing pattern.  Examples of such servers are link:http://wiremock.org/[Wiremock] and link:https://docs.hoverfly.io/projects/hoverfly-java/en/latest/index.html[Hoverfly].  In this section we'll demonstrate how Wiremock can be leveraged for testing the `CountriesService` which was developed above."
msgstr "テストを実行するためのモックHTTPサーバーを設定することは、一般的なテストパターンです。そのようなサーバーの例としては、 link:http://wiremock.org/[Wiremock] や link:https://docs.hoverfly.io/projects/hoverfly-java/en/latest/index.html[Hoverfly] があります。このセクションでは、上で開発した `CountriesService` をテストするために Wiremock をどのように活用できるかを示します。"

#. type: Plain text
#: upstream/_versions/1.7/guides/rest-client.adoc:461
msgid "First of all, Wiremock needs to be added as a test dependency. For a Maven project that would happen like so:"
msgstr "まず第一に、Wiremockをテスト依存関係として追加する必要があります。Mavenプロジェクトの場合は以下のようになります。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/rest-client.adoc:470
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>com.github.tomakehurst</groupId>\n"
"    <artifactId>wiremock-jre8</artifactId>\n"
"    <scope>test</scope>\n"
"    <version>${wiremock.version}</version> <1>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/rest-client.adoc:473
msgid "Use a proper Wiremock version. All available versions can be found link:https://search.maven.org/artifact/com.github.tomakehurst/wiremock-jre8[here]."
msgstr "適切なWiremockのバージョンを使用してください。利用可能なすべてのバージョンは link:https://search.maven.org/artifact/com.github.tomakehurst/wiremock-jre8[ここで]  見つけることができます。"

#. type: Plain text
#: upstream/_versions/1.7/guides/rest-client.adoc:477
msgid "In Quarkus tests when some service needs to be started before the Quarkus tests are ran, we utilize the `@io.quarkus.test.common.QuarkusTestResource` annotation to specify a `io.quarkus.test.common.QuarkusTestResourceLifecycleManager` which can start the service and supply configuration values that Quarkus will use."
msgstr "Quarkusのテストを実行する前にサービスを開始する必要がある場合、Quarkusのテストでは、 `@io.quarkus.test.common.QuarkusTestResource` アノテーションを利用して、サービスを開始できる `io.quarkus.test.common.QuarkusTestResourceLifecycleManager` を指定し、Quarkusが使用する設定値を提供します。"

#. type: delimited block =
#: upstream/_versions/1.7/guides/rest-client.adoc:481
msgid "For more details about `@QuarkusTestResource` refer to link:getting-started-testing#quarkus-test-resource[this part of the documentation]."
msgstr "`@QuarkusTestResource` の詳細については、 link:getting-started-testing#quarkus-test-resource[ドキュメントのこの部分] を参照してください。"

#. type: Plain text
#: upstream/_versions/1.7/guides/rest-client.adoc:484
msgid "Let's create an implementation of `QuarkusTestResourceLifecycleManager` called `WiremockCountries` like so:"
msgstr "このように `QuarkusTestResourceLifecycleManager` の実装である `WiremockCountries` を作成してみましょう。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/rest-client.adoc:491
#, no-wrap
msgid ""
"import java.util.Collections;\n"
"import java.util.Map;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/rest-client.adoc:494
#, no-wrap
msgid ""
"import com.github.tomakehurst.wiremock.WireMockServer;\n"
"import io.quarkus.test.common.QuarkusTestResourceLifecycleManager;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/rest-client.adoc:496
#, no-wrap
msgid "import static com.github.tomakehurst.wiremock.client.WireMock.*; // <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/rest-client.adoc:498
#, no-wrap
msgid "public class WiremockCountries implements QuarkusTestResourceLifecycleManager {  // <2>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/rest-client.adoc:500
#, no-wrap
msgid "\tprivate WireMockServer wireMockServer;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/rest-client.adoc:505
#, no-wrap
msgid ""
"\t@Override\n"
"\tpublic Map<String, String> start() {\n"
"\t\twireMockServer = new WireMockServer();\n"
"\t\twireMockServer.start(); // <3>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/rest-client.adoc:515
#, no-wrap
msgid ""
"\t\tstubFor(get(urlEqualTo(\"/v2/name/GR\"))   // <4>\n"
"\t\t\t\t.willReturn(aResponse()\n"
"\t\t\t\t\t\t.withHeader(\"Content-Type\", \"application/json\")\n"
"\t\t\t\t\t\t.withBody(\n"
"                        \"[{\" +\n"
"                        \"\\\"name\\\": \\\"Ελλάδα\\\",\" +\n"
"                        \"\\\"capital\\\": \\\"Αθήνα\\\"\" +\n"
"                        \"}]\"\n"
"\t\t\t\t\t\t)));\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/rest-client.adoc:517
#, no-wrap
msgid "\t\tstubFor(get(urlMatching(\".*\")).atPriority(10).willReturn(aResponse().proxiedFrom(\"https://restcountries.eu/rest\")));   // <5>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/rest-client.adoc:520
#, no-wrap
msgid ""
"\t\treturn Collections.singletonMap(\"org.acme.getting.started.country.CountriesService/mp-rest/url\", wireMockServer.baseUrl()); // <6>\n"
"\t}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/rest-client.adoc:528
#, no-wrap
msgid ""
"\t@Override\n"
"\tpublic void stop() {\n"
"\t\tif (null != wireMockServer) {\n"
"\t\t\twireMockServer.stop();  // <7>\n"
"\t\t}\n"
"\t}\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/rest-client.adoc:531
msgid "Statically importing the methods in the Wiremock package makes it easier to read the test."
msgstr "Wiremockパッケージのメソッドを静的にインポートすると、テストを読みやすくなります。"

#. type: Plain text
#: upstream/_versions/1.7/guides/rest-client.adoc:532
msgid "The `start` method is invoked by Quarkus before any test is run and returns a `Map` of configuration properties that apply during the test execution."
msgstr "`start` メソッドは、テストを実行する前にQuarkusによって呼び出され、テスト実行中に適用される設定プロパティーの `Map` を返します。"

#. type: Plain text
#: upstream/_versions/1.7/guides/rest-client.adoc:533
msgid "Launch Wiremock."
msgstr "Wiremockを起動します。"

#. type: Plain text
#: upstream/_versions/1.7/guides/rest-client.adoc:534
msgid "Configure Wiremock to stub the calls to `/v2/name/GR` by returning a specific canned response."
msgstr "Wiremockが特定の定型文を返すことで、 `/v2/name/GR` への呼び出しをスタブするように設定します。"

#. type: Plain text
#: upstream/_versions/1.7/guides/rest-client.adoc:535
msgid "All HTTP calls that have not been stubbed are handled by calling the real service. This is done for demonstration purposes, as it is not something that would usually happen in a real test."
msgstr "スタブ化されていないすべての HTTP 呼び出しは、実際のサービスを呼び出すことで処理されます。これは、実際のテストでは通常発生しないことなので、デモンストレーションのために行われています。"

#. type: Plain text
#: upstream/_versions/1.7/guides/rest-client.adoc:537
msgid "As the `start` method returns configuration that applies for tests, we set the rest-client property that controls the base URL which is used by the implementation of `CountriesService` to the base URL where Wiremock is listening for incoming requests."
msgstr "`start` メソッドはテストに適用される設定を返すので、 `CountriesService` の実装で使用されるベースURLを制御する rest-client プロパティーを、Wiremock がリクエストの着信をリッスンするベースURLに設定します。"

#. type: Plain text
#: upstream/_versions/1.7/guides/rest-client.adoc:538
msgid "When all tests have finished, shutdown Wiremock."
msgstr "すべてのテストが終了したら、Wiremockをシャットダウンします。"

#. type: Plain text
#: upstream/_versions/1.7/guides/rest-client.adoc:541
msgid "The `CountriesResourceTest` test class needs to be annotated like so:"
msgstr "`CountriesResourceTest` テストクラスには、このようなアノテーションが必要です。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/rest-client.adoc:547
#, no-wrap
msgid ""
"@QuarkusTest\n"
"@QuarkusTestResource(WiremockCountries.class)\n"
"public class CountriesResourceTest {\n"
msgstr ""

#. type: delimited block =
#: upstream/_versions/1.7/guides/rest-client.adoc:554
msgid "`@QuarkusTestResource` applies to all tests, not just `CountriesResourceTest`."
msgstr "`@QuarkusTestResource` は `CountriesResourceTest` だけでなく、すべてのテストに適用されます。"

#. type: Title ==
#: upstream/_versions/1.7/guides/rest-client.adoc:556
#, no-wrap
msgid "Further reading"
msgstr "さらに詳しく"

#. type: Plain text
#: upstream/_versions/1.7/guides/rest-client.adoc:558
msgid "link:https://download.eclipse.org/microprofile/microprofile-rest-client-1.2.1/microprofile-rest-client-1.2.1.html[MicroProfile Rest Client specification]"
msgstr ""

# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-08-31 10:08+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/1.7/guides/maven-tooling.adoc:6
#, no-wrap
msgid "Quarkus - Building applications with Maven"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/maven-tooling.adoc:11
#, no-wrap
msgid "Creating a new project"
msgstr "新規プロジェクトの作成"

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:14
msgid "With Maven, you can scaffold a new project with:"
msgstr "Mavenを使えば、新しいプロジェクトをスキャフォールド(足場の作成)できます。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/maven-tooling.adoc:22
#, no-wrap
msgid ""
"mvn io.quarkus:quarkus-maven-plugin:{quarkus-version}:create \\\n"
"    -DprojectGroupId=my-groupId \\\n"
"    -DprojectArtifactId=my-artifactId \\\n"
"    -DprojectVersion=my-version \\\n"
"    -DclassName=\"org.my.group.MyResource\"\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:26
msgid "If you just launch `mvn io.quarkus:quarkus-maven-plugin:{quarkus-version}:create` the Maven plugin asks for user inputs. You can disable (and use default values) this interactive mode by passing `-B` to the Maven command."
msgstr "`mvn io.quarkus:quarkus-maven-plugin:{quarkus-version}:create`  を起動するだけで、Maven プラグインはユーザー入力を要求します。 `-B`  を Maven コマンドに渡すことで、この対話型モードを無効にすることができます (デフォルト値を使用します)。"

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:28
msgid "The following table lists the attributes you can pass to the `create` command:"
msgstr "次の表は、 `create`  コマンドに渡すことができる属性の一覧です。"

#. type: Table
#: upstream/_versions/1.7/guides/maven-tooling.adoc:32
#, no-wrap
msgid "Attribute"
msgstr "属性"

#. type: Table
#: upstream/_versions/1.7/guides/maven-tooling.adoc:33
#, no-wrap
msgid "Default Value"
msgstr "デフォルト値"

#. type: Table
#: upstream/_versions/1.7/guides/maven-tooling.adoc:35
#, no-wrap
msgid "Description"
msgstr "説明"

#. type: Table
#: upstream/_versions/1.7/guides/maven-tooling.adoc:36
#, no-wrap
msgid "`projectGroupId`"
msgstr "`projectGroupId`"

#. type: Table
#: upstream/_versions/1.7/guides/maven-tooling.adoc:37
#, no-wrap
msgid "`org.acme.sample`"
msgstr "`org.acme.sample`"

#. type: Table
#: upstream/_versions/1.7/guides/maven-tooling.adoc:39
#, no-wrap
msgid "The group id of the created project"
msgstr "作成されたプロジェクトのグループID"

#. type: Table
#: upstream/_versions/1.7/guides/maven-tooling.adoc:40
#, no-wrap
msgid "`projectArtifactId`"
msgstr "`projectArtifactId`"

#. type: Table
#: upstream/_versions/1.7/guides/maven-tooling.adoc:41
#, no-wrap
msgid "_mandatory_"
msgstr ""

#. type: Table
#: upstream/_versions/1.7/guides/maven-tooling.adoc:43
#, no-wrap
msgid "The artifact id of the created project. Not passing it triggers the interactive mode."
msgstr "作成されたプロジェクトのアーティファクトID。これを渡さないと、インタラクティブモードがトリガされます。"

#. type: Table
#: upstream/_versions/1.7/guides/maven-tooling.adoc:44
#, no-wrap
msgid "`projectVersion`"
msgstr "`projectVersion`"

#. type: Table
#: upstream/_versions/1.7/guides/maven-tooling.adoc:45
#, no-wrap
msgid "`1.0-SNAPSHOT`"
msgstr ""

#. type: Table
#: upstream/_versions/1.7/guides/maven-tooling.adoc:47
#, no-wrap
msgid "The version of the created project"
msgstr "作成されたプロジェクトのバージョン"

#. type: Table
#: upstream/_versions/1.7/guides/maven-tooling.adoc:48
#, no-wrap
msgid "`platformGroupId`"
msgstr "`platformGroupId`"

#. type: Table
#: upstream/_versions/1.7/guides/maven-tooling.adoc:49
#, no-wrap
msgid "`io.quarkus`"
msgstr "`io.quarkus`"

#. type: Table
#: upstream/_versions/1.7/guides/maven-tooling.adoc:51
#, no-wrap
msgid "The group id of the target platform. Given that all the existing platforms are coming from `io.quarkus` this one won't practically be used explicitly. But it's still an option."
msgstr "対象となるプラットフォームのグループID。既存のすべてのプラットフォームが `io.quarkus` から来ていることを考えると、実際にはこれは明示的には使われないでしょう。しかし、これはまだオプションです。"

#. type: Table
#: upstream/_versions/1.7/guides/maven-tooling.adoc:52
#, no-wrap
msgid "`platformArtifactId`"
msgstr "`platformArtifactId`"

#. type: Table
#: upstream/_versions/1.7/guides/maven-tooling.adoc:53
#, no-wrap
msgid "`quarkus-universe-bom`"
msgstr "`quarkus-universe-bom`"

#. type: Table
#: upstream/_versions/1.7/guides/maven-tooling.adoc:55
#, no-wrap
msgid "The artifact id of the target platform BOM. It should be `quarkus-bom` in order to use the locally built Quarkus."
msgstr "ターゲットプラットフォームBOMのアーティファクトID。ローカルでビルドされたQuarkusを使用するためには、 `quarkus-bom` である必要があります。"

#. type: Table
#: upstream/_versions/1.7/guides/maven-tooling.adoc:56
#, no-wrap
msgid "`platformVersion`"
msgstr "`platformVersion`"

#. type: Table
#: upstream/_versions/1.7/guides/maven-tooling.adoc:57
#, no-wrap
msgid "If it's not specified, the latest one will be resolved."
msgstr "指定されていない場合は、最新のものに解決されます。"

#. type: Table
#: upstream/_versions/1.7/guides/maven-tooling.adoc:59
#, no-wrap
msgid "The version of the platform you want the project to use. It can also accept a version range, in which case the latest from the specified range will be used."
msgstr "プロジェクトで使用したいプラットフォームのバージョンを指定します。バージョンの範囲を指定することもでき、その場合は指定した範囲の最新のものが使用されます。"

#. type: Table
#: upstream/_versions/1.7/guides/maven-tooling.adoc:60
#, no-wrap
msgid "`className`"
msgstr "`className`"

#. type: Table
#: upstream/_versions/1.7/guides/maven-tooling.adoc:61
#, no-wrap
msgid "_Not created if omitted_"
msgstr "_省略された場合は作成されない_"

#. type: Table
#: upstream/_versions/1.7/guides/maven-tooling.adoc:63
#, no-wrap
msgid "The fully qualified name of the generated resource"
msgstr "生成されたリソースの完全修飾名"

#. type: Table
#: upstream/_versions/1.7/guides/maven-tooling.adoc:64
#, no-wrap
msgid "`path`"
msgstr "`path`"

#. type: Table
#: upstream/_versions/1.7/guides/maven-tooling.adoc:65
#, no-wrap
msgid "`/hello`"
msgstr "`/hello`"

#. type: Table
#: upstream/_versions/1.7/guides/maven-tooling.adoc:67
#, no-wrap
msgid "The resource path, only relevant if `className` is set."
msgstr "リソースパス、 `className` が設定されている場合のみ関連します。"

#. type: Table
#: upstream/_versions/1.7/guides/maven-tooling.adoc:68
#, no-wrap
msgid "`extensions`"
msgstr "`extensions`"

#. type: Table
#: upstream/_versions/1.7/guides/maven-tooling.adoc:69
#, no-wrap
msgid "_[]_"
msgstr ""

#. type: Table
#: upstream/_versions/1.7/guides/maven-tooling.adoc:71
#, no-wrap
msgid "The list of extensions to add to the project (comma-separated)"
msgstr "プロジェクトに追加するエクステンションのリスト (カンマ区切り)"

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:74
msgid "By default, the command will target the latest version of `quarkus-universe-bom` (unless specific coordinates have been specified). If you run offline however, it will look for the latest locally available and if `quarkus-universe-bom` (satisfying the default version range which is currently up to 2.0) is not available locally, it will fallback to the bundled platform based on `quarkus-bom` (the version will match the version of the plugin)."
msgstr "デフォルトでは、このコマンドは `quarkus-universe-bom`  の最新バージョンをターゲットにします (特定の coordinates が指定されていない限り)。しかし、オフラインで実行した場合、ローカルで利用可能な最新のものを探し、 `quarkus-universe-bom`  (現在 2.0 までのデフォルトのバージョン範囲を満たしている) がローカルで利用できない場合は、 `quarkus-bom`  をベースにしたバンドルされたプラットフォームにフォールバックします (バージョンはプラグインのバージョンと一致します)。"

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:77
msgid "If you decide to generate a REST resource (using the `className` attribute), the endpoint is exposed at: `http://localhost:8080/$path`.  If you use the default `path`, the URL is: http://localhost:8080/hello."
msgstr "REST リソースを生成することにした場合 ( `className` 属性を使用)、エンドポイントは次の場所で公開されます: `http://localhost:8080/$path` 。デフォルトの `path` を使用する場合、URL は http://localhost:8080/hello です。"

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:80
msgid "The project is generated in a directory named after the passed artifactId.  If the directory already exists, the generation fails."
msgstr "プロジェクトは、渡された artifactId にちなんだ名前のディレクトリーに生成されます。ディレクトリーが既に存在する場合は、生成に失敗します。"

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:83
msgid "A pair of Dockerfiles for native and jvm mode are also generated in `src/main/docker`.  Instructions to build the image and run the container are written in those Dockerfiles."
msgstr "ネイティブモードと jvm モード用の Dockerfile も `src/main/docker`  に生成されています。イメージのビルドとコンテナーの実行の指示は、これらの Dockerfile に書かれています。"

#. type: Title ==
#: upstream/_versions/1.7/guides/maven-tooling.adoc:84
#, no-wrap
msgid "Dealing with extensions"
msgstr "エクステンションへの対応"

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:87
msgid "From inside a Quarkus project, you can obtain a list of the available extensions with:"
msgstr "Quarkusプロジェクトの内部から、利用可能なエクステンションのリストを取得することができます。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/maven-tooling.adoc:91
#, no-wrap
msgid "./mvnw quarkus:list-extensions\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:94
msgid "You can enable an extension using:"
msgstr "以下を使ってエクステンションを有効化できます。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/maven-tooling.adoc:98
#, no-wrap
msgid "./mvnw quarkus:add-extension -Dextensions=\"hibernate-validator\"\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:101
msgid "Extensions are passed using a comma-separated list."
msgstr "エクステンションは、カンマ区切りのリストを使用して渡されます。"

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:106
msgid "The extension name is the GAV name of the extension: e.g. `io.quarkus:quarkus-agroal`.  But you can pass a partial name and Quarkus will do its best to find the right extension.  For example, `agroal`, `Agroal` or `agro` will expand to `io.quarkus:quarkus-agroal`.  If no extension is found or if more than one extensions match, you will see a red check mark ❌ in the command result."
msgstr "`io.quarkus:quarkus-agroal` エクステンション名は、エクステンションのGAV名です。しかし、部分的な名前を渡すことができ、Quarkusは適切なエクステンションを見つけるために最善を尽くします。例えば、 `agroal`  、 `Agroal`  、 `agro`  は `io.quarkus:quarkus-agroal`  に展開されます。エクステンションが見つからなかったり、複数のエクステンションが一致した場合は、コマンドの結果に赤いチェックマーク❌が表示されます。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/maven-tooling.adoc:119
#, no-wrap
msgid ""
"$ ./mvnw quarkus:add-extensions -Dextensions=jdbc,agroal,non-exist-ent\n"
"[...]\n"
"❌ Multiple extensions matching 'jdbc'\n"
"     * io.quarkus:quarkus-jdbc-h2\n"
"     * io.quarkus:quarkus-jdbc-mariadb\n"
"     * io.quarkus:quarkus-jdbc-postgresql\n"
"     Be more specific e.g using the exact name or the full gav.\n"
"✅ Adding extension io.quarkus:quarkus-agroal\n"
"❌ Cannot find a dependency matching 'non-exist-ent', maybe a typo?\n"
"[...]\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:122
msgid "You can install all extensions which match a globbing pattern :"
msgstr "グロブパターンに一致するすべてのエクステンションをインストールすることができます。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/maven-tooling.adoc:126
#, no-wrap
msgid "./mvnw quarkus:add-extension -Dextensions=\"hibernate-*\"\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/maven-tooling.adoc:128
#, no-wrap
msgid "Development mode"
msgstr "開発モード"

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:132
msgid "Quarkus comes with a built-in development mode.  Run your application with:"
msgstr "Quarkusには開発モードが組み込まれています。以下でアプリケーションを実行します。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/maven-tooling.adoc:136
#, no-wrap
msgid "./mvnw compile quarkus:dev\n"
msgstr "./mvnw compile quarkus:dev\n"

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:141
msgid "You can then update the application sources, resources and configurations.  The changes are automatically reflected in your running application.  This is great to do development spanning UI and database as you see changes reflected immediately."
msgstr "その後、アプリケーションのソース、リソース、および設定を更新することができます。変更は実行中のアプリケーションに自動的に反映されます。変更がすぐに反映されるので、UIやデータベースにまたがった開発をするのに最適です。"

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:149
msgid "`quarkus:dev` enables hot deployment with background compilation, which means that when you modify your Java files or your resource files and refresh your browser these changes will automatically take effect.  This works too for resource files like the configuration property file.  The act of refreshing the browser triggers a scan of the workspace, and if any changes are detected the Java files are compiled, and the application is redeployed, then your request is serviced by the redeployed application. If there are any issues with compilation or deployment an error page will let you know."
msgstr "`quarkus:dev`  は、バックグラウンドでのコンパイルによるホットデプロイを可能にします。つまり、Java ファイルやリソースファイルを変更してブラウザを更新すると、これらの変更が自動的に有効になります。これは、設定プロパティーファイルのようなリソースファイルにも適用されます。ブラウザをリフレッシュする行為は、ワークスペースのスキャンをトリガし、変更が検出された場合、Javaファイルがコンパイルされ、アプリケーションが再配置されると、あなたの要求は再配置されたアプリケーションによって処理されます。コンパイルやデプロイに問題がある場合は、エラーページでお知らせします。"

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:151
msgid "Hit `CTRL+C` to stop the application."
msgstr "`CTRL+C`  を叩いてアプリケーションを停止させます。"

#. type: Title ===
#: upstream/_versions/1.7/guides/maven-tooling.adoc:152
#, no-wrap
msgid "Remote Development Mode"
msgstr "リモート開発モード"

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:158
msgid "This allows you to develop in the same environment you will actually run your app in, and with access to the same services."
msgstr "これにより、実際にアプリを実行するのと同じ環境で、同じサービスにアクセスしながら開発することができます。"

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:160
msgid "Do not use this in production. This should only be used in a development environment. You should not run production application in dev mode."
msgstr "本番環境では使用しないでください。開発環境でのみ使用してください。本番環境のアプリケーションを開発モードで実行してはいけません。"

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:162
msgid "To do this you must build a mutable application, using the `mutable-jar` format. Set the following properties in `application.xml`:"
msgstr "これを行うには、 `mutable-jar`  形式を使用して、ミュータブルアプリケーションを構築する必要があります。 `application.xml`  で以下のプロパティーを設定します。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/maven-tooling.adoc:168
#, no-wrap
msgid ""
"quarkus.package.type=mutable-jar <1>\n"
"quarkus.live-reload.password=changeit <2>\n"
"quarkus.live-reload.url=http://my.cluster.host.com:8080 <3>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:172
msgid "This tells Quarkus to use the mutable-jar format. Mutable applications also include the deployment time parts of Quarkus, so they take up a bit more disk space. If run normally they start just as fast and use the same memory as an immutable application, however they can also be started in dev mode."
msgstr "これは、QuarkusにMutable-jar形式を使用するように指示します。ミュータブルアプリケーションには、Quarkusのデプロイメント時間の部分も含まれているため、より多くのディスクスペースを占有します。普通に実行した場合は、イミュータブルアプリケーションと同じ速度で起動し、同じメモリーを使用しますが、devモードで起動することもできます。"

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:173
msgid "The password that is used to secure communication between the remote side and the local side."
msgstr "リモート側とローカル側の通信を安全に保つためのパスワードです。"

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:175
msgid "The URL that your app is going to be running in dev mode at. This is only needed on the local side, so you may want to leave it out of the properties file and specify it as a system property on the command line."
msgstr "アプリがdevモードで実行されるURL。これはローカル側でのみ必要なので、プロパティー ファイルから除外して、コマンド ラインでシステム プロパティーとして指定するとよいでしょう。"

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:180
msgid "Before you start Quarkus on the remote host set the environment variable `QUARKUS_LAUNCH_DEVMODE=true`. If you are on bare metal you can just set this via the `export QUARKUS_LAUNCH_DEVMODE=true` command, if you are running using docker start the image with `-e QUARKUS_LAUNCH_DEVMODE=true`. When the application starts you should now see the following line in the logs: `Profile dev activated. Live Coding activated`."
msgstr "リモートホストでQuarkusを起動する前に、環境変数 `QUARKUS_LAUNCH_DEVMODE=true`  を設定します。ベアメタルを使用している場合は、 `export QUARKUS_LAUNCH_DEVMODE=true`  コマンドで設定します。dockerを使用している場合は、 `-e QUARKUS_LAUNCH_DEVMODE=true`  でイメージを起動します。アプリケーションが起動すると、ログに次のような行が表示されるはずです: `Profile dev activated. Live Coding activated` ."

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:184
msgid "The remote side does not need to include Maven or any other development tools. The normal `fast-jar` Dockerfile that is generated with a new Quarkus application is all you need. If you are using bare metal launch the Quarkus runner jar, do not attempt to run normal devmode."
msgstr "リモート側にはMavenなどの開発ツールを入れる必要はありません。新しいQuarkusアプリケーションで生成される通常の `fast-jar`  Dockerfileがあれば大丈夫です。ベアメタルでQuarkus runner jarを起動している場合は、通常のdevmodeを実行しようとしないでください。"

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:186
msgid "Now you need to connect your local agent to the remote host, using the `remote-dev` command:"
msgstr "ここで、 `remote-dev`  コマンドを使用して、ローカルエージェントをリモートホストに接続する必要があります。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/maven-tooling.adoc:190
#, no-wrap
msgid "./mvnw quarkus:remote-dev -Dquarkus.live-reload.url=http://my-remote-host:8080\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:195
msgid "Now every time you refresh the browser you should see any changes you have made locally immediately visible in the remote app. This is done via a HTTP based long polling transport, that will synchronize your local workspace and the remote application via HTTP calls."
msgstr "これで、ブラウザを更新するたびに、ローカルで行った変更がリモート アプリに即座に表示されるようになりました。これは、HTTPベースのロングポーリングトランスポートを介して行われ、HTTPコールを介してローカルのワークスペースとリモートアプリケーションを同期させます。"

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:199
msgid "If you do not want to use the HTTP feature then you can simply run the `remote-dev` command without specifying the URL.  In this mode the command will continuously rebuild the local application, so you can use an external tool such as odo or rsync to sync to the remote application."
msgstr "HTTP 機能を使用したくない場合は、URL を指定せずに `remote-dev`  コマンドを実行するだけです。このモードでは、コマンドはローカルアプリケーションを継続的に再構築するので、 odo や rsync のような外部ツールを使ってリモートアプリケーションに同期することができます。"

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:204
msgid "It is recommended you use SSL when using remote dev mode, however even if you are using an unencrypted connection your password is never sent directly over the wire. For the initial connection request the password is hashed with the initial state data, and subsequent requests hash it with a random session id generated by the server and any body contents for POST requests, and the path for DELETE requests, as well as an incrementing counter to prevent replay attacks."
msgstr "リモート開発モードを使用する際には SSL を使用することを推奨しますが、たとえ暗号化されていない接続を使用していても、パスワードが直接ネットワーク上で送信されることはありません。最初の接続リクエストでは、パスワードは初期状態のデータでハッシュ化され、それ以降のリクエストでは、サーバーによって生成されたランダムなセッションIDと、POSTリクエストのためのボディコンテンツ、DELETEリクエストのためのパス、そしてリプレイ攻撃を防ぐためのインクリメントカウンタでハッシュ化されます。"

#. type: Title ===
#: upstream/_versions/1.7/guides/maven-tooling.adoc:205
#, no-wrap
msgid "Configuring Development Mode"
msgstr "開発モードの設定"

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:209
msgid "By default, the Maven plugin picks up compiler flags to pass to `javac` from `maven-compiler-plugin`."
msgstr "デフォルトでは、Maven プラグインは `maven-compiler-plugin`  から `javac`  に渡すコンパイラフラグをピックアップします。"

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:216
msgid "If you need to customize the compiler flags used in development mode, add a `configuration` section to the `plugin` block and set the `compilerArgs` property just as you would when configuring `maven-compiler-plugin`.  You can also set `source`, `target`, and `jvmArgs`.  For example, to pass `--enable-preview` to both the JVM and `javac`:"
msgstr "開発モードで使用するコンパイラ・フラグをカスタマイズする必要がある場合は、 `plugin`  ブロックに `configuration`  セクションを追加し、 `maven-compiler-plugin`  を設定するときと同じように `compilerArgs`  プロパティーを設定します。また、 `source`  、 `target`  、および `jvmArgs`  を設定することもできます。例えば、 `--enable-preview`  を JVM と `javac`  の両方に渡すには、 を設定します。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/maven-tooling.adoc:223
#, no-wrap
msgid ""
"<plugin>\n"
"  <groupId>io.quarkus</groupId>\n"
"  <artifactId>quarkus-maven-plugin</artifactId>\n"
"  <version>${quarkus-plugin.version}</version>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/maven-tooling.adoc:232
#, no-wrap
msgid ""
"  <configuration>\n"
"    <source>${maven.compiler.source}</source>\n"
"    <target>${maven.compiler.target}</target>\n"
"    <compilerArgs>\n"
"      <arg>--enable-preview</arg>\n"
"    </compilerArgs>\n"
"    <jvmArgs>--enable-preview</jvmArgs>\n"
"  </configuration>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/maven-tooling.adoc:235
#, no-wrap
msgid ""
"  ...\n"
"</plugin>\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/maven-tooling.adoc:238
#, no-wrap
msgid "Debugging"
msgstr "デバッグ"

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:241
msgid "In development mode, Quarkus starts by default with debug mode enabled, listening to port `5005` without suspending the JVM."
msgstr "開発モードでは、Quarkusはデフォルトでデバッグモードを有効にして起動し、JVMをサスペンドせずにポート `5005`  をリッスンします。"

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:243
msgid "This behavior can be changed by giving the `debug` system property one of the following values:"
msgstr "この動作は、 `debug` システム・プロパティーに以下の値のいずれかを与えることで変更できます。"

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:245
msgid "`false` - the JVM will start with debug mode disabled"
msgstr "`false`  - JVMはデバッグモードを無効にして起動します。"

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:246
msgid "`true` - The JVM is started in debug mode and will be listening on port `5005`"
msgstr "`true`  - JVM はデバッグモードで起動され、 `5005`ポートをリッスンします。"

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:247
msgid "`client` - the JVM will start in client mode and attempt to connect to `localhost:5005`"
msgstr "`client`  - JVM はクライアントモードで起動し、 `localhost:5005`に接続を試みます。"

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:248
msgid "`{port}` - The JVM is started in debug mode and will be listening on `{port}`"
msgstr "`{port}` - JVM はデバッグモードで起動されています。 `{port}`"

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:250
msgid "An additional system property `suspend` can be used to suspend the JVM, when launched in debug mode. `suspend` supports the following values:"
msgstr "追加のシステム・プロパティー `suspend` は、デバッグ・モードで起動されたときに JVM をサスペンドするために使用できます。 `suspend` は以下の値をサポートしています。"

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:252
msgid "`y` or `true` - The debug mode JVM launch is suspended"
msgstr "`y` または `true` - デバッグモードの JVM 起動が中断されます。"

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:253
msgid "`n` or `false` - The debug mode JVM is started without suspending"
msgstr "`n` または `false` - デバッグモードの JVM をサスペンドせずに起動します。"

#. type: delimited block =
#: upstream/_versions/1.7/guides/maven-tooling.adoc:258
msgid "You can also run a Quarkus application in debug mode with a suspended JVM using `./mvnw compile quarkus:dev -Ddebug` which is a shorthand for `./mvnw compile quarkus:dev -Ddebug=true`."
msgstr ""

#. type: delimited block =
#: upstream/_versions/1.7/guides/maven-tooling.adoc:260
msgid "Then, attach your debugger to `localhost:5005`."
msgstr "次に、デバッガーを `localhost:5005`  にアタッチします。"

#. type: Title ==
#: upstream/_versions/1.7/guides/maven-tooling.adoc:262
#, no-wrap
msgid "Import in your IDE"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:266
msgid "Once you have a <<project-creation, project generated>>, you can import it in your favorite IDE.  The only requirement is the ability to import a Maven project."
msgstr "<<project-creation, プロジェクトを生成したら>>、お気に入りのIDEでインポートすることができます。唯一の要件は、Mavenプロジェクトをインポートできることです。"

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:268
#, no-wrap
msgid "**Eclipse**\n"
msgstr "**Eclipse**\n"

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:273
msgid "In Eclipse, click on: `File -> Import`.  In the wizard, select: `Maven -> Existing Maven Project`.  On the next screen, select the root location of the project.  The next screen list the found modules; select the generated project and click on `Finish`. Done!"
msgstr "Eclipse で、 `File → Import`  をクリックします。ウィザードで、 `Maven → Existing Maven Project`  を選択します。次の画面で、プロジェクトのルートの場所を選択します。次の画面では、見つかったモジュールのリストが表示されるので、生成されたプロジェクトを選択して `Finish` をクリックします。"

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:275
msgid "In a separated terminal, run `./mvnw compile quarkus:dev`, and enjoy a highly productive environment."
msgstr "分離された端末で `./mvnw compile quarkus:dev`  を実行し、生産性の高い環境を楽しむことができます。"

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:277
#, no-wrap
msgid "**IntelliJ**\n"
msgstr "**IntelliJ**\n"

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:279
msgid "In IntelliJ:"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:281
msgid "From inside IntelliJ select `File -> New -> Project From Existing Sources...` or, if you are on the welcome dialog, select `Import project`."
msgstr "IntelliJの内部から `File → New → Project From Existing Sources…​`  を選択するか、ウェルカム・ダイアログであれば `Import project`  を選択してください。"

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:282
#: upstream/_versions/1.7/guides/maven-tooling.adoc:294
msgid "Select the project root"
msgstr "プロジェクトのルートを選択します。"

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:283
msgid "Select `Import project from external model` and `Maven`"
msgstr "`Import project from external model`  を選択して `Maven`を選択"

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:284
msgid "Next a few times (review the different options if needed)"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:285
msgid "On the last screen click on Finish"
msgstr "最後の画面でFinishをクリックします。"

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:287
msgid "In a separated terminal or in the embedded terminal, run `./mvnw compile quarkus:dev`. Enjoy!"
msgstr "別のターミナルまたは組み込みのターミナルで、 `./mvnw compile quarkus:dev`  を実行してください。お楽しみください!"

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:289
#, no-wrap
msgid "**Apache NetBeans**\n"
msgstr "**Apache NetBeans**\n"

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:291
msgid "In NetBeans:"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:293
msgid "Select `File -> Open Project`"
msgstr "`File → Open Project` を選択"

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:295
msgid "Click on `Open Project`"
msgstr "`Open Project` をクリックしてください。"

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:297
msgid "In a separated terminal or the embedded terminal, go to the project root and run `./mvnw compile quarkus:dev`. Enjoy!"
msgstr "分離されたターミナルまたは埋め込みターミナルで、プロジェクトのルートに移動し、 `./mvnw compile quarkus:dev`  を実行します。お楽しみください!"

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:299
#, no-wrap
msgid "**Visual Studio Code**\n"
msgstr "**Visual Studio Code**\n"

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:301
msgid "Open the project directory in VS Code. If you have installed the Java Extension Pack (grouping a set of Java extensions), the project is loaded as a Maven project."
msgstr "VS Codeでプロジェクトディレクトリーを開きます。Java Extension Pack(Java拡張のセットをグループ化したもの)をインストールしている場合、プロジェクトはMavenプロジェクトとしてロードされます。"

#. type: Title ==
#: upstream/_versions/1.7/guides/maven-tooling.adoc:302
#, no-wrap
msgid "Logging Quarkus application build classpath tree"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:307
msgid "Usually, dependencies of an application (which is a Maven project) could be displayed using `mvn dependency:tree` command. In case of a Quarkus application, however, this command will list only the runtime dependencies of the application.  Given that the Quarkus build process adds deployment dependencies of the extensions used in the application to the original application classpath, it could be useful to know which dependencies and which versions end up on the build classpath.  Luckily, the `quarkus-bootstrap` Maven plugin includes the `build-tree` goal which displays the build dependency tree for the application."
msgstr "通常、アプリケーション(Mavenプロジェクト)の依存関係は、 `mvn dependency:tree`  コマンドを使用して表示することができます。しかし、Quarkusアプリケーションの場合、このコマンドはアプリケーションの実行時の依存関係のみを表示します。Quarkusのビルドプロセスは、アプリケーションで使用されているエクステンションのデプロイメント依存関係を元のアプリケーションのクラスパスに追加するので、どの依存関係とどのバージョンがビルドクラスパスで終わるかを知ることは便利です。幸いにも、 `quarkus-bootstrap`  Mavenプラグインには、アプリケーションのビルド依存関係ツリーを表示する `build-tree`  ゴールが含まれています。"

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:309
msgid "To be able to use it, the following plugin configuration has to be added to the `pom.xml`:"
msgstr "これを使えるようにするためには、以下のプラグイン設定を `pom.xml` に追加する必要があります:"

#. type: delimited block -
#: upstream/_versions/1.7/guides/maven-tooling.adoc:317
#, no-wrap
msgid ""
"            <plugin>\n"
"                <groupId>io.quarkus</groupId>\n"
"                <artifactId>quarkus-bootstrap-maven-plugin</artifactId>\n"
"                <version>${quarkus-plugin.version}</version>\n"
"            </plugin>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:320
msgid "Now you should be able to execute `./mvnw quarkus-bootstrap:build-tree` on your project and see something like:"
msgstr "これで、プロジェクト上で `./mvnw quarkus-bootstrap:build-tree`  を実行して、以下のようなものが表示されるようになるはずです:"

#. type: delimited block -
#: upstream/_versions/1.7/guides/maven-tooling.adoc:332
#, no-wrap
msgid ""
"[INFO] --- quarkus-bootstrap-maven-plugin:{quarkus-version}:build-tree (default-cli) @ getting-started ---\n"
"[INFO] org.acme:getting-started:jar:1.0-SNAPSHOT\n"
"[INFO] └─ io.quarkus:quarkus-resteasy-deployment:jar:{quarkus-version} (compile)\n"
"[INFO]    ├─ io.quarkus:quarkus-resteasy-server-common-deployment:jar:{quarkus-version} (compile)\n"
"[INFO]    │  ├─ io.quarkus:quarkus-core-deployment:jar:{quarkus-version} (compile)\n"
"[INFO]    │  │  ├─ commons-beanutils:commons-beanutils:jar:1.9.3 (compile)\n"
"[INFO]    │  │  │  ├─ commons-logging:commons-logging:jar:1.2 (compile)\n"
"[INFO]    │  │  │  └─ commons-collections:commons-collections:jar:3.2.2 (compile)\n"
"...\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/maven-tooling.adoc:334
#, no-wrap
msgid "Building a native executable"
msgstr "ネイティブ実行可能ファイルの構築"

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:337
msgid "Native executables make Quarkus applications ideal for containers and serverless workloads."
msgstr "ネイティブ実行可能ファイルにより、Quarkusアプリケーションはコンテナーやサーバーレスのワークロードに最適です。"

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:340
msgid "Make sure to have `GRAALVM_HOME` configured and pointing to GraalVM version {graalvm-version}.  Verify that your `pom.xml` has the proper `native` profile (see <<build-tool-maven>>)."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:343
msgid "Create a native executable using: `./mvnw package -Pnative`.  A native executable will be present in `target/`."
msgstr "`./mvnw package -Pnative` を使用してネイティブ実行可能ファイルを作成します。ネイティブ実行可能ファイルは `target/` に出来ます。"

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:345
msgid "To run Integration Tests on the native executable, make sure to have the proper Maven plugin configured (see <<build-tool-maven>>) and launch the `verify` goal."
msgstr "ネイティブ実行可能ファイルで統合テストを実行するには、適切なMavenプラグインが設定されていることを確認し( link:#build-tool-maven[[build-tools-maven]を]参照)、 `verify`  ゴールを起動します。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/maven-tooling.adoc:373
#, no-wrap
msgid ""
"./mvnw verify -Pnative\n"
"...\n"
"[quarkus-quickstart-runner:50955]     universe:     391.96 ms\n"
"[quarkus-quickstart-runner:50955]      (parse):     904.37 ms\n"
"[quarkus-quickstart-runner:50955]     (inline):   1,143.32 ms\n"
"[quarkus-quickstart-runner:50955]    (compile):   6,228.44 ms\n"
"[quarkus-quickstart-runner:50955]      compile:   9,130.58 ms\n"
"[quarkus-quickstart-runner:50955]        image:   2,101.42 ms\n"
"[quarkus-quickstart-runner:50955]        write:     803.18 ms\n"
"[quarkus-quickstart-runner:50955]      [total]:  33,520.15 ms\n"
"[INFO]\n"
"[INFO] --- maven-failsafe-plugin:2.22.0:integration-test (default) @ quarkus-quickstart-native ---\n"
"[INFO]\n"
"[INFO] -------------------------------------------------------\n"
"[INFO]  T E S T S\n"
"[INFO] -------------------------------------------------------\n"
"[INFO] Running org.acme.quickstart.GreetingResourceIT\n"
"Executing [/Users/starksm/Dev/JBoss/Quarkus/starksm64-quarkus-quickstarts/getting-started-native/target/quarkus-quickstart-runner, -Dquarkus.http.port=8081, -Dtest.url=http://localhost:8081, -Dquarkus.log.file.path=target/quarkus.log]\n"
"2019-02-28 16:52:42,020 INFO  [io.quarkus] (main) Quarkus started in 0.007s. Listening on: http://localhost:8080\n"
"2019-02-28 16:52:42,021 INFO  [io.quarkus] (main) Installed features: [cdi, resteasy]\n"
"[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.081 s - in org.acme.quickstart.GreetingResourceIT\n"
"[INFO]\n"
"[INFO] Results:\n"
"[INFO]\n"
"[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/maven-tooling.adoc:375
#, no-wrap
msgid "...\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/1.7/guides/maven-tooling.adoc:377
#, no-wrap
msgid "Build a container friendly executable"
msgstr "コンテナーフレンドリーな実行ファイルをビルドする"

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:381
msgid "The native executable will be specific to your operating system.  To create an executable that will run in a container, use the following:"
msgstr "ネイティブ実行可能ファイルは、お使いのオペレーティングシステムに固有のものになります。コンテナー内で実行される実行ファイルを作成するには、次のようにします。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/maven-tooling.adoc:385
#, no-wrap
msgid "./mvnw package -Dnative -Dquarkus.native.container-build=true\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:390
msgid "The produced executable will be a 64 bit Linux executable, so depending on your operating system it may no longer be runnable.  However, it's not an issue as we are going to copy it to a Docker container.  Note that in this case the build itself runs in a Docker container too, so you don't need to have GraalVM installed locally."
msgstr "生成される実行ファイルは64bitのLinux実行ファイルになるので、OSによっては実行できなくなる可能性があります。しかし、Dockerコンテナーにコピーするので問題ありません。この場合、ビルド自体もDockerコンテナー内で動作するので、ローカルにGraalVMをインストールする必要はないことに注意してください。"

#. type: delimited block =
#: upstream/_versions/1.7/guides/maven-tooling.adoc:394
msgid "By default, the native executable will be generated using the `quay.io/quarkus/ubi-quarkus-native-image:{graalvm-flavor}` Docker image."
msgstr "デフォルトでは、 `quay.io/quarkus/ubi-quarkus-native-image:{graalvm-flavor}`  Dockerイメージを使用してネイティブ実行可能ファイルが生成されます。"

#. type: delimited block =
#: upstream/_versions/1.7/guides/maven-tooling.adoc:397
msgid "If you want to build a native executable with a different Docker image (for instance to use a different GraalVM version), use the `-Dquarkus.native.builder-image=<image name>` build argument."
msgstr "異なるDockerイメージでネイティブ実行可能ファイルをビルドしたい場合(例えば、異なるGraalVMのバージョンを使用するなど)、 `-Dquarkus.native.builder-image=<image name>` のbuild引数を使用してください。"

#. type: delimited block =
#: upstream/_versions/1.7/guides/maven-tooling.adoc:400
msgid "The list of the available Docker images can be found on https://quay.io/repository/quarkus/ubi-quarkus-native-image?tab=tags[quay.io].  Be aware that a given Quarkus version might not be compatible with all the images available."
msgstr "利用可能なDockerイメージのリストは、 link:https://quay.io/repository/quarkus/ubi-quarkus-native-image?tab=tags[quay.io]にあります。特定のQuarkusのバージョンは、利用可能なすべてのイメージと互換性がない場合があることに注意してください。"

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:403
msgid "You can follow the link:building-native-image[Build a native executable guide] as well as link:deploying-to-kubernetes[Deploying Application to Kubernetes and OpenShift] for more information."
msgstr "詳細については、 link:building-native-image[ネイティブ実行可能ファイルのビルドガイド]と同様に、 link:deploying-to-kubernetes[アプリケーションをKubernetesとOpenShiftにデプロイ]を参照してください。"

#. type: Title ==
#: upstream/_versions/1.7/guides/maven-tooling.adoc:405
#, no-wrap
msgid "Maven configuration"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:408
msgid "If you have not used <<project-creation,project scaffolding>>, add the following elements in your `pom.xml`"
msgstr "<<project-creation,プロジェクトのスキャフォールド>>を使用していない場合は、以下の要素を `pom.xml` に追加してください"

#. type: delimited block -
#: upstream/_versions/1.7/guides/maven-tooling.adoc:422
#, no-wrap
msgid ""
"<dependencyManagement>\n"
"    <dependencies>\n"
"        <dependency> <1>\n"
"            <groupId>io.quarkus</groupId>\n"
"            <artifactId>quarkus-bom</artifactId>\n"
"            <version>${quarkus.platform.version}</version>\n"
"            <type>pom</type>\n"
"            <scope>import</scope>\n"
"        </dependency>\n"
"    </dependencies>\n"
"</dependencyManagement>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/maven-tooling.adoc:450
#, no-wrap
msgid ""
"<build>\n"
"    <plugins>\n"
"        <plugin> <2>\n"
"            <groupId>io.quarkus</groupId>\n"
"            <artifactId>quarkus-maven-plugin</artifactId>\n"
"            <version>${quarkus-plugin.version}</version>\n"
"            <executions>\n"
"                <execution>\n"
"                    <goals>\n"
"                        <goal>build</goal>\n"
"                    </goals>\n"
"                </execution>\n"
"            </executions>\n"
"        </plugin>\n"
"        <plugin> <3>\n"
"            <groupId>org.apache.maven.plugins</groupId>\n"
"            <artifactId>maven-surefire-plugin</artifactId>\n"
"            <version>${surefire-plugin.version}</version>\n"
"            <configuration>\n"
"                <systemPropertyVariables>\n"
"                    <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n"
"                    <maven.home>${maven.home}</maven.home>\n"
"                </systemPropertyVariables>\n"
"            </configuration>\n"
"        </plugin>\n"
"    </plugins>\n"
"</build>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/maven-tooling.adoc:483
#, no-wrap
msgid ""
"<profiles>\n"
"    <profile> <4>\n"
"        <id>native</id>\n"
"        <properties> <5>\n"
"            <quarkus.package.type>native</quarkus.package.type>\n"
"        </properties>\n"
"        <build>\n"
"            <plugins>\n"
"                <plugin> <6>\n"
"                    <groupId>org.apache.maven.plugins</groupId>\n"
"                    <artifactId>maven-failsafe-plugin</artifactId>\n"
"                    <version>${surefire-plugin.version}</version>\n"
"                    <executions>\n"
"                        <execution>\n"
"                            <goals>\n"
"                                <goal>integration-test</goal>\n"
"                                <goal>verify</goal>\n"
"                            </goals>\n"
"                            <configuration>\n"
"                                <systemPropertyVariables>\n"
"                                    <native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path>\n"
"                                    <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n"
"                                    <maven.home>${maven.home}</maven.home>\n"
"                                </systemPropertyVariables>\n"
"                            </configuration>\n"
"                        </execution>\n"
"                    </executions>\n"
"                </plugin>\n"
"            </plugins>\n"
"        </build>\n"
"    </profile>\n"
"</profiles>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:486
msgid "Optionally use a BOM file to omit the version of the different Quarkus dependencies."
msgstr "オプションで、BOMファイルを使用して、異なるQuarkus依存関係のバージョンを省略することができます。"

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:487
msgid "Use the Quarkus Maven plugin that will hook into the build process."
msgstr "ビルドプロセスにフックするQuarkus Mavenプラグインを使用します。"

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:489
msgid "Add system properties to `maven-surefire-plugin`. + `maven.home` is only required if you have custom configuration in `${maven.home}/conf/settings.xml`."
msgstr "システムのプロパティーを `maven-surefire-plugin`  に追加します。+ `maven.home`  は、 `${maven.home}/conf/settings.xml`  にカスタム設定がある場合にのみ必要です。"

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:490
msgid "Use a specific `native` profile for native executable building."
msgstr "ネイティブ実行可能ファイルのビルドには、特定の `native`  プロファイルを使用します。"

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:491
msgid "Enable the `native` package type. The build will therefore produce a native executable."
msgstr "`native`  パッケージタイプを有効にします。そのため、ビルドはネイティブ実行可能ファイルを生成します。"

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:492
msgid "If you want to test your native executable with Integration Tests, add the following plugin configuration. Test names `*IT` and annotated `@NativeImageTest` will be run against the native executable. See the link:building-native-image[Native executable guide] for more info."
msgstr "Integration Testsでネイティブ実行可能ファイルをテストしたい場合は、以下のプラグイン設定を追加してください。テスト名 `*IT`  とアノテーション付き `@NativeImageTest`  は、ネイティブ実行可能ファイルに対して実行されます。詳細は link:building-native-image[ネイティブ実行可能ファイルガイド]を参照してください。"

#. type: Title ===
#: upstream/_versions/1.7/guides/maven-tooling.adoc:494
#, no-wrap
msgid "Uber-Jar Creation"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:497
msgid "Quarkus Maven plugin supports the generation of Uber-Jars by specifying a `quarkus.package.type=uber-jar` configuration option in your `application.properties`."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:499
msgid "The original jar will still be present in the `target` directory but it will be renamed to contain the `.original` suffix."
msgstr "元の jar は `target`  ディレクトリーに残っていますが、 `.original`  の接尾辞を含むように名前が変更されます。"

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:502
msgid "When building an Uber-Jar you can specify entries that you want to exclude from the generated jar by using the `quarkus.package.ignored-entries` configuration option, this takes a comma separated list of entries to ignore."
msgstr "Uber-jar をビルドする際に、 `quarkus.package.ignored-entries`  設定オプションを使用して生成された jar から除外したいエントリーを指定することができます。"

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:504
msgid "Uber-Jar creation by default excludes link:https://docs.oracle.com/javase/tutorial/deployment/jar/intro.html[signature files] that might be present in the dependencies of the application."
msgstr "デフォルトでは、Uber-Jar の作成は、アプリケーションの依存関係に存在する可能性のある link:https://docs.oracle.com/javase/tutorial/deployment/jar/intro.html[署名ファイル]を除外します。"

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:506
msgid "Uber-Jar's final name is configurable via a Maven's build settings `finalName` option."
msgstr "Uber-Jarの最終的な名前は、Mavenのビルド設定 `finalName`  オプションで設定できます。"

#. type: Title ===
#: upstream/_versions/1.7/guides/maven-tooling.adoc:508
#, no-wrap
msgid "Working with multi-module projects"
msgstr "マルチモジュールプロジェクトでの作業"

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:511
msgid "By default, Quarkus will not discover CDI beans inside another module."
msgstr "デフォルトでは、Quarkusは別のモジュール内のCDI Bean を検出しません。"

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:514
msgid "The best way to enable CDI bean discovery for a module in a multi-module project would be to include the `jandex-maven-plugin`, unless it is the main application module already configured with the quarkus-maven-plugin, in which case it will indexed automatically."
msgstr "マルチモジュールプロジェクト内のモジュールでCDI Bean検出を有効にするベストの方法は、 モジュールがメインアプリケーションモジュールでquarkus-maven-pluginが既に構成されていない限り、`jandex-maven-plugin`  をインクルードすることです。モジュールがメインアプリケーションモジュールでquarkus-maven-pluginが既に構成されている場合は自動的にインデックスが作成されます。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/maven-tooling.adoc:534
#, no-wrap
msgid ""
"<build>\n"
"  <plugins>\n"
"    <plugin>\n"
"      <groupId>org.jboss.jandex</groupId>\n"
"      <artifactId>jandex-maven-plugin</artifactId>\n"
"      <version>1.0.7</version>\n"
"      <executions>\n"
"        <execution>\n"
"          <id>make-index</id>\n"
"          <goals>\n"
"            <goal>jandex</goal>\n"
"          </goals>\n"
"        </execution>\n"
"      </executions>\n"
"    </plugin>\n"
"  </plugins>\n"
"</build>\n"
msgstr ""
"<build>\n"
"  <plugins>\n"
"    <plugin>\n"
"      <groupId>org.jboss.jandex</groupId>\n"
"      <artifactId>jandex-maven-plugin</artifactId>\n"
"      <version>1.0.7</version>\n"
"      <executions>\n"
"        <execution>\n"
"          <id>make-index</id>\n"
"          <goals>\n"
"            <goal>jandex</goal>\n"
"          </goals>\n"
"        </execution>\n"
"      </executions>\n"
"    </plugin>\n"
"  </plugins>\n"
"</build>\n"

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:537
msgid "More information on this topic can be found on the link:cdi-reference#bean_discovery[Bean Discovery] section of the CDI guide."
msgstr "このトピックの詳細については、CDIガイドの link:cdi-reference#bean_discovery[Bean Discovery]セクションを参照してください。"

#. type: Title ==
#: upstream/_versions/1.7/guides/maven-tooling.adoc:539
#, no-wrap
msgid "Configuring the Project Output"
msgstr "プロジェクト出力の設定"

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:543
msgid "There are a several configuration options that will define what the output of your project build will be.  These are provided in `application.properties` the same as any other config property."
msgstr "プロジェクトのビルドの出力を定義するための設定オプションがいくつかあります。これらは他の設定プロパティーと同じように `application.properties`  で提供されています。"

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:545
msgid "The properties are shown below:"
msgstr "プロパティーは以下の通りです:"

#. type: Title ===
#: upstream/_versions/1.7/guides/maven-tooling.adoc:549
#, no-wrap
msgid "Custom test configuration profile in JVM mode"
msgstr "JVMモードでのカスタムテスト構成プロファイル"

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:554
msgid "By default, Quarkus tests in JVM mode are run using the `test` configuration profile. If you are not familiar with Quarkus configuration profiles, everything you need to know is explained in the link:config#configuration-profiles[Configuration Profiles Documentation]."
msgstr "デフォルトでは、JVMモードでのQuarkusテストは、 `test`  設定プロファイルを使用して実行されます。Quarkusの設定プロファイルについてよく知らない場合は、必要な情報はすべて link:config#configuration-profiles[設定プロファイルのドキュメント]で説明されています。"

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:558
msgid "It is however possible to use a custom configuration profile for your tests with the Maven Surefire and Maven Failsafe configurations shown below. This can be useful if you need for example to run some tests using a specific database which is not your default testing database."
msgstr "ただし、以下に示すMaven SurefireおよびMaven Failsafe構成で、テストにカスタム構成プロファイルを使用することは可能です。これは、例えば、デフォルトのテストデータベースではない特定のデータベースを使用してテストを実行する必要がある場合に便利です。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/maven-tooling.adoc:593
#, no-wrap
msgid ""
"<project>\n"
"  [...]\n"
"  <build>\n"
"    <plugins>\n"
"      <plugin>\n"
"        <groupId>org.apache.maven.plugins</groupId>\n"
"        <artifactId>maven-surefire-plugin</artifactId>\n"
"        <version>${surefire-plugin.version}</version>\n"
"        <configuration>\n"
"          <systemPropertyVariables>\n"
"            <quarkus.test.profile>foo</quarkus.test.profile> <1>\n"
"            <buildDirectory>${project.build.directory}</buildDirectory>\n"
"            [...]\n"
"          </systemPropertyVariables>\n"
"        </configuration>\n"
"      </plugin>\n"
"      <plugin>\n"
"        <groupId>org.apache.maven.plugins</groupId>\n"
"        <artifactId>maven-failsafe-plugin</artifactId>\n"
"        <version>${failsafe-plugin.version}</version>\n"
"        <configuration>\n"
"          <systemPropertyVariables>\n"
"            <quarkus.test.profile>foo</quarkus.test.profile> <1>\n"
"            <buildDirectory>${project.build.directory}</buildDirectory>\n"
"            [...]\n"
"          </systemPropertyVariables>\n"
"        </configuration>\n"
"      </plugin>\n"
"    </plugins>\n"
"  </build>\n"
"  [...]\n"
"</project>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/maven-tooling.adoc:596
msgid "The `foo` configuration profile will be used to run the tests."
msgstr "`foo`  設定プロファイルがテストの実行に使用されます。"

#. type: delimited block =
#: upstream/_versions/1.7/guides/maven-tooling.adoc:601
msgid "It is not possible to use a custom test configuration profile in native mode for now. Native tests are always run using the `prod` profile."
msgstr "今のところ、ネイティブモードでカスタムテスト設定プロファイルを使用することはできません。ネイティブテストは常に `prod`  プロファイルを使用して実行されます。"

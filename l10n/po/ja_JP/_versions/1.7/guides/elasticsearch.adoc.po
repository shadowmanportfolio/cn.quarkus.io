# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-08-31 10:08+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/1.7/guides/elasticsearch.adoc:6
#, no-wrap
msgid "Quarkus - Connecting to an Elasticsearch cluster"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/elasticsearch.adoc:11
msgid "Elasticsearch is a well known full text search engine and NoSQL datastore."
msgstr "Elasticsearchはよく知られた全文検索エンジンであり、NoSQLデータストアです。"

#. type: Plain text
#: upstream/_versions/1.7/guides/elasticsearch.adoc:13
msgid "In this guide, we will see how you can get your REST services to use an Elasticsearch cluster."
msgstr "このガイドでは、RESTサービスでElasticsearchクラスターを使用する方法を見ていきます。"

#. type: Plain text
#: upstream/_versions/1.7/guides/elasticsearch.adoc:16
msgid "Quarkus provides two ways of accessing Elasticsearch: via the lower level `RestClient` or via the `RestHighLevelClient` we will call them the low level and the high level clients."
msgstr "QuarkusはElasticsearchにアクセスするための2つの方法を提供しています:低レベルの `RestClient` 経由、または `RestHighLevelClient` 経由であり、低レベルと高レベルのクライアントと呼びます。"

#. type: Title ==
#: upstream/_versions/1.7/guides/elasticsearch.adoc:19
#, no-wrap
msgid "Prerequisites"
msgstr "前提条件"

#. type: Plain text
#: upstream/_versions/1.7/guides/elasticsearch.adoc:22
msgid "To complete this guide, you need:"
msgstr "このガイドを完成させるには、以下が必要です:"

#. type: Plain text
#: upstream/_versions/1.7/guides/elasticsearch.adoc:24
msgid "less than 15 minutes"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/elasticsearch.adoc:25
msgid "an IDE"
msgstr "IDE"

#. type: Plain text
#: upstream/_versions/1.7/guides/elasticsearch.adoc:26
msgid "JDK 1.8+ installed with `JAVA_HOME` configured appropriately"
msgstr "JDK 1.8+ がインストールされ、 `JAVA_HOME`  が適切に設定されていること"

#. type: Plain text
#: upstream/_versions/1.7/guides/elasticsearch.adoc:27
msgid "Apache Maven {maven-version}"
msgstr "Apache Maven {maven-version}"

#. type: Plain text
#: upstream/_versions/1.7/guides/elasticsearch.adoc:28
msgid "Elasticsearch installed or Docker installed"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/elasticsearch.adoc:29
#, no-wrap
msgid "Architecture"
msgstr "アーキテクチャ"

#. type: Plain text
#: upstream/_versions/1.7/guides/elasticsearch.adoc:32
msgid "The application built in this guide is quite simple: the user can add elements in a list using a form and the list is updated."
msgstr "このガイドで開発するアプリケーションは非常にシンプルです: ユーザーはフォームを使用してリストに要素を追加することができ、リストが更新されます。"

#. type: Plain text
#: upstream/_versions/1.7/guides/elasticsearch.adoc:34
msgid "All the information between the browser and the server is formatted as JSON."
msgstr "ブラウザとサーバー間の情報はすべてJSON形式になっています。"

#. type: Plain text
#: upstream/_versions/1.7/guides/elasticsearch.adoc:36
msgid "The elements are stored in Elasticsearch."
msgstr "要素はElasticsearchに格納されます。"

#. type: Title ==
#: upstream/_versions/1.7/guides/elasticsearch.adoc:37
#, no-wrap
msgid "Solution"
msgstr "ソリューション"

#. type: Plain text
#: upstream/_versions/1.7/guides/elasticsearch.adoc:41
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the completed example."
msgstr "次のセクションで紹介する手順に沿って、ステップを踏んでアプリを作成することをお勧めします。ただし、完成した例にそのまま進んでも構いません。"

#. type: Plain text
#: upstream/_versions/1.7/guides/elasticsearch.adoc:43
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Gitレポジトリをクローンするか `git clone {quickstarts-clone-url}` 、 {quickstarts-archive-url}[アーカイブ] をダウンロードします。"

#. type: Plain text
#: upstream/_versions/1.7/guides/elasticsearch.adoc:45
msgid "The solution for the low level client is located in the `elasticsearch-rest-client-quickstart` {quickstarts-tree-url}/elasticsearch-rest-client-quickstart[directory]."
msgstr "低レベルクライアントのソリューションは `elasticsearch-rest-client-quickstart` {quickstarts-tree-url}/elasticsearch-rest-client-quickstart[directory] にあります。"

#. type: Plain text
#: upstream/_versions/1.7/guides/elasticsearch.adoc:47
msgid "The solution for the high level client is located in the `elasticsearch-rest-high-level-client-quickstart` {quickstarts-tree-url}/elasticsearch-rest-high-level-client-quickstart[directory]."
msgstr "高レベルクライアントのソリューションは `elasticsearch-rest-high-level-client-quickstart` {quickstarts-tree-url}/elasticsearch-rest-high-level-client-quickstart[directory] にあります。"

#. type: Title ==
#: upstream/_versions/1.7/guides/elasticsearch.adoc:48
#, no-wrap
msgid "Creating the Maven project"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/elasticsearch.adoc:51
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "まず、新しいプロジェクトが必要です。以下のコマンドで新規プロジェクトを作成します。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/elasticsearch.adoc:61
#, no-wrap
msgid ""
"mvn io.quarkus:quarkus-maven-plugin:{quarkus-version}:create \\\n"
"    -DprojectGroupId=org.acme \\\n"
"    -DprojectArtifactId=elasticsearch-quickstart \\\n"
"    -DclassName=\"org.acme.elasticsearch.FruitResource\" \\\n"
"    -Dpath=\"/fruits\" \\\n"
"    -Dextensions=\"resteasy-jackson,elasticsearch-rest-client\"\n"
"cd elasticsearch-quickstart\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/elasticsearch.adoc:65
msgid "This command generates a Maven structure importing the RESTEasy/JAX-RS, Jackson, and the Elasticsearch low level client extensions.  After this, the `quarkus-elasticsearch-rest-client` extension has been added to your `pom.xml`."
msgstr "このコマンドは、RESTEasy/JAX-RS、Jackson、Elasticsearch低レベルクライアントエクステンションをインポートするMaven構造体を生成します。この後、 `quarkus-elasticsearch-rest-client` エクステンションが `pom.xml` に追加されます。"

#. type: Plain text
#: upstream/_versions/1.7/guides/elasticsearch.adoc:67
msgid "If you want to use the high level client instead, replace the `elasticsearch-rest-client` extension by the `elasticsearch-rest-high-level-client` extension."
msgstr "代わりに高レベルクライアントを使いたい場合は、 `elasticsearch-rest-client` のエクステンションを `elasticsearch-rest-high-level-client` のエクステンションで置き換えてください。"

#. type: delimited block =
#: upstream/_versions/1.7/guides/elasticsearch.adoc:72
msgid "We use the `resteasy-jackson` extension here and not the JSON-B variant because we will use the Vert.x `JsonObject` helper to serialize/deserialize our objects to/from Elasticsearch and it uses Jackson under the hood."
msgstr "ここでは JSON-B などではなく `resteasy-jackson` エクステンションを使用しています。これは Vert.x `JsonObject` ヘルパーを使用して Elasticsearch との間でオブジェクトをシリアライズ/デシリアライズし、Jackson を使用するからです。"

#. type: Plain text
#: upstream/_versions/1.7/guides/elasticsearch.adoc:75
msgid "If you don’t want to generate a new project, add the following dependencies to your pom.xml."
msgstr "新しいプロジェクトを生成したくない場合は、以下の依存関係を pom.xml に追加してください。"

#. type: Plain text
#: upstream/_versions/1.7/guides/elasticsearch.adoc:77
msgid "For the Elasticsearch low level client, add:"
msgstr "Elasticsearchの低レベルクライアントの場合は、以下を追加します。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/elasticsearch.adoc:84
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-elasticsearch-rest-client</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/elasticsearch.adoc:87
msgid "For the Elasticsearch high level client, add:"
msgstr "Elasticsearchの高レベルクライアントの場合は、以下を追加します。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/elasticsearch.adoc:94
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-elasticsearch-rest-high-level-client</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/elasticsearch.adoc:96
#, no-wrap
msgid "Creating your first JSON REST service"
msgstr "初めてのJSON RESTサービスの作成"

#. type: Plain text
#: upstream/_versions/1.7/guides/elasticsearch.adoc:99
msgid "In this example, we will create an application to manage a list of fruits."
msgstr "この例では、果物のリストを管理するアプリケーションを作成します。"

#. type: Plain text
#: upstream/_versions/1.7/guides/elasticsearch.adoc:101
msgid "First, let's create the `Fruit` bean as follows:"
msgstr "まず、以下のように `Fruit` Bean を作成してみましょう。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/elasticsearch.adoc:105
#: upstream/_versions/1.7/guides/elasticsearch.adoc:121
#, no-wrap
msgid "package org.acme.elasticsearch;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/elasticsearch.adoc:111
#, no-wrap
msgid ""
"public class Fruit {\n"
"    public String id;\n"
"    public String name;\n"
"    public String color;\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/elasticsearch.adoc:114
msgid "Nothing fancy. One important thing to note is that having a default constructor is required by the JSON serialization layer."
msgstr "派手なことは何もありません。注意すべき重要なことは、デフォルトのコンストラクタを持つことはJSONシリアライズレイヤーで必須であるということです。"

#. type: Plain text
#: upstream/_versions/1.7/guides/elasticsearch.adoc:117
msgid "Now create a `org.acme.elasticsearch.FruitService` that will be the business layer of our application and store/load the fruits from the Elasticsearch instance.  Here we use the low level client, if you want to use the high level client instead follow the instructions in the link:#using-the-high-level-rest-client[Using the High Level REST Client] paragraph instead."
msgstr "ここで、アプリケーションのビジネス層となる `org.acme.elasticsearch.FruitService` を作成し、Elasticsearch インスタンスからのフルーツを保存/ロードします。ここでは低レベルのクライアントを使用していますが、高レベルのクライアントを使用したい場合は、 link:#using-the-high-level-rest-client[高レベルのRESTクライアントの使用] パラグラフの指示に従ってください。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/elasticsearch.adoc:125
#: upstream/_versions/1.7/guides/elasticsearch.adoc:306
#, no-wrap
msgid ""
"import java.io.IOException;\n"
"import java.util.ArrayList;\n"
"import java.util.List;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/elasticsearch.adoc:128
#: upstream/_versions/1.7/guides/elasticsearch.adoc:309
#, no-wrap
msgid ""
"import javax.enterprise.context.ApplicationScoped;\n"
"import javax.inject.Inject;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/elasticsearch.adoc:133
#, no-wrap
msgid ""
"import org.apache.http.util.EntityUtils;\n"
"import org.elasticsearch.client.Request;\n"
"import org.elasticsearch.client.Response;\n"
"import org.elasticsearch.client.RestClient;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/elasticsearch.adoc:136
#, no-wrap
msgid ""
"import io.vertx.core.json.JsonArray;\n"
"import io.vertx.core.json.JsonObject;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/elasticsearch.adoc:141
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class FruitService {\n"
"    @Inject\n"
"    RestClient restClient; //<1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/elasticsearch.adoc:149
#, no-wrap
msgid ""
"    public void index(Fruit fruit) throws IOException {\n"
"        Request request = new Request(\n"
"                \"PUT\",\n"
"                \"/fruits/_doc/\" + fruit.id); //<2>\n"
"        request.setJsonEntity(JsonObject.mapFrom(fruit).toString()); //<3>\n"
"        restClient.performRequest(request); //<4>\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/elasticsearch.adoc:159
#, no-wrap
msgid ""
"    public Fruit get(String id) throws IOException {\n"
"        Request request = new Request(\n"
"                \"GET\",\n"
"                \"/fruits/_doc/\" + id);\n"
"        Response response = restClient.performRequest(request);\n"
"        String responseBody = EntityUtils.toString(response.getEntity());\n"
"        JsonObject json = new JsonObject(responseBody); //<5>\n"
"        return json.getJsonObject(\"_source\").mapTo(Fruit.class);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/elasticsearch.adoc:163
#: upstream/_versions/1.7/guides/elasticsearch.adoc:351
#, no-wrap
msgid ""
"    public List<Fruit> searchByColor(String color) throws IOException {\n"
"        return search(\"color\", color);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/elasticsearch.adoc:167
#: upstream/_versions/1.7/guides/elasticsearch.adoc:355
#, no-wrap
msgid ""
"    public List<Fruit> searchByName(String name) throws IOException {\n"
"        return search(\"name\", name);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/elasticsearch.adoc:179
#, no-wrap
msgid ""
"    private List<Fruit> search(String term, String match) throws IOException {\n"
"        Request request = new Request(\n"
"                \"GET\",\n"
"                \"/fruits/_search\");\n"
"        //construct a JSON query like {\"query\": {\"match\": {\"<term>\": \"<match\"}}\n"
"        JsonObject termJson = new JsonObject().put(term, match);\n"
"        JsonObject matchJson = new JsonObject().put(\"match\", termJson);\n"
"        JsonObject queryJson = new JsonObject().put(\"query\", matchJson);\n"
"        request.setJsonEntity(queryJson.encode());\n"
"        Response response = restClient.performRequest(request);\n"
"        String responseBody = EntityUtils.toString(response.getEntity());\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/elasticsearch.adoc:191
#, no-wrap
msgid ""
"        JsonObject json = new JsonObject(responseBody);\n"
"        JsonArray hits = json.getJsonObject(\"hits\").getJsonArray(\"hits\");\n"
"        List<Fruit> results = new ArrayList<>(hits.size());\n"
"        for (int i = 0; i < hits.size(); i++) {\n"
"            JsonObject hit = hits.getJsonObject(i);\n"
"            Fruit fruit = hit.getJsonObject(\"_source\").mapTo(Fruit.class);\n"
"            results.add(fruit);\n"
"        }\n"
"        return results;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/elasticsearch.adoc:194
#: upstream/_versions/1.7/guides/elasticsearch.adoc:376
msgid "In this example you can note the following:"
msgstr "この例では、次のことに注意してください:"

#. type: Plain text
#: upstream/_versions/1.7/guides/elasticsearch.adoc:196
msgid "We inject an Elasticsearch low level `RestClient` into our service."
msgstr "Elasticsearch の低レベル `RestClient` をサービスに注入しています。"

#. type: Plain text
#: upstream/_versions/1.7/guides/elasticsearch.adoc:197
msgid "We create an Elasticsearch request."
msgstr "Elasticsearchリクエストを作成します。"

#. type: Plain text
#: upstream/_versions/1.7/guides/elasticsearch.adoc:198
#: upstream/_versions/1.7/guides/elasticsearch.adoc:380
msgid "We use Vert.x `JsonObject` to serialize the object before sending it to Elasticsearch, you can use whatever you want to serialize to JSON."
msgstr "Elasticsearchに送信する前にオブジェクトをシリアライズするためにVert.x `JsonObject` を使用していますが、JSONにシリアライズしたものは何でも使えます。"

#. type: Plain text
#: upstream/_versions/1.7/guides/elasticsearch.adoc:199
msgid "We send the request (indexing request here) to Elasticsearch."
msgstr "Elasticsearchにリクエスト(ここではインデックス作成のリクエスト)を送信します。"

#. type: Plain text
#: upstream/_versions/1.7/guides/elasticsearch.adoc:200
#: upstream/_versions/1.7/guides/elasticsearch.adoc:382
msgid "In order to deserialize the object from Elasticsearch, we again use Vert.x `JsonObject`."
msgstr "Elasticsearchからオブジェクトをデシリアライズするために、再びVert.x `JsonObject` を使用します。"

#. type: Plain text
#: upstream/_versions/1.7/guides/elasticsearch.adoc:202
msgid "Now, edit the `org.acme.elasticsearch.FruitResource` class as follows:"
msgstr "ここで、 `org.acme.elasticsearch.FruitResource` クラスを以下のように編集します。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/elasticsearch.adoc:211
#, no-wrap
msgid ""
"@Path(\"/fruits\")\n"
"@Produces(MediaType.APPLICATION_JSON)\n"
"@Consumes(MediaType.APPLICATION_JSON)\n"
"public class FruitResource {\n"
"    @Inject\n"
"    FruitService fruitService;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/elasticsearch.adoc:220
#, no-wrap
msgid ""
"    @POST\n"
"    public Response index(Fruit fruit) throws IOException {\n"
"        if (fruit.id == null) {\n"
"            fruit.id = UUID.randomUUID().toString();\n"
"        }\n"
"        fruitService.index(fruit);\n"
"        return Response.created(URI.create(\"/fruits/\" + fruit.id)).build();\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/elasticsearch.adoc:226
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/{id}\")\n"
"    public Fruit get(@PathParam(\"id\") String id) throws IOException {\n"
"        return fruitService.get(id);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/elasticsearch.adoc:238
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/search\")\n"
"    public List<Fruit> search(@QueryParam(\"name\") String name, @QueryParam(\"color\") String color) throws IOException {\n"
"        if (name != null) {\n"
"            return fruitService.searchByName(name);\n"
"        } else if (color != null) {\n"
"            return fruitService.searchByColor(color);\n"
"        } else {\n"
"            throw new BadRequestException(\"Should provide name or color query parameter\");\n"
"        }\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/elasticsearch.adoc:240
#, no-wrap
msgid "}\n"
msgstr "}\n"

#. type: Plain text
#: upstream/_versions/1.7/guides/elasticsearch.adoc:243
msgid "The implementation is pretty straightforward and you just need to define your endpoints using the JAX-RS annotations and use the `FruitService` to list/add new fruits."
msgstr "実装はとても簡単で、JAX-RSのアノテーションを使ってエンドポイントを定義し、 `FruitService` を使って新しいフルーツをリストアップ/追加するだけです。"

#. type: Title ==
#: upstream/_versions/1.7/guides/elasticsearch.adoc:244
#, no-wrap
msgid "Configuring Elasticsearch"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/elasticsearch.adoc:246
msgid "The main property to configure is the URL to connect to the Elasticsearch cluster."
msgstr "設定する主なプロパティーは、Elasticsearchクラスターに接続するためのURLです。"

#. type: Plain text
#: upstream/_versions/1.7/guides/elasticsearch.adoc:248
msgid "A sample configuration should look like this:"
msgstr "設定のサンプルは以下のようになります。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/elasticsearch.adoc:253
#, no-wrap
msgid ""
"# configure the Elasticsearch client for a cluster of two nodes\n"
"quarkus.elasticsearch.hosts = elasticsearch1:9200,elasticsearch2:9200\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/elasticsearch.adoc:256
msgid "In this example, we are using a single instance running on localhost:"
msgstr "この例では、ローカルホスト上で実行されている単一のインスタンスを使用しています。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/elasticsearch.adoc:261
#, no-wrap
msgid ""
"# configure the Elasticsearch client for a single instance on localhost\n"
"quarkus.elasticsearch.hosts = localhost:9200\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/elasticsearch.adoc:264
msgid "If you need a more advanced configuration, you can find the comprehensive list of supported configuration properties at the end of this guide."
msgstr "より高度な設定が必要な場合は、このガイドの最後に、サポートされている設定プロパティーの包括的なリストがあります。"

#. type: Title ==
#: upstream/_versions/1.7/guides/elasticsearch.adoc:266
#, no-wrap
msgid "Running an Elasticsearch cluster"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/elasticsearch.adoc:270
msgid "As by default, the Elasticsearch client is configured to access a local Elasticsearch cluster on port 9200 (the default Elasticsearch port), if you have a local running instance on this port, there is nothing more to do before being able to test it!"
msgstr "デフォルトでは、Elasticsearchクライアントはポート9200(Elasticsearchのデフォルトポート)でローカルのElasticsearchクラスターにアクセスするように設定されているので、このポートでローカルで実行中のインスタンスがある場合、テストできるようにするためにやるべきことは何もありません!"

#. type: Plain text
#: upstream/_versions/1.7/guides/elasticsearch.adoc:272
msgid "If you want to use Docker to run an Elasticsearch instance, you can use the following command to launch one:"
msgstr "Dockerを使ってElasticsearchインスタンスを起動したい場合は、以下のコマンドで起動します。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/elasticsearch.adoc:277
#, no-wrap
msgid ""
"docker run --name elasticsearch  -e \"discovery.type=single-node\" -e \"ES_JAVA_OPTS=-Xms512m -Xmx512m\"\\\n"
"       --rm -p 9200:9200 docker.elastic.co/elasticsearch/elasticsearch-oss:{elasticsearch-version}\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/elasticsearch.adoc:279
#, no-wrap
msgid "Creating a frontend"
msgstr "フロントエンドの作成"

#. type: Plain text
#: upstream/_versions/1.7/guides/elasticsearch.adoc:284
msgid "Now let's add a simple web page to interact with our `FruitResource`.  Quarkus automatically serves static resources located under the `META-INF/resources` directory.  In the `src/main/resources/META-INF/resources` directory, add a `fruits.html` file with the content from this {quickstarts-blob-url}/elasticsearch-low-level-client-quickstart/src/main/resources/META-INF/resources/fruits.html[fruits.html] file in it."
msgstr "ここで、 `FruitResource` .Quarkusと対話するための簡単なウェブページを追加してみましょう。Quarkusは、 `META-INF/resources` ディレクトリーの下にある静的なリソースを自動的に提供します。 `src/main/resources/META-INF/resources` ディレクトリーに、この {quickstarts-blob-url}/elasticsearch-low-level-client-quickstart/src/main/resources/META-INF/resources/fruits.html[fruits.html]ファイルの内容を含む `fruits.html` ファイルを追加します。"

#. type: Plain text
#: upstream/_versions/1.7/guides/elasticsearch.adoc:286
msgid "You can now interact with your REST service:"
msgstr "これで、REST サービスと対話できるようになりました。"

#. type: Plain text
#: upstream/_versions/1.7/guides/elasticsearch.adoc:288
msgid "start Quarkus with `./mvnw quarkus:dev`"
msgstr "`./mvnw quarkus:dev` でQuarkusを起動する"

#. type: Plain text
#: upstream/_versions/1.7/guides/elasticsearch.adoc:289
msgid "open a browser to `http://localhost:8080/fruits.html`"
msgstr "ブラウザで `http://localhost:8080/fruits.html` を開きます。"

#. type: Plain text
#: upstream/_versions/1.7/guides/elasticsearch.adoc:290
msgid "add new fruits to the list via the 'Add fruit' form"
msgstr "「フルーツを追加」フォームで新しいフルーツをリストに追加"

#. type: Plain text
#: upstream/_versions/1.7/guides/elasticsearch.adoc:291
msgid "search for fruits by name or color via the 'Search Fruit' form"
msgstr "名前や色でフルーツを 'Search Fruit' フォームで検索することができます。"

#. type: Title ==
#: upstream/_versions/1.7/guides/elasticsearch.adoc:292
#, no-wrap
msgid "Using the High Level REST Client"
msgstr "高レベルRESTクライアントの使用"

#. type: Plain text
#: upstream/_versions/1.7/guides/elasticsearch.adoc:295
msgid "Quarkus provides support for the Elasticsearch High Level REST Client but keep in mind that it comes with some caveats:"
msgstr "QuarkusはElasticsearch High Level REST Clientのサポートを提供していますが、いくつかの注意点があることを覚えておいてください。"

#. type: Plain text
#: upstream/_versions/1.7/guides/elasticsearch.adoc:297
msgid "It drags a lot of dependencies - especially Lucene -, which doesn't fit well with Quarkus philosophy. The Elasticsearch team is aware of this issue and it might improve sometime in the future."
msgstr "これは多くの依存関係(特に Lucene)を引きずっており、Quarkus の哲学にはあまり合っていません。Elasticsearch チームはこの問題を認識しており、将来的には改善されるかもしれません。"

#. type: Plain text
#: upstream/_versions/1.7/guides/elasticsearch.adoc:298
msgid "It is tied to a certain version of the Elasticsearch server: you cannot use a High Level REST Client version 7 to access a server version 6."
msgstr "これはElasticsearchサーバーの特定のバージョンに縛られています: 高レベルRESTクライアントのバージョン7を使用してサーバーのバージョン6にアクセスすることはできません。"

#. type: Plain text
#: upstream/_versions/1.7/guides/elasticsearch.adoc:300
msgid "Here is a version of the `FruitService` using the high level client instead of the low level one:"
msgstr "ここでは、低レベルのクライアントの代わりに高レベルのクライアントを使用したバージョンの `FruitService` を示します。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/elasticsearch.adoc:322
#, no-wrap
msgid ""
"import org.elasticsearch.action.get.GetRequest;\n"
"import org.elasticsearch.action.get.GetResponse;\n"
"import org.elasticsearch.action.index.IndexRequest;\n"
"import org.elasticsearch.action.search.SearchRequest;\n"
"import org.elasticsearch.action.search.SearchResponse;\n"
"import org.elasticsearch.client.RequestOptions;\n"
"import org.elasticsearch.client.RestHighLevelClient;\n"
"import org.elasticsearch.common.xcontent.XContentType;\n"
"import org.elasticsearch.index.query.QueryBuilders;\n"
"import org.elasticsearch.search.SearchHit;\n"
"import org.elasticsearch.search.SearchHits;\n"
"import org.elasticsearch.search.builder.SearchSourceBuilder;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/elasticsearch.adoc:324
#, no-wrap
msgid "import io.vertx.core.json.JsonObject;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/elasticsearch.adoc:329
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class FruitService {\n"
"    @Inject\n"
"    RestHighLevelClient restHighLevelClient; // <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/elasticsearch.adoc:336
#, no-wrap
msgid ""
"    public void index(Fruit fruit) throws IOException {\n"
"        IndexRequest request = new IndexRequest(\"fruits\"); // <2>\n"
"        request.id(fruit.id);\n"
"        request.source(JsonObject.mapFrom(fruit).toString(), XContentType.JSON); // <3>\n"
"        restHighLevelClient.index(request, RequestOptions.DEFAULT); // <4>\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/elasticsearch.adoc:347
#, no-wrap
msgid ""
"    public Fruit get(String id) throws IOException {\n"
"        GetRequest getRequest = new GetRequest(\"fruits\", id);\n"
"        GetResponse getResponse = restHighLevelClient.get(getRequest, RequestOptions.DEFAULT);\n"
"        if (getResponse.isExists()) {\n"
"            String sourceAsString = getResponse.getSourceAsString();\n"
"            JsonObject json = new JsonObject(sourceAsString); // <5>\n"
"            return json.mapTo(Fruit.class);\n"
"        }\n"
"        return null;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/elasticsearch.adoc:361
#, no-wrap
msgid ""
"    private List<Fruit> search(String term, String match) throws IOException {\n"
"        SearchRequest searchRequest = new SearchRequest(\"fruits\");\n"
"        SearchSourceBuilder searchSourceBuilder = new SearchSourceBuilder();\n"
"        searchSourceBuilder.query(QueryBuilders.matchQuery(term, match));\n"
"        searchRequest.source(searchSourceBuilder);\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/elasticsearch.adoc:373
#, no-wrap
msgid ""
"        SearchResponse searchResponse = restHighLevelClient.search(searchRequest, RequestOptions.DEFAULT);\n"
"        SearchHits hits = searchResponse.getHits();\n"
"        List<Fruit> results = new ArrayList<>(hits.getHits().length);\n"
"        for (SearchHit hit : hits.getHits()) {\n"
"            String sourceAsString = hit.getSourceAsString();\n"
"            JsonObject json = new JsonObject(sourceAsString);\n"
"            results.add(json.mapTo(Fruit.class));\n"
"        }\n"
"        return results;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/elasticsearch.adoc:378
msgid "We inject an Elasticsearch `RestHighLevelClient` inside the service."
msgstr "サービス内部にElasticsearch `RestHighLevelClient` を注入しています。"

#. type: Plain text
#: upstream/_versions/1.7/guides/elasticsearch.adoc:379
msgid "We create an Elasticsearch index request."
msgstr "Elasticsearchのインデックスリクエストを作成します。"

#. type: Plain text
#: upstream/_versions/1.7/guides/elasticsearch.adoc:381
msgid "We send the request to Elasticsearch."
msgstr "Elasticsearchにリクエストを送信します。"

#. type: Title ==
#: upstream/_versions/1.7/guides/elasticsearch.adoc:383
#, no-wrap
msgid "Hibernate Search Elasticsearch"
msgstr "Hibernate Search Elasticsearch"

#. type: Plain text
#: upstream/_versions/1.7/guides/elasticsearch.adoc:386
msgid "Quarkus supports Hibernate Search with Elasticsearch via the `hibernate-search-elasticsearch` extension."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/elasticsearch.adoc:388
msgid "Hibernate Search Elasticsearch allows to synchronize your JPA entities to an Elasticsearch cluster and offers a way to query your Elasticsearch cluster using the Hibernate Search API."
msgstr "Hibernate Search Elasticsearchでは、JPAエンティティーをElasticsearchクラスターに同期させることができ、Hibernate Search APIを使ってElasticsearchクラスターにクエリを発行する方法を提供しています。"

#. type: Plain text
#: upstream/_versions/1.7/guides/elasticsearch.adoc:390
msgid "If you're interested in it, you can read the link:hibernate-search-elasticsearch[Hibernate Search with Elasticsearch guide]."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/elasticsearch.adoc:391
#, no-wrap
msgid "Cluster Health Check"
msgstr "クラスターヘルスチェック"

#. type: Plain text
#: upstream/_versions/1.7/guides/elasticsearch.adoc:395
msgid "If you are using the `quarkus-smallrye-health` extension, both the extension will automatically add a readiness health check to validate the health of the cluster."
msgstr "`quarkus-smallrye-health` エクステンションを使用している場合、どちらのエクステンションも、クラスターの健全性を検証するための readiness ヘルスチェックを自動的に追加します。"

#. type: Plain text
#: upstream/_versions/1.7/guides/elasticsearch.adoc:400
msgid "This behavior can be disabled by setting the `quarkus.elasticsearch.health.enabled` property to `false` in your `application.properties`."
msgstr "この動作は、 `application.properties` の `quarkus.elasticsearch.health.enabled` プロパティーを `false` に設定することで無効にできます。"

#. type: Title ==
#: upstream/_versions/1.7/guides/elasticsearch.adoc:401
#, no-wrap
msgid "Building a native executable"
msgstr "ネイティブ実行可能ファイルの構築"

#. type: Plain text
#: upstream/_versions/1.7/guides/elasticsearch.adoc:404
msgid "You can use both clients in a native executable."
msgstr "ネイティブ実行可能ファイルで両方のクライアントを使用することができます。"

#. type: Plain text
#: upstream/_versions/1.7/guides/elasticsearch.adoc:406
msgid "You can build a native executable with the usual command `./mvnw package -Pnative`."
msgstr "ネイティブ実行可能ファイルは、通常のコマンド `./mvnw package -Pnative` でビルドできます。"

#. type: Plain text
#: upstream/_versions/1.7/guides/elasticsearch.adoc:408
msgid "Running it is as simple as executing `./target/elasticsearch-low-level-client-quickstart-1.0-SNAPSHOT-runner`."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/elasticsearch.adoc:410
msgid "You can then point your browser to `http://localhost:8080/fruits.html` and use your application."
msgstr "その後、ブラウザで `http://localhost:8080/fruits.html` を開いてアプリケーションを使用します。"

#. type: Title ==
#: upstream/_versions/1.7/guides/elasticsearch.adoc:411
#, no-wrap
msgid "Conclusion"
msgstr "まとめ"

#. type: Plain text
#: upstream/_versions/1.7/guides/elasticsearch.adoc:414
msgid "Accessing an Elasticsearch cluster from a low level or a high level client is easy with Quarkus as it provides easy configuration, CDI integration and native support for it."
msgstr "Quarkusでは、簡単な設定、CDIの統合、ネイティブサポートが提供されているため、低レベルまたは高レベルのクライアントからElasticsearchクラスターにアクセスすることが簡単にできます。"

#. type: Title ==
#: upstream/_versions/1.7/guides/elasticsearch.adoc:415
#, no-wrap
msgid "Configuration Reference"
msgstr "設定リファレンス"

# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-08-31 10:08+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/1.7/guides/amazon-kms.adoc:6
#, no-wrap
msgid "Quarkus - Amazon KMS Client"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/amazon-kms.adoc:13
msgid "AWS Key Management Service (KMS) is a service that allows you to create and control the keys used to encrypt or digitally sign your data.  Using KMS, you can create and manage cryptographic keys and control their use across a wide range of AWS services and in your application."
msgstr "AWS Key Management Service (KMS)は、データの暗号化や電子署名に使用する鍵の作成と管理を可能にするサービスです。KMSを使用することで、様々なAWSサービスやアプリケーションで暗号鍵を作成・管理し、その使用を制御することができます。"

#. type: Plain text
#: upstream/_versions/1.7/guides/amazon-kms.adoc:15
msgid "You can find more information about KMS at https://aws.amazon.com/kms/[the AWS KMS website]."
msgstr "KMSについての詳しい情報は link:https://aws.amazon.com/kms/[AWS KMSのサイト] に掲載されています。"

#. type: Plain text
#: upstream/_versions/1.7/guides/amazon-kms.adoc:22
msgid "The Quarkus extension supports two programming models:"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/amazon-kms.adoc:24
msgid "Blocking access using URL Connection HTTP client (by default) or the Apache HTTP Client"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/amazon-kms.adoc:25
msgid "https://docs.aws.amazon.com/sdk-for-java/v2/developer-guide/basics-async.html[Asynchronous programming] based on JDK's `CompletableFuture` objects and the Netty HTTP client."
msgstr "JDK の `CompletableFuture` オブジェクトと Netty HTTP クライアントをベースにした link:https://docs.aws.amazon.com/sdk-for-java/v2/developer-guide/basics-async.html[非同期プログラミング]"

#. type: Plain text
#: upstream/_versions/1.7/guides/amazon-kms.adoc:27
msgid "In this guide, we see how you can get your REST services to use KMS locally and on AWS."
msgstr "このガイドでは、どのようにしてRESTサービスでローカルやAWS上でKMSを使用することができるかを見ていきます。"

#. type: Title ==
#: upstream/_versions/1.7/guides/amazon-kms.adoc:28
#, no-wrap
msgid "Prerequisites"
msgstr "前提条件"

#. type: Plain text
#: upstream/_versions/1.7/guides/amazon-kms.adoc:31
msgid "To complete this guide, you need:"
msgstr "このガイドを完成させるには、以下が必要です:"

#. type: Plain text
#: upstream/_versions/1.7/guides/amazon-kms.adoc:33
msgid "JDK 1.8+ installed with `JAVA_HOME` configured appropriately"
msgstr "JDK 1.8+ がインストールされ、 `JAVA_HOME`  が適切に設定されていること"

#. type: Plain text
#: upstream/_versions/1.7/guides/amazon-kms.adoc:34
msgid "an IDE"
msgstr "IDE"

#. type: Plain text
#: upstream/_versions/1.7/guides/amazon-kms.adoc:35
msgid "Apache Maven {maven-version}"
msgstr "Apache Maven {maven-version}"

#. type: Plain text
#: upstream/_versions/1.7/guides/amazon-kms.adoc:36
msgid "An AWS Account to access the KMS service"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/amazon-kms.adoc:37
msgid "Docker for your system to run KMS locally for testing purposes"
msgstr "テスト目的でローカルでKMSを実行するためにシステムにDockerがインストールされていること"

#. type: Title ===
#: upstream/_versions/1.7/guides/amazon-kms.adoc:38
#, no-wrap
msgid "Set up KMS locally"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/amazon-kms.adoc:41
msgid "The easiest way to start working with KMS is to run a local instance as a container."
msgstr "KMSを使い始める最も簡単な方法は、ローカルインスタンスをコンテナーとして実行することです。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-kms.adoc:45
#, no-wrap
msgid "docker run --rm --name local-kms 8011:4599 -e SERVICES=kms -e START_WEB=0 -d localstack/localstack:0.11.1\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/amazon-kms.adoc:47
msgid "This starts a KMS instance that is accessible on port `8011`."
msgstr "これは、ポート `8011` でアクセス可能な KMS インスタンスを起動します。"

#. type: Plain text
#: upstream/_versions/1.7/guides/amazon-kms.adoc:49
msgid "Create an AWS profile for your local instance using AWS CLI:"
msgstr "AWS CLIを使ってローカルインスタンスのAWSプロファイルを作成します。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-kms.adoc:56
#, no-wrap
msgid ""
"$ aws configure --profile localstack\n"
"AWS Access Key ID [None]: test-key\n"
"AWS Secret Access Key [None]: test-secret\n"
"Default region name [None]: us-east-1\n"
"Default output format [None]:\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/1.7/guides/amazon-kms.adoc:58
#, no-wrap
msgid "Create a KMS master key"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/amazon-kms.adoc:61
msgid "Create a KMS master key queue using AWS CLI and store in `MASTER_KEY_ARN` environment variable."
msgstr "AWS CLIでKMSマスターキーキューを作成し、 `MASTER_KEY_ARN` 環境変数に格納します。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-kms.adoc:65
#, no-wrap
msgid "MASTER_KEY_ARN=`aws kms create-key --profile localstack --endpoint-url=http://localhost:8011 | cut -f3`\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/amazon-kms.adoc:67
msgid "Generate a key data as 256-bit symmetric key (AES 256)"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-kms.adoc:70
#, no-wrap
msgid "aws kms generate-data-key --key-id $MASTER_KEY_ARN --key-spec AES_256 --profile localstack --endpoint-url=http://localhost:8011\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/amazon-kms.adoc:73
msgid "Or, if you want to use your AWS account create a key using your default profile"
msgstr "または、AWSアカウントを使用したい場合は、デフォルトのプロファイルを使用してキーを作成します。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-kms.adoc:77
#, no-wrap
msgid ""
"MASTER_KEY_ARN=`aws kms create-key | cut -f3`\n"
"aws kms generate-data-key --key-id $MASTER_KEY_ARN --key-spec AES_256\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/amazon-kms.adoc:79
#, no-wrap
msgid "Solution"
msgstr "ソリューション"

#. type: Plain text
#: upstream/_versions/1.7/guides/amazon-kms.adoc:81
msgid "The application built here allows to encrypt and decrypt text messages using a master key created on AWS KMS."
msgstr "ここで構築したアプリケーションでは、AWS KMS上で作成したマスターキーを用いてテキストメッセージの暗号化・復号化を行うことができます。"

#. type: Plain text
#: upstream/_versions/1.7/guides/amazon-kms.adoc:84
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the completed example."
msgstr "次のセクションで紹介する手順に沿って、ステップを踏んでアプリを作成することをお勧めします。ただし、完成した例にそのまま進んでも構いません。"

#. type: Plain text
#: upstream/_versions/1.7/guides/amazon-kms.adoc:86
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Gitレポジトリをクローンするか `git clone {quickstarts-clone-url}` 、 {quickstarts-archive-url}[アーカイブ] をダウンロードします。"

#. type: Plain text
#: upstream/_versions/1.7/guides/amazon-kms.adoc:88
msgid "The solution is located in the `amazon-kms-quickstart` {quickstarts-tree-url}/amazon-kms-quickstart[directory]."
msgstr "ソリューションは `amazon-kms-quickstart` {quickstarts-tree-url}/amazon-kms-quickstart[ディレクトリ] にあります。"

#. type: Title ==
#: upstream/_versions/1.7/guides/amazon-kms.adoc:89
#, no-wrap
msgid "Creating the Maven project"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/amazon-kms.adoc:92
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "まず、新しいプロジェクトが必要です。以下のコマンドで新規プロジェクトを作成します。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-kms.adoc:102
#, no-wrap
msgid ""
"mvn io.quarkus:quarkus-maven-plugin:{quarkus-version}:create \\\n"
"    -DprojectGroupId=org.acme \\\n"
"    -DprojectArtifactId=amazon-kms-quickstart \\\n"
"    -DclassName=\"org.acme.kms.QuarkusKmsSyncResource\" \\\n"
"    -Dpath=\"/sync\" \\\n"
"    -Dextensions=\"resteasy-jsonb,amazon-kms,resteasy-mutiny\"\n"
"cd amazon-kms-quickstart\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/amazon-kms.adoc:106
msgid "This command generates a Maven structure importing the RESTEasy/JAX-RS, Mutiny and Amazon KMS Client extensions.  After this, the `amazon-kms` extension has been added to your `pom.xml` as well as the Mutiny support for RESTEasy."
msgstr "このコマンドは、RESTEasy/JAX-RS、Mutiny、Amazon KMSクライアントエクステンションをインポートするMavenディレクトリ構造を生成します。この後、 `amazon-kms` エクステンションおよびRESTEasyのMutinyサポートが `pom.xml` に追加されています。"

#. type: Title ==
#: upstream/_versions/1.7/guides/amazon-kms.adoc:107
#, no-wrap
msgid "Creating JSON REST service"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/amazon-kms.adoc:111
msgid "In this example, we will create an application that allows to encrypt and decrypt text message provided in the request.  The example application will demonstrate the two programming models supported by the extension."
msgstr "この例では、リクエストで提供されたテキストメッセージの暗号化と復号化を可能にするアプリケーションを作成します。この例のアプリケーションでは、エクステンションでサポートされている2つのプログラミングモデルを実演します。"

#. type: Plain text
#: upstream/_versions/1.7/guides/amazon-kms.adoc:113
msgid "Let's create a `org.acme.kms.QuarkusKmsSyncResource` that will provide an API to encrypt and decrypt message using the synchronous client."
msgstr "同期クライアントを使ってメッセージを暗号化・復号化するAPIを提供する `org.acme.kms.QuarkusKmsSyncResource` を作ってみましょう。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-kms.adoc:117
#: upstream/_versions/1.7/guides/amazon-kms.adoc:233
#, no-wrap
msgid "package org.acme.kms;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-kms.adoc:129
#, no-wrap
msgid ""
"import javax.inject.Inject;\n"
"import javax.ws.rs.Consumes;\n"
"import javax.ws.rs.POST;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"
"import org.apache.commons.codec.binary.Base64;\n"
"import org.eclipse.microprofile.config.inject.ConfigProperty;\n"
"import software.amazon.awssdk.core.SdkBytes;\n"
"import software.amazon.awssdk.services.kms.KmsClient;\n"
"import software.amazon.awssdk.services.kms.model.DecryptResponse;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-kms.adoc:134
#, no-wrap
msgid ""
"@Path(\"/sync\")\n"
"@Produces(MediaType.TEXT_PLAIN)\n"
"@Consumes(MediaType.TEXT_PLAIN)\n"
"public class QuarkusKmsSyncResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-kms.adoc:137
#, no-wrap
msgid ""
"    @Inject\n"
"    KmsClient kms;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-kms.adoc:140
#: upstream/_versions/1.7/guides/amazon-kms.adoc:258
#, no-wrap
msgid ""
"    @ConfigProperty(name = \"key.arn\")\n"
"    String keyArn;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-kms.adoc:145
#, no-wrap
msgid ""
"    @POST\n"
"    @Path(\"/encrypt\")\n"
"    public String encrypt(String data) {\n"
"        SdkBytes encryptedBytes = kms.encrypt(req -> req.keyId(keyArn).plaintext(SdkBytes.fromUtf8String(data))).ciphertextBlob();\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-kms.adoc:148
#, no-wrap
msgid ""
"        return Base64.encodeBase64String(encryptedBytes.asByteArray());\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-kms.adoc:154
#, no-wrap
msgid ""
"    @POST\n"
"    @Path(\"/decrypt\")\n"
"    public String decrypt(String data) {\n"
"        SdkBytes encryptedData = SdkBytes.fromByteArray(Base64.decodeBase64(data.getBytes()));\n"
"        DecryptResponse decrypted = kms.decrypt(req -> req.keyId(keyArn).ciphertextBlob(encryptedData));\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-kms.adoc:158
#, no-wrap
msgid ""
"        return decrypted.plaintext().asUtf8String();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/amazon-kms.adoc:161
msgid "An encrypted message is in the form of a bytes array. To return it to the user we need to encode it as Base64 string in the `encrypt` endpoint.  On the `decrypt` endpoint we need to decode from the Base64 string back to the bytes array before sending it out to the KMS client."
msgstr "暗号化されたメッセージはバイト配列の形をしています。これをユーザーに返すためには、 `encrypt` エンドポイントで Base64 文字列としてエンコードする必要があります。 `decrypt` エンドポイントでは、KMS クライアントに送信する前に Base64 文字列からバイト配列にデコードする必要があります。"

#. type: Title ==
#: upstream/_versions/1.7/guides/amazon-kms.adoc:162
#, no-wrap
msgid "Configuring KMS clients"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-kms.adoc:174
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>software.amazon.awssdk</groupId>\n"
"    <artifactId>url-connection-client</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/amazon-kms.adoc:177
msgid "If you want to use Apache HTTP client instead, configure it as follows:"
msgstr "代わりにApache HTTPクライアントを使用したい場合は、以下のように設定します。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-kms.adoc:180
#, no-wrap
msgid "quarkus.kms.sync-client.type=apache\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/amazon-kms.adoc:183
msgid "And add the following dependency to the application `pom.xml`:"
msgstr "そして、以下の依存関係をアプリケーションの `pom.xml` に追加します"

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-kms.adoc:189
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>software.amazon.awssdk</groupId>\n"
"    <artifactId>apache-client</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/amazon-kms.adoc:192
msgid "If you're going to use a local KMS instance, configure it as follows:"
msgstr "ローカルのKMSインスタンスを使用する場合は、以下のように設定します。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-kms.adoc:196
#, no-wrap
msgid "quarkus.kms.endpoint-override=http://localhost:8011\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-kms.adoc:201
#, no-wrap
msgid ""
"quarkus.kms.aws.region=us-east-1\n"
"quarkus.kms.aws.credentials.type=static\n"
"quarkus.kms.aws.credentials.static-provider.access-key-id=test-key\n"
"quarkus.kms.aws.credentials.static-provider.secret-access-key=test-secret\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/amazon-kms.adoc:204
msgid "`quarkus.kms.aws.region` - It's required by the client, but since you're using a local KMS instance use `us-east-1` as it's a default region of localstack's KMS."
msgstr "`quarkus.kms.aws.region` - クライアントによって必須とされていますが、ローカルのKMSインスタンスを使用しているので、ローカルスタックのKMSのデフォルトリージョンである `us-east-1` を使用してください。"

#. type: Plain text
#: upstream/_versions/1.7/guides/amazon-kms.adoc:205
msgid "`quarkus.kms.aws.credentials.type` - Set `static` credentials provider with any values for `access-key-id` and `secret-access-key`"
msgstr "`quarkus.ses.aws.credentials.type` - `static` の資格情報プロバイダを `access-key-id` と `secret-access-key` について任意の値で設定します。"

#. type: Plain text
#: upstream/_versions/1.7/guides/amazon-kms.adoc:206
msgid "`quarkus.kms.endpoint-override` - Override the KMS client to use a local instance instead of an AWS service"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/amazon-kms.adoc:209
msgid "If you want to work with an AWS account, you can simply remove or comment out all Amazon KMS related properties. By default, the KMS client extension will use the `default` credentials provider chain that looks for credentials in this order:"
msgstr "AWSアカウントで作業したい場合は、Amazon KMS関連のプロパティーをすべて削除するかコメントアウトするだけです。デフォルトでは、KMSクライアントエクステンションは、次の順番でクレデンシャルを探す `default` クレデンシャルプロバイダチェーンを使用します。"

#. type: Plain text
#: upstream/_versions/1.7/guides/amazon-kms.adoc:213
msgid "And the region from your AWS CLI profile will be used."
msgstr "そして、AWS CLIプロファイルからのリージョンが使用されます。"

#. type: Title ==
#: upstream/_versions/1.7/guides/amazon-kms.adoc:214
#, no-wrap
msgid "Next steps"
msgstr "次のステップ"

#. type: Title ===
#: upstream/_versions/1.7/guides/amazon-kms.adoc:216
#, no-wrap
msgid "Packaging"
msgstr "パッケージング"

#. type: Plain text
#: upstream/_versions/1.7/guides/amazon-kms.adoc:220
msgid "Packaging your application is as simple as `./mvnw clean package`.  It can be run with `java -Dkey.arn=$MASTER_KEY_ARN -jar target/amazon-kms-quickstart-1.0-SNAPSHOT-runner.jar`."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/amazon-kms.adoc:223
msgid "With GraalVM installed, you can also create a native executable binary: `./mvnw clean package -Dnative`.  Depending on your system, that will take some time."
msgstr "GraalVMをインストールした状態で、ネイティブの実行バイナリーを作成することもできます: `./mvnw clean package -Dnative` お使いのシステムにもよりますが、時間がかかります。"

#. type: Title ===
#: upstream/_versions/1.7/guides/amazon-kms.adoc:224
#, no-wrap
msgid "Going asynchronous"
msgstr "非同期にする"

#. type: Plain text
#: upstream/_versions/1.7/guides/amazon-kms.adoc:227
msgid "Thanks to the AWS SDK v2.x used by the Quarkus extension, you can use the asynchronous programming model out of the box."
msgstr "Quarkusのエクステンションで使われているAWS SDK v2.xのおかげで、非同期プログラミングモデルをすぐに使えるようになりました。"

#. type: Plain text
#: upstream/_versions/1.7/guides/amazon-kms.adoc:229
msgid "Create a `org.acme.kms.QuarkusKmsAsyncResource` REST resource that will be similar to our `QuarkusKmsSyncResource` but using an asynchronous programming model."
msgstr "`org.acme.kms.QuarkusKmsAsyncResource` RESTリソースを作成します。 `QuarkusKmsSyncResource` と似ていますが、非同期プログラミングモデルを使用しています。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-kms.adoc:247
#, no-wrap
msgid ""
"import io.smallrye.mutiny.Uni;\n"
"import javax.inject.Inject;\n"
"import javax.ws.rs.Consumes;\n"
"import javax.ws.rs.POST;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"
"import org.apache.commons.codec.binary.Base64;\n"
"import org.eclipse.microprofile.config.inject.ConfigProperty;\n"
"import software.amazon.awssdk.core.SdkBytes;\n"
"import software.amazon.awssdk.services.kms.KmsAsyncClient;\n"
"import software.amazon.awssdk.services.kms.model.DecryptResponse;\n"
"import software.amazon.awssdk.services.kms.model.EncryptResponse;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-kms.adoc:252
#, no-wrap
msgid ""
"@Path(\"/async\")\n"
"@Produces(MediaType.TEXT_PLAIN)\n"
"@Consumes(MediaType.TEXT_PLAIN)\n"
"public class QuarkusKmsAsyncResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-kms.adoc:255
#, no-wrap
msgid ""
"    @Inject\n"
"    KmsAsyncClient kms;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-kms.adoc:266
#, no-wrap
msgid ""
"    @POST\n"
"    @Path(\"/encrypt\")\n"
"    public Uni<String> encrypt(String data) {\n"
"        return Uni.createFrom().completionStage(kms.encrypt(req -> req.keyId(keyArn).plaintext(SdkBytes.fromUtf8String(data))))\n"
"            .onItem().transform(EncryptResponse::ciphertextBlob)\n"
"            .onItem().transform(blob -> Base64.encodeBase64String(blob.asByteArray()));\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-kms.adoc:278
#, no-wrap
msgid ""
"    @POST\n"
"    @Path(\"/decrypt\")\n"
"    public Uni<String> decrypt(String data) {\n"
"        return Uni.createFrom().item(SdkBytes.fromByteArray(Base64.decodeBase64(data.getBytes())))\n"
"            .onItem().transformToUni(msg ->\n"
"                Uni.createFrom().completionStage(kms.decrypt(req -> req.keyId(keyArn).ciphertextBlob(msg)))\n"
"            )\n"
"            .onItem().transform(DecryptResponse::plaintext)\n"
"            .onItem().transform(SdkBytes::asUtf8String);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/amazon-kms.adoc:280
msgid "We create `Uni` instances from the `CompletionStage` objects returned by the asynchronous KMS client, and then transform the emitted item."
msgstr "非同期のKMSクライアントから返された `CompletionStage` オブジェクトから `Uni` インスタンスを作成し、生成されたアイテムを変換します。"

#. type: Plain text
#: upstream/_versions/1.7/guides/amazon-kms.adoc:282
msgid "And we need to add the Netty HTTP client dependency to the `pom.xml`:"
msgstr "そして、Netty HTTPクライアント依存関係を `pom.xml` に追加する必要があります。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-kms.adoc:289
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>software.amazon.awssdk</groupId>\n"
"    <artifactId>netty-nio-client</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/amazon-kms.adoc:291
#, no-wrap
msgid "Configuration Reference"
msgstr "設定リファレンス"

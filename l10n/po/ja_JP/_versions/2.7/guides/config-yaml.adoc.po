# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-07 16:15+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/2.7/guides/config-yaml.adoc:6
#, no-wrap
msgid "YAML Configuration"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/config-yaml.adoc:14
msgid "https://en.wikipedia.org/wiki/YAML[YAML] is a very popular format. Kubernetes relies heavily on the YAML format to write the various resource descriptors."
msgstr "link:https://en.wikipedia.org/wiki/YAML[YAML]はとても人気のあるフォーマットです。Kubernetesは、さまざまなリソース記述子を記述するためにYAMLフォーマットに大きく依存しています。"

#. type: Plain text
#: upstream/_versions/2.7/guides/config-yaml.adoc:16
msgid "Quarkus offers the possibility to use YAML in addition to the standard Java Properties file."
msgstr "Quarkusでは、標準のJavaプロパティファイルに加えてYAMLを使用することができます。"

#. type: Title ==
#: upstream/_versions/2.7/guides/config-yaml.adoc:17
#, no-wrap
msgid "Enabling YAML Configuration"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/config-yaml.adoc:20
msgid "To enable YAML configuration, add the `quarkus-config-yaml` extension:"
msgstr "YAMLの設定を有効にするには、 `quarkus-config-yaml` のエクステンションを追加します。"

#. type: Plain text
#: upstream/_versions/2.7/guides/config-yaml.adoc:25
msgid "You can also just add the following dependency into your project:"
msgstr "また、以下の依存関係をプロジェクトに追加することでもできます。"

#. type: Block title
#: upstream/_versions/2.7/guides/config-yaml.adoc:27
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_versions/2.7/guides/config-yaml.adoc:33
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-config-yaml</artifactId>\n"
"</dependency>\n"
msgstr ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-config-yaml</artifactId>\n"
"</dependency>\n"

#. type: Block title
#: upstream/_versions/2.7/guides/config-yaml.adoc:36
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_versions/2.7/guides/config-yaml.adoc:39
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-config-yaml\")\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/config-yaml.adoc:42
msgid "Remove the `src/main/resources/application.properties` and create a `src/main/resources/application.yaml` file."
msgstr "`src/main/resources/application.properties` を削除し、 `src/main/resources/application.yaml` のファイルを作成します。"

#. type: Plain text
#: upstream/_versions/2.7/guides/config-yaml.adoc:45
msgid "If both are present, Quarkus prioritizes configuration properties from the YAML file first and then from the Properties file. However, to avoid confusion, we recommend removing the Properties file."
msgstr "両方が存在する場合、QuarkusはまずYAMLファイルからの設定プロパティを優先し、次にPropertiesファイルからの設定プロパティを読み込みます。ただし、混乱を避けるため、Propertiesファイルを削除することをお勧めします。"

#. type: Plain text
#: upstream/_versions/2.7/guides/config-yaml.adoc:47
msgid "Quarkus supports both the `yml` and `yaml` file extensions."
msgstr "Quarkusは、 `yml` と `yaml` の両方のファイル拡張子をサポートしています。"

#. type: Title ===
#: upstream/_versions/2.7/guides/config-yaml.adoc:48
#, no-wrap
msgid "Example"
msgstr "例"

#. type: Plain text
#: upstream/_versions/2.7/guides/config-yaml.adoc:51
msgid "The following snippets provide examples of YAML configuration:"
msgstr "次のスニペットは、YAML設定の例です。"

#. type: delimited block -
#: upstream/_versions/2.7/guides/config-yaml.adoc:60
#, no-wrap
msgid ""
"# YAML supports comments\n"
"quarkus:\n"
"  datasource:\n"
"    db-kind: postgresql\n"
"    jdbc:\n"
"      url: jdbc:postgresql://localhost:5432/some-database\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/config-yaml.adoc:66
#, no-wrap
msgid ""
"# REST Client configuration property\n"
"quarkus:\n"
"  rest-client:\n"
"    org.acme.rest.client.ExtensionsService:\n"
"      url: https://stage.code.quarkus.io/api\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/config-yaml.adoc:76
#, no-wrap
msgid ""
"# For configuration property names that use quotes, do not split the string inside the quotes\n"
"quarkus:\n"
"  log:\n"
"    category:\n"
"      \"io.quarkus.category\":\n"
"        level: INFO\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/config-yaml.adoc:83
#, no-wrap
msgid ""
"quarkus:\n"
"  datasource:\n"
"    url: jdbc:postgresql://localhost:5432/quarkus_test\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/config-yaml.adoc:87
#, no-wrap
msgid ""
"  hibernate-orm:\n"
"    database:\n"
"      generation: drop-and-create\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/config-yaml.adoc:92
#, no-wrap
msgid ""
"  oidc:\n"
"    enabled: true\n"
"    auth-server-url: http://localhost:8180/auth/realms/quarkus\n"
"    client-id: app\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/config-yaml.adoc:99
#, no-wrap
msgid ""
"app:\n"
"  frontend:\n"
"    oidc-realm: quarkus\n"
"    oidc-app: app\n"
"    oidc-server: http://localhost:8180/auth\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/config-yaml.adoc:111
#, no-wrap
msgid ""
"# With profiles\n"
"\"%test\":\n"
"   quarkus:\n"
"     oidc:\n"
"       enabled: false\n"
"     security:\n"
"        users:\n"
"            file:\n"
"              enabled: true\n"
"              realm-name: quarkus\n"
"              plain-text: true\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/2.7/guides/config-yaml.adoc:113
#, no-wrap
msgid "Profiles"
msgstr "プロファイル"

#. type: Plain text
#: upstream/_versions/2.7/guides/config-yaml.adoc:117
msgid "As you can see in the previous snippet, you can use xref:config-reference.adoc#profiles[profiles] in YAML. The profile key requires double quotes: `\"%test\"`. This is because YAML does not support keys starting with `%`."
msgstr "先ほどのスニペットでもわかるように、YAMLで link:config-reference.html#profiles[プロファイル]を使うことができます。プロファイルのキーには二重引用符が必要です: `\"%test\"`.これはYAMLが `%` で始まるキーをサポートしていないためです。"

#. type: Plain text
#: upstream/_versions/2.7/guides/config-yaml.adoc:120
msgid "Everything under the `\"%test\"` key is only enabled when the `test` profile is active. For example, in the previous snippet it disables OIDC (`quarkus.oidc.enabled: false`), whereas without the `test` profile, it would be enabled."
msgstr "`\"%test\"` キーの下にあるすべてのものは、 `test` プロファイルがアクティブな場合にのみ有効です。例えば、前述のスニペットでは、OIDC ( `quarkus.oidc.enabled: false`) を無効にしていますが、 `test` プロファイルがなければ、有効になります。"

#. type: Plain text
#: upstream/_versions/2.7/guides/config-yaml.adoc:122
msgid "As for the Java Properties format, you can define your own profile:"
msgstr "Javaプロパティ形式については、独自のプロファイルを定義することができます。"

#. type: delimited block -
#: upstream/_versions/2.7/guides/config-yaml.adoc:128
#: upstream/_versions/2.7/guides/config-yaml.adoc:146
#, no-wrap
msgid ""
"quarkus:\n"
"  http:\n"
"    port: 8081\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/config-yaml.adoc:133
#, no-wrap
msgid ""
"\"%staging\":\n"
"    quarkus:\n"
"        http:\n"
"          port: 8082\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/config-yaml.adoc:136
msgid "If you enable the `staging` profile, the HTTP port will be 8082, whereas it would be 8081 otherwise."
msgstr "`staging` プロファイルを有効にした場合、HTTP ポートは 8082 になりますが、そうでない場合は 8081 になります。"

#. type: Plain text
#: upstream/_versions/2.7/guides/config-yaml.adoc:139
msgid "The YAML configuration also support profile aware files. In this case, properties for a specific profile may reside in an `application-{profile}.yaml` named file. The previous example may be expressed as:"
msgstr "YAML設定では、プロファイルのためのファイルにも対応しています。この場合、特定のプロファイルのプロパティは、 `application-{profile}.yaml` という名前のファイルに格納されます。先ほどの例は次のように表現できます。"

#. type: Block title
#: upstream/_versions/2.7/guides/config-yaml.adoc:140
#, no-wrap
msgid "application.yaml"
msgstr "application.yaml"

#. type: Block title
#: upstream/_versions/2.7/guides/config-yaml.adoc:148
#, no-wrap
msgid "application-staging.yaml"
msgstr "application-staging.yaml"

#. type: delimited block -
#: upstream/_versions/2.7/guides/config-yaml.adoc:154
#, no-wrap
msgid ""
"quarkus:\n"
"  http:\n"
"    port: 8082\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/2.7/guides/config-yaml.adoc:156
#, no-wrap
msgid "Expressions"
msgstr "式"

#. type: Plain text
#: upstream/_versions/2.7/guides/config-yaml.adoc:160
msgid "The YAML format also supports xref:config-reference.adoc#expressions[expressions], using the same format as Java Properties:"
msgstr "YAMLフォーマットは、Javaプロパティと同じフォーマットを使用した xref:config-reference.adoc#expressions[式] もサポートしています。"

#. type: delimited block -
#: upstream/_versions/2.7/guides/config-yaml.adoc:166
#, no-wrap
msgid ""
"mach: 3\n"
"x:\n"
"  factor: 2.23694\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/config-yaml.adoc:172
#, no-wrap
msgid ""
"display:\n"
"  mach: ${mach}\n"
"  unit:\n"
"    name: \"mph\"\n"
"    factor: ${x.factor}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/config-yaml.adoc:175
msgid "Note that you can reference nested properties using the `.` (dot) separator as in `{x.factor}`."
msgstr "なお、 `{x.factor}` のように、 `.` （ドット）セパレータを使って、ネストしたプロパティを参照することができます。"

#. type: Title ==
#: upstream/_versions/2.7/guides/config-yaml.adoc:176
#, no-wrap
msgid "External application.yaml file"
msgstr "外部application.yamlファイル"

#. type: Plain text
#: upstream/_versions/2.7/guides/config-yaml.adoc:180
msgid "The `application.yaml` file may also be placed in `config/application.yaml` to specialize the runtime configuration. The file has to be present in the root of the working directoryrelative to the Quarkus application runner:"
msgstr "`application.yaml` ファイルは、実行時設定をカスタマイズするために `config/application.yaml` に配置することもできます。このファイルは、Quarkusアプリケーションランナーに関連する作業ディレクトリのルートに存在しなければなりません。"

#. type: delimited block -
#: upstream/_versions/2.7/guides/config-yaml.adoc:187
#, no-wrap
msgid ""
".\n"
"├── config\n"
"│    └── application.yaml\n"
"├── my-app-runner\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/config-yaml.adoc:190
msgid "The values from this file override any values from the regular `application.yaml` file if exists."
msgstr "このファイルの値は、通常の `application.yaml` ファイルが存在する場合、そちらの値よりも優先されます。"

#. type: Title ==
#: upstream/_versions/2.7/guides/config-yaml.adoc:191
#, no-wrap
msgid "Configuration key conflicts"
msgstr "設定キーの競合"

#. type: Plain text
#: upstream/_versions/2.7/guides/config-yaml.adoc:197
msgid "The MicroProfile Config specification defines configuration keys as an arbitrary `.`-delimited string. However, structured formats like YAML only support a subset of the possible configuration namespace. For example, consider the two configuration properties `quarkus.http.cors` and `quarkus.http.cors.methods`. One property is the prefix of another, so it may not be immediately evident how to specify both keys in your YAML configuration."
msgstr "MicroProfile Configの仕様では、設定キーを任意の `.` 区切りの文字列として定義しています。しかし、YAMLのような構造化されたフォーマットでは、可能な構成の名前空間のサブセットしかサポートしていません。例えば、2つの構成プロパティ `quarkus.http.cors` と `quarkus.http.cors.methods` を考えてみましょう。1つのプロパティは別のプロパティのプレフィックスであるため、YAML設定で両方のキーを指定する方法はすぐにはわからないかもしれません。"

#. type: Plain text
#: upstream/_versions/2.7/guides/config-yaml.adoc:199
msgid "This is solved by using a `null` key (represented by `~`) for any YAML property which is a prefix of another one:"
msgstr "これは、別のプロパティのプレフィックスであるYAMLプロパティに `null` キー（ `~` で表される）を使用することで解決します。"

#. type: delimited block -
#: upstream/_versions/2.7/guides/config-yaml.adoc:207
#, no-wrap
msgid ""
"quarkus:\n"
"  http:\n"
"    cors:\n"
"      ~: true\n"
"      methods: GET,PUT,POST\n"
msgstr ""
"quarkus:\n"
"  http:\n"
"    cors:\n"
"      ~: true\n"
"      methods: GET,PUT,POST\n"

#. type: Plain text
#: upstream/_versions/2.7/guides/config-yaml.adoc:210
msgid "YAML `null` keys are not included in the assembly of the configuration property name, allowing them to be used in any level for disambiguating configuration keys."
msgstr "YAML `null` キーは、設定プロパティ名の組み合わせには含まれないため、設定キーの曖昧さを解消するために任意のレベルで使用することができます。"

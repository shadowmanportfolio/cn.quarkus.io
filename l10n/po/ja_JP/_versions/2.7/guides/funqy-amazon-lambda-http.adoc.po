# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-07 16:15+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/2.7/guides/funqy-amazon-lambda-http.adoc:6
#, no-wrap
msgid "Funqy HTTP Binding with Amazon Lambda "
msgstr "Amazon Lambda用Funqy HTTPバインディング"

#. type: Plain text
#: upstream/_versions/2.7/guides/funqy-amazon-lambda-http.adoc:14
msgid "If you want to allow HTTP clients to invoke on your Funqy functions on AWS Lambda, Quarkus allows you to expose multiple Funqy functions through HTTP deployed as one AWS Lambda.  This approach does add overhead over the regular Funqy AWS Lambda integration and also requires you to use AWS API Gateway."
msgstr "HTTPクライアントがAWS Lambda上のFunqy関数を呼び出すことを許可したい場合、Quarkusでは、1つのAWS LambdaとしてデプロイされたHTTPを通して複数のFunqy関数を公開することができます。この方法では、通常のFunqy AWS Lambdaの統合よりもオーバーヘッドが追加され、AWS API Gatewayを使用する必要があります。"

#. type: Plain text
#: upstream/_versions/2.7/guides/funqy-amazon-lambda-http.adoc:19
msgid "Follow the xref:amazon-lambda-http.adoc[Amazon Lambda Http Guide].  It walks through using a variety of HTTP frameworks on Amazon Lambda, including Funqy."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/funqy-amazon-lambda-http.adoc:25
msgid "The Funqy HTTP + AWS Lambda binding is not a replacement for REST over HTTP.  Because Funqy needs to be portable across a lot of different protocols and function providers its HTTP binding is very minimalistic and you will lose REST features like linking and the ability to leverage HTTP features like cache-control and conditional GETs.  You may want to consider using Quarkus's JAX-RS, Spring MVC, or Vert.x Web Reactive Route xref:amazon-lambda-http.adoc[support] instead.  They also work with Quarkus and AWS Lambda."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.7/guides/funqy-amazon-lambda-http.adoc:26
#, no-wrap
msgid "An additional Quickstart"
msgstr "追加のクイックスタート"

#. type: Plain text
#: upstream/_versions/2.7/guides/funqy-amazon-lambda-http.adoc:30
msgid "Beyond generating an AWS project that is covered in the xref:amazon-lambda-http.adoc[Amazon Lambda Http Guide], there's also a quickstart for running Funqy HTTP on AWS Lambda."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/funqy-amazon-lambda-http.adoc:32
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Gitレポジトリをクローンするか `git clone {quickstarts-clone-url}` 、 {quickstarts-archive-url}[アーカイブ] をダウンロードします。"

#. type: Plain text
#: upstream/_versions/2.7/guides/funqy-amazon-lambda-http.adoc:34
msgid "The solution is located in the `funqy-amazon-lambda-quickstart` {quickstarts-tree-url}/funqy-quickstarts/funqy-amazon-lambda-http-quickstart[directory]."
msgstr "ソリューションは `funqy-amazon-lambda-quickstart` {quickstarts-tree-url}/funqy-quickstarts/funqy-amazon-lambda-http-quickstart[ディレクトリ] にあります。"

#. type: Title ==
#: upstream/_versions/2.7/guides/funqy-amazon-lambda-http.adoc:35
#, no-wrap
msgid "The Code"
msgstr "コード"

#. type: Plain text
#: upstream/_versions/2.7/guides/funqy-amazon-lambda-http.adoc:39
msgid "There is nothing special about the code and more importantly nothing AWS specific.  Funqy functions can be deployed to many different environments and AWS Lambda is one of them.  The Java code is actually the same exact code as the {quickstarts-tree-url}/funqy-quickstarts/funqy-http-quickstart[funqy-http-quickstart]."
msgstr "コードには何も特別なものはありませんし、もっと重要なのはAWSに特化したものは何もありません。Funqy関数は様々な環境にデプロイすることができ、AWS Lambdaもその一つです。Javaのコードは、実は{quickstarts-tree-url}/funqy-quickstarts/funqy-http-quickstart[funqy-http-quickstart]と全く同じコードです。"

#. type: Title ==
#: upstream/_versions/2.7/guides/funqy-amazon-lambda-http.adoc:40
#, no-wrap
msgid "Getting Started"
msgstr "はじめに"

#. type: Plain text
#: upstream/_versions/2.7/guides/funqy-amazon-lambda-http.adoc:44
msgid "The steps to get this quickstart running are exactly the same as defined in the xref:amazon-lambda-http.adoc[Amazon Lambda HTTP Guide].  This differences are that you are running from a quickstart and the maven dependencies are slightly different."
msgstr ""

#. type: Block title
#: upstream/_versions/2.7/guides/funqy-amazon-lambda-http.adoc:46
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_versions/2.7/guides/funqy-amazon-lambda-http.adoc:56
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-funqy-http</artifactId>\n"
"</dependency>\n"
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-amazon-lambda-http</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_versions/2.7/guides/funqy-amazon-lambda-http.adoc:59
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_versions/2.7/guides/funqy-amazon-lambda-http.adoc:63
#, no-wrap
msgid ""
"implementation(\"io.quarkus:quarkus-funqy-http\")\n"
"implementation(\"io.quarkus:quarkus-amazon-lambda-http\")\n"
msgstr ""

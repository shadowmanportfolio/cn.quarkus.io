# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-07 16:15+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/2.7/guides/platform.adoc:6
#, no-wrap
msgid "Platform"
msgstr "Platform"

#. type: Plain text
#: upstream/_versions/2.7/guides/platform.adoc:11
msgid "The Quarkus extension ecosystem consists of the Quarkus extensions developed and maintained by the community, including the Quarkus core development team. While the Quarkus ecosystem (sometimes also referred to as the \"Quarkus universe\") includes all the Quarkus extensions ever developed, there is also a concept of a Quarkus platform."
msgstr "Quarkusエクステンションエコシステムは、Quarkusコア開発チームを含むコミュニティによって開発・保守されたQuarkusエクステンションで構成されています。Quarkusエコシステム（\"Quarkus universe\"と呼ばれることもあります）には、これまでに開発されたすべてのQuarkusエクステンションが含まれていますが、Quarkusプラットフォームという概念もあります。"

#. type: Title ==
#: upstream/_versions/2.7/guides/platform.adoc:12
#, no-wrap
msgid "Quarkus Platform"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/platform.adoc:16
msgid "The fundamental promise of a Quarkus platform is any combination of the Quarkus extensions the platform consists of can be used in the same application without causing any conflict for each other.  Each organization creating their Quarkus platform may establish their own criteria for the extensions to be accepted into the platform and the means to guarantee the compatibility between the accepted extensions."
msgstr "Quarkusプラットフォームの基本的な約束事は、プラットフォームで構成されるQuarkusエクステンションを組み合わせて、お互いに競合することなく同じアプリケーションで使用することができるということです。Quarkusプラットフォームを作成する各組織は、プラットフォームに受け入れられるエクステンションについて独自の基準を設定し、受け入れられたエクステンション間の互換性を保証する手段を確立することができます。"

#. type: Title ===
#: upstream/_versions/2.7/guides/platform.adoc:17
#, no-wrap
msgid "Quarkus Platform Artifacts"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/platform.adoc:20
msgid "Each Quarkus platform is defined with a few artifacts."
msgstr "各Quarkusプラットフォームは、いくつかのアーティファクトで定義されています。"

#. type: Title ===
#: upstream/_versions/2.7/guides/platform.adoc:21
#, no-wrap
msgid "Quarkus Platform BOM"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/platform.adoc:24
msgid "Each Quarkus Platform is expected to provide a Maven BOM artifact that"
msgstr "各Quarkusプラットフォームは、次のようなMaven BOMアーティファクトを提供することが期待されています："

#. type: Plain text
#: upstream/_versions/2.7/guides/platform.adoc:26
msgid "imports a chosen version of `io.quarkus:quarkus-bom` (the platform BOM may be flattened at the end but it has to be based on some version of `io.quarkus:quarkus-bom`)"
msgstr "`io.quarkus:quarkus-bom` の選択されたバージョンをインポートすること (プラットフォームの BOM は最後にフラット化されますが、 `io.quarkus:quarkus-bom` の何らかのバージョンに基づいていなければなりません)"

#. type: Plain text
#: upstream/_versions/2.7/guides/platform.adoc:27
msgid "includes all the Quarkus extension artifacts (the runtime and the deployment ones) the platform consists of"
msgstr "プラットフォームを構成するすべてのQuarkusエクステンションアーティファクト（ランタイムとデプロイメントのもの）を含むこと"

#. type: Plain text
#: upstream/_versions/2.7/guides/platform.adoc:28
msgid "includes all the necessary third-party artifacts that align the transitive dependency versions of the platform extensions to guarantee compatibility between them"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/platform.adoc:29
msgid "includes the <<platform-descriptor,platform JSON descriptor>> artifact"
msgstr "link:#platform-descriptor[プラットフォームJSONディスクリプタ]アーティファクトを含むこと"

#. type: Plain text
#: upstream/_versions/2.7/guides/platform.adoc:30
msgid "possibly includes the <<platform-properties,platform configuration properties>> artifacts"
msgstr "<<platform-properties,プラットフォーム設定プロパティ>> アーティファクトを含む場合があります"

#. type: Plain text
#: upstream/_versions/2.7/guides/platform.adoc:32
msgid "Quarkus applications that want to include extensions from a Quarkus platform will be importing the Quarkus platform BOM."
msgstr "QuarkusプラットフォームからエクステンションをインクルードしたいQuarkusアプリケーションは、QuarkusプラットフォームのBOMをインポートします。"

#. type: Title ===
#: upstream/_versions/2.7/guides/platform.adoc:34
#, no-wrap
msgid "Quarkus Platform Descriptor"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/platform.adoc:38
msgid "Quarkus platform descriptor is a JSON artifact that provides information about the platform and its extensions to the Quarkus tools. E.g. http://code.quarkus.io and the Quarkus command line tools consult this descriptor to list, add and remove extensions to/from the project on user's request.  This artifact is also used as a Quarkus platform identifier. When Quarkus tools need to identify the Quarkus platform(s) used in the project, they will analyze the dependency version constraints of the project (the effective list of the managed dependencies from the `dependencyManagement` section in Maven terms) looking for the platform descriptor artifact(s) among them. Given that the platform descriptors are included into the Quarkus platform BOMs, every Quarkus application will inherit the platform descriptor artifact from the imported platform BOM(s) as a dependency version constraint (managed dependency in Maven terms)."
msgstr "Quarkusプラットフォームディスクリプタは、プラットフォームとそのエクステンションに関する情報をQuarkusツールに提供するJSONアーティファクトです。例： http://code.quarkus.io やQuarkusコマンドラインツールは、ユーザーの要求に応じて、このディスクリプタを参照して、プロジェクトへのエクステンションのリスト化、追加、削除を行います。このアーティファクトは、Quarkusプラットフォームディスクリプタとしても使用されます。Quarkusツールがプロジェクトで使用されているQuarkusプラットフォームを識別する必要がある場合、プロジェクトの依存関係バージョン制約（Maven用語では、 `dependencyManagement` セクションから管理されている依存関係の有効なリスト）を分析して、その中からプラットフォームディスクリプタのアーティファクトを探します。プラットフォームディスクリプタがQuarkusプラットフォームBOMに含まれていることを考えると、すべてのQuarkusアプリケーションは、インポートされたプラットフォームBOMからのプラットフォームディスクリプタアーティファクトを依存関係バージョン制約（Maven用語では管理された依存関係）として継承します。"

#. type: Plain text
#: upstream/_versions/2.7/guides/platform.adoc:40
msgid "To be able to easily identify Quarkus platform descriptors among the project's dependency constraints, the platform descriptor Maven artifact coordinates should follow the following naming convention:"
msgstr "プロジェクトの依存性制約の中でQuarkusプラットフォームディスクリプタを簡単に識別できるように、プラットフォームディスクリプタのMavenアーティファクト座標は、以下の命名規則に従う必要があります。"

#. type: Plain text
#: upstream/_versions/2.7/guides/platform.adoc:42
msgid "the `groupId` of the descriptor artifact should match the `groupId` of the corresponding Quarkus Platform BOM;"
msgstr "ディスクリプタアーティファクトの `groupId` は、対応するQuarkus Platform BOMの `groupId` と一致している必要があります。"

#. type: Plain text
#: upstream/_versions/2.7/guides/platform.adoc:43
msgid "the `artifactId` of the descriptor artifact should be the `artifactId` of the corresponding Quarkus Platform BOM with the `-quarkus-platform-descriptor` suffix;"
msgstr "ディスクリプタアーティファクトの `artifactId` は、対応するQuarkus Platform BOMの `artifactId` で、サフィックスが `-quarkus-platform-descriptor` である必要があります。"

#. type: Plain text
#: upstream/_versions/2.7/guides/platform.adoc:44
msgid "the `classifier` of the descriptor artifact should match the `version` of the corresponding Quarkus Platform BOM;"
msgstr "ディスクリプタアーティファクトの `classifier` は、対応するQuarkus Platform BOMの `version` と一致している必要があります。"

#. type: Plain text
#: upstream/_versions/2.7/guides/platform.adoc:45
msgid "the `type` of the descriptor artifact should be `json`;"
msgstr "ディスクリプタアーティファクトの `type` は `json` である必要があります。"

#. type: Plain text
#: upstream/_versions/2.7/guides/platform.adoc:46
#: upstream/_versions/2.7/guides/platform.adoc:102
msgid "the `version` of the descriptor artifact should match the `version` of the corresponding Quarkus Platform BOM."
msgstr "ディスクリプタアーティファクトの `version` は、対応するQuarkus Platform BOMの `version` と一致している必要があります。"

#. type: Plain text
#: upstream/_versions/2.7/guides/platform.adoc:48
msgid "As a string it will look like `<platform-bom-groupId>:<platform-bom-artifactId>-quarkus-platform-descriptor:<platform-version>:json:<platform-version>`"
msgstr "文字列としては次のようになります： `<platform-bom-groupId>:<platform-bom-artifactId>-quarkus-platform-descriptor:<platform-version>:json:<platform-version>`"

#. type: Plain text
#: upstream/_versions/2.7/guides/platform.adoc:51
msgid "E.g. the coordinates of the descriptor for the Quarkus BOM `io.quarkus.platform:quarkus-bom::pom:1.2.3` will be `io.quarkus.platform:quarkus-bom-quarkus-platform-descriptor:1.2.3:json:1.2.3`.  And for a custom Quarkus platform defined with BOM `org.acme:acme-bom::pom:555` it will be `org.acme:acme-bom-quarkus-platform-descriptor:555:json:555`."
msgstr "例えば、Quarkus BOM `io.quarkus:quarkus-bom::pom:1.2.3` のディスクリプタの座標は `io.quarkus:quarkus-bom-quarkus-platform-descriptor:1.2.3:json:1.2.3` となります。また、BOM `org.acme:acme-bom::pom:555` で定義されたカスタムQuarkusプラットフォームの場合は、 `org.acme:acme-bom-quarkus-platform-descriptor:555:json:555` です。"

#. type: Plain text
#: upstream/_versions/2.7/guides/platform.adoc:53
msgid "The classifier matching the version of the platform may look confusing at first. But this is what turns the descriptor into a true \"fingerprint\" of the platform. In both Maven and Gradle, the effective set of the dependency version constraints (or the managed dependencies) is obtained by merging all the imported BOMs and version constraints specified individually in the current project and also its parent(s). The artifact `classifier` is a part of the dependency ID, which could be expressed as `groupId:artifactId:classifier:type`. Which means that if a project imports a couple of BOMs, e.g. `org.apple:apple-bom::pom:1.0` and `org.orange:orange-bom::pom:1.0`, and each of these two BOMs imports a different version `io.quarkus.platform:quarkus-bom::pom`, the Quarkus tools will be able to detect this fact and make the user aware of it, since it *might* not be a safe combination. If the descriptor artifact didn't include the classifer containing the version of the platform then the tools wouldn't be able to detect a potentially incompatible mix of different versions of the same platform in the same project."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/platform.adoc:55
msgid "The platform descriptor will normally be generated using a Maven plugin, e.g."
msgstr "プラットフォームディスクリプタは通常、Mavenプラグインを使用して生成されます。"

#. type: delimited block -
#: upstream/_versions/2.7/guides/platform.adoc:78
#, no-wrap
msgid ""
"<plugin>\n"
"  <groupId>io.quarkus</groupId>\n"
"  <artifactId>quarkus-platform-descriptor-json-plugin</artifactId>\n"
"  <version>${quarkus.version}</version> <1>\n"
"  <executions>\n"
"    <execution>\n"
"      <phase>process-resources</phase>\n"
"      <goals>\n"
"        <goal>generate-extensions-json</goal> <2>\n"
"      </goals>\n"
"    </execution>\n"
"  </executions>\n"
"  <configuration>\n"
"    <bomGroupId>${quarkus.platform.group-id}</bomGroupId> <3>\n"
"    <bomArtifactId>${quarkus.platform.artifact-id}</bomArtifactId> <4>\n"
"    <bomVersion>${quarkus.platform.version}</bomVersion> <5>\n"
"    <overridesFile>${overridesfile}</overridesFile> <6>\n"
"    <resolveDependencyManagement>true</resolveDependencyManagement> <7>\n"
"  </configuration>\n"
"</plugin>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/platform.adoc:81
msgid "the version of the `quarkus-platform-descriptor-json-plugin`"
msgstr "`quarkus-platform-descriptor-json-plugin` のバージョン"

#. type: Plain text
#: upstream/_versions/2.7/guides/platform.adoc:82
msgid "`generate-extensions-json` is the goal generating the platform descriptor"
msgstr "`generate-extensions-json` は、プラットフォームディスクリプタを生成するゴールです。"

#. type: Plain text
#: upstream/_versions/2.7/guides/platform.adoc:83
msgid "the `groupId` of the platform BOM"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/platform.adoc:84
msgid "the `artifactId` of the platform BOM"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/platform.adoc:85
msgid "the `version` of the platform BOM"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/platform.adoc:86
msgid "this parameter is optional, it allows to override some metadata from the Quarkus extension descriptors found in every runtime extension artifact from which the platform descriptor is generated"
msgstr "このパラメータはオプションで、プラットフォームディスクリプタが生成されるすべてのランタイムエクステンションアーティファクトに含まれるQuarkusエクステンションディスクリプタのメタデータの一部をオーバーライドすることができます。"

#. type: Plain text
#: upstream/_versions/2.7/guides/platform.adoc:87
msgid "this parameter is also optional and defaults to false. It has to be set to true in case the platform BOM *is not generated* and *is not flattened*. Which for example is the case for `io.quarkus:quarkus-bom`."
msgstr "このパラメータもオプションで、デフォルトは false です。プラットフォームBOMが *生成されず* 、平坦 *化されていない* 場合はtrueに設定しなければなりません。たとえば、 `io.quarkus:quarkus-bom` となります。"

#. type: Title ===
#: upstream/_versions/2.7/guides/platform.adoc:89
#, no-wrap
msgid "Quarkus Platform Properties"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/platform.adoc:92
msgid "A Quarkus platform may provide its own default values for some of the configuration options."
msgstr "Quarkusプラットフォームでは、一部の設定オプションに対して独自のデフォルト値を提供している場合があります。"

#. type: Plain text
#: upstream/_versions/2.7/guides/platform.adoc:94
msgid "Quarkus is using https://github.com/smallrye/smallrye-config[SmallRye Config] for wiring application configuration. A Quarkus platform may be used as another source of configuration in the hierarchy of the configuration sources dominated by the application's `application.properties`."
msgstr "Quarkusは、アプリケーション設定の接続に link:https://github.com/eclipse/microprofile-config[SmallRye Config]を使用しています。Quarkusプラットフォームは、アプリケーションの `application.properties` によって支配されている構成ソースの階層の別の構成ソースとして使用することができます。"

#. type: Plain text
#: upstream/_versions/2.7/guides/platform.adoc:96
msgid "To provide platform-specific defaults, the platform needs to include a dependency version constraint in its BOM for a properties artifact whose coordinates follow the following naming convention:"
msgstr "プ ラ ッ ト フ ォーム固有のデフ ォル ト を提供す る には、 プ ラ ッ ト フ ォームは、 座標が下記の命名規則に従っ てい る プ ロ パテ ィ アーテ ィ フ ァ ク ト に対 し て、 その BOM 内に依存バージ ョ ン制約を含める必要があ り ます。"

#. type: Plain text
#: upstream/_versions/2.7/guides/platform.adoc:98
msgid "the `groupId` of the properties artifact should match the `groupId` of the corresponding Quarkus Platform BOM;"
msgstr "プロパティアーティファクトの `groupId` は、対応するQuarkus Platform BOMの `groupId` と一致している必要があります。"

#. type: Plain text
#: upstream/_versions/2.7/guides/platform.adoc:99
msgid "the `artifactId` of the properties artifact should be the `artifactId` of the corresponding Quarkus Platform BOM with the `-quarkus-platform-properties` suffix;"
msgstr "プロパティアーティファクトの `artifactId` は、対応するQuarkus Platform BOMの `artifactId` で、サフィックスが `-quarkus-platform-properties` である必要があります。"

#. type: Plain text
#: upstream/_versions/2.7/guides/platform.adoc:100
msgid "the `classifier` of the descriptor artifact should be left empty/null;"
msgstr "ディスクリプタアーティファクトの `classifier` は空/NULL のままの必要があります。"

#. type: Plain text
#: upstream/_versions/2.7/guides/platform.adoc:101
msgid "the `type` of the descriptor artifact should be `properties`;"
msgstr "ディスクリプタアーティファクトの `type` は `properties` である必要があります。"

#. type: Plain text
#: upstream/_versions/2.7/guides/platform.adoc:104
msgid "The properties artifact itself is expected to be a traditional `properties` file that will be loaded into an instance of `java.util.Properties` class."
msgstr "プロパティ・アーティファクト自体は、 `java.util.Properties` クラスのインスタンスにロードされる伝統的な `properties` ファイルであることが期待されます。"

#. type: Plain text
#: upstream/_versions/2.7/guides/platform.adoc:106
msgid "At this point, platform properties are only allowed to provide the default values for a restricted set of configuration options. The property names in the platform properties file must be prefixed with the `platform.` suffix."
msgstr "この時点では、プラットフォームプロパティは、制限された設定オプションのセットに対してデフォルト値を提供することのみが許可されています。プラットフォームプロパティファイルのプロパティ名の前には、 `platform.` という接尾辞を付けなければなりません。"

#. type: Plain text
#: upstream/_versions/2.7/guides/platform.adoc:108
msgid "Extension developers that want to make their configuration options platform-specific should set their default values to properties that start with the `platform.` suffix. Here is an example:"
msgstr "設定オプションをプラットフォーム固有のものにしたいエクステンションの開発者は、デフォルト値を `platform.` で始まるプロパティに設定しなければなりません。以下に例を示します。"

#. type: delimited block -
#: upstream/_versions/2.7/guides/platform.adoc:112
#, no-wrap
msgid "package io.quarkus.deployment.pkg;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/platform.adoc:115
#, no-wrap
msgid ""
"@ConfigRoot(phase = ConfigPhase.BUILD_TIME)\n"
"public class NativeConfig {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/platform.adoc:122
#, no-wrap
msgid ""
"    /**\n"
"     * The docker image to use to do the image build\n"
"     */\n"
"    @ConfigItem(defaultValue = \"${platform.quarkus.native.builder-image}\")\n"
"    public String builderImage;\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/platform.adoc:126
msgid "In this case the default value for `quarkus.native.builder-image` will be provided by the platform. The user will still be able to set the desired value for `quarkus.native.builder-image` in its `application.properties`, of course. But in case it's not customized by the user, the default value will be coming from the platform properties.  A platform properties file for the example above would contain (the actual value is provided as an example):"
msgstr "この場合、 `quarkus.native.builder-image` のデフォルト値はプラットフォームによって提供されます。もちろん、ユーザーは `application.properties` で `quarkus.native.builder-image` に希望の値を設定することができます。しかし、ユーザーがカスタマイズしていない場合は、デフォルト値はプラットフォームのプロパティから提供されます。上記の例のプラットフォームのプロパティファイルには、以下のようなものが含まれています（実際の値は例として提供されています）。"

#. type: delimited block -
#: upstream/_versions/2.7/guides/platform.adoc:130
#, no-wrap
msgid "platform.quarkus.native.builder-image=quay.io/quarkus/ubi-quarkus-native-image:{graalvm-flavor}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/platform.adoc:133
msgid "There is also a Maven plugin goal that validates the platform properties content and its artifact coordinates and also checks whether the platform properties artifact is present in the platform's BOM. Here is a sample plugin configuration:"
msgstr "また、プラットフォームプロパティのコンテンツとそのアーティファクトの座標を検証し、プラットフォームプロパティのアーティファクトがプラットフォームのBOMに存在するかどうかをチェックするMavenプラグインのゴールもあります。ここでは、プラグインの構成例を示します。"

#. type: delimited block -
#: upstream/_versions/2.7/guides/platform.adoc:149
#, no-wrap
msgid ""
"<plugin>\n"
"  <groupId>io.quarkus</groupId>\n"
"  <artifactId>quarkus-platform-descriptor-json-plugin</artifactId>\n"
"  <version>${quarkus.version}</version>\n"
"  <executions>\n"
"    <execution>\n"
"      <phase>process-resources</phase>\n"
"      <goals>\n"
"        <goal>platform-properties</goal>\n"
"      </goals>\n"
"    </execution>\n"
"  </executions>\n"
"</plugin>\n"
msgstr ""

#. type: Title ====
#: upstream/_versions/2.7/guides/platform.adoc:151
#, no-wrap
msgid "Merging Quarkus Platform Properties"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/platform.adoc:155
msgid "In case an application is importing more than one Quarkus platform and those platforms include their own platform properties artifacts, the content of those platform properties artifacts will be merged to form a single set of properties that will be used for the application build.  The order in which the properties artifacts are merged will correspond to the order in which they appear in the list of dependency version constraints of the application (in the Maven terms that will correspond to the effective list of application's managed dependencies, i.e. the flattened `managedDependencies` POM section)."
msgstr "アプリケーションが複数のQuarkusプラットフォームをインポートしており、それらのプラットフォームが独自のプラットフォームプロパティアーティファクトを含んでいる場合、それらのプラットフォームプロパティアーティファクトのコンテンツは、アプリケーションのビルドに使用される単一のプロパティセットを形成するためにマージされます。プロパティアーティファクトがマージされる順番は、アプリケーションの依存関係バージョン制約のリストに表示される順番に対応します（Maven用語では、アプリケーションの管理された依存関係の実際のリスト、すなわちフラット化された `managedDependencies` POMセクションに対応します）。"

#. type: Plain text
#: upstream/_versions/2.7/guides/platform.adoc:157
msgid "The content of the properties artifacts found earlier will dominate over those found later among the application's dependency constraints!"
msgstr "アプリケーションの依存性制約の中では、先に見つかったプロパティアーティファクトの内容が、後に見つかったものよりも優先されます。"

#. type: Plain text
#: upstream/_versions/2.7/guides/platform.adoc:159
msgid "That means if a platform needs to override a certain property value defined in the platform it is based on, it will need to include its platform properties artifact into the `managedDependencies` section of its BOM before importing the base platform."
msgstr "つまり、あるプラットフォームがベースとなるプラットフォームで定義されている特定のプロパティ値をオーバーライドする必要がある場合は、ベースとなるプラットフォームをインポートする前に、そのプラットフォームのプロパティアーティファクトをBOMの `managedDependencies` セクションに含める必要があります。"

#. type: Plain text
#: upstream/_versions/2.7/guides/platform.adoc:161
msgid "For example, let's assume `org.acme:acme-quarkus-bom` platform extends the `io.quarkus:quarkus-bom` platform by importing its BOM. In case, the `org.acme:acme-quarkus-bom` platform were to override certain properties defined in the `io.quarkus:quarkus-bom-quarkus-platform-properties` included in the `io.quarkus:quarkus-bom`, the `org.acme:acme-quarkus-bom` would have to be composed as"
msgstr "例えば、 `org.acme:acme-quarkus-bom` プラットフォームは `io.quarkus:quarkus-bom` プラットフォームをベースにしています。 `org.acme:acme-quarkus-bom` プラットフォームが、 `io.quarkus:quarkus-bom` プラットフォームに含まれる `io.quarkus:quarkus-bom-quarkus-platform-properties` で定義された特定のプロパティを上書きする場合、 `org.acme:acme-quarkus-bom` は次のように構成されなければなりません。"

#. type: delimited block -
#: upstream/_versions/2.7/guides/platform.adoc:164
#: upstream/_versions/2.7/guides/platform.adoc:189
#, no-wrap
msgid "  <!-- skipped content -->\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/platform.adoc:168
#, no-wrap
msgid ""
"  <artifactId>acme-quarkus-bom</artifactId>\n"
"  <name>Acme - Quarkus - BOM</name>\n"
"  <packaging>pom</packaging>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/platform.adoc:178
#, no-wrap
msgid ""
"  <dependencyManagement>\n"
"    <dependencies>\n"
"      <!-- Acme Quarkus platform properties -->\n"
"      <dependency>\n"
"        <groupId>org.acme</groupId>\n"
"        <artifactId>acme-quarkus-bom-quarkus-platform-properties</artifactId>\n"
"        <type>properties</type>\n"
"        <version>${project.version}</version>\n"
"      </dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/platform.adoc:187
#, no-wrap
msgid ""
"      <!-- The base Quarkus BOM -->\n"
"      <dependency>\n"
"        <groupId>io.quarkus</groupId>\n"
"        <artifactId>quarkus-bom</artifactId>\n"
"        <version>${quarkus.version}</version>\n"
"        <type>pom</type>\n"
"        <scope>import</scope>\n"
"      </dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/platform.adoc:191
msgid "That way, the `org.acme:acme-quarkus-bom` platform properties will appear before those provided by the `io.quarkus:quarkus-bom` properties and so will be dominating at build time."
msgstr "こうすることで、 `org.acme:acme-quarkus-bom` のプラットフォーム・プロパティが `io.quarkus:quarkus-bom のプラットフォーム・プロパティよりも先に現れる為、ビルドの際に優先されます。"

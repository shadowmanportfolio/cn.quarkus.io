# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-04-29 21:23+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: author
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:1
#, fuzzy, no-wrap
msgid "phillipkruger"
msgstr "フィリップクルー"

#. type: YAML Front Matter: date
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:1
#, fuzzy, no-wrap
msgid "2020-08-19"
msgstr "2020-08-19"

#. type: YAML Front Matter: layout
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:1
#, fuzzy, no-wrap
msgid "post"
msgstr "ポスト"

#. type: YAML Front Matter: synopsis
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:1
#, fuzzy, no-wrap
msgid "Exploring some SmallRye OpenAPI features"
msgstr "SmallRye OpenAPIのいくつかの機能を探る"

#. type: YAML Front Matter: tags
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:1
#, fuzzy, no-wrap
msgid "extension openapi"
msgstr "拡張オープンアピ"

#. type: Title =
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:1
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:11
#, fuzzy, no-wrap
msgid "MicroProfile OpenAPI for everyone"
msgstr "MicroProfile OpenAPI for everyone"

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:16
#, fuzzy
msgid "https://github.com/eclipse/microprofile-open-api[MicroProfile OpenAPI] is primarily used for adding https://swagger.io/specification/[OpenAPI] to https://projects.eclipse.org/projects/ee4j.jaxrs[JAX-RS] Endpoints. In this blog post we will look at how the https://github.com/smallrye/smallrye-open-api[SmallRye Implementation] extends this with some extra features, and support for more web frameworks, when used in Quarkus."
msgstr "link:https://github.com/eclipse/microprofile-open-api[MicroProfile OpenAPI]は、主に link:https://projects.eclipse.org/projects/ee4j.jaxrs[JAX-RS]エンドポイントに link:https://swagger.io/specification/[OpenAPI]を追加するために使用されます。このブログ記事では、 link:https://github.com/smallrye/smallrye-open-api[SmallRye実装]がどのようにこの機能を拡張し、Quarkusで使用する際に、より多くのウェブフレームワークをサポートするかを見ていきます。"

#. type: Title ==
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:17
#, fuzzy, no-wrap
msgid "Using Quarkus"
msgstr "Quarkusの使い方"

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:21
#, fuzzy
msgid "The example code is available https://github.com/phillip-kruger/openapi-example[here]. You can also initialize a project using https://code.quarkus.io/[code.quarkus.io] - just make sure to include the SmallRye OpenAPI Extension."
msgstr "サンプルコードは link:https://github.com/phillip-kruger/openapi-example[こちら]でご覧いただけます。また、 link:https://code.quarkus.io/[code.quarkus.io]を使用してプロジェクトを初期化することもできます（SmallRye OpenAPI Extensionが含まれていることを確認してください）。"

#. type: Title ==
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:22
#, fuzzy, no-wrap
msgid "JAX-RS"
msgstr "JAX-RS"

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:26
#, fuzzy
msgid "Let's start with a basic JAX-RS Example in Quarkus. We have a `Greeting` Object, that has a `message` and a `to` field, and we will create `GET`, `POST` and `DELETE` endpoints for the greeting."
msgstr "まずは、Quarkusの基本的なJAX-RSの例を見てみましょう。 `message` と `to` のフィールドを持つ `Greeting` オブジェクトがあり、挨拶のために `GET` 、 `POST` 、 `DELETE` のエンドポイントを作成します。"

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:28
#, fuzzy
msgid "Apart from the usual Quarkus setup, you also need the following in your `pom.xml` to create a JAX-RS Endpoint:"
msgstr "通常のQuarkusの設定とは別に、JAX-RS Endpointを作成するためには、 `pom.xml` 、以下のものが必要です。"

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:36
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-smallrye-openapi</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:41
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-resteasy</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:46
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-resteasy-jsonb</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:50
#, fuzzy
msgid "In Quarkus you do not need an `Application` class, we can just add the Endpoint class:"
msgstr "Quarkusでは、 `Application` クラスは必要ありません。エンドポイントクラスを追加するだけです。"

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:58
#, no-wrap
msgid ""
"@Path(\"/jax-rs\")\n"
"@Produces(MediaType.APPLICATION_JSON)\n"
"@Consumes(MediaType.APPLICATION_JSON)\n"
"public class JaxRsGreeting {\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:64
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/hello\")\n"
"    public Greeting helloJaxRs() {\n"
"        return new Greeting(\"Hello\", \"JAX-RS\");\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:70
#, no-wrap
msgid ""
"    @POST\n"
"    @Path(\"/hello\")\n"
"    public Greeting newHelloJaxRs(Greeting greeting) {\n"
"        return greeting;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:76
#, no-wrap
msgid ""
"    @DELETE\n"
"    @Path(\"/hello/{message}\")\n"
"    public void deleteHelloJaxRs(@PathParam(\"message\") String message) {\n"
"        // Here do the delete...\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:78
#, no-wrap
msgid "}\n"
msgstr "}\n"

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:83
#, fuzzy
msgid "So far we have not yet added any MicroProfile OpenAPI Annotations, but because we added the `quarkus-smallrye-openapi` extension, we will already have a Schema document generated under `/openapi`:"
msgstr "これまでのところ、MicroProfile OpenAPI Annotationsはまだ追加されていませんが、 `quarkus-smallrye-openapi` 拡張機能を追加したので、 `/openapi` の下で生成されたSchemaドキュメントがすでにあります。"

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:87
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:171
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:225
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:294
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:354
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:454
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:569
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:625
#, no-wrap
msgid "---\n"
msgstr "---\n"

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:135
#, no-wrap
msgid ""
"openapi: 3.0.3\n"
"info:\n"
"  title: Generated API\n"
"  version: \"1.0\"\n"
"paths:\n"
"  /jax-rs/hello:\n"
"    get:\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            application/json:\n"
"              schema:\n"
"                $ref: '#/components/schemas/Greeting'\n"
"    post:\n"
"      requestBody:\n"
"        content:\n"
"          application/json:\n"
"            schema:\n"
"              $ref: '#/components/schemas/Greeting'\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            application/json:\n"
"              schema:\n"
"                $ref: '#/components/schemas/Greeting'\n"
"  /jax-rs/hello/{message}:\n"
"    delete:\n"
"      parameters:\n"
"      - name: message\n"
"        in: path\n"
"        required: true\n"
"        schema:\n"
"          type: string\n"
"      responses:\n"
"        \"204\":\n"
"          description: No Content\n"
"components:\n"
"  schemas:\n"
"    Greeting:\n"
"      type: object\n"
"      properties:\n"
"        message:\n"
"          type: string\n"
"        to:\n"
"          type: string\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:139
#, fuzzy
msgid "See https://quarkus.io/guides/rest-json[quarkus.io/guides/rest-json] for more information."
msgstr "詳細は link:https://quarkus.io/guides/rest-json[quarkus.io/guides/rest-json]を参照してください。"

#. type: Title ==
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:140
#, no-wrap
msgid "OpenAPI"
msgstr "OpenAPI"

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:143
#, fuzzy
msgid "You can add more information to the generated schema document by using MicroProfile OpenAPI."
msgstr "生成されたスキーマドキュメントには、MicroProfile OpenAPIを使用することで、より多くの情報を追加することができます。"

#. type: Title ===
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:144
#, fuzzy, no-wrap
msgid "Header information using config"
msgstr "コンフィグによるヘッダー情報"

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:149
#, fuzzy
msgid "One feature that we added to SmallRye is the ability to add header information, that you typically add to the `Application` class using annotations, with MicroProfile config. This is useful in Quarkus where you do not need an `Application` class. So adding the following to the `application.properties` will give you some header information:"
msgstr "SmallRyeに追加した機能の1つに、通常はアノテーションを使って `Application` クラスに追加するヘッダー情報を、MicroProfile設定で追加する機能があります。これは、 `Application` クラスを必要としないQuarkusにおいて有用です。つまり、 `application.properties` に以下のように追加すると、ヘッダー情報が得られます。"

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:163
#, no-wrap
msgid ""
"mp.openapi.extensions.smallrye.info.title=OpenAPI for Everyone\n"
"%dev.mp.openapi.extensions.smallrye.info.title=OpenAPI for Everyone (development)\n"
"%test.mp.openapi.extensions.smallrye.info.title=OpenAPI for Everyone (test)\n"
"mp.openapi.extensions.smallrye.info.version=1.0.0\n"
"mp.openapi.extensions.smallrye.info.description=Example on how to use OpenAPI everywhere\n"
"mp.openapi.extensions.smallrye.info.contact.email=phillip.kruger@redhat.com\n"
"mp.openapi.extensions.smallrye.info.contact.name=Phillip Kruger\n"
"mp.openapi.extensions.smallrye.info.contact.url=https://www.phillip-kruger.com\n"
"mp.openapi.extensions.smallrye.info.license.name=Apache 2.0\n"
"mp.openapi.extensions.smallrye.info.license.url=http://www.apache.org/licenses/LICENSE-2.0.html\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:167
#, fuzzy
msgid "Now look at the header of the generated schema document under `/openapi`:"
msgstr "ここで，生成されたスキーマドキュメントのヘッダ（ `/openapi` ）を見てみましょう．"

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:184
#, no-wrap
msgid ""
"openapi: 3.0.3\n"
"info:\n"
"  title: OpenAPI for Everyone (development)\n"
"  description: Example on how to use OpenAPI everywhere\n"
"  contact:\n"
"    name: Phillip Kruger\n"
"    url: https://www.phillip-kruger.com\n"
"    email: phillip.kruger@redhat.com\n"
"  license:\n"
"    name: Apache 2.0\n"
"    url: http://www.apache.org/licenses/LICENSE-2.0.html\n"
"  version: 1.0.0\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:186
#, no-wrap
msgid "# Rest of the schema document...\n"
msgstr ""

#. type: Title ===
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:189
#, fuzzy, no-wrap
msgid "Adding some OpenAPI Annotations to your operations"
msgstr "オペレーションにOpenAPIアノテーションを追加する"

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:192
#, fuzzy
msgid "You can use any of the annotations in MicroProfile OpenAPI to further describe your endpoint, for example the `Tag` annotation:"
msgstr "MicroProfile OpenAPIのアノテーションのいずれかを使用して、エンドポイントをさらに説明することができます。たとえば、 `Tag` アノテーションがあります。"

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:203
#, no-wrap
msgid ""
"@Path(\"/jax-rs\")\n"
"@Produces(MediaType.APPLICATION_JSON)\n"
"@Consumes(MediaType.APPLICATION_JSON)\n"
"@Tag(name = \"JAX-RS Resource\", description = \"Basic Hello World using JAX-RS\") // <1>\n"
"public class JaxRsGreeting {\n"
"    //...\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:206
#, fuzzy
msgid "Example usage of MicroProfile OpenAPI annotation."
msgstr "MicroProfile OpenAPIアノテーションの使用例です。"

#. type: Title ===
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:207
#, fuzzy, no-wrap
msgid "Auto generate the operation id"
msgstr "オペレーションIDの自動生成"

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:212
#, fuzzy
msgid "Some tools that use the schema document to generate client stubs, need an `operationId` in the schema document that is used to name the client stub methods.  We added support in SmallRye to auto generate this using either the method name (`METHOD`), class and method name (`CLASS_METHOD`), or package, class and method name (`PACKAGE_CLASS_METHOD`).  To do this add the following to `application.properties`:"
msgstr "スキーマドキュメントを使用してクライアントスタブを生成するツールの中には、クライアントスタブのメソッド名に使用されるスキーマドキュメント内の `operationId` が必要なものがあります。SmallRyeでは、メソッド名( `METHOD`)、クラスおよびメソッド名( `CLASS_METHOD`)、またはパッケージ、クラスおよびメソッド名( `PACKAGE_CLASS_METHOD`)のいずれかを使用してこれを自動生成するサポートを追加しました。これを行うには、 `application.properties` に次のように追加します。"

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:217
#, no-wrap
msgid "mp.openapi.extensions.smallrye.operationIdStrategy=METHOD\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:221
#, fuzzy
msgid "You will now see the `operationId` in the schema document for every operation:"
msgstr "これで、すべての操作について、スキーマ・ドキュメントに `operationId` が表示されます。"

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:227
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:356
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:456
msgid "openapi: 3.0.3"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:229
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:358
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:458
msgid "# Header omitted..."
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:272
#, no-wrap
msgid ""
"/jax-rs/hello:\n"
"    get:\n"
"      tags:\n"
"      - JAX-RS Resource\n"
"      operationId: helloJaxRs // <1>\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            application/json:\n"
"              schema:\n"
"                $ref: '#/components/schemas/Greeting'\n"
"    post:\n"
"      tags:\n"
"      - JAX-RS Resource\n"
"      operationId: newHelloJaxRs // <1>\n"
"      requestBody:\n"
"        content:\n"
"          application/json:\n"
"            schema:\n"
"              $ref: '#/components/schemas/Greeting'\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            application/json:\n"
"              schema:\n"
"                $ref: '#/components/schemas/Greeting'\n"
"  /jax-rs/hello/{message}:\n"
"    delete:\n"
"      tags:\n"
"      - JAX-RS Resource\n"
"      operationId: deleteHelloJaxRs // <1>\n"
"      parameters:\n"
"      - name: message\n"
"        in: path\n"
"        required: true\n"
"        schema:\n"
"          type: string\n"
"      responses:\n"
"        \"204\":\n"
"          description: No Content\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:275
#, fuzzy
msgid "Auto generated `operationId`"
msgstr "自動生成 `operationId`"

#. type: Title ===
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:276
#, fuzzy, no-wrap
msgid "Changing the OpenAPI version"
msgstr "OpenAPIバージョンの変更"

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:281
#, fuzzy
msgid "Some API gateways might require a certain OpenAPI version to work. The schema document generated by the SmallRye extension will generate with `3.0.3` as the version, but since there is only minor differences between these versions, you can change that to `3.0.0`, `3.0.1` or `3.0.2`. You can do this by adding this in `application.properties`:"
msgstr "APIゲートウェイによっては、動作に特定のOpenAPIバージョンを必要とする場合があります。SmallRye 拡張機能によって生成されたスキーマドキュメントは、バージョンとして `3.0.3` で生成されますが、これらのバージョンにはわずかな違いしかないため、 `3.0.0` 、 `3.0.1` または `3.0.2` に変更することができます。これを行うには、 `application.properties` にこれを追加します。"

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:286
#, no-wrap
msgid "mp.openapi.extensions.smallrye.openapi=3.0.2\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:290
#, fuzzy
msgid "Now the version generated will be:"
msgstr "これで、生成されるバージョンは"

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:296
msgid "openapi: 3.0.2"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:298
msgid "# Rest of the document..."
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:302
#, fuzzy
msgid "See https://quarkus.io/guides/openapi-swaggerui[quarkus.io/guides/openapi-swaggerui] for more information."
msgstr "詳細は link:https://quarkus.io/guides/openapi-swaggerui[quarkus.io/guides/openapi-swaggerui]を参照してください。"

#. type: Title ==
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:303
#, fuzzy, no-wrap
msgid "Spring Web"
msgstr "春のWeb"

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:308
#, fuzzy
msgid "Recently support for Spring Web has been added in SmallRye OpenAPI, this means that, not only will you see the default OpenAPI document when you use Spring Web in Quarkus, but you can also use MicroProfile OpenAPI to further describe your Spring Web endpoints."
msgstr "最近、SmallRye OpenAPIにSpring Webのサポートが追加されました。これは、QuarkusでSpring Webを使用する際にデフォルトのOpenAPIドキュメントが表示されるだけでなく、MicroProfile OpenAPIを使用してSpring Webのエンドポイントをさらに記述することができることを意味しています。"

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:310
#, fuzzy
msgid "Let's add a Spring Rest Controller to our current application. First add this in your `pom.xml`:"
msgstr "それでは、現在のアプリケーションにSpring Rest Controllerを追加してみましょう。まず、 `pom.xml` にこれを追加します。"

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:318
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-spring-web</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:322
#, fuzzy
msgid "Now you can create a similar endpoint to the JAX-RS one we have looked at so far, but using Spring Web:"
msgstr "これで、これまで見てきたJAX-RSと同じようなエンドポイントを、Spring Webを使って作ることができます。"

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:330
#, no-wrap
msgid ""
"@RestController\n"
"@RequestMapping(value = \"/spring\", produces = MediaType.APPLICATION_JSON_VALUE)\n"
"@Tag(name = \"Spring Resource\", description = \"Basic Hello World using Spring\")\n"
"public class SpringGreeting {\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:335
#, no-wrap
msgid ""
"    @GetMapping(\"/hello\")\n"
"    public Greeting helloSpring() {\n"
"        return new Greeting(\"Hello\", \"Spring\");\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:340
#, no-wrap
msgid ""
"    @PostMapping(\"/hello\")\n"
"    public Greeting newHelloSpring(@RequestBody Greeting greeting) {\n"
"        return greeting;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:346
#, no-wrap
msgid ""
"    @DeleteMapping(\"/hello/{message}\")\n"
"    public void deleteHelloSpring(@PathVariable(name = \"message\") String message) {\n"
"        // Here do the delete...\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:350
#, fuzzy
msgid "The Spring annotations will be scanned and this will be added to your schema document:"
msgstr "春のアノテーションがスキャンされ、これがスキーマドキュメントに追加されます。"

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:401
#, no-wrap
msgid ""
"/spring/hello:\n"
"    get:\n"
"      tags:\n"
"      - Spring Resource\n"
"      operationId: helloSpring\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            application/json:\n"
"              schema:\n"
"                $ref: '#/components/schemas/Greeting'\n"
"    post:\n"
"      tags:\n"
"      - Spring Resource\n"
"      operationId: newHelloSpring\n"
"      requestBody:\n"
"        content:\n"
"          '_/_':\n"
"            schema:\n"
"              $ref: '#/components/schemas/Greeting'\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            application/json:\n"
"              schema:\n"
"                $ref: '#/components/schemas/Greeting'\n"
"  /spring/hello/{message}:\n"
"    delete:\n"
"      tags:\n"
"      - Spring Resource\n"
"      operationId: deleteHelloSpring\n"
"      parameters:\n"
"      - name: message\n"
"        in: path\n"
"        required: true\n"
"        schema:\n"
"          type: string\n"
"      responses:\n"
"        \"204\":\n"
"          description: No Content\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:405
#, fuzzy
msgid "See https://quarkus.io/guides/spring-web[quarkus.io/guides/spring-web] for more information."
msgstr "詳細は link:https://quarkus.io/guides/spring-web[quarkus.io/guides/spring-web]を参照してください。"

#. type: Title ==
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:406
#, fuzzy, no-wrap
msgid "Vert.x Reactive Routes"
msgstr "Vert.x リアクティブ・ルート"

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:410
#, fuzzy
msgid "In Quarkus, you can also build Vert.x endpoints using Reactive Routes. Similarly to Spring Web, your endpoints will be available in the OpenAPI Schema and can be further described using MicroProfile OpenAPI. To add a Vert.x Reactive Route in Quarkus, you need the following in your `pom.xml`:"
msgstr "Quarkusでは、Reactive Routesを使用してVert.xのエンドポイントを構築することもできます。Spring Webと同様に、エンドポイントはOpenAPI Schemaで利用でき、MicroProfile OpenAPIを使用してさらに記述することができます。QuarkusでVert.xのReactive Routeを追加するには、 `pom.xml` に以下のものが必要です。"

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:418
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-vertx-web</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:422
#, fuzzy
msgid "Now you can create the endpoint:"
msgstr "これで、エンドポイントを作成することができます。"

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:430
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"@RouteBase(path = \"/vertx\", produces = \"application/json\")\n"
"@Tag(name = \"Vert.x Resource\", description = \"Basic Hello World using Vert.x\")\n"
"public class VertxGreeting {\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:435
#, no-wrap
msgid ""
"    @Route(path = \"/hello\", methods = HttpMethod.GET)\n"
"    public Greeting helloVertX() {\n"
"        return new Greeting(\"Hello\", \"Vert.x\");\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:440
#, no-wrap
msgid ""
"    @Route(path = \"/hello\", methods = HttpMethod.POST)\n"
"    public Greeting newHelloVertX(@Body Greeting greeting) {\n"
"        return greeting;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:446
#, no-wrap
msgid ""
"    @Route(path = \"/hello/:message\", methods = HttpMethod.DELETE)\n"
"    public void deleteHelloVertX(@Param(\"message\") String message) {\n"
"        // Here do the delete...\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:450
#, fuzzy
msgid "and now your Vert.x Routes are available in OpenAPI:"
msgstr "をクリックすると、Vert.xルートがOpenAPIで利用可能になります。"

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:501
#, no-wrap
msgid ""
"/vertx/hello:\n"
"    get:\n"
"      tags:\n"
"      - Vert.x Resource\n"
"      operationId: helloVertX\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            application/json:\n"
"              schema:\n"
"                $ref: '#/components/schemas/Greeting'\n"
"    post:\n"
"      tags:\n"
"      - Vert.x Resource\n"
"      operationId: newHelloVertX\n"
"      requestBody:\n"
"        content:\n"
"          '_/_':\n"
"            schema:\n"
"              $ref: '#/components/schemas/Greeting'\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            application/json:\n"
"              schema:\n"
"                $ref: '#/components/schemas/Greeting'\n"
"  /vertx/hello/{message}:\n"
"    delete:\n"
"      tags:\n"
"      - Vert.x Resource\n"
"      operationId: deleteHelloVertX\n"
"      parameters:\n"
"      - name: message\n"
"        in: path\n"
"        required: true\n"
"        schema:\n"
"          type: string\n"
"      responses:\n"
"        \"204\":\n"
"          description: No Content\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:505
#, fuzzy
msgid "See https://quarkus.io/guides/reactive-routes[quarkus.io/guides/reactive-routes] for more information."
msgstr "詳細は link:https://quarkus.io/guides/reactive-routes[quarkus.io/guides/reactive-routes]を参照してください。"

#. type: Title ==
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:506
#, fuzzy, no-wrap
msgid "Endpoints generated with Panache"
msgstr "Panacheで生成されたエンドポイント"

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:510
#, fuzzy
msgid "In Quarkus your can generate your JAX-RS endpoint using Panache. These generated classes will also be scanned and added to the OpenAPI schema document if you have the `quarkus-smallrye-openapi` extension in your `pom.xml`."
msgstr "Quarkusでは、Panacheを使ってJAX-RSエンドポイントを生成することができます。これらの生成されたクラスは、 `pom.xml` に `quarkus-smallrye-openapi` の拡張機能があれば、スキャンされてOpenAPIスキーマドキュメントに追加されます。"

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:512
#, fuzzy
msgid "See https://quarkus.io/guides/rest-data-panache[quarkus.io/guides/rest-data-panache] for more information."
msgstr "詳細は link:https://quarkus.io/guides/rest-data-panache[quarkus.io/guides/rest-data-panache]を参照してください。"

#. type: Title ==
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:513
#, fuzzy, no-wrap
msgid "Any other Web Framework"
msgstr "その他のWebフレームワーク"

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:517
#, fuzzy
msgid "You can also add any other endpoint to your document by providing that part of the Schema document in a `yaml` file. Let's say for instance you have a Servlet that exposes some methods and you want to add those to the schema document. Servlet is just an example, any web framework can work here."
msgstr "また、スキーマドキュメントの一部を `yaml` ファイルで提供することで、ドキュメントに他のエンドポイントを追加することができます。例えば、いくつかのメソッドを公開しているServletがあり、それらをスキーマドキュメントに追加したいとします。サーブレットは単なる例であり、どんなウェブフレームワークでも使用できます。"

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:519
#, fuzzy
msgid "So first we add this to the `pom.xml` to add Servlet support in Quarkus:"
msgstr "そこでまず、Quarkusでサーブレットのサポートを追加するために、 `pom.xml` にこれを追加します。"

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:527
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-undertow</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:531
#, fuzzy
msgid "We can now create a Servlet Endpoint like this for example:"
msgstr "これで、例えば次のようなServlet Endpointを作成することができます。"

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:537
#, no-wrap
msgid ""
"@WebServlet(\"/other/hello/*\")\n"
"public class ServletGreeting extends HttpServlet {\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:539
#, no-wrap
msgid "    private static final Jsonb JSONB = JsonbBuilder.create();\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:547
#, no-wrap
msgid ""
"    @Override\n"
"    protected void doGet(HttpServletRequest request, HttpServletResponse response)throws ServletException, IOException {\n"
"        response.setContentType(\"application/json\");\n"
"        Greeting greeting = new Greeting(\"Hello\", \"Other\");\n"
"        PrintWriter out = response.getWriter();\n"
"        out.print(JSONB.toJson(greeting));\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:555
#, no-wrap
msgid ""
"    @Override\n"
"    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n"
"        response.setContentType(\"application/json\");\n"
"        Greeting greeting = JSONB.fromJson(request.getInputStream(), Greeting.class);\n"
"        PrintWriter out = response.getWriter();\n"
"        out.print(JSONB.toJson(greeting));\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:561
#, no-wrap
msgid ""
"    @Override\n"
"    protected void doDelete(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n"
"        // Here do the delete...\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:565
#, fuzzy
msgid "Now we need a OpenAPI Schema document that maps to these endpoints. You need to add this to a file called `openapi.yml` in `src/main/resources/META-INF`:"
msgstr "さて、これらのエンドポイントにマッピングするOpenAPI Schemaドキュメントが必要です。これを `src/main/resources/META-INF` の `openapi.yml` というファイルに追加する必要があります。"

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:617
#, no-wrap
msgid ""
"openapi: 3.0.3\n"
"tags:\n"
"- name: Other Resource\n"
"  description: Basic Hello World using Something else\n"
"paths:\n"
"  /other/hello:\n"
"    get:\n"
"      tags:\n"
"      - Other Resource\n"
"      operationId: helloOther\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            application/json:\n"
"              schema:\n"
"                $ref: '#/components/schemas/Greeting'\n"
"    post:\n"
"      tags:\n"
"      - Other Resource\n"
"      operationId: newHelloOther\n"
"      requestBody:\n"
"        content:\n"
"          application/json:\n"
"            schema:\n"
"              $ref: '#/components/schemas/Greeting'\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            application/json:\n"
"              schema:\n"
"                $ref: '#/components/schemas/Greeting'\n"
"  /other/hello/{message}:\n"
"    delete:\n"
"      tags:\n"
"      - Other Resource\n"
"      operationId: deleteHelloOther\n"
"      parameters:\n"
"      - name: message\n"
"        in: path\n"
"        required: true\n"
"        schema:\n"
"          type: string\n"
"      responses:\n"
"        \"204\":\n"
"          description: No Content\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:621
#, fuzzy
msgid "This will be merged with the rest of the endpoints to expose all paths in your document. So in the end your `/openapi` output will look like this:"
msgstr "これが残りのエンドポイントとマージされて、ドキュメント内のすべてのパスが公開されます。つまり、最終的に `/openapi` の出力は以下のようになります。"

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:825
#, no-wrap
msgid ""
"openapi: 3.0.2\n"
"info:\n"
"  title: OpenAPI for Everyone (development)\n"
"  description: Example on how to use OpenAPI everywhere\n"
"  contact:\n"
"    name: Phillip Kruger\n"
"    url: https://www.phillip-kruger.com\n"
"    email: phillip.kruger@redhat.com\n"
"  license:\n"
"    name: Apache 2.0\n"
"    url: http://www.apache.org/licenses/LICENSE-2.0.html\n"
"  version: 1.0.0\n"
"tags:\n"
"- name: Other Resource\n"
"  description: Basic Hello World using Something else\n"
"- name: Spring Resource\n"
"  description: Basic Hello World using Spring\n"
"- name: JAX-RS Resource\n"
"  description: Basic Hello World using JAX-RS\n"
"- name: Vert.x Resource\n"
"  description: Basic Hello World using Vert.x\n"
"paths:\n"
"  /other/hello:\n"
"    get:\n"
"      tags:\n"
"      - Other Resource\n"
"      operationId: helloOther\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            application/json:\n"
"              schema:\n"
"                $ref: '#/components/schemas/Greeting'\n"
"    post:\n"
"      tags:\n"
"      - Other Resource\n"
"      operationId: newHelloOther\n"
"      requestBody:\n"
"        content:\n"
"          application/json:\n"
"            schema:\n"
"              $ref: '#/components/schemas/Greeting'\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            application/json:\n"
"              schema:\n"
"                $ref: '#/components/schemas/Greeting'\n"
"  /other/hello/{message}:\n"
"    delete:\n"
"      tags:\n"
"      - Other Resource\n"
"      operationId: deleteHelloOther\n"
"      parameters:\n"
"      - name: message\n"
"        in: path\n"
"        required: true\n"
"        schema:\n"
"          type: string\n"
"      responses:\n"
"        \"204\":\n"
"          description: No Content\n"
"  /jax-rs/hello:\n"
"    get:\n"
"      tags:\n"
"      - JAX-RS Resource\n"
"      operationId: helloJaxRs\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            application/json:\n"
"              schema:\n"
"                $ref: '#/components/schemas/Greeting'\n"
"    post:\n"
"      tags:\n"
"      - JAX-RS Resource\n"
"      operationId: newHelloJaxRs\n"
"      requestBody:\n"
"        content:\n"
"          application/json:\n"
"            schema:\n"
"              $ref: '#/components/schemas/Greeting'\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            application/json:\n"
"              schema:\n"
"                $ref: '#/components/schemas/Greeting'\n"
"  /jax-rs/hello/{message}:\n"
"    delete:\n"
"      tags:\n"
"      - JAX-RS Resource\n"
"      operationId: deleteHelloJaxRs\n"
"      parameters:\n"
"      - name: message\n"
"        in: path\n"
"        required: true\n"
"        schema:\n"
"          type: string\n"
"      responses:\n"
"        \"204\":\n"
"          description: No Content\n"
"  /spring/hello:\n"
"    get:\n"
"      tags:\n"
"      - Spring Resource\n"
"      operationId: helloSpring\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            application/json:\n"
"              schema:\n"
"                $ref: '#/components/schemas/Greeting'\n"
"    post:\n"
"      tags:\n"
"      - Spring Resource\n"
"      operationId: newHelloSpring\n"
"      requestBody:\n"
"        content:\n"
"          '_/_':\n"
"            schema:\n"
"              $ref: '#/components/schemas/Greeting'\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            application/json:\n"
"              schema:\n"
"                $ref: '#/components/schemas/Greeting'\n"
"  /spring/hello/{message}:\n"
"    delete:\n"
"      tags:\n"
"      - Spring Resource\n"
"      operationId: deleteHelloSpring\n"
"      parameters:\n"
"      - name: message\n"
"        in: path\n"
"        required: true\n"
"        schema:\n"
"          type: string\n"
"      responses:\n"
"        \"204\":\n"
"          description: No Content\n"
"  /vertx/hello:\n"
"    get:\n"
"      tags:\n"
"      - Vert.x Resource\n"
"      operationId: helloVertX\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            application/json:\n"
"              schema:\n"
"                $ref: '#/components/schemas/Greeting'\n"
"    post:\n"
"      tags:\n"
"      - Vert.x Resource\n"
"      operationId: newHelloVertX\n"
"      requestBody:\n"
"        content:\n"
"          '_/_':\n"
"            schema:\n"
"              $ref: '#/components/schemas/Greeting'\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            application/json:\n"
"              schema:\n"
"                $ref: '#/components/schemas/Greeting'\n"
"  /vertx/hello/{message}:\n"
"    delete:\n"
"      tags:\n"
"      - Vert.x Resource\n"
"      operationId: deleteHelloVertX\n"
"      parameters:\n"
"      - name: message\n"
"        in: path\n"
"        required: true\n"
"        schema:\n"
"          type: string\n"
"      responses:\n"
"        \"204\":\n"
"          description: No Content\n"
"components:\n"
"  schemas:\n"
"    Greeting:\n"
"      type: object\n"
"      properties:\n"
"        message:\n"
"          type: string\n"
"        to:\n"
"          type: string\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:829
#, fuzzy
msgid "This contains resources from JAX-RS, Spring Web, Vert.x Reactive Routes and Servlet."
msgstr "JAX-RS」「Spring Web」「Vert.x Reactive Routes」「Servlet」のリソースが含まれています。"

#. type: Title ==
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:830
#, no-wrap
msgid "Swagger UI"
msgstr "Swagger UI"

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:834
#, fuzzy
msgid "In Quarkus, Swagger UI is included by default and when you now browse to http://localhost:8080/swagger-ui[localhost:8080/swagger-ui] you will see the UI with all your endpoints:"
msgstr "Quarkusでは、Swagger UIがデフォルトで含まれており、 link:http://localhost:8080/swagger-ui[localhost:8080/swagger-ui]にアクセスすると、すべてのエンドポイントを含むUIが表示されます。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:835
#, fuzzy, no-wrap
msgid "swagger-ui"
msgstr "swagger-ui"

#. type: Target for macro image
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:835
#, no-wrap
msgid "swagger-ui.png"
msgstr ""

#. type: Title ==
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:837
#, no-wrap
msgid "Summary"
msgstr "まとめ"

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:841
#, fuzzy
msgid "In this post we looked at how Quarkus extends the MicroProfile OpenAPI specification to make it even easier to document your Endpoints. We also looked at how you can document any web framework using it."
msgstr "この記事では、QuarkusがMicroProfile OpenAPI仕様を拡張し、エンドポイントのドキュメント化をより簡単にする方法を紹介しました。また、Quarkusを使ってどのようにWebフレームワークをドキュメント化するかについても見てみました。"

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:843
#, fuzzy
msgid "If you find any issues or have any suggestions, head over to the https://github.com/smallrye/smallrye-open-api[SmallRye OpenAPI] project and let's discuss it there."
msgstr "問題点やご提案がありましたら、 link:https://github.com/smallrye/smallrye-open-api[SmallRye OpenAPI]プロジェクトにアクセスして、そこで議論しましょう。"

#, fuzzy
#~ msgid ""
#~ "layout: post\n"
#~ "title: 'MicroProfile OpenAPI for everyone'\n"
#~ "date: 2020-08-19\n"
#~ "tags: extension openapi\n"
#~ "synopsis: Exploring some SmallRye OpenAPI features\n"
#~ "author: phillipkruger\n"
#~ "---\n"
#~ msgstr ""
#~ "layout: post\n"
#~ "title: 'MicroProfile OpenAPI for everyone'\n"
#~ "date: 2020-08-19\n"
#~ "tags: extension openapi\n"
#~ "synopsis: SmallRye OpenAPIの機能をご紹介します。\n"
#~ "author: phillipkruger\n"
#~ "---\n"

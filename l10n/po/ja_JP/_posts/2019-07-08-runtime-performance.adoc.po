# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-04-29 21:23+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: author
#: upstream/_posts/2019-07-08-runtime-performance.adoc:1
#, fuzzy, no-wrap
msgid "johara"
msgstr "ジョハラ"

#. type: YAML Front Matter: date
#: upstream/_posts/2019-07-08-runtime-performance.adoc:1
#, fuzzy, no-wrap
msgid "2019-07-08 00:00 +0100"
msgstr "2019-07-08 00:00 +0100"

#. type: YAML Front Matter: layout
#: upstream/_posts/2019-07-08-runtime-performance.adoc:1
#, fuzzy, no-wrap
msgid "post"
msgstr "ポスト"

#. type: YAML Front Matter: synopsis
#: upstream/_posts/2019-07-08-runtime-performance.adoc:1
#, fuzzy, no-wrap
msgid "Quarkus has so far been focused on start-up time and memory footprint, but runtime performance is important as well. Find out how well Quarkus performs in both Native and JVM modes."
msgstr "layout: post date: 2019-07-08 00:00 +0100 author: johara tags: performance synopsis:Quarkusはこれまで起動時間やメモリフットプリントに注目してきましたが、ランタイムパフォーマンスも重要です。QuarkusがNativeモードとJVMモードの両方でどのくらいのパフォーマンスを発揮するのかを調べてみましょう。---"

#. type: YAML Front Matter: tags
#: upstream/_posts/2019-07-08-runtime-performance.adoc:1
#, fuzzy, no-wrap
msgid "performance"
msgstr "パフォーマンス"

#. type: Title =
#: upstream/_posts/2019-07-08-runtime-performance.adoc:9
#, fuzzy, no-wrap
msgid "Quarkus Runtime Performance"
msgstr "Quarkusのランタイムパフォーマンス"

#. type: Plain text
#: upstream/_posts/2019-07-08-runtime-performance.adoc:13
#, fuzzy
msgid "This the first part of a blog series that delves deeper into Quarkus performance.  There are many aspects to the performance of a framework from bootstrap time to memory usage, compile time and runtime performance."
msgstr "今回は、Quarkusのパフォーマンスをより深く掘り下げるブログシリーズの第一弾です。フレームワークのパフォーマンスには、起動時間、メモリ使用量、コンパイル時、実行時のパフォーマンスなど、さまざまな側面があります。"

#. type: Plain text
#: upstream/_posts/2019-07-08-runtime-performance.adoc:15
#, fuzzy
msgid "The definition of _\"performance\"_ is contextual and these series of blog posts aims to investigate the performance of Quarkus in varying contexts."
msgstr "_パフォーマンス」_の定義は文脈によって異なりますが、この一連のブログ記事は、さまざまな文脈におけるQuarkusのパフォーマンスを調査することを目的としています。"

#. type: Plain text
#: upstream/_posts/2019-07-08-runtime-performance.adoc:17
#, fuzzy
msgid "This article will focus on **runtime performance** of applications built with Quarkus."
msgstr "この記事では、Quarkusで構築されたアプリケーションの *ランタイムパフォーマンス*に焦点を当てます。"

#. type: Title ==
#: upstream/_posts/2019-07-08-runtime-performance.adoc:59
#, fuzzy, no-wrap
msgid "tl;dr - Summary"
msgstr "tl;dr - まとめ"

#. type: Plain text
#: upstream/_posts/2019-07-08-runtime-performance.adoc:62
#, fuzzy
msgid "A REST application that retrieves data from a postgres database using transactions was created to compare the throughput and response latencies of Quarkus and Thorntail.  The application was put under varying degrees of load, to demonstrate how Quarkus scales."
msgstr "トランザクションを使用してpostgresデータベースからデータを取得するRESTアプリケーションを作成し、QuarkusとThorntailのスループットとレスポンスレイテンシーを比較しました。このアプリケーションは、Quarkusがどのようにスケールするかを示すために、さまざまな負荷をかけました。"

#. type: Plain text
#: upstream/_posts/2019-07-08-runtime-performance.adoc:64
#, fuzzy
msgid "Quarkus running in native mode, supporting 40 concurrent connections, has shown to provide up to an {quarkusNativeMaxThroughputIncrease}% increase in maximum throughput whilst reducing maximum response time latencies by up to {quarkusnativemaxresponsetimereduction}% compared to Thorntail for a single process."
msgstr "ネイティブモードで動作するQuarkusは、40の同時接続をサポートしており、単一プロセスのThorntailと比較して、最大スループットが最大{quarkusNativeMaxThroughputIncrease}%向上し、最大応答時間のレイテンシーが最大{quarkusnativemaxresponsetimereduction}%削減されることが示されています。"

#. type: Plain text
#: upstream/_posts/2019-07-08-runtime-performance.adoc:66
#, fuzzy
msgid "Quarkus running in JVM mode, supporting 40 concurrent connections, has shown to provide up to an {quarkusJvmMaxThroughputIncrease}% increase in maximum throughput whilst reducing maximum response time latencies by up to {quarkusJvmmaxresponsetimereduction}% compared to Thorntail, for a single process."
msgstr "JVMモードで動作するQuarkusは、40の同時接続をサポートしており、単一のプロセスにおいて、Thorntailと比較して最大{quarkusJvmMaxThroughputIncrease}%の最大スループットの向上を実現し、最大応答時間の遅延を最大{quarkusJvmmaxresponsetimereduction}%削減したことが示されています。"

#. type: Plain text
#: upstream/_posts/2019-07-08-runtime-performance.adoc:68
#, fuzzy
msgid "Quarkus running on the JVM provides improved throughput and response time compared to Native mode for a single process, but uses up to {2gQuarkusJvmMaxCompareThorntail}% more memory (RSS)."
msgstr "JVM上で実行されるQuarkusは、単一のプロセスではNativeモードと比較してスループットと応答時間が向上しますが、最大で{2gQuarkusJvmMaxCompareThorntail}%多くのメモリを使用します（RSS）。"

#. type: Plain text
#: upstream/_posts/2019-07-08-runtime-performance.adoc:70
#, fuzzy
msgid "For applications running in containers, constrained to 2048MB of RAM, it is theoretically possible to improve application throughput by up to *{2gQuarkusJvmMaxCompareThorntailIncrease}%* by running multiple instances of a Quarkus application in JVM mode, or *{2gQuarkusNativeMaxCompareThorntailIncrease}%* running multiple Quarkus instances in Native mode, compared to a Thorntail application."
msgstr "2048MBのRAMに制限されたコンテナ内で実行されるアプリケーションの場合、理論的には、Thorntailアプリケーションと比較して、Quarkusアプリケーションの複数のインスタンスをJVMモードで実行することにより、 *{2gQuarkusJvmMaxCompareThorntailIncrease}%*まで、または、複数のQuarkusインスタンスをNativeモードで実行することにより *、{2gQuarkusNativeMaxCompareThorntailIncrease}%*まで、アプリケーションのスループットを向上させることが可能です。"

#. type: Plain text
#: upstream/_posts/2019-07-08-runtime-performance.adoc:72
#, fuzzy
msgid "Native images are **not just** for short running processes. The tests ran for up to 3 hours, without process restarts, and the native image served over *{quarkusNativeNumberRequestsMillion} MILLION* requests!"
msgstr "ネイティブイメージは、短時間のプロセス *だけではありませ*ん。このテストでは、プロセスの再起動なしに最大3時間動作し、ネイティブイメージは *{quarkusNativeNumberRequestsMillion}*以上のリクエストを処理しました。 *100万*回以上のリクエストがありました。"

#. type: Plain text
#: upstream/_posts/2019-07-08-runtime-performance.adoc:74
#, fuzzy, no-wrap
msgid "**One size does not fit all! Quarkus gives you the option to scale up in JVM mode if you need a single instance with a larger heap, or scale out in Native mode if you need more, lighter-weight instances**\n"
msgstr "*1つのサイズがすべてに合うわけではありません。Quarkusでは、より大きなヒープを持つ単一のインスタンスが必要な場合はJVMモードでスケールアップし、より軽量なインスタンスが必要な場合はNativeモードでスケールアウトするというオプションがあります。*"

#. type: Title ==
#: upstream/_posts/2019-07-08-runtime-performance.adoc:75
#, fuzzy, no-wrap
msgid "Elephant in the Room"
msgstr "エレファント・イン・ザ・ルーム"

#. type: Plain text
#: upstream/_posts/2019-07-08-runtime-performance.adoc:78
#, fuzzy, no-wrap
msgid "*\"It's all well and good optimizing for bootstrap start-up times and image size, but response time is still important\"*. \n"
msgstr "\" *起動時間や画像サイズを最適化するのは良いことですが、レスポンスタイムはやはり重要です*。"

#. type: Plain text
#: upstream/_posts/2019-07-08-runtime-performance.adoc:80
#, fuzzy
msgid "Let us first address the elephant in the room, Quarkus has so far been focused on start-up time and Memory Footprint."
msgstr "Quarkusはこれまで、スタートアップタイムとメモリフットプリントに焦点を当ててきましたが、ここではまず、部屋の中の象について説明します。"

#. type: Plain text
#: upstream/_posts/2019-07-08-runtime-performance.adoc:82
#, fuzzy, no-wrap
msgid "*\"That's because native performance sucks right?!\"* _Wrong!_\n"
msgstr "*\"それは、ネイティブのパフォーマンスが悪いからでしょう！\"* _間違っている!_"

#. type: Plain text
#: upstream/_posts/2019-07-08-runtime-performance.adoc:84
#, fuzzy
msgid "By running a sample application, retrieving data from a PostgreSQL database via transactional REST HTTP requests, I will address"
msgstr "トランザクショナルなREST HTTPリクエストによってPostgreSQLデータベースからデータを取得するサンプルアプリケーションを実行することで、以下の点を説明します。"

#. type: Plain text
#: upstream/_posts/2019-07-08-runtime-performance.adoc:86
#, fuzzy
msgid "Single process Throughput and Reponse Time in Native mode and JVM mode, compared to Thorntail"
msgstr "ネイティブモードおよびJVMモードでのシングルプロセスのスループットと応答時間、Thorntailとの比較"

#. type: Plain text
#: upstream/_posts/2019-07-08-runtime-performance.adoc:87
#, fuzzy
msgid "Native images for long running processes"
msgstr "長時間動作するプロセスのネイティブイメージ"

#. type: Plain text
#: upstream/_posts/2019-07-08-runtime-performance.adoc:89
#, fuzzy
msgid "Details of the application and test methodology can be found at the end of this post in the <<Test Application>> section."
msgstr "アプリケーションとテスト方法の詳細は、この記事の最後にある link:#Test Application[[Test Application]]セクションでご覧いただけます。"

#. type: Title ==
#: upstream/_posts/2019-07-08-runtime-performance.adoc:90
#, fuzzy, no-wrap
msgid "What does Quarkus give you?"
msgstr "Quarkusはあなたに何を与えますか？"

#. type: Plain text
#: upstream/_posts/2019-07-08-runtime-performance.adoc:93
#, fuzzy
msgid "Quarkus provides you with a choice of 2 run modes.  You can either run as a native binary *or* as bytecode on a JVM."
msgstr "Quarkusでは、2つの実行モードを選択することができます。ネイティブのバイナリとして実行すること *も、*JVM上のバイトコードとして実行することもできます。"

#. type: Plain text
#: upstream/_posts/2019-07-08-runtime-performance.adoc:95
#, fuzzy
msgid "That means you can choose the runtime that meets *your* needs for *your* application. If a native image doesn't give you what you need, no problem, choose your favourite JVM."
msgstr "つまり *、*アプリケーションのニーズに合ったランタイムを選ぶことができるのです。ネイティブイメージでは必要なものが得られない場合でも、お気に入りのJVMを選べば問題ありません。"

#. type: Plain text
#: upstream/_posts/2019-07-08-runtime-performance.adoc:97
#, fuzzy
msgid "But don't think that running on the JVM is a second rate citizen, Quarkus is optimized for running on the JVM as well as in native mode"
msgstr "Quarkusはネイティブモードだけでなく、JVM上で動作するようにも最適化されていますので、JVM上での動作が二の次になることはありません。"

#. type: Title ==
#: upstream/_posts/2019-07-08-runtime-performance.adoc:98
#, fuzzy, no-wrap
msgid "Why compare with Thorntail?"
msgstr "なぜソーンテールと比較するのか？"

#. type: Plain text
#: upstream/_posts/2019-07-08-runtime-performance.adoc:101
#, fuzzy
msgid "Thorntail is a more traditional cloud-native stack that has its base from the WildFly community and we decided that it's fair to compare with a runtime that we know how to optimize. The point of this performance test is not to compare frameworks vs framework, but to show that the optimizations done in Quarkus goes beyond just startup time and initial memory consumption. Thorntail is a great runtime, but just like other traditional cloud-native stacks the runtime dynamics behavior that wasn't a concern on a standalone deployment is turning out to be a cause of significant overhead for modern deployment scenarios."
msgstr "Thorntailはより伝統的なクラウドネイティブスタックで、WildFlyコミュニティをベースにしており、最適化の方法がわかっているランタイムと比較するのが妥当だと判断しました。このパフォーマンステストの目的は、フレームワーク対フレームワークの比較ではなく、Quarkusで行われている最適化が起動時間や初期のメモリ消費だけではないことを示すことです。Thorntailは素晴らしいランタイムですが、他の伝統的なクラウドネイティブスタックと同様に、スタンドアロンの展開では気にならなかったランタイムダイナミクスの動作が、最新の展開シナリオでは大きなオーバーヘッドの原因となることがわかりました。"

#. type: Title ==
#: upstream/_posts/2019-07-08-runtime-performance.adoc:102
#, fuzzy, no-wrap
msgid "Throughput (Req/Sec)"
msgstr "スループット（Req/Sec）"

#. type: Plain text
#: upstream/_posts/2019-07-08-runtime-performance.adoc:105
#, fuzzy
msgid "Maximum throughput, measured in requests per second (Req/Sec) tells us the maximum number of request the single process application can service per second.  The higher the maximum throughput, the better."
msgstr "最大スループットは、1秒あたりのリクエスト数（Req/Sec）で測定され、シングルプロセスのアプリケーションが1秒間に処理できるリクエストの最大数を示します。最大スループットが高ければ高いほど良いです。"

#. type: Plain text
#: upstream/_posts/2019-07-08-runtime-performance.adoc:107
#, fuzzy
msgid "Comparing a native Quarkus application to Thorntail running on a JVM, the maximum throughput is consistent as the number of concurrent users increases."
msgstr "ネイティブのQuarkusアプリケーションとJVM上で動作するThorntailを比較すると、同時ユーザー数の増加に伴い、最大スループットが安定しています。"

#. type: delimited block =
#: upstream/_posts/2019-07-08-runtime-performance.adoc:111
#, fuzzy, no-wrap
msgid "**Quarkus {quarkusVersion}, running a single instance in Native mode with 40 concurrent connections, provides a {quarkusNativeMaxThroughputIncrease}% increase in maximum throughput compared to Thorntail {thorntailVersion} running on the JVM**.\n"
msgstr "*Quarkus {quarkusVersion}は、Nativeモードで1つのインスタンスを40の同時接続で実行した場合、JVM上で実行しているThorntail {thorntailVersion}と比較して、最大スループットが{quarkusNativeMaxThroughputIncrease}%増加し*ました。"

#. type: delimited block =
#: upstream/_posts/2019-07-08-runtime-performance.adoc:116
#, fuzzy, no-wrap
msgid "**Quarkus {quarkusVersion}, running a single instance in JVM mode with 40 concurrent connections, out-performs Thorntail {thorntailVersion} by {quarkusJvmMaxThroughputIncrease}%**.\n"
msgstr "*Quarkus {quarkusVersion}のシングルインスタンスをJVMモードで実行し、40の同時接続を行った場合、Thorntail {thorntailVersion}よりも{quarkusJvmMaxThroughputIncrease}%*優れていました。"

#. type: Plain text
#: upstream/_posts/2019-07-08-runtime-performance.adoc:118
#: upstream/_posts/2019-07-08-runtime-performance.adoc:122
#: upstream/_posts/2019-07-08-runtime-performance.adoc:160
#: upstream/_posts/2019-07-08-runtime-performance.adoc:164
#: upstream/_posts/2019-07-08-runtime-performance.adoc:168
#, fuzzy
msgid "{sp}"
msgstr "{sp}"

#. type: Block title
#: upstream/_posts/2019-07-08-runtime-performance.adoc:119
#, fuzzy, no-wrap
msgid "Maximum throughput (req/sec) as a function of concurrent users"
msgstr "最大スループット（req/sec）と同時接続ユーザー数の関係"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: upstream/_posts/2019-07-08-runtime-performance.adoc:120
#, fuzzy, no-wrap
msgid "Throughput as a function of concurrent users"
msgstr "同時接続ユーザー数に応じたスループット"

#. type: Target for macro image
#: upstream/_posts/2019-07-08-runtime-performance.adoc:120
#, no-wrap
msgid "throughput.png"
msgstr ""

#. type: Block title
#: upstream/_posts/2019-07-08-runtime-performance.adoc:123
#, fuzzy, no-wrap
msgid "Maximum Throughput (Req/Sec) "
msgstr "最大スループット(Req/Sec)"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:126
#: upstream/_posts/2019-07-08-runtime-performance.adoc:172
#, fuzzy, no-wrap
msgid "Concurrent Connections"
msgstr "同時接続"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:126
#: upstream/_posts/2019-07-08-runtime-performance.adoc:190
#: upstream/_posts/2019-07-08-runtime-performance.adoc:206
#, fuzzy, no-wrap
msgid "Thorntail"
msgstr "ソーンテール"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:126
#: upstream/_posts/2019-07-08-runtime-performance.adoc:190
#: upstream/_posts/2019-07-08-runtime-performance.adoc:207
#, fuzzy, no-wrap
msgid "Quarkus - Native"
msgstr "Quarkus - ネイティブ"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:127
#: upstream/_posts/2019-07-08-runtime-performance.adoc:191
#: upstream/_posts/2019-07-08-runtime-performance.adoc:206
#: upstream/_posts/2019-07-08-runtime-performance.adoc:222
#, fuzzy, no-wrap
msgid "Quarkus - JVM"
msgstr "Quarkus - JVM"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:127
#: upstream/_posts/2019-07-08-runtime-performance.adoc:173
#, fuzzy, no-wrap
msgid "1"
msgstr "1"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:127
#, fuzzy, no-wrap
msgid "3,273"
msgstr "3,273"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:127
#, fuzzy, no-wrap
msgid "3,316"
msgstr "3,316"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:128
#, fuzzy, no-wrap
msgid "5,138"
msgstr "5,138"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:128
#: upstream/_posts/2019-07-08-runtime-performance.adoc:174
#, fuzzy, no-wrap
msgid "5"
msgstr "5"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:128
#, fuzzy, no-wrap
msgid "14,092"
msgstr "14,092"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:128
#, fuzzy, no-wrap
msgid "14,998"
msgstr "14,998"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:129
#, fuzzy, no-wrap
msgid "24,417"
msgstr "24,417"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:129
#: upstream/_posts/2019-07-08-runtime-performance.adoc:175
#, fuzzy, no-wrap
msgid "10"
msgstr "10"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:129
#, fuzzy, no-wrap
msgid "25,512"
msgstr "25,512"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:129
#, fuzzy, no-wrap
msgid "26,328"
msgstr "26,328"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:130
#, fuzzy, no-wrap
msgid "44,196"
msgstr "44,196"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:130
#: upstream/_posts/2019-07-08-runtime-performance.adoc:176
#, fuzzy, no-wrap
msgid "15"
msgstr "15"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:130
#, fuzzy, no-wrap
msgid "31,855"
msgstr "31,855"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:130
#, fuzzy, no-wrap
msgid "33,389"
msgstr "33,389"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:131
#, fuzzy, no-wrap
msgid "59,007"
msgstr "59,007"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:131
#: upstream/_posts/2019-07-08-runtime-performance.adoc:177
#, fuzzy, no-wrap
msgid "20"
msgstr "20"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:131
#, fuzzy, no-wrap
msgid "35,006"
msgstr "35,006"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:131
#, fuzzy, no-wrap
msgid "36,515"
msgstr "36,515"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:132
#, fuzzy, no-wrap
msgid "69,146"
msgstr "69,146"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:132
#: upstream/_posts/2019-07-08-runtime-performance.adoc:178
#, fuzzy, no-wrap
msgid "25"
msgstr "25"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:132
#, fuzzy, no-wrap
msgid "37,082"
msgstr "37,082"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:132
#, fuzzy, no-wrap
msgid "38,416"
msgstr "38,416"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:133
#, fuzzy, no-wrap
msgid "73,790"
msgstr "73,790"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:133
#: upstream/_posts/2019-07-08-runtime-performance.adoc:179
#, fuzzy, no-wrap
msgid "30"
msgstr "30"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:133
#, fuzzy, no-wrap
msgid "33,369"
msgstr "33,369"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:133
#, fuzzy, no-wrap
msgid "38,849"
msgstr "38,849"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:134
#, fuzzy, no-wrap
msgid "76,992"
msgstr "76,992"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:134
#: upstream/_posts/2019-07-08-runtime-performance.adoc:180
#, fuzzy, no-wrap
msgid "35"
msgstr "35"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:134
#, fuzzy, no-wrap
msgid "32,974"
msgstr "32,974"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:134
#, fuzzy, no-wrap
msgid "41,691"
msgstr "41,691"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:135
#, fuzzy, no-wrap
msgid "77,118"
msgstr "77,118"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:135
#: upstream/_posts/2019-07-08-runtime-performance.adoc:181
#, fuzzy, no-wrap
msgid "40"
msgstr "40"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:135
#, fuzzy, no-wrap
msgid "32,391"
msgstr "32,391"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:135
#, fuzzy, no-wrap
msgid "44,841"
msgstr "44,841"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:136
#, fuzzy, no-wrap
msgid "76,488"
msgstr "76,488"

#. type: Title ==
#: upstream/_posts/2019-07-08-runtime-performance.adoc:138
#, fuzzy, no-wrap
msgid "Response Times (ms)"
msgstr "応答時間(ms)"

#. type: Plain text
#: upstream/_posts/2019-07-08-runtime-performance.adoc:141
#, fuzzy
msgid "I would like to start this section with the statement that **\"Everything You Know About Latency Is Wrong\"** footnote:[https://bravenewgeek.com/everything-you-know-about-latency-is-wrong/]"
msgstr "このセクションでは、 *「Everything You Know About Latency Is Wrong（レイテンシーについて知っていることはすべて間違っている）* <sup class=\"footnote\">」[ link:#_footnotedef_1[1, id=_footnoteref_1, role=footnote, title=View footnote.]</sup>]という言葉から始めたいと思います。"

#. type: Plain text
#: upstream/_posts/2019-07-08-runtime-performance.adoc:143
#, fuzzy
msgid "Response time is a measure of the time it takes for the application to respond to a request. The lower the response time, the better. But mean response time is not the overall picture of application responsiveness.  Maximum response time tells us more about user experience than mean response time."
msgstr "レスポンスタイムとは、リクエストに対してアプリケーションが応答するまでの時間を示す指標です。レスポンスタイムが低いほど良いと言えます。しかし、平均応答時間は、アプリケーションの応答性の全体像ではありません。最大レスポンスタイムは、平均レスポンスタイムよりもユーザーエクスペリエンスについてより多くのことを教えてくれます。"

#. type: Plain text
#: upstream/_posts/2019-07-08-runtime-performance.adoc:145
#, fuzzy
msgid "Why is this important? **Maximum response time tells us the worst case scenario, and between 26-93% of page loads will experience the 99th centile response time footnote:[https://bravenewgeek.com/everything-you-know-about-latency-is-wrong/].  Having a super low, super stable maximum response latency increases application responsiveness.**"
msgstr "なぜこれが重要なのでしょうか？ *最大応答時間は、最悪のケースのシナリオを示しており、ページロードの26～93%が99センタイルの応答時間を経験することになります<sup class=\"footnote\">[<a id=\"_footnoteref_1\" class=\"footnote\" href=\"#_footnotedef_1\" title=\"View footnote.\">1</a></sup>*]。最大応答時間が極めて短く、極めて安定していると、アプリケーションの応答性が向上します。"

#. type: Plain text
#: upstream/_posts/2019-07-08-runtime-performance.adoc:147
#, fuzzy
msgid "Under high numbers of concurrent users; Mean response time for Quarkus in JVM mode is {quarkusJvmMeanResponseTime40}ms vs {thorntailMeanResponseTime40}ms for Thorntail. When running in Native mode, mean response time shifts to {quarkusNativeMeanResponseTime40}ms in exchange for the lower memory utilization."
msgstr "多数の同時使用ユーザーがいる場合、JVMモードのQuarkusの平均応答時間は{quarkusJvmMeanResponseTime40}msであり、Thorntailの{thorntailMeanResponseTime40}msと比較しています。ネイティブモードで実行すると、メモリ使用量が少ない代わりに、平均応答時間が{quarkusNativeMeanResponseTime40}msにシフトします。"

#. type: Plain text
#: upstream/_posts/2019-07-08-runtime-performance.adoc:149
#, fuzzy
msgid "If we look at the Maximum response time; Thorntail took {thorntailMaxResponseTime}ms to service at least one request, compared to {quarkusJvmMaxResponseTime}ms for Quarkus JVM and {quarkusNativeMaxResponseTime}ms for Quarkus Native."
msgstr "最大応答時間を見てみると、Thorntailは少なくとも1つのリクエストを処理するのに{thorntailMaxResponseTime}msかかっており、Quarkus JVMの{quarkusJvmMaxResponseTime}msやQuarkus Nativeの{quarkusNativeMaxResponseTime}msと比較しています。"

#. type: delimited block =
#: upstream/_posts/2019-07-08-runtime-performance.adoc:153
#, fuzzy
msgid "The maximum response time for Quarkus in native mode is super-stable and up to {quarkusNativeMaxResponseTimeReduction}% lower than Thorntail."
msgstr "ネイティブモードでのQuarkusの最大レスポンスタイムは超安定しており、Thorntailと比べて最大で{quarkusNativeMaxResponseTimeReduction}%低くなっています。"

#. type: delimited block =
#: upstream/_posts/2019-07-08-runtime-performance.adoc:158
#, fuzzy
msgid "The lower mean response time latencies running on the JVM are due to the GC implementations available in the JVM are superior to the GC implementation currently available in GraalVM. Quarkus is currently still a Beta release, and improvements are planned for running in native mode"
msgstr "JVM上で動作する平均応答時間のレイテンシーが低いのは、JVMで利用可能なGCの実装が、現在GraalVMで利用可能なGCの実装よりも優れているためです。Quarkusは現在まだベータ版であり、ネイティブモードでの動作については改善が予定されています。"

#. type: Block title
#: upstream/_posts/2019-07-08-runtime-performance.adoc:161
#, fuzzy, no-wrap
msgid "Mean Response Time (ms) as a function of concurrent users"
msgstr "同時接続ユーザー数に応じた平均応答時間(ms)"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: upstream/_posts/2019-07-08-runtime-performance.adoc:162
#: upstream/_posts/2019-07-08-runtime-performance.adoc:166
#, fuzzy, no-wrap
msgid "Mean Response Time as a function of concurrent users"
msgstr "同時接続ユーザー数に応じた平均応答時間"

#. type: Target for macro image
#: upstream/_posts/2019-07-08-runtime-performance.adoc:162
#, no-wrap
msgid "meanLatency.png"
msgstr ""

#. type: Block title
#: upstream/_posts/2019-07-08-runtime-performance.adoc:165
#, fuzzy, no-wrap
msgid "Maximum Response Time (ms) as a function of concurrent users"
msgstr "同時接続ユーザー数に応じた最大応答時間(ms)"

#. type: Target for macro image
#: upstream/_posts/2019-07-08-runtime-performance.adoc:166
#, no-wrap
msgid "maxLatency.png"
msgstr ""

#. type: Block title
#: upstream/_posts/2019-07-08-runtime-performance.adoc:169
#, fuzzy, no-wrap
msgid "Response Time (ms)"
msgstr "応答時間(ms)"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:172
#, fuzzy, no-wrap
msgid "Thorntail (mean)"
msgstr "ソーンテール（平均）"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:172
#, fuzzy, no-wrap
msgid "Thorntail (max)"
msgstr "ソーンテール（最大）"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:172
#, fuzzy, no-wrap
msgid "Quarkus - Native (mean)"
msgstr "Quarkus - ネイティブ（平均）"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:172
#, fuzzy, no-wrap
msgid "Quarkus - Native (max)"
msgstr "Quarkus - ネイティブ（最大）"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:172
#, fuzzy, no-wrap
msgid "Quarkus - JVM (mean)"
msgstr "Quarkus - JVM（平均）"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:173
#, fuzzy, no-wrap
msgid "Quarkus - JVM (max)"
msgstr "Quarkus - JVM（最大）"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:173
#, fuzzy, no-wrap
msgid "0.324"
msgstr "0.324"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:173
#, fuzzy, no-wrap
msgid "9.31"
msgstr "9.31"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:173
#, fuzzy, no-wrap
msgid "0.327"
msgstr "0.327"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:173
#, fuzzy, no-wrap
msgid "6.13"
msgstr "6.13"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:173
#, fuzzy, no-wrap
msgid "0.196"
msgstr "0.196"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:174
#, fuzzy, no-wrap
msgid "9.52"
msgstr "9.52"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:174
#, fuzzy, no-wrap
msgid "0.461"
msgstr "0.461"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:174
#, fuzzy, no-wrap
msgid "13.12"
msgstr "13.12"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:174
#, fuzzy, no-wrap
msgid "0.494"
msgstr "0.494"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:174
#, fuzzy, no-wrap
msgid "9.86"
msgstr "9.86"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:174
#, fuzzy, no-wrap
msgid "0.232"
msgstr "0.232"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:175
#, fuzzy, no-wrap
msgid "13.85"
msgstr "13.85"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:175
#, fuzzy, no-wrap
msgid "0.53"
msgstr "0.53"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:175
#, fuzzy, no-wrap
msgid "11.3"
msgstr "11.3"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:175
#, fuzzy, no-wrap
msgid "0.698"
msgstr "0.698"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:175
#, fuzzy, no-wrap
msgid "14.24"
msgstr "14.24"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:175
#, fuzzy, no-wrap
msgid "0.278"
msgstr "0.278"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:176
#, fuzzy, no-wrap
msgid "16.08"
msgstr "16.08"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:176
#, fuzzy, no-wrap
msgid "0.842"
msgstr "0.842"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:176
#, fuzzy, no-wrap
msgid "145.16"
msgstr "145.16"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:176
#: upstream/_posts/2019-07-08-runtime-performance.adoc:181
#, fuzzy, no-wrap
msgid "0.91"
msgstr "0.91"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:176
#, fuzzy, no-wrap
msgid "14.86"
msgstr "14.86"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:176
#, fuzzy, no-wrap
msgid "0.334"
msgstr "0.334"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:177
#, fuzzy, no-wrap
msgid "18.38"
msgstr "18.38"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:177
#, fuzzy, no-wrap
msgid "1.02"
msgstr "1.02"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:177
#, fuzzy, no-wrap
msgid "134.9"
msgstr "134.9"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:177
#, fuzzy, no-wrap
msgid "1.15"
msgstr "1.15"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:177
#, fuzzy, no-wrap
msgid "16.4"
msgstr "16.4"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:177
#, fuzzy, no-wrap
msgid "0.389"
msgstr "0.389"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:178
#, fuzzy, no-wrap
msgid "23.7"
msgstr "23.7"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:178
#, fuzzy, no-wrap
msgid "1.2"
msgstr "1.2"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:178
#, fuzzy, no-wrap
msgid "145.3"
msgstr "145.3"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:178
#, fuzzy, no-wrap
msgid "1.3"
msgstr "1.3"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:178
#, fuzzy, no-wrap
msgid "16.86"
msgstr "16.86"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:178
#, fuzzy, no-wrap
msgid "0.472"
msgstr "0.472"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:179
#, fuzzy, no-wrap
msgid "21.25"
msgstr "21.25"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:179
#, fuzzy, no-wrap
msgid "1.26"
msgstr "1.26"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:179
#, fuzzy, no-wrap
msgid "34.87"
msgstr "34.87"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:179
#: upstream/_posts/2019-07-08-runtime-performance.adoc:181
#, fuzzy, no-wrap
msgid "1.69"
msgstr "1.69"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:179
#, fuzzy, no-wrap
msgid "26.52"
msgstr "26.52"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:179
#, fuzzy, no-wrap
msgid "0.545"
msgstr "0.545"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:180
#, fuzzy, no-wrap
msgid "83.27"
msgstr "83.27"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:180
#, fuzzy, no-wrap
msgid "1.35"
msgstr "1.35"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:180
#, fuzzy, no-wrap
msgid "30.94"
msgstr "30.94"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:180
#, fuzzy, no-wrap
msgid "1.84"
msgstr "1.84"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:180
#, fuzzy, no-wrap
msgid "65.01"
msgstr "65.01"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:180
#, fuzzy, no-wrap
msgid "0.78"
msgstr "0.78"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:181
#, fuzzy, no-wrap
msgid "32.9"
msgstr "32.9"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:181
#, fuzzy, no-wrap
msgid "143.49"
msgstr "143.49"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:181
#, fuzzy, no-wrap
msgid "2.43"
msgstr "2.43"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:181
#, fuzzy, no-wrap
msgid "48.37"
msgstr "48.37"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:182
#, fuzzy, no-wrap
msgid "63.71"
msgstr "63.71"

#. type: Title ==
#: upstream/_posts/2019-07-08-runtime-performance.adoc:184
#, fuzzy, no-wrap
msgid "Application Start Time"
msgstr "応募開始時間"

#. type: Plain text
#: upstream/_posts/2019-07-08-runtime-performance.adoc:187
#, fuzzy
msgid "start-up times and memory usage were measured for each runtime using the method described here https://quarkus.io/guides/performance-measure"
msgstr "起動時間とメモリ使用量は、ここに記載されている方法で各ランタイムごとに測定しました。 https://quarkus.io/guides/performance-measure"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:190
#, fuzzy, no-wrap
msgid "Metric"
msgstr "メートル"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:191
#, fuzzy, no-wrap
msgid "Start Time"
msgstr "開始時間"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:191
#, fuzzy, no-wrap
msgid "{thorntailStartTime} m"
msgstr "{thorntailStartTime} m"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:191
#, fuzzy, no-wrap
msgid "{quarkusNativeStartTime} m"
msgstr "{quarkusNativeStartTime} m"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:192
#, fuzzy, no-wrap
msgid "{quarkusJvmStartTime} ms"
msgstr "{quarkusJvmStartTime} ms"

#. type: Title ==
#: upstream/_posts/2019-07-08-runtime-performance.adoc:195
#, fuzzy, no-wrap
msgid "Maximum Memory Usage"
msgstr "最大メモリ使用量"

#. type: Plain text
#: upstream/_posts/2019-07-08-runtime-performance.adoc:201
#, fuzzy
msgid "Memory for each application process was measured with `ps` ``` $ ps -o rss -p <PID> ```"
msgstr "各アプリケーションプロセスのメモリは、 `ps` `` $ ps -o rss -p <PID>` `で計測しました。"

#. type: Plain text
#: upstream/_posts/2019-07-08-runtime-performance.adoc:203
#, fuzzy
msgid "The maximum memory usage during the runs was captured."
msgstr "実行中の最大メモリ使用量を取得しました。"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:207
#, fuzzy, no-wrap
msgid "{thorntailRSS} MB"
msgstr "{thorntailRSS}MB"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:207
#, fuzzy, no-wrap
msgid "{quarkusJvmRSS} MB"
msgstr "{quarkusJvmRSS}MB"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:208
#, fuzzy, no-wrap
msgid "{quarkusNativeRSS} MB"
msgstr "{quarkusNativeRSS}MB"

#. type: Plain text
#: upstream/_posts/2019-07-08-runtime-performance.adoc:210
#, fuzzy, no-wrap
msgid "{sp}  \n"
msgstr "{sp}  \n"

#. type: delimited block =
#: upstream/_posts/2019-07-08-runtime-performance.adoc:214
#, fuzzy
msgid "Compared to Thorntail, Quarkus in native mode used only *{quarkusNativeRssCompareThorntail}%* of memory to service *{quarkusNativeThroughputCompareThorntail}% more requests* and Quarkus in JVM mode used *{quarkusJvmRssCompareThorntail}%* of memory to service *{quarkusJvmThroughputCompareThorntail}%* more requests"
msgstr "Thorntailと比較して、ネイティブモードのQuarkusは *{* *quarkusNativeRssCompareThorntail}%*のメモリを使用して *{quarkusNativeThroughputCompareThorntail}%のリクエスト*を処理し、JVMモードのQuarkusは *{quarkusJvmRssCompareThorntail}%の*メモリを使用して *{quarkusJvmThroughputCompareThorntail}%*のリクエストを処理しました。"

#. type: Plain text
#: upstream/_posts/2019-07-08-runtime-performance.adoc:217
#, fuzzy
msgid "Therefore, **using a machine with 2048MB of memory**, running more than one process (not constrained by CPU), it should be possible to achieve the following increases in throughput over Thorntail;"
msgstr "したがって、 *2048MBのメモリを搭載したマシンで*、複数のプロセスを動作させた場合（CPUの制約を受けない）、Thorntailと比較して以下のようなスループットの向上が期待できます。"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:220
#, fuzzy, no-wrap
msgid "Runtime Mode"
msgstr "ランタイムモード"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:220
#, fuzzy, no-wrap
msgid "Memory (MB)"
msgstr "メモリ(MB)"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:220
#, fuzzy, no-wrap
msgid "Number processes per 2048MB"
msgstr "2048MBあたりのプロセス数"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:220
#, fuzzy, no-wrap
msgid "Max Throughput per Process (Req/Sec)"
msgstr "プロセスあたりの最大スループット（Req/Sec）"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:220
#, fuzzy, no-wrap
msgid "Overall Max Throughput (Req/Sec)"
msgstr "全体の最大スループット（Req/Sec）"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:221
#, fuzzy, no-wrap
msgid "Compared to Thorntail"
msgstr "ソーンテールとの比較"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:221
#, fuzzy, no-wrap
msgid "Thorntai"
msgstr "ソーンタイ"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:221
#, fuzzy, no-wrap
msgid "{thorntailRSS}"
msgstr "{thorntailRSS}"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:221
#, fuzzy, no-wrap
msgid "{2gThorntailMaxInstances}"
msgstr "{2gThorntailMaxInstances}となります。"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:221
#, fuzzy, no-wrap
msgid "{thorntailMaxThroughput}"
msgstr "{thorntailMaxThroughput}"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:221
#, fuzzy, no-wrap
msgid "{2gThorntailMaxThroughput}"
msgstr "{2gThorntailMaxThroughput}。"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:222
#, fuzzy, no-wrap
msgid "{2gThorntailMaxThroughputCompareThorntail}%"
msgstr "{2gThorntailMaxThroughputCompareThorntail}%。"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:222
#, fuzzy, no-wrap
msgid "{quarkusJvmRSS}"
msgstr "{quarkusJvmRSS}"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:222
#, fuzzy, no-wrap
msgid "{2gQuarkusJvmMaxInstances}"
msgstr "{2gQuarkusJvmMaxInstances}。"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:222
#, fuzzy, no-wrap
msgid "{quarkusJvmMaxThroughput}"
msgstr "{quarkusJvmMaxThroughput}。"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:222
#, fuzzy, no-wrap
msgid "{2gQuarkusJvmMaxThroughput}"
msgstr "2gQuarkusJvmMaxThroughput} {2gQuarkusJvmMaxThroughput}。"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:223
#, fuzzy, no-wrap
msgid "{2gQuarkusJvmMaxCompareThorntail}%"
msgstr "{2gQuarkusJvmMaxCompareThorntail}%。"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:223
#, fuzzy, no-wrap
msgid "Quarkus - Nativ"
msgstr "Quarkus - Nativ"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:223
#, fuzzy, no-wrap
msgid "{quarkusNativeRSS}"
msgstr "{quarkusNativeRSS}"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:223
#, fuzzy, no-wrap
msgid "{2gQuarkusNativeMaxInstances}"
msgstr "{2gQuarkusNativeMaxInstances}。"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:223
#, fuzzy, no-wrap
msgid "{quarkusNativeMaxThroughput}"
msgstr "{quarkusNativeMaxThroughput}。"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:223
#, fuzzy, no-wrap
msgid "{2gQuarkusNativeMaxThroughput}"
msgstr "{2gQuarkusNativeMaxThroughput}。"

#. type: Table
#: upstream/_posts/2019-07-08-runtime-performance.adoc:224
#, fuzzy, no-wrap
msgid "{2gQuarkusNativeMaxThroughputCompareThorntail}%"
msgstr "{2gQuarkusNativeMaxThroughputCompareThorntail}%。"

#. type: Plain text
#: upstream/_posts/2019-07-08-runtime-performance.adoc:226
#, fuzzy, no-wrap
msgid "{sp} \n"
msgstr "{sp} \n"

#. type: delimited block =
#: upstream/_posts/2019-07-08-runtime-performance.adoc:230
#, fuzzy
msgid "For applications running in cloud environments, it is theoretically possible to improve application throughput by up to *{2gQuarkusNativeMaxCompareThorntailIncrease}%* for the same amount of memory by running multiple instances of a Quarkus application in native mode."
msgstr "クラウド環境で動作するアプリケーションでは、Quarkusアプリケーションの複数のインスタンスをネイティブモードで動作させることで、理論的には、同じメモリ量でアプリケーションのスループットを最大 *{2gQuarkusNativeMaxCompareThorntailIncrease}%*向上させることが可能です。"

#. type: Title ==
#: upstream/_posts/2019-07-08-runtime-performance.adoc:232
#, fuzzy, no-wrap
msgid "Quarkus native - Long running processes"
msgstr "Quarkus Native - 長時間稼働するプロセス"

#. type: Plain text
#: upstream/_posts/2019-07-08-runtime-performance.adoc:235
#, fuzzy
msgid "Another concern is that Quarkus running in native mode is not suitable for long running processes."
msgstr "また、ネイティブモードで動作するQuarkusは、長時間の処理には適していないという懸念もあります。"

#. type: delimited block =
#: upstream/_posts/2019-07-08-runtime-performance.adoc:240
#, fuzzy
msgid "During testing, Quarkus was running in native mode for more than 3hrs at a time, and serviced over *51,890,000* requests!"
msgstr "テスト期間中、Quarkusはネイティブモードで一度に3時間以上稼働し、 *51,890,000*以上のリクエストに対応しました。"

#. type: Plain text
#: upstream/_posts/2019-07-08-runtime-performance.adoc:243
#, fuzzy
msgid "These requests caused hundreds of Full GC cycles, and the process remained stable throughout."
msgstr "これらのリクエストは数百のFull GCサイクルを引き起こし、プロセスは終始安定していました。"

#. type: Title ==
#: upstream/_posts/2019-07-08-runtime-performance.adoc:244
#, fuzzy, no-wrap
msgid "Test Application"
msgstr "テストアプリケーション"

#. type: Plain text
#: upstream/_posts/2019-07-08-runtime-performance.adoc:247
#, fuzzy
msgid "The test application is a Transactional REST/JPA application that makes calls to a PostgreSQL database. The application and database were both running inside a Docker container."
msgstr "テストアプリケーションは、PostgreSQLデータベースへのコールを行うTransactional REST/JPAアプリケーションです。アプリケーションとデータベースは、Dockerコンテナ内で動作していました。"

#. type: Plain text
#: upstream/_posts/2019-07-08-runtime-performance.adoc:249
#, fuzzy
msgid "Sources are available here: https://github.com/johnaohara/quarkusRestCrudDemo"
msgstr "情報源はこちら https://github.com/johnaohara/quarkusRestCrudDemo"

#. type: Title ===
#: upstream/_posts/2019-07-08-runtime-performance.adoc:250
#, fuzzy, no-wrap
msgid "Building and Running test Application"
msgstr "テストアプリケーションの構築と実行"

#. type: Title ====
#: upstream/_posts/2019-07-08-runtime-performance.adoc:252
#, no-wrap
msgid "Prerequisites"
msgstr "前提条件"

#. type: Plain text
#: upstream/_posts/2019-07-08-runtime-performance.adoc:255
#, fuzzy
msgid "Docker (min v1.13.1)"
msgstr "Docker (min v1.13.1)"

#. type: Plain text
#: upstream/_posts/2019-07-08-runtime-performance.adoc:256
#, fuzzy
msgid "Maven (min 3v.5.4)"
msgstr "Maven (min 3v.5.4)"

#. type: Title ====
#: upstream/_posts/2019-07-08-runtime-performance.adoc:257
#, fuzzy, no-wrap
msgid "Build;"
msgstr "作る。"

#. type: Plain text
#: upstream/_posts/2019-07-08-runtime-performance.adoc:264
#, fuzzy, no-wrap
msgid ""
"Quarkus JVM\n"
"```\n"
" $ cd ./quarkus\n"
" $ build-quarkus-jvm.sh\n"
"```\n"
msgstr "Quarkus JVM"

#. type: Plain text
#: upstream/_posts/2019-07-08-runtime-performance.adoc:266
#, fuzzy
msgid "or Quarkus Native"
msgstr "またはQuarkus Native"

#. type: Plain text
#: upstream/_posts/2019-07-08-runtime-performance.adoc:271
#, fuzzy, no-wrap
msgid ""
"```\n"
" $ cd ./quarkus\n"
" $ build-quarkus-native.sh\n"
"```\n"
msgstr ""
"<pre class=\"highlight\"> `$ cd ./quarkus\n"
" $ build-quarkus-native.sh`</pre>"

#. type: Plain text
#: upstream/_posts/2019-07-08-runtime-performance.adoc:273
#: upstream/_posts/2019-07-08-runtime-performance.adoc:303
#, fuzzy
msgid "or Thorntail"
msgstr "またはソーンテール"

#. type: Plain text
#: upstream/_posts/2019-07-08-runtime-performance.adoc:278
#, fuzzy, no-wrap
msgid ""
"```\n"
" $ cd ./thorntail\n"
" $ ./build-thorntail.sh\n"
"```\n"
msgstr ""
"<pre class=\"highlight\"> `$ cd ./thorntail\n"
" $ ./build-thorntail.sh`</pre>"

#. type: Title ====
#: upstream/_posts/2019-07-08-runtime-performance.adoc:279
#, fuzzy, no-wrap
msgid "Run;"
msgstr "走る。"

#. type: Plain text
#: upstream/_posts/2019-07-08-runtime-performance.adoc:282
#, fuzzy
msgid "First start PostgreSQL running in a Docker container;"
msgstr "まず、DockerコンテナでPostgreSQLを起動します。"

#. type: Plain text
#: upstream/_posts/2019-07-08-runtime-performance.adoc:290
#, fuzzy, no-wrap
msgid ""
"```\n"
"docker run -d --rm -p 5432:5432 --network host  \\\n"
"\t-e POSTGRES_DB='rest-crud' \\\n"
"\t-e POSTGRES_USER='restcrud'  \\\n"
"\t-e POSTGRES_PASSWORD='restcrud' \\\n"
"\tdocker.io/postgres:10.5\n"
"```\n"
msgstr ""
"<pre class=\"highlight\"> `docker run -d --rm -p 5432:5432 --network host  \\\n"
"\t-e POSTGRES_DB='rest-crud' \\\n"
"\t-e POSTGRES_USER='restcrud'  \\\n"
"\t-e POSTGRES_PASSWORD='restcrud' \\\n"
"\tdocker.io/postgres:10.5`</pre>"

#. type: Plain text
#: upstream/_posts/2019-07-08-runtime-performance.adoc:292
#, fuzzy
msgid "then start the application running in a Docker container;"
msgstr "をクリックすると、Dockerコンテナで動作するアプリケーションが起動します。"

#. type: Plain text
#: upstream/_posts/2019-07-08-runtime-performance.adoc:301
#, fuzzy, no-wrap
msgid ""
"```\n"
" $ cd ./quarkus\n"
" $ ./run-quarkus-jvm.sh\n"
"```\n"
"or Quarkus Native\n"
"```\n"
" $ run-quarkus-native.sh\n"
"```\n"
msgstr ""
"<pre class=\"highlight\"> `$ cd ./quarkus\n"
" $ ./run-quarkus-jvm.sh`</pre>"

#. type: Plain text
#: upstream/_posts/2019-07-08-runtime-performance.adoc:308
#, fuzzy, no-wrap
msgid ""
"```\n"
" $ cd ./thorntail\n"
" $ ./run-thorntail.sh\n"
"```\n"
msgstr ""
"<pre class=\"highlight\"> `$ cd ./thorntail\n"
" $ ./run-thorntail.sh`</pre>"

#. type: Title ====
#: upstream/_posts/2019-07-08-runtime-performance.adoc:309
#, fuzzy, no-wrap
msgid "Runtime validation"
msgstr "ランタイムバリデーション"

#. type: Plain text
#: upstream/_posts/2019-07-08-runtime-performance.adoc:312
#, fuzzy
msgid "Navigate browser to http://{REMOTE_HOST}:8080/"
msgstr "ブラウザを http://{REMOTE_HOST}:8080/ に移動します。"

#. type: Plain text
#: upstream/_posts/2019-07-08-runtime-performance.adoc:314
#, fuzzy
msgid "or"
msgstr "または"

#. type: Plain text
#: upstream/_posts/2019-07-08-runtime-performance.adoc:317
#, fuzzy
msgid "``` $ curl -D - http://{REMOTE_HOST}:8080/fruits"
msgstr "<pre class=\"highlight\"> ``</pre>"

#. type: Plain text
#: upstream/_posts/2019-07-08-runtime-performance.adoc:323
#, fuzzy
msgid "HTTP/1.1 200 OK Connection: keep-alive Content-Type: application/json Content-Length: 75 Date: Mon, 01 Apr 2019 07:57:17 GMT"
msgstr "HTTP/1.1 200 OK Connection: keep-alive Content-Type: application/json Content-Length: 75 Date:Mon, 01 Apr 2019 07:57:17 GMT"

#. type: Plain text
#: upstream/_posts/2019-07-08-runtime-performance.adoc:326
#, fuzzy
msgid "```"
msgstr "<pre class=\"highlight\"> ``</pre>"

#. type: Title ==
#: upstream/_posts/2019-07-08-runtime-performance.adoc:327
#, fuzzy, no-wrap
msgid "Runtime Performance Metrics"
msgstr "ランタイム・パフォーマンス・メトリクス"

#. type: Plain text
#: upstream/_posts/2019-07-08-runtime-performance.adoc:330
#, fuzzy
msgid "Throughput and Response Time were measured using the wrk command line tool https://github.com/wg/wrk."
msgstr "スループットとレスポンスタイムは、wrkコマンドラインツール https://github.com/wg/wrk ）を用いて測定しました。"

#. type: Plain text
#: upstream/_posts/2019-07-08-runtime-performance.adoc:335
#, fuzzy
msgid "A shell script for running wrk is provided; ``` $ ./runWrk.sh ```"
msgstr "wrkを実行するためのシェルスクリプトが用意されています。 `` $ ./runWrk.sh``。"

#. type: Title ==
#: upstream/_posts/2019-07-08-runtime-performance.adoc:336
#, fuzzy, no-wrap
msgid "Runtime Environment"
msgstr "実行環境"

#. type: Title ===
#: upstream/_posts/2019-07-08-runtime-performance.adoc:338
#, fuzzy, no-wrap
msgid "System Under Test"
msgstr "テスト中のシステム"

#. type: Plain text
#: upstream/_posts/2019-07-08-runtime-performance.adoc:340
#, fuzzy
msgid "CPU: 32 x Intel(R) Xeon(R) CPU E5-2640 v3 @ 2.60GHz"
msgstr "CPU:32 x Intel® Xeon® CPU E5-2640 v3 @ 2.60GHz"

#. type: Plain text
#: upstream/_posts/2019-07-08-runtime-performance.adoc:342
#, fuzzy
msgid "Operating System: Red Hat Enterprise Linux Server release 7.6 (3.10.0-693.25.2.el7.x86_64)"
msgstr "オペレーティングシステム。Red Hat Enterprise Linux Server release 7.6 (3.10.0-693.25.2.el7.x86_64)"

#. type: Plain text
#: upstream/_posts/2019-07-08-runtime-performance.adoc:344
#, fuzzy
msgid "Memory: 262GB"
msgstr "メモリ：262GB"

#. type: Plain text
#: upstream/_posts/2019-07-08-runtime-performance.adoc:346
#, fuzzy
msgid "Ethernet: Solarflare Communications SFC9020 10G Ethernet Controller"
msgstr "イーサネットソーラーフレア・コミュニケーションズ SFC9020 10Gイーサネット・コントローラー"

#. type: Title ===
#: upstream/_posts/2019-07-08-runtime-performance.adoc:347
#, fuzzy, no-wrap
msgid "Client system"
msgstr "クライアントシステム"

#. type: Plain text
#: upstream/_posts/2019-07-08-runtime-performance.adoc:350
#, fuzzy
msgid "CPU: 24 x Intel(R) Xeon(R) CPU E5-2640 @ 2.80GHz"
msgstr "CPU: 24 x Intel® Xeon® CPU E5-2640 @ 2.80GHz"

#. type: Plain text
#: upstream/_posts/2019-07-08-runtime-performance.adoc:352
#, fuzzy
msgid "Operating System: Red Hat Enterprise Linux Server release 7.6 (3.10.0-229.el7.x86_64)"
msgstr "オペレーティングシステム。Red Hat Enterprise Linux Server release 7.6 (3.10.0-229.el7.x86_64)"

#. type: Plain text
#: upstream/_posts/2019-07-08-runtime-performance.adoc:354
#, fuzzy
msgid "Memory: 64GB"
msgstr "メモリ：64GB"

#. type: Plain text
#: upstream/_posts/2019-07-08-runtime-performance.adoc:356
#, fuzzy
msgid "Ethernet: Solarflare Communications SFC9020 [Solarstorm]"
msgstr "イーサネットソーラーフレア・コミュニケーションズSFC9020【ソーラーストーム"

#. type: Title ===
#: upstream/_posts/2019-07-08-runtime-performance.adoc:357
#, fuzzy, no-wrap
msgid "JVM"
msgstr "JVM"

#. type: Plain text
#: upstream/_posts/2019-07-08-runtime-performance.adoc:358
#, fuzzy
msgid "Java HotSpot(TM) 64-Bit Server VM (build 25.191-b12, mixed mode)"
msgstr "Java HotSpot™ 64-Bit Server VM (ビルド25.191-b12、混合モード)"

#, fuzzy
#~ msgid "---\n"
#~ msgstr "---\n"

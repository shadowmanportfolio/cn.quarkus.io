# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-04-29 21:23+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: author
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:1
#, fuzzy, no-wrap
msgid "cesarsaavedra"
msgstr "セサルサベドラ"

#. type: YAML Front Matter: date
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:1
#, fuzzy, no-wrap
msgid "2020-03-14"
msgstr "2020-03-14"

#. type: YAML Front Matter: layout
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:1
#, fuzzy, no-wrap
msgid "post"
msgstr "ポスト"

#. type: YAML Front Matter: tags
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:1
#, fuzzy, no-wrap
msgid "user-story"
msgstr "ユーザストーリー"

#. type: Title =
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:1
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:10
#, fuzzy, no-wrap
msgid "Ennovative Solutions uses Quarkus with AWS Lambda to deliver a better customer experience with their new product PURQR"
msgstr "Ennovative Solutions社がQuarkusとAWS "
"Lambdaを併用し、新製品PURQRでより良い顧客体験を提供"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:13
#, fuzzy, no-wrap
msgid "EnnovativeSolutions logo"
msgstr "EnnovativeSolutionsのロゴ"

#. type: Target for macro image
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:13
#, no-wrap
msgid "ennovativesolutions-purqr.png"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:16
#, fuzzy
msgid "https://www.ennovative-solutions.be/[Ennovative Solutions] is an IT Consulting and Services company out of Diepenbeek, Belgium. By working with many customers, including ones in retail, they identified that many of them were suffering low sales due to poor customer experience. As a result, in 2019, they created a new application called https://www.purqr.com/?fbclid=IwAR2nSQcVWEOEIiL0XLva4IAkjJWmehU8FdS2YtMAwpC1jFdflGbvmmmOwT8[PURQR] (Purchasing via QR codes), which is a new cloud platform that comes with both a backend application and a mobile application to manage retailers’ physical store showrooms. By using the mobile app, one can perform in store analytics, e.g. popular products & categories, best performing salespersons, etc., and deliver a more personalized experience to end customers. The platform also manages appointments and customer data so when they leave the showroom they can receive an overview of what they liked via mail. In addition, PURQR integrates to customers’ quoting systems. For example, one of its goals is to provide customers with a more personalized follow-up quote to turn it into a sale. The solution also keeps customer information for further communication and possible co-sale and up-sale opportunities. Because one scans the products as part of its processes, one can get insights into popular products that the company can then stock up on.  Their cloud platform can improve customer experience and also increase sales."
msgstr ""
"link:https://www.ennovative-solutions.be/[Ennovative Solutions]社は、ベルギー"
"のディペンベークにあるITコンサルティングとサービスを提供する会社です。彼らは"
"、小売業を含む多くの顧客と仕事をすることで、多くの顧客がカスタマーエクスペリ"
"エンスの低下による低売上に苦しんでいることを確認しました。その結果、"
"2019年には link:https://www.purqr.com/?fbclid=IwAR2nSQcVWEOEIiL0XLva4IAkjJWme"
"hU8FdS2YtMAwpC1jFdflGbvmmmOwT8[「PURQR]（Purchasing via QR codes）」という、"
"小売店の実店舗のショールームを管理するためのバックエンドアプリケーションとモ"
"バイルアプリケーションの両方が付属した新しいクラウドプラットフォームを作成し"
"た。これは、バックエンドアプリケーションとモバイルアプリケーションの両方を備"
"えた新しいクラウドプラットフォームで、小売店の実店舗のショールームを管理する"
"ためのものです。モバイルアプリケーションを使用することで、人気のある商品やカ"
"テゴリー、最も成績の良い販売員など、店舗内の分析を行うことができ、最終顧客に"
"よりパーソナライズされた体験を提供することができます。また、このプラットフォ"
"ームでは、予約や顧客データを管理し、ショールームを出た後に、気に入った商品の"
"概要をメールで受け取ることができます。さらに、PURQRは顧客の見積システムとの統"
"合も可能です。例えば、お客様に、よりパーソナライズされたフォローアップの見積"
"もりを提供して、販売につなげることも目的の一つです。また、このソリューション"
"は、今後のコミュニケーションや、共同販売やアップセルの機会に備えて、顧客情報"
"を保持します。このソリューションでは、プロセスの一環として製品をスキャンする"
"ため、人気のある製品についての洞察を得ることができ、会社はそれをストックして"
"おくことができます。同社のクラウドプラットフォームは、カスタマーエクスペリエ"
"ンスを向上させるだけでなく、売上を伸ばすこともできる。"

#. type: Title ==
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:17
#, fuzzy, no-wrap
msgid "Their journey into Quarkus"
msgstr "Quarkusへの旅"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:20
#, fuzzy
msgid "For the development of PURQR, Ennovative Solutions decided to follow a Function-as-a-Service approach by using AWS Lambda as the serverless computing platform. When Dennis Baerten, Software Engineer with Ennovative Solutions, started his journey using AWS Lambda, he described it as _“I ran into the long startup times using regular Java in AWS Lambda”._ They soon realized that using plain Java on this serverless computing platform was not going to deliver the performance and experience that they were after. This is when they started to look at other options."
msgstr ""
"PURQRの開発において、Ennovative Solutions社は、"
"サーバーレスコンピューティングのプラットフォームとしてAWS Lambdaを使用し"
"、Function-as-a-Serviceのアプローチをとることにしました。Ennovative "
"SolutionsのソフトウェアエンジニアであるDennis Baerten氏は、AWS "
"Lambdaを使った旅を始めたとき、 _「AWS Lambdaで普通のJavaを使うと、長い起動時"
"間に遭遇した」_と表現しています。彼らはすぐに、このサーバーレス・コンピューテ"
"ィング・プラットフォーム上で普通のJavaを使っても、自分たちが求めているパフォ"
"ーマンスや体験を提供できないことに気付きました。そこで、他の選択肢を検討し始"
"めたのです。"

#. type: Title ==
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:21
#, fuzzy, no-wrap
msgid "From Micronaut to Quarkus"
msgstr "ミクロノートからクォークスへ"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:24
#, fuzzy
msgid "A colleague of Dennis’ told him to look at Micronaut, which is another framework that supports GraalVM. He tried out Micronaut but encountered difficulties getting it to work with the type of application he was building. Furthermore, there was no Micronaut plugin to build his native image in AWS. _“Quarkus had more features and extensions than Micronaut that could be compiled to native (compatible with GraalVM)”,_ Dennis asserted. When he got started with Quarkus, one of the first things Dennis did was to enroll himself to the Quarkus Zulip channel. Dennis engaged and connected with the Quarkus community and obtained quick replies to his questions and even found some bugs in Quarkus. He was even able to apply the fixes himself via GitHub Pull Requests, which were eventually merged into the Quarkus project. Dennis expressed _“I valued and was very pleased with the support from the Quarkus community, which is very active”._ In addition, the fact that Red Hat was behind Quarkus was also important to Dennis. He was familiar with Hibernate and other open source technologies that are sponsored by Red Hat. He knew Red Hat was a big player in the IT world so knowing this gave Dennis the confidence in the technology. Knowing that Red Hat was a sponsor of Quarkus, reassured him about his decision to use it to implement his application."
msgstr ""
"Dennis氏の同僚は、GraalVMをサポートする別のフレームワークであるMicronautを見"
"てみるように言いました。Micronautを試してみましたが、自分が作っているアプリケ"
"ーションのタイプでは動作させるのに苦労しました。さらに、AWSでネイティブイメー"
"ジを構築するためのMicronautプラグインもありませんでした。 "
"_\"QuarkusにはMicronautよりもネイティブ（GraalVMとの互換性）"
"にコンパイルできる機能や拡張があった \"_とデニス氏は主張する。Quarkusを使い始"
"めたとき、Dennisが最初にしたことの1つは、QuarkusのZulipチャンネルに登録するこ"
"とでした。DennisはQuarkusのコミュニティに参加してつながり、自分の質問に対する"
"迅速な回答を得て、Quarkusのバグを見つけることもできました。さらに、GitHub "
"Pull Requestsを通じて自分で修正を加えることもでき、最終的にはQuarkusプロジェ"
"クトにマージされました。デニスは _「非常に活発なQuarkusコミュニティからのサポ"
"ートを評価し、非常に満足しています」と_述べています。さらに、Red "
"HatがQuarkusを支援していることも、デニスにとっては重要でした。彼は、"
"Hibernateやその他のRed "
"Hatがスポンサーとなっているオープンソース技術に精通していました。Red HatがIT"
"の世界で大きな役割を果たしていることを知っていたので、それを知っていることで"
"、デニスはこの技術に自信を持つことができました。Red HatがQuarkusのスポンサー"
"であることを知っていたので、アプリケーションを実装するためにQuarkusを使用する"
"という決断を安心して下すことができました。"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:26
#, fuzzy
msgid "Ennovative Solutions had tried Micronaut during the proof of concept phase. However, after learning about Quarkus and its benefits over Micronaut, they migrated everything to Quarkus. In their opinion, some of these benefits included:"
msgstr ""
"Ennovative Solutionsは、概念実証の段階でMicronautを試していました。しかし、Qu"
"arkusとMicronautに対するメリットを知り、すべてをQuarkusに移行しました。彼らの"
"意見では、これらの利点には次のようなものがあります。"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:28
#, fuzzy
msgid "Great support via Zulip"
msgstr "Zulipによる素晴らしいサポート"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:29
#, fuzzy
msgid "Ability to directly contribute to the project"
msgstr "プロジェクトに直接貢献できる能力"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:30
#, fuzzy
msgid "Fast innovation"
msgstr "ファストイノベーション"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:31
#, fuzzy
msgid "Fast project release cadence that provides quick bug fixes and new features"
msgstr "迅速なバグフィックスと新機能を提供する高速プロジェクトリリースケイデンス"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:32
#, fuzzy
msgid "Quarkus is following closely what happens with GraalVM"
msgstr "QuarkusはGraalVMの動向を注視しています。"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:33
#, fuzzy
msgid "Quarkus is a hot topic and innovative technology that is talked about a lot at Java conferences"
msgstr "Quarkusは、Javaのカンファレンスでもよく話題になる、話題性のある革新的な技術で"
"す。"

#. type: Title ==
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:34
#, fuzzy, no-wrap
msgid "PURQR high-level architecture"
msgstr "PURQR ハイレベルアーキテクチャ"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:37
#, fuzzy
msgid "PURQR consists of 7 Quarkus microservices that are currently running in production. They have been in production since October 2019."
msgstr "PURQRは、現在本番で稼働している7つのQuarkusマイクロサービスで構成されています"
"。2019年10月から本番稼働しています。"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:39
#, fuzzy
msgid "Most of the microservices are HTTP-based and sit behind an Amazon API Gateway and at the backend they are all AWS Lambda functions. These microservices are:"
msgstr ""
"ほとんどのマイクロサービスはHTTPベースで、Amazon API Gatewayの後ろに置かれ、"
"バックエンドではすべてAWS "
"Lambda関数になっています。これらのマイクロサービスは"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:41
#, fuzzy
msgid "External product view - viewing capabilities for products for the end consumer"
msgstr "外部製品ビュー - 最終消費者向け製品の表示機能"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:42
#, fuzzy
msgid "Product repository - this is where information about products reside"
msgstr "製品リポジトリ - 製品に関する情報が保管されている場所です。"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:43
#, fuzzy
msgid "Company settings - interface to set company wide parameters"
msgstr "会社の設定 - 会社全体のパラメーターを設定するインターフェース"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:44
#, fuzzy
msgid "Appointments - customer appointments functionality"
msgstr "アポイントメント - 顧客のアポイントメント機能"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:45
#, fuzzy
msgid "Label generation - capabilities for generating Dymo labels"
msgstr "ラベル生成 - ダイモラベルの生成機能"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:46
#, fuzzy
msgid "Notifications - SQS consumer for asynchronous emails"
msgstr "Notifications - 非同期メール用のSQSコンシューマー"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:47
#, fuzzy
msgid "Summary - aggregates all the data to display on the dashboard for the business owner"
msgstr "Summary - "
"すべてのデータを集約し、ビジネスオーナー向けのダッシュボードに表示します。"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:49
#, fuzzy
msgid "Here’s a high-level pictorial of the PURQR system that uses Quarkus with AWS Lamdba:"
msgstr "ここでは、QuarkusとAWS "
"Lamdbaを使用したPURQRシステムのハイレベルな絵を紹介します。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:51
#, fuzzy, no-wrap
msgid "PURQR high-levelArch"
msgstr "PURQR ハイレベルアーカイブ"

#. type: Target for macro image
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:51
#, no-wrap
msgid "purqr-architecture.png"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:54
#, fuzzy
msgid "As depicted in the logical architecture diagram above, the Quarkus-based microservices all run as AWS Lambda functions. It is worth mentioning that all these microservices run in test and production in Quarkus native mode, which leverages GraalVM native image. For local development and debugging purposes, they run these microservices in Quarkus JVM mode using https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/what-is-sam.html[AWS Serverless Application Model] (SAM) on their local machines."
msgstr ""
"上の論理アーキテクチャ図に描かれているように、"
"QuarkusベースのマイクロサービスはすべてAWS Lambda関数として実行されます。特筆"
"すべきは、これらのマイクロサービスはすべて、GraalVMのネイティブイメージを活用"
"したQuarkusのネイティブモードでテストおよび本番環境で実行されていることです。"
"ローカルでの開発やデバッグの目的では、ローカルマシン上で link:https://docs."
"aws.amazon.com/serverless-application-model/latest/developerguide/what-is-sam"
".html[AWS Serverless Application Model]（SAM）を使用してQuarkus "
"JVMモードでこれらのマイクロサービスを実行しています。"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:56
#, fuzzy
msgid "Lastly, _“moving to Quarkus was easy.  Getting everything to work in native mode took a couple of days. And it took about two months to develop the complete application”,_ added Dennis."
msgstr ""
"最後に、 _「Quarkusへの移行は簡単でした_。 _すべてをネイティブモードで動作さ"
"せるのに2、3日かかりました。そして、アプリケーション全体の開発には約2ヶ月かか"
"りました」と_Dennisは述べています。"

#. type: Title ==
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:57
#, fuzzy, no-wrap
msgid "Quarkus benefits"
msgstr "Quarkusのメリット"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:60
#, fuzzy
msgid "Ennovative Solutions found Quarkus to be a very valuable and rich Java stack with a wide range of capabilities to implement any type of business application. Among the many benefits that Quarkus provided to them, running Java applications in AWS Lambda functions without the downside of cold starts was one of them. Quarkus fast startup time was key here because they wanted to reduce the cold start timing of AWS Lambda functions to a bare minimum when running in both test and production environments. For example, _“using Spring with AWS Lambda would have been prohibitive because the startup time of Spring in AWS Lambda is too big from my research”,_ Dennis mentioned ( https://keyholesoftware.com/2018/04/26/aws-lambda-with-spring-boot/[1] , https://dzone.com/articles/aws-lambda-with-spring-boot[2] , https://pattern-match.com/blog/2019/07/11/springboot2-and-aws-lambda-quick-fix/[3] ). Also, from past experience, he had seen that _“using plain Java with AWS Lambda, it was taking 6 to 7 seconds for a cold startup whereas with Quarkus it takes about 200 milliseconds”,_ Dennis added. However, in order to be more thorough in his research, he took one of the simplest functions (no dependency injection, logging) he had and ran it in AWS Lambda in plain Java and Quarkus native mode, the latter being a combination of Quarkus + GraalVM native image. The measurements, as reported by the AWS Lambda platform, are as follows:"
msgstr ""
"Ennovative Solutions社は、Quarkusが、あらゆるタイプのビジネスアプリケーション"
"を実装するための幅広い機能を備えた、非常に価値のある豊富なJavaスタックである"
"ことを知りました。Quarkusが彼らに提供した数多くのメリットの中でも、"
"コールドスタートのデメリットなしにAWS Lambda関数でJavaアプリケーションを実行"
"することは、その一つでした。テスト環境と本番環境の両方で実行する際に、AWS Lam"
"bdaファンクションのコールドスタートのタイミングを極力減らしたいと考えていたた"
"め、ここではQuarkusの高速起動が鍵となりました。例えば _、「AWS LambdaでSpring"
"を使うと、私の調査ではSpringの起動時間が大きすぎるため、禁止されていただろう"
"」_とデニスは言及している（ link:https://keyholesoftware.com/2018/04/26/"
"aws-lambda-with-spring-boot/[1], link:https://dzone.com/articles/aws-lambda-"
"with-spring-boot[2], link:https://pattern-match.com/blog/2019/07/11/"
"springboot2-and-aws-lambda-quick-fix/[3]）。また、過去の経験から、 _「AWS Lam"
"bdaでプレーンなJavaを使うと、コールドスタートに6～7秒かかっていたのに対し、Qu"
"arkusでは200ミリ秒程度で_済んだ」とデニスは付け加えた。しかし、より徹底した調"
"査を行うために、彼は手持ちの最もシンプルな関数（依存性注入なし、ロギングあり"
"）の1つを取り上げ、AWS LambdaでプレーンなJavaとQuarkusのネイティブモード（"
"後者はQuarkus + GraalVMのネイティブイメージの組み合わせ）で実行しました。AWS "
"Lambdaプラットフォームから報告された測定結果は以下の通りです。"

#. type: Block title
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:61
#, fuzzy, no-wrap
msgid "Quarkus with AWS Lambda - measurements"
msgstr "AWS LambdaによるQuarkus - 測定"

#. type: Table
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:65
#, fuzzy, no-wrap
msgid "Metric name"
msgstr "メトリクス名"

#. type: Table
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:65
#, fuzzy, no-wrap
msgid "Plain Java"
msgstr "プレーンJava"

#. type: Table
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:67
#, fuzzy, no-wrap
msgid "Quarkus native mode"
msgstr "Quarkusのネイティブモード"

#. type: Table
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:68
#, fuzzy, no-wrap
msgid "Cold start time (ms)"
msgstr "コールドスタート時間(ms)"

#. type: Table
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:69
#, fuzzy, no-wrap
msgid "584.13"
msgstr "584.13"

#. type: Table
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:71
#, fuzzy, no-wrap
msgid "222.07"
msgstr "222.07"

#. type: Table
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:72
#, fuzzy, no-wrap
msgid "Execution time (ms)"
msgstr "実行時間(ms)"

#. type: Table
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:73
#, fuzzy, no-wrap
msgid "76.12"
msgstr "76.12"

#. type: Table
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:75
#, fuzzy, no-wrap
msgid "6.67"
msgstr "6.67"

#. type: Table
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:76
#, fuzzy, no-wrap
msgid "Memory consumed (MB)"
msgstr "消費メモリ(MB)"

#. type: Table
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:77
#, fuzzy, no-wrap
msgid "102"
msgstr "102"

#. type: Table
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:78
#, fuzzy, no-wrap
msgid "72"
msgstr "72"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:81
#, fuzzy
msgid "In the table above, you can see a 62% reduction in cold start from plain Java to Quarkus native and a 91% reduction in execution time from plain Java to Quarkus native mode! For memory consumption, there was a 29% reduction in going from plain Java to Quarkus native."
msgstr ""
"上の表を見ると、プレーンなJavaからQuarkus Nativeにすることでコールドスタート"
"が62%削減され、プレーンなJavaからQuarkusネイティブモードにすることで実行時間"
"が91%削減されていることがわかります。メモリ消費量については、プレーンなJavaか"
"らQuarkusネイティブにすることで29%削減されています。"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:83
#, fuzzy
msgid "By using Quarkus with AWS Lambda, Ennovative Solutions have been able to lower the cloud resource consumption costs, which include the use of AWS Lambda, SQS, DynamoDB, Route53, among others. Presently, PURQR has a handful of customers so their monthly costs are minimal. However, Dennis mentions that as their number of customers grows so will their cloud resource consumption costs.  _“As these costs increase, this is when the benefit of using Quarkus will be experienced due to its more efficient use of cloud resources and fast startup time compared to plain Java and Spring Boot”,_ Dennis stated."
msgstr ""
"QuarkusとAWS Lambdaを併用することで、Ennovative Solutions社は、AWS Lambda、SQ"
"S、DynamoDB、Route53などを使用するクラウドリソースの消費コストを下げることが"
"できました。現在、PURQRには一握りの顧客しかいないため、月々のコストは最小限に"
"抑えられています。しかし、デニスは、顧客数の増加に伴い、クラウドリソースの消"
"費コストも増加すると述べています。「しかし、デニス氏によると、顧客数の増加に"
"伴い、クラウドのリソース消費量も増加していくとのことです。 _「これらのコスト"
"が増加したときこそ、Quarkusを使用するメリットが発揮されるでしょう_。"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:85
#, fuzzy
msgid "As a Spring developer, Dennis found Quarkus very easy to learn. He mentioned _“it took me about 3 days to get familiar with the Quarkus stack”._ In fact, he highlighted that the fast learning curve attracted him to Quarkus as well. He was also particularly impressed by the Quarkus documentation, which _\"is very good\",_ he added. Dennis thinks the Quarkus guides are very thorough and provide good detailed information. This is another reason why he selected Quarkus."
msgstr ""
"Springの開発者であるDennisは、Quarkusを非常に簡単に学ぶことができました。"
"彼は _「Quarkusのスタックに慣れるのに3日ほどかかりました」_と述べています。実"
"際、彼は学習曲線の速さに惹かれてQuarkusを購入したと述べています。また、彼はQu"
"arkusのドキュメントに特に感銘を受け、 _「非常に優れている」_と付け加えていま"
"す。Dennis氏は、Quarkusのガイドは非常に綿密で、詳細な情報を提供していると考え"
"ています。これも彼がQuarkusを選んだ理由の一つです。"

#. type: Title ==
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:86
#, fuzzy, no-wrap
msgid "Lessons Learned"
msgstr "学んだこと"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:89
#, fuzzy
msgid "Quarkus can run in JVM mode and native mode. If you are interested in running your application in Quarkus native mode, Dennis recommends to first check if Quarkus offers extensions for your required functional requirements. For example, if you’d like to access an in-memory-data-grid (IMDG) like Kafka, he suggests you first search the Quarkus extensions to see if there’s any extension related to this need. Quarkus extensions can compile to native so it’s better to check if Quarkus offers your required functionality before you start implementing your application with a library for which Quarkus does not provide an extension. If you don’t find a Quarkus extension for the third-party library you want to use, then Dennis recommends to check the Quarkus project issues to see if there’s already a pending request to “quark” the third-party library. Also, you’d want to check with the third-party library authors/project to see if they already have a Quarkus extension or are working on one.  You don’t want to find out that you can’t compile your application to a native executable after you have spent hours developing it! You want to avoid this if your goal is to compile to native. In short, the lesson learned here is _“check first if there are Quarkus extensions available for what you need”_, Dennis suggests."
msgstr ""
"Quarkusは、JVMモードとネイティブモードで動作します。アプリケーションをQuarkus"
"のネイティブモードで実行することに興味がある場合、Dennisはまず、必要な機能要"
"件に対してQuarkusが拡張機能を提供しているかどうかを確認することを勧めています"
"。例えば、KafkaのようなIMDG（in-memory-data-grid）にアクセスしたい場合は、ま"
"ずQuarkusの拡張機能を検索して、このニーズに関連する拡張機能があるかどうかを確"
"認することを勧めています。Quarkusの拡張機能はネイティブにコンパイルできるので"
"、Quarkusが拡張機能を提供していないライブラリを使ってアプリケーションの実装を"
"始める前に、Quarkusが必要な機能を提供しているかどうかを確認した方が良いでしょ"
"う。使用したいサードパーティライブラリ用のQuarkusエクステンションが見つからな"
"い場合、デニスはQuarkusプロジェクトの課題をチェックして、サードパーティライブ"
"ラリを「Quark」するための保留中のリクエストがあるかどうかを確認することをお勧"
"めします。また、サードパーティライブラリの作者やプロジェクトに、すでにQuarkus"
"の拡張機能があるかどうかを確認することをお勧めします。何時間もかけて開発した"
"アプリケーションを、ネイティブ実行可能ファイルにコンパイルできないなんてこと"
"は避けたいものです。ネイティブにコンパイルすることが目的であれば、このような"
"ことは避けたいものです。要するに、ここで得た教訓は、 _「必要なものに対応するQ"
"uarkusの拡張機能があるかどうかをまず確認する」_ということです。"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:91
#, fuzzy
msgid "They were not able to use live coding with Quarkus because this capability does not currently support AWS Serverless Application Model (SAM) for the AWS Lambda functions running on their local machines."
msgstr ""
"この機能は現在、ローカルマシン上で動作するAWS Lambda関数のAWS Serverless "
"Application Model（SAM）をサポートしていないため、Quarkusでライブコーディング"
"を使用することはできませんでした。"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:93
#, fuzzy
msgid "Lastly, although learning Quarkus was fast, learning the internals of Quarkus native mode was more challenging and took longer to understand."
msgstr "最後に、Quarkusの習得は早かったのですが、Quarkusのネイティブモードの内部を学"
"ぶのはより難しく、理解するのに時間がかかりました。"

#. type: Title ==
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:94
#, fuzzy, no-wrap
msgid "The future"
msgstr "未来"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:97
#, fuzzy
msgid "Ennovative Solutions plans to continue using Quarkus for future development of PURQR as well as other solutions. They are extremely impressed by this new technology and the involvement and active participation of its community. About the Quarkus project, Dennis’s parting thoughts are _“Great job! Keep up the good work and continue accepting work from the community.”_"
msgstr ""
"Ennovative Solutions社は、今後もPURQRやその他のソリューションの開発にQuarkus"
"を使用する予定です。Ennovative Solutions社は、この新しい技術と、そのコミュニ"
"ティの関与と積極的な参加に非常に感銘を受けています。Quarkusプロジェクトについ"
"て、Dennis氏は次のように締めくくっています。 "
"_これからも、コミュニティからの仕事を受け入れてください。\"_"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:99
#, fuzzy
msgid "For more information on Quarkus:"
msgstr "Quarkusの詳細については、こちらをご覧ください。"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:101
#, fuzzy
msgid "Quarkus website: http://quarkus.io"
msgstr "Quarkusウェブサイト http://quarkus.io"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:102
#, fuzzy
msgid "Quarkus GitHub project: https://github.com/quarkusio/quarkus"
msgstr "Quarkus GitHubプロジェクト: https://github.com/quarkusio/quarkus"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:103
#, fuzzy
msgid "Quarkus Twitter: https://twitter.com/QuarkusIO"
msgstr "Quarkus Twitter: https://twitter.com/QuarkusIO"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:104
#, fuzzy
msgid "Quarkus chat: https://quarkusio.zulipchat.com/"
msgstr "Quarkusチャット https://quarkusio.zulipchat.com/"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:105
#, fuzzy
msgid "Quarkus mailing list: https://groups.google.com/forum/#!forum/quarkus-dev"
msgstr "Quarkusメーリングリスト: https://groups.google.com/forum/#!forum/quarkus-dev"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:106
#, fuzzy
msgid "https://youtube.com/quarkusio[Quarkus YouTube Channel]"
msgstr "link:https://youtube.com/quarkusio[Quarkus YouTubeチャンネル]"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:106
#, fuzzy
msgid "https://www.redhat.com/cms/managed-files/cl-4-reasons-try-quarkus-checklist-f19180cs-201909-en.pdf[Four reasons to use Quarkus]"
msgstr ""
"link:https://www.redhat.com/cms/managed-files/cl-4-reasons-try-quarkus-"
"checklist-f19180cs-201909-en.pdf[Quarkusを利用する4つの理由]"

#, fuzzy
#~ msgid "---\n"
#~ msgstr "---\n"

#, fuzzy
#~ msgid ""
#~ "layout: post\n"
#~ "title: Ennovative Solutions uses Quarkus with AWS Lambda to deliver a better customer experience with their new product PURQR\n"
#~ "date: 2020-03-14\n"
#~ "tags: user-story\n"
#~ "author: cesarsaavedra\n"
#~ "---\n"
#~ msgstr ""
#~ "layout: post\n"
#~ "title: Ennovative Solutions社がQuarkusとAWS Lambdaを併用し、新製品PURQRでより良い顧客体験を提供\n"
#~ "date: 2020-03-14\n"
#~ "tags: user-story\n"
#~ "author: cesarsaavedra\n"
#~ "---\n"

# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-04-29 21:23+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: author
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:1
#, fuzzy, no-wrap
msgid "maxandersen"
msgstr "ゆびわじょう"

#. type: YAML Front Matter: date
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:1
#, fuzzy, no-wrap
msgid "2020-09-30"
msgstr "2020-09-30"

#. type: YAML Front Matter: layout
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:1
#, fuzzy, no-wrap
msgid "post"
msgstr "ポスト"

#. type: YAML Front Matter: synopsis
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:1
#, fuzzy, no-wrap
msgid "In Java 15 *biased locking* is now disabled by default and is planned to be removed in the Java Virtual Machine as per JEP 374. We need your help seeing if it affects Quarkus performance in your application."
msgstr ""
"layout: post\n"
"title: Javaから削除された偏ったロック - それはあなたに影響しますか?\n"
"date: 2020-09-30\n"
"tags: help\n"
"synopsis: Java 15では、*biased locking*はデフォルトで無効になっており、JEP 37"
"4に従ってJava仮想マシンで削除される予定です。これがアプリケーションのQuarkus"
"のパフォーマンスに影響を与えるかどうかを確認するために、ご協力をお願いします"
"。\n"
"author: maxandersen\n"
"---\n"

#. type: YAML Front Matter: tags
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:1
#, fuzzy, no-wrap
msgid "help"
msgstr "手つだい"

#. type: YAML Front Matter: title
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:1
#, fuzzy, no-wrap
msgid "Biased locking removed from Java - does it affect you ?"
msgstr "Javaからバイアスロックが削除されました - 影響はありますか？"

#. type: Plain text
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:11
#, fuzzy
msgid "Last week we became aware that the OpenJDK team in Java 15 have disabled *biased locking* (https://openjdk.java.net/jeps/374[JEP 374]) in the Java virtual machine. This is a change from previous versions and could *potentially* have a negative impact on Java application's performance."
msgstr ""
"先週、Java 15 の OpenJDK チームが Java 仮想マシンの *バイアスロック* "
"link:https://openjdk.java.net/jeps/374[(JEP 374] ) "
"を無効にしたことが判明しました。これは以前のバージョンからの変更であり、Java "
"アプリケーションのパフォーマンスに悪影響を及ぼす可能 *性があり* ます。"

#. type: Plain text
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:13
#, fuzzy
msgid "Red Hat's own performance teams are currently running performance tests to see how it affects our Java middleware, but no amount of generic testing can reveal how this change affects real-world applications."
msgstr ""
"現在、Red Hat 自身のパフォーマンスチームがパフォーマンステストを実施して、"
"Java ミドルウェアにどのような影響があるかを確認していますが、この変化が実世界"
"のアプリケーションにどのような影響を与えるかは、いくら一般的なテストを行って"
"も明らかになりません。"

#. type: Plain text
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:15
#, fuzzy
msgid "That is where you come in."
msgstr "そこにあなたの出番です。"

#. type: Plain text
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:17
#, fuzzy
msgid "We would like to get info from you on whether your application performance is affected by biased locking or not."
msgstr "アプリケーションのパフォーマンスが偏ったロックによって影響を受けるかどうかに"
"ついての情報を得たいと思います。"

#. type: Plain text
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:19
#, fuzzy
msgid "To do so please try the following in your application performance tests:"
msgstr "そのためには、アプリケーションのパフォーマンステストで以下を試してみてくださ"
"い。"

#. type: Plain text
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:21
#, fuzzy
msgid "Run your Quarkus application performance tests as you normally would with the following command line flags on Java 11 (jdk11u) and if feasible Java 15 (jdk15):"
msgstr ""
"Quarkusアプリケーションのパフォーマンステストを、Java 11(jdk11u)"
"および可能であればJava "
"15(jdk15)上で、通常と同様に以下のコマンドラインフラグを使用して実行します。"

#. type: Plain text
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:23
#, fuzzy, no-wrap
msgid "*enabled*: -XX:+UseBiasedLocking -XX:BiasedLockingStartupDelay=0\n"
msgstr "を *有効にしました* 。-XX:+UseBiasedLocking -XX:BiasedLockingStartupDelay=0"

#. type: Plain text
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:25
#, fuzzy, no-wrap
msgid "*disabled*: -XX:-UseBiasedLocking\n"
msgstr "を *無効にしてい* ます。-XX:-UseBiasedLocking"

#. type: Plain text
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:27
#, fuzzy
msgid "We would like to know the result of this no matter if you see a regression or not on the same Java Virtual Machine."
msgstr "同じJava仮想マシン上でリグレッションを見ても見なくても、その結果を知りたい。"

#. type: Plain text
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:29
#, fuzzy
msgid "If you are able then running it with the following scenarios would be of great help too:"
msgstr "もし可能であれば、次のようなシナリオで実行してみるのも大きな助けになるでしょ"
"う。"

#. type: Plain text
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:31
#, fuzzy
msgid "single-threaded"
msgstr "シングルスレッド"

#. type: Plain text
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:32
#, fuzzy
msgid "thread count ~= hardware core count"
msgstr "スレッド数 ~= ハードウェアコア数"

#. type: Plain text
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:33
#, fuzzy
msgid "thread count ~= N * hardware core count where 8 < N < 16"
msgstr "スレッド数 ~= N * ハードウェアコア数 (8 < N < 16)"

#. type: Plain text
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:35
#, fuzzy
msgid "The intent of these are to see how the level of concurrency affects the result."
msgstr "これらの意図は、同時実行のレベルが結果にどのように影響するかを見ることです。"

#. type: Title ==
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:36
#, fuzzy, no-wrap
msgid "Reporting the result"
msgstr "結果の報告"

#. type: Plain text
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:39
#, fuzzy
msgid "Please https://github.com/quarkusio/quarkus/issues/new?assignees=&labels=kind%2Fbug&template=bug_report.md&title=%28jep374%29[open a bug] with `[jep374]` in the title + your project. i.e. `[jep374] results for acme project crazy panda` containing the following information per run in the description:"
msgstr ""
"`[jep374] results for acme project crazy panda` タイトル+プロジェクトに "
"`[jep374]` を入れて link:https://github.com/quarkusio/quarkus/issues/"
"new?assignees=&labels=kind%2Fbug&template=bug_report."
"md&title=%28jep374%29[バグを開いて] ください。"

#. type: Plain text
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:47
#, fuzzy
msgid "``` jvm used: jdk11 or jdk15 thread-count: 1..N (if you know)  hardware-core count: N (if you know)  performance test result: with biased locking performance test result: without biased locking ```"
msgstr "``"

#. type: Plain text
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:49
#, fuzzy
msgid "This will help us immensely. Thank you!"
msgstr "これは非常に助かります。ありがとうございます!"

#. type: Title ==
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:50
#, fuzzy, no-wrap
msgid "Background"
msgstr "背景"

#. type: Plain text
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:53
#, fuzzy
msgid "Below is some background context on biased locking - all optional reading - you don't need to understand the details to help us by running your performance tests and let us know if anything changes."
msgstr ""
"以下に、偏ったロックに関するいくつかの背景について説明します - "
"すべての任意の読み物 - あなたは詳細を理解する必要はありませんあなたのパフォー"
"マンステストを実行して、何かが変更された場合は、私たちに知らせてください私た"
"ちを助けるために、詳細を理解する必要はありません。"

#. type: Title ===
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:54
#, fuzzy, no-wrap
msgid "What is biased locking?"
msgstr "バイアスロックとは?"

#. type: Plain text
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:57
#, fuzzy
msgid "Biased locking lowers the cost of /uncontended/ synchronization."
msgstr "バイアスをかけたロックにより、/uncontended/同期のコストを削減します。"

#. type: Plain text
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:60
#, fuzzy, no-wrap
msgid ""
"*Without biased locking*: a thread needs to set and clear a lock bit\n"
"when it performs repeated synchronizations on the same object. It also needs to wait for those set/clear writes to be drained to local cache before proceeding to execute further memory operations.\n"
msgstr ""
"*バイアスロックなし* : スレッドは、同じオブジェクトに対して繰り返し同期を行う"
"際に、ロックビットをセットしたりクリアしたりする必要があります。また、さらに"
"メモリー操作を実行する前に、これらのセット/クリア書き込みがローカルキャッシュ"
"に排出されるのを待つ必要があります。"

#. type: Plain text
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:62
#, fuzzy, no-wrap
msgid "*With biased locking*: the first time a thread synchronizes on an object it does a bit more work to acquire synchronized ('bias' it to the thread). Subsequent syncrhonizations proceed via a simple read test with no need to  drain to cache.\n"
msgstr ""
"バイアスを *かけたロック* : スレッドが最初にオブジェクトに同期したとき、同期"
"を取得するためにもう少し多くの作業を行います(スレッドへの「バイアス」)。それ"
"以降の同期化は、キャッシュにドレインする必要がなく、単純なリードテストを介し"
"て進行します。"

#. type: Plain text
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:65
#, fuzzy
msgid "Where's the trade off? Well, if a biased lock is contended then there is more work to do to bias and unbias the lock. However, it is known that many synchronized operations are uncontended."
msgstr ""
"トレードオフは?バイアスのかかったロックが競合している場合、ロックのバイアスと"
"アンバイアスをかける作業が多くなります。しかし、多くの同期化された操作は競合"
"しないことが知られています。"

#. type: Plain text
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:71
#, fuzzy
msgid "Biasing can be big win when a potentially concurrent data structure is actually used sequentially. The case where it helps most is exemplified in the problem we already found in class `DataOutputStream`. Normally only one thread writes a `DataOutputStream` and it is often not read until the stream has been filled. All the same, every `putInt()` or `putLong()`` call invokes a syncrhonized method to increment the byte count by 4 or 8.  That's needed just in case some other thread might want to reliably locate the end of the valid buffer data but that rarely happens. So, the unbiased case suffers lock write and cache drain delays at every basic put operation."
msgstr ""
"バイアスは、並行する可能性のあるデータ構造が実際に連続して使用されている場合"
"に大きなメリットがあります。バイアスが最も役立つケースは、クラス "
"`DataOutputStream` で既に見つけた問題に例示されています。通常、1 "
"つのスレッドのみが `DataOutputStream` を書き込み、ストリームが一杯になるまで"
"読み込まれないことがよくあります。すべて同じように、 `putInt()` や "
"`putLong()`` を呼び出すたびに syncrhonized メソッドが呼び出され、バイト数を "
"4 または 8 だけインクリメントします。これは、他のスレッドが有効なバッファデー"
"タの終わりを確実に見つけたいと思うかもしれない場合に備えて必要ですが、それは"
"滅多に起こりません。そのため、偏りのないケースでは、基本的な put "
"操作のたびにロックライトとキャッシュドレインの遅延が発生します。"

#. type: Plain text
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:73
#, fuzzy
msgid "A similar case occurs with class ByteOutput Stream. Method putByte is synchronized. So writing a single byte involves a lock and unlock. n.b. method putInt calls putByte 4 times, requiring 4 locks and unlocks. Method putLong calls it 8 times!"
msgstr ""
"同様のケースはクラスByteOutput "
"Streamでも発生します。メソッドputByteは同期化されています。n.b. メソッド "
"putInt は putByte を 4 回呼び出し、4 "
"回のロックとアンロックを必要とします。メソッドputLongは8回呼び出します。"

#. type: Title ===
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:74
#, fuzzy, no-wrap
msgid "Why is biased locking being removed?"
msgstr "なぜ偏ったロックが外されるのか?"

#. type: Plain text
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:78
#, fuzzy
msgid "The implementation of biased locking adds a great deal of complexity to the JVM and is understood by only a small subset of the most experienced engineers. The cost of maintaining it and designing around it is significantly slowing down progress on new features. It has been a long term goal to remove it if at all possible. Some OpenJDK contributors wanted to remove it right away in jdk15 others argue for a slower deprecation route in order to check that we could really dispense with it."
msgstr ""
"偏ったロックの実装は、JVMに多大な複雑さを追加し、最も経験豊富なエンジニアのご"
"く一部のサブセットにしか理解されていません。これを維持するためのコストとその"
"周りの設計のコストが、新機能の進歩を著しく遅らせています。可能であれば削除す"
"ることが長期的な目標となっています。一部の OpenJDK 貢献者は jdk15 ですぐに削"
"除したいと思っていましたが、他の貢献者は、本当に削除できるかどうかを確認する"
"ために、より遅い非推奨ルートを主張しています。"

#. type: Title ==
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:79
#, fuzzy, no-wrap
msgid "What happens next?"
msgstr "次に何が起こるのか?"

#. type: Plain text
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:82
#, fuzzy
msgid "We are collecting our own internal performance tests across multiple teams in Red Hat and will gather data from community reported tests too and see what the data indicates. At this stage we are making no assumption that the removal of biased locking will definitely make performance worse. We know that in some cases not having biased locks will improve performance. Our concern is to find cases, like the JDK examples above, where it might cause serious performance degradation and get an idea of how bad, and also how common, the worst cases might be."
msgstr ""
"Red Hat の複数のチームにまたがる独自の内部パフォーマンステストを収集しており"
"、コミュニティから報告されたテストからもデータを収集し、そのデータが何を示し"
"ているかを確認する予定です。現段階では、偏ったロックを削除することでパフォー"
"マンスが確実に悪化するという仮定はしていません。偏ったロックをしないことでパ"
"フォーマンスが向上するケースもあることを知っています。私たちの関心事は、"
"上記の JDK の例のように、それが深刻なパフォーマンス低下を引き起こす可能性があ"
"るケースを見つけ、どの程度悪いのか、また、最悪のケースがどの程度一般的なのか"
"についてのアイデアを得ることです。"

#. type: Plain text
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:84
#, fuzzy
msgid "Once processed we might reach out to those reporting scenarios with unexpected results and get more details."
msgstr "一旦処理されると、予想外の結果が出た報告シナリオに手を差し伸べて詳細を知るこ"
"とができるかもしれません。"

#. type: Plain text
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:87
#, fuzzy
msgid "Then we'll work with the larger OpenJDK community to aid in deciding if biased locking can be turned off completely or a longer graceful deprecation period is needed."
msgstr ""
"そして、より大きな OpenJDK コミュニティと協力して、偏ったロックを完全にオフに"
"するか、あるいはより長い猶予的な非推奨期間が必要かどうかを決定するための手助"
"けをします。"

#. type: Plain text
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:88
#, fuzzy
msgid "In any case - Thank you for your help and interest in making Java better!"
msgstr "いずれにしても - "
"Javaをより良いものにするためのご協力とご興味をありがとうございました!"

#, fuzzy
#~ msgid "---\n"
#~ msgstr "---\n"

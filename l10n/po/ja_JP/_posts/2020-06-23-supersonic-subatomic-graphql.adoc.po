# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-04-29 21:23+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: author
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:1
#, fuzzy, no-wrap
msgid "phillipkruger"
msgstr "フィリップクルー"

#. type: YAML Front Matter: date
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:1
#, fuzzy, no-wrap
msgid "2020-06-23"
msgstr "2020-06-23"

#. type: YAML Front Matter: layout
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:1
#, fuzzy, no-wrap
msgid "post"
msgstr "ポスト"

#. type: YAML Front Matter: synopsis
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:1
#, fuzzy, no-wrap
msgid "Quick look at MicroProfile GraphQL version 1.0 that is now part of Quarkus 1.5."
msgstr "Quarkus 1.5の一部となったMicroProfile GraphQLバージョン1.0のクイックルック。"

#. type: YAML Front Matter: tags
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:1
#, fuzzy, no-wrap
msgid "extension graphql"
msgstr "拡張グラファイト"

#. type: YAML Front Matter: title
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:1
#, fuzzy, no-wrap
msgid "Supersonic Subatomic GraphQL"
msgstr "超音速サブアトミックGraphQL"

#. type: Plain text
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:12
#, fuzzy
msgid "https://github.com/eclipse/microprofile-graphql[MicroProfile GraphQL] is now included in the just released https://quarkus.io/blog/quarkus-1-5-final-released/[version 1.5.0] of Quarkus."
msgstr ""
"link:https://github.com/eclipse/microprofile-graphql[MicroProfile "
"GraphQL]は、リリースされたばかりのQuarkusの link:https://quarkus.io/blog/"
"quarkus-1-5-final-released/[バージョン1.5.0]に含まれています。"

#. type: Title ==
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:13
#, fuzzy, no-wrap
msgid "What is GraphQL?"
msgstr "GraphQLとは？"

#. type: Plain text
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:16
#, fuzzy
msgid "\"GraphQL is an open-source data query and manipulation language for APIs, and a runtime for fulfilling queries with existing data."
msgstr "「GraphQLは、APIのためのオープンソースのデータクエリおよび操作言語であり、既"
"存のデータでクエリを実行するためのランタイムである。"

#. type: Plain text
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:17
#, fuzzy
msgid "GraphQL interprets strings from the client, and returns data in an understandable, predictable, pre-defined manner."
msgstr "GraphQLは、クライアントからの文字列を解釈し、理解しやすく、予測可能で、あらか"
"じめ定義された方法でデータを返します。"

#. type: Plain text
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:18
#, fuzzy
msgid "GraphQL is an alternative, though not necessarily a replacement for REST.\""
msgstr "GraphQLは、必ずしもRESTの代わりになるわけではないが、代替手段である。\""

#. type: Plain text
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:20
#, fuzzy
msgid "Read the full http://spec.graphql.org/draft/[GraphQL Specification]"
msgstr "link:http://spec.graphql.org/draft/[GraphQLの仕様]書を読む"

#. type: Title ==
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:21
#, fuzzy, no-wrap
msgid "Why GraphQL ?"
msgstr "なぜGraphQLなのか？"

#. type: Plain text
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:24
#, fuzzy
msgid "The main reasons for using GraphQL are:"
msgstr "GraphQLを使用する主な理由は以下の通りです。"

#. type: Plain text
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:26
#, fuzzy
msgid "Avoiding over-fetching or under-fetching data. Clients can retrieve several types of data in a single request or can limit the response data based on specific criteria."
msgstr ""
"データの過剰取得や不足取得を回避する。クライアントは、1回のリクエストで複数の"
"種類のデータを取得したり、特定の条件に基づいて応答データを制限することができ"
"ます。"

#. type: Plain text
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:27
#, fuzzy
msgid "Enabling data models to evolve. Changes to the schema can be made so as to not require changes on existing clients, and vice versa - this can be done without a need for a new version of the application."
msgstr ""
"データモデルを進化させることができる。既存のクライアントに変更を加えないよう"
"にスキーマを変更したり、逆に既存のクライアントに変更を加えないようにスキーマ"
"を変更したりすることができ、アプリケーションの新バージョンを必要とせずに行う"
"ことができます。"

#. type: Plain text
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:28
#, fuzzy
msgid "Advanced developer experience:"
msgstr "高度な開発者の経験"

#. type: Plain text
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:29
#, fuzzy
msgid "The schema defines how the data can be accessed and serves as the contract between the client and the server. Development teams on both sides can work without further communication."
msgstr ""
"スキーマは、データにどのようにアクセスできるかを定義し、クライアントとサーバ"
"ーの間の契約として機能します。双方の開発チームは、さらなるコミュニケーション"
"なしに作業を進めることができます。"

#. type: Plain text
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:30
#, fuzzy
msgid "Native schema introspection enables users to discover APIs and to refine the queries on the client-side. This advantage is increased with graphical tools such as GraphiQL and GraphQL Voyager enabling smooth and easy API discovery."
msgstr ""
"ネイティブなスキーマイントロスペクションにより、ユーザーはAPIを発見し、クライ"
"アントサイドでクエリを改良することができます。この利点は、GraphiQLやGraphQL V"
"oyagerなどのグラフィカルなツールにより、スムーズで簡単なAPIの発見を可能にしま"
"す。"

#. type: Plain text
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:31
#, fuzzy
msgid "On the client-side, the query language provides flexibility and efficiency enabling developers to adapt to the constraints of their technical environments while reducing server round-trips."
msgstr ""
"クライアント側では、クエリ言語は柔軟性と効率性を備えており、開発者は技術的環"
"境の制約に適応しつつ、サーバーのラウンドトリップを減らすことができます。"

#. type: Title ==
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:32
#, fuzzy, no-wrap
msgid "What is MicroProfile GraphQL?"
msgstr "MicroProfile GraphQLとは？"

#. type: Plain text
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:35
#, fuzzy
msgid "\"The intent of the MicroProfile GraphQL specification is to provide a \"code-first\" set of APIs that will enable users to quickly develop portable GraphQL-based applications in Java."
msgstr ""
"「MicroProfile GraphQL仕様の意図は、ユーザーがJavaでポータブルなGraphQLベース"
"のアプリケーションを迅速に開発できるよう、「コードファースト」なAPI群を提供す"
"ることにあります。"

#. type: Plain text
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:36
#, fuzzy
msgid "There are 2 main requirements for all implementations of this specification, namely:"
msgstr "この仕様のすべての実装には、次の2つの主要な要件があります。"

#. type: Bullet: '* '
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:38
#, fuzzy
msgid "Generate and make the GraphQL Schema available. This is done by looking at the annotations in the users code, and must include all GraphQL Queries and Mutations as well as all entities as defined implicitly via the response type or argument(s) of Queries and Mutations."
msgstr ""
"GraphQL スキーマを生成して利用可能にする。これは、ユーザーコードのアノテーシ"
"ョンを見て行うもので、すべてのGraphQLクエリとミューテーション、およびクエリと"
"ミューテーションのレスポンスタイプや引数で暗黙的に定義されるすべてのエンティ"
"ティを含まなければならない。"

#. type: Plain text
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:39
#, fuzzy, no-wrap
msgid "\n"
msgstr "}\n"

#. type: Bullet: '* '
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:40
#, fuzzy
msgid "Execute GraphQL requests. This will be in the form of either a Query or a Mutation. As a minimum the specification must support executing these requests via HTTP.\""
msgstr ""
"GraphQLリクエストを実行する。これは、QueryまたはMutationの形式で行われます。"
"最低限の仕様として、これらのリクエストをHTTP経由で実行することをサポートしな"
"ければならない。\""

#. type: Plain text
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:42
#, fuzzy
msgid "Read the full https://download.eclipse.org/microprofile/microprofile-graphql-1.0/microprofile-graphql.html[MicroProfile GraphQL Specification]"
msgstr ""
"link:https://download.eclipse.org/microprofile/microprofile-graphql-1.0/"
"microprofile-graphql.html[MicroProfile GraphQL仕様書]の全文を読む"

#. type: Plain text
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:44
#, fuzzy
msgid "You can now use https://code.quarkus.io/[code.quarkus.io] to get going with Quarkus and include the https://github.com/smallrye/smallrye-graphql[SmallRye GraphQL Extension]."
msgstr ""
"link:https://code.quarkus.io/[Code.quarkus.io]を使ってQuarkusを起動し、 "
"link:https://github.com/smallrye/smallrye-graphql[SmallRye GraphQL "
"Extension]を組み込むことができるようになりました。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:45
#, no-wrap
msgid "Code"
msgstr "コード"

#. type: Target for macro image
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:45
#, no-wrap
msgid "code_quarkus.png"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:48
#, fuzzy
msgid "This will create a Quarkus starter application with the following dependencies:"
msgstr "これにより、以下の依存関係にあるQuarkusスターターアプリケーションが作成されま"
"す。"

#. type: delimited block -
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:69
#, no-wrap
msgid ""
"<dependency>\n"
"  <groupId>io.quarkus</groupId>\n"
"  <artifactId>quarkus-resteasy</artifactId>\n"
"</dependency>\n"
"<dependency>\n"
"  <groupId>io.quarkus</groupId>\n"
"  <artifactId>quarkus-junit5</artifactId>\n"
"  <scope>test</scope>\n"
"</dependency>\n"
"<dependency>\n"
"  <groupId>io.rest-assured</groupId>\n"
"  <artifactId>rest-assured</artifactId>\n"
"  <scope>test</scope>\n"
"</dependency>\n"
"<dependency>\n"
"  <groupId>io.quarkus</groupId>\n"
"  <artifactId>quarkus-smallrye-graphql</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block =
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:75
#, fuzzy
msgid "At the moment, the example application created is a JAX-RS application. There is https://github.com/quarkusio/quarkus/issues/8134[some work in progress] to allow extensions to define custom examples application, but until then we always get a JAX-RS application. You can remove the `quarkus-resteasy` dependency as we do not need JAX-RS."
msgstr ""
"現時点では、作成されるサンプルアプリケーションはJAX-"
"RSアプリケーションとなっています。拡張機能でカスタムのサンプルアプリケーショ"
"ンを定義できるようにするための作業が link:https://github.com/quarkusio/"
"quarkus/issues/8134[進行中]ですが、それまでは常にJAX-"
"RSアプリケーションが作成されます。JAX-RSを必要としないため、 `quarkus-"
"resteasy` の依存関係を削除することができます。"

#. type: Title ==
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:77
#, fuzzy, no-wrap
msgid "Your first GraphQL Endpoint."
msgstr "初めてのGraphQLエンドポイント。"

#. type: Plain text
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:80
#, fuzzy
msgid "Let's change the `ExampleResource` Rest service to be a GraphQL endpoint."
msgstr "`ExampleResource` RestサービスをGraphQLのエンドポイントに変更してみましょう。"

#. type: Plain text
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:82
#, fuzzy
msgid "Replace the `@Path(\"/hello\")` class annotation with `@GraphQLApi`."
msgstr "`@Path(\"/hello\")` クラスのアノテーションを `@GraphQLApi` に置き換えます。"

#. type: Plain text
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:83
#, fuzzy
msgid "Replace the `@GET` method annotation with `@Query`."
msgstr "`@GET` メソッドのアノテーションを `@Query` に置き換えてください。"

#. type: Plain text
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:84
#, fuzzy
msgid "Remove the `@Produces(MediaType.TEXT_PLAIN)` method annotation and all JAX-RS imports."
msgstr "`@Produces(MediaType.TEXT_PLAIN)` メソッドアノテーションとすべてのJAX-"
"RSインポートを削除します。"

#. type: Plain text
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:86
#, fuzzy
msgid "That is it! Your `ExampleResource` should look like this now:"
msgstr "これで完成です。あなたの `ExampleResource` はこのようになっているはずです。"

#. type: delimited block -
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:90
#, no-wrap
msgid "package org.acme;\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:93
#, no-wrap
msgid ""
"import org.eclipse.microprofile.graphql.GraphQLApi;\n"
"import org.eclipse.microprofile.graphql.Query;\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:96
#, no-wrap
msgid ""
"@GraphQLApi\n"
"public class ExampleResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:102
#, no-wrap
msgid ""
"    @Query\n"
"    public String hello() {\n"
"        return \"hello\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:105
#, fuzzy
msgid "You can now run the application using Quarkus dev mode:"
msgstr "これで、Quarkusの開発モードを使ってアプリケーションを実行できるようになりまし"
"た。"

#. type: delimited block -
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:109
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:174
#, no-wrap
msgid "mvn quarkus:dev\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:112
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:177
#, fuzzy
msgid "Now browse to http://localhost:8080/graphql-ui/[localhost:8080/graphql-ui/] and run the following query:"
msgstr ""
"次に、 link:http://localhost:8080/graphql-ui/[localhost:8080/graphql-ui/"
"]をブラウズして、以下のクエリを実行します。"

#. type: delimited block -
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:118
#, no-wrap
msgid ""
"{\n"
"  hello\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:121
#, fuzzy
msgid "This will return:"
msgstr "これが返ってくる。"

#. type: delimited block -
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:129
#, no-wrap
msgid ""
"{\n"
"  \"data\": {\n"
"    \"hello\": \"hello\"\n"
"  }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:131
#, fuzzy
msgid "Also see the link:/guides/microprofile-graphql[MicroProfile GraphQL guide]."
msgstr "また、 link:/guides/microprofile-graphql[MicroProfile "
"GraphQLガイド]もご覧ください。"

#. type: Plain text
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:133
#, fuzzy
msgid "## A more detailed example"
msgstr "より詳細な例"

#. type: Plain text
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:135
#, fuzzy
msgid "Let's look at a more detailed example, get the source from https://github.com/phillip-kruger/graphql-example[this GitHub project]."
msgstr ""
"link:https://github.com/phillip-kruger/graphql-example[このGitHubプロジェクト"
"]からソースを入手して、より詳細な例を見てみましょう。"

#. type: Plain text
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:137
#, fuzzy
msgid "This is a multi-module application. First compile all modules. In the root:"
msgstr "これはマルチモジュールのアプリケーションです。まず、すべてのモジュールをコン"
"パイルします。ルートに"

#. type: delimited block -
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:141
#, no-wrap
msgid "mvn clean install\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:144
#, fuzzy
msgid "Now browse to the quarkus example:"
msgstr "今度はquarkusの例を見てみましょう。"

#. type: delimited block -
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:148
#, no-wrap
msgid "cd quarkus-example\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:151
#, fuzzy
msgid "Look at `ProfileGraphQLApi.java` that is marked as a `@GraphQLApi`:"
msgstr "`@GraphQLApi` としてマークされている `ProfileGraphQLApi.java` "
"を見てください。"

#. type: delimited block -
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:158
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:271
#, no-wrap
msgid ""
"    @Query(\"person\")\n"
"    public Person getPerson(@Name(\"personId\") int personId){\n"
"        return personDB.getPerson(personId);\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:162
#, fuzzy
msgid "Above method will get a person by `personId`. As you can see the method is made queryable with the `@Query` annotation. You can optionally provide the name (\"person\" in this case), however the default would be \"person\" anyway (method name without \"get\"). You can also optionally name the parameter, but the default would be the parameter name (\"personId\")."
msgstr ""
"上記のメソッドは、 `personId` で人を取得します。ご覧の通り、このメソッドは "
"`@Query` のアノテーションで問い合わせ可能になっています。オプションで名前を指"
"定することができますが（この例では \"person\"）、デフォルトでは \"person "
"\"となります（メソッド名から \"get \"を除いたもの）。また、パラメータの名前を"
"任意に指定することもできますが、デフォルトではパラメータ名（\"personId\""
"）になります。"

#. type: Plain text
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:164
#, fuzzy
msgid "The Person Object is a POJO that represents a Person (User or Member) in the system. It has many fields, some that are other complex POJOs:"
msgstr ""
"Personオブジェクトは、システム内のPerson（ユーザーまたはメンバー）を表すPOJO"
"です。このオブジェクトには多くのフィールドがあり、中には他の複雑なPOJOもあり"
"ます。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:165
#, fuzzy, no-wrap
msgid "Person"
msgstr "人物"

#. type: Target for macro image
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:165
#, no-wrap
msgid "person.png"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:168
#, fuzzy
msgid "However, the `Query` annotation makes it possible to query the exact fields we are interested in."
msgstr "しかし、 `Query` "
"のアノテーションにより、興味のあるフィールドを正確に照会することができます。"

#. type: Plain text
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:170
#, fuzzy
msgid "Run the example application:"
msgstr "サンプルアプリケーションを実行します。"

#. type: delimited block -
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:190
#, no-wrap
msgid ""
"{\n"
"  person(personId:1){\n"
"    names\n"
"    surname\n"
"    scores{\n"
"      name\n"
"      value\n"
"    }\n"
"  }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:193
#, fuzzy
msgid "Notice that you have 'code insight' in the editor. That is because GraphQL has a schema and also supports introspection."
msgstr ""
"エディタに「コードインスペクション」があることに注目してください。それは、Gra"
"phQLがスキーマを持ち、イントロスペクションもサポートしているからです。"

#. type: Plain text
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:195
#, fuzzy
msgid "We can request only the fields we are interested in, making the payload much smaller."
msgstr "興味のある分野だけをリクエストすることができるので、ペイロードが非常に小さく"
"なります。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:196
#, fuzzy, no-wrap
msgid "GraphiQL"
msgstr "GraphiQL"

#. type: Target for macro image
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:196
#, no-wrap
msgid "graphiql.png"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:199
#, fuzzy
msgid "We can also combine queries, i.e., lets say we want to get the fields for person 1 as shown above, and also the name and surname for person 2, we can do the following:"
msgstr ""
"また、クエリを組み合わせることもできます。例えば、上の図のように人物1のフィー"
"ルドを取得し、さらに人物2の名前と姓を取得したい場合は、次のようにします。"

#. type: delimited block -
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:216
#, no-wrap
msgid ""
"{\n"
"  person1: person(personId:1){\n"
"    names\n"
"    surname\n"
"    scores{\n"
"      name\n"
"      value\n"
"    }\n"
"  }\n"
"  person2: person(personId:2){\n"
"    names\n"
"    surname\n"
"  }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:219
#, fuzzy
msgid "This will return :"
msgstr "これは、戻ってきます。"

#. type: delimited block -
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:258
#, no-wrap
msgid ""
"{\n"
"  \"data\": {\n"
"    \"person1\": {\n"
"      \"names\": [\n"
"        \"Christine\",\n"
"        \"Fabian\"\n"
"      ],\n"
"      \"surname\": \"O'Reilly\",\n"
"      \"scores\": [\n"
"        {\n"
"          \"name\": \"Driving\",\n"
"          \"value\": 15\n"
"        },\n"
"        {\n"
"          \"name\": \"Fitness\",\n"
"          \"value\": 94\n"
"        },\n"
"        {\n"
"          \"name\": \"Activity\",\n"
"          \"value\": 63\n"
"        },\n"
"        {\n"
"          \"name\": \"Financial\",\n"
"          \"value\": 22\n"
"        }\n"
"      ]\n"
"    },\n"
"    \"person2\": {\n"
"      \"names\": [\n"
"        \"Masako\",\n"
"        \"Errol\"\n"
"      ],\n"
"      \"surname\": \"Zemlak\"\n"
"    }\n"
"  }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:261
#, fuzzy
msgid "### Source fields"
msgstr "ソースフィールド"

#. type: Plain text
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:264
#, fuzzy
msgid "If you look closely at our query, you will see we asked for the `scores` field of the person, however, the `Person` POJO does not contain a `scores` field.  We added the `scores` field by adding a `@Source` field to the person:"
msgstr ""
"このクエリをよく見ると、人物の `scores` フィールドを要求していますが、 "
"`Person` POJO には `scores` フィールドが含まれていません。そこで、人物に "
"`@Source` フィールドを追加することで、 `scores` フィールドを追加しました。"

#. type: delimited block -
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:275
#, no-wrap
msgid ""
"    public List<Score> getScores(@Source Person person) {\n"
"        return scoreDB.getScores(person.getIdNumber());\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:278
#, fuzzy
msgid "So we can add fields that merge onto the output by adding the `@Source` parameter that matches the response type."
msgstr "そこで、レスポンスタイプにマッチする `@Source` パラメータを追加することで、出"
"力にマージするフィールドを追加することができます。"

#. type: Plain text
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:280
#, fuzzy
msgid "### Partial results"
msgstr "部分的な結果"

#. type: Plain text
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:283
#, fuzzy
msgid "The above example merges two different data sources, but let's say the score system is down. We will then still return the data we have, and an error for the score:"
msgstr ""
"上記の例では、2つの異なるデータソースをマージしていますが、仮にスコアシステム"
"がダウンしていたとします。その場合でも、持っているデータを返し、スコアについ"
"てはエラーを返します。"

#. type: delimited block -
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:317
#, no-wrap
msgid ""
"{\n"
"  \"errors\": [\n"
"    {\n"
"      \"message\": \"Scores for person [797-95-4822] is not available\",\n"
"      \"locations\": [\n"
"        {\n"
"          \"line\": 5,\n"
"          \"column\": 5\n"
"        }\n"
"      ],\n"
"      \"path\": [\n"
"        \"person\",\n"
"        \"scores2\"\n"
"      ],\n"
"      \"extensions\": {\n"
"        \"exception\": \"com.github.phillipkruger.user.graphql.ScoresNotAvailableException\",\n"
"        \"classification\": \"DataFetchingException\"\n"
"      }\n"
"    }\n"
"  ],\n"
"  \"data\": {\n"
"    \"person\": {\n"
"      \"names\": [\n"
"        \"Christine\",\n"
"        \"Fabian\"\n"
"      ],\n"
"      \"surname\": \"O'Reilly\",\n"
"      \"scores2\": null\n"
"    }\n"
"  }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:320
#, fuzzy
msgid "### Native mode"
msgstr "ネイティブモード"

#. type: Plain text
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:322
#, fuzzy
msgid "Let's run this example in native mode (using graalvm-ce-java11-19.3.2):"
msgstr "この例をネイティブモードで実行してみましょう（graalvm-ce-java11-19.3."
"2を使用）。"

#. type: delimited block -
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:326
#, no-wrap
msgid "mvn -Pnative clean install\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:329
#, fuzzy
msgid "This will create a native executable and will now start the application very quickly:"
msgstr "これにより、ネイティブ実行可能ファイルが作成され、アプリケーションが素早く起"
"動するようになります。"

#. type: delimited block -
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:340
#, no-wrap
msgid ""
"./target/quarkus-example-1.0.0-SNAPSHOT-runner\n"
"__  ____  __  _____   ___  __ ____  ______\n"
" --/ __ \\/ / / / _ | / _ \\/ //_/ / / / __/\n"
" -/ /_/ / /_/ / __ |/ , _/ ,< / /_/ /\\ \\\n"
"--\\___\\_\\____/_/ |_/_/|_/_/|_|\\____/___/\n"
"2020-06-11 17:02:55,041 INFO  [io.quarkus] (main) quarkus-example 1.0.0-SNAPSHOT native (powered by Quarkus 1.5.0.Final) started in 0.026s. Listening on: http://0.0.0.0:8080\n"
"2020-06-11 17:02:55,041 INFO  [io.quarkus] (main) Profile prod activated.\n"
"2020-06-11 17:02:55,041 INFO  [io.quarkus] (main) Installed features: [cdi, resteasy, resteasy-jsonb, smallrye-graphql, smallrye-openapi, swagger-ui]\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:343
#, fuzzy
msgid "## In the pipeline"
msgstr "パイプライン"

#. type: Plain text
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:346
#, fuzzy
msgid "This is the first version of the MicroProfile GraphQL Spec and there are many things in the pipeline. One of those is a client.  We are proposing two types of clients:"
msgstr ""
"これはMicroProfile GraphQL Specの最初のバージョンで、いろいろなものが準備され"
"ています。そのひとつがクライアントです。私たちは2種類のクライアントを提案して"
"います。"

#. type: Plain text
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:349
#, fuzzy
msgid "### Dynamic The dynamic client will allow you to build a query using a builder:"
msgstr "ダイナミック ダイナミッククライアントでは、ビルダーを使ってクエリを構築するこ"
"とができます。"

#. type: delimited block -
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:359
#, no-wrap
msgid ""
"// Building of the graphql document.\n"
"Document myDocument = document(\n"
"                operation(Operation.Type.QUERY,\n"
"                        field(\"people\",\n"
"                                field(\"id\"),\n"
"                                field(\"name\")\n"
"                        )));\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:362
#, no-wrap
msgid ""
"// Serialization of the document into a string, ready to be sent.\n"
"String graphqlRequest = myDocument.toString();\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:365
#, fuzzy
msgid "For more details see: https://github.com/worldline/dynaql[github.com/worldline/dynaql]"
msgstr ""
"詳しくは、 link:https://github.com/worldline/dynaql[github.com/worldline/"
"dynaql]をご覧ください。"

#. type: Plain text
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:367
#, fuzzy
msgid "### Type safe"
msgstr "タイプセーフ"

#. type: Plain text
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:370
#, fuzzy
msgid "The type safe client will be closer to MicroProfile RESTClient. Looking at the same example as above, lets see how we can to use it.  From the root of the project, browse to the `quarkus-client` folder. This example uses https://quarkus.io/blog/introducing-command-mode/[Quarkus Command Mode] to make a Query."
msgstr ""
"安全なクライアントのタイプは、MicroProfile RESTClientに近いものになります。上"
"記と同じ例を見て、どのように使用するかを見てみましょう。プロジェクトのルート"
"から、 `quarkus-client` フォルダを参照します。この例では、 "
"link:https://quarkus.io/blog/introducing-command-mode/"
"[Quarkusのコマンドモード]を使ってクエリを作成しています。"

#. type: Plain text
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:372
#, fuzzy
msgid "The client is not yet a Quarkus Extension, so we add it in our project like this:"
msgstr "クライアントはまだQuarkus "
"Extensionではないので、以下のようにプロジェクトに追加します。"

#. type: delimited block -
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:380
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.smallrye</groupId>\n"
"    <artifactId>smallrye-graphql-client</artifactId>\n"
"    <version>${smallrye-graphql.version}</version>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:383
#, fuzzy
msgid "Now we can create a POJO that contains only fields that we are interested in. Looking at `Person` and `Score` in the client module, it is much smaller than the definition on the server side:"
msgstr ""
"これで、興味のあるフィールドだけを含むPOJOを作成することができます。クライア"
"ント・モジュールの `Person` と `Score` "
"を見ると、サーバー側の定義よりもはるかに小さくなっています。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:384
#, fuzzy, no-wrap
msgid "Client"
msgstr "クライアント"

#. type: Target for macro image
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:384
#, no-wrap
msgid "client.png"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:387
#, fuzzy
msgid "All we need to do now is to add an interface that defines the queries that we are interested in:"
msgstr "あとは、興味のあるクエリを定義するインターフェースを追加するだけです。"

#. type: delimited block -
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:392
#, no-wrap
msgid ""
"@GraphQlClientApi\n"
"public interface PersonGraphQLClient {\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:394
#, no-wrap
msgid "    public Person person(int personId);\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:396
#, no-wrap
msgid "}\n"
msgstr "}\n"

#. type: Plain text
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:399
#, fuzzy
msgid "And now we can use this:"
msgstr "そして、今度はこれを使います。"

#. type: delimited block -
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:405
#, no-wrap
msgid ""
"    //@Inject\n"
"    //PersonGraphQLClient personClient; or\n"
"    PersonGraphQLClient personClient = GraphQlClientBuilder.newBuilder().build(PersonGraphQLClient.class);\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:408
#, no-wrap
msgid ""
"    // ...\n"
"    Person person = personClient.person(id);\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:411
#, fuzzy
msgid "Running the Quarkus client appication we can now make a call to the server (make sure this is still running) and print the response:"
msgstr ""
"Quarkusのクライアントアプケーションを実行することで、サーバーへのコール（これ"
"がまだ実行されていることを確認してください）を行い、レスポンスを印刷すること"
"ができます。"

#. type: delimited block -
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:432
#, no-wrap
msgid ""
"java -jar target/quarkus-client-1.0.0-SNAPSHOT-runner.jar 2\n"
"Picked up _JAVA_OPTIONS: -Dawt.useSystemAAFontSettings=lcd\n"
"=========================\n"
"|  Masako Zemlak        |\n"
"|                       |\n"
"|        Driving        |\n"
"|        48             |\n"
"|                       |\n"
"|        Fitness        |\n"
"|        73             |\n"
"|                       |\n"
"|        Activity       |\n"
"|        62             |\n"
"|                       |\n"
"|        Financial      |\n"
"|        54             |\n"
"|                       |\n"
"=========================\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:435
#, fuzzy
msgid "The number (2) is the `personId` in our example:"
msgstr "数字（2）は、この例では `personId` 。"

#. type: Title ==
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:436
#, no-wrap
msgid "Summary"
msgstr "まとめ"

#. type: Plain text
#: upstream/_posts/2020-06-23-supersonic-subatomic-graphql.adoc:440
#, fuzzy
msgid "This is a short and quick introduction to MicroProfile GraphQL that is now available in Quarkus.  There are many more https://download.eclipse.org/microprofile/microprofile-graphql-1.0.2/microprofile-graphql.html[features] and even more https://github.com/eclipse/microprofile-graphql/issues[planned], so stay tuned."
msgstr ""
"これは、Quarkusで利用できるようになったMicroProfile "
"GraphQLについて、短くて簡単な紹介です。この他にも多くの link:https://download"
".eclipse.org/microprofile/microprofile-graphql-1.0.2/microprofile-graphql."
"html[機能]があり、さらに多くの機能が link:https://github.com/eclipse/"
"microprofile-graphql/issues[予定されてい]ますので、ご期待ください。"

#, fuzzy
#~ msgid "---\n"
#~ msgstr "---\n"

#, fuzzy
#~ msgid ""
#~ "layout: post\n"
#~ "title: 'Supersonic Subatomic GraphQL'\n"
#~ "date: 2020-06-23\n"
#~ "tags: extension graphql\n"
#~ "synopsis: Quick look at MicroProfile GraphQL version 1.0 that is now part of Quarkus 1.5.\n"
#~ "author: phillipkruger\n"
#~ "---\n"
#~ msgstr ""
#~ "layout: post\n"
#~ "title: 超音速サブアトミック・グラフキュー」。\n"
#~ "date: 2020-06-23\n"
#~ "tags: extension graphql\n"
#~ "synopsis: Quarkus 1.5の一部となったMicroProfile GraphQLバージョン1.0を簡単にご紹介します。\n"
#~ "author: phillipkruger\n"
#~ "---\n"
